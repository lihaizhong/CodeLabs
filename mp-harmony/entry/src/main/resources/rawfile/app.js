/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app.json?package=app":
/*!******************************!*\
  !*** ./app.json?package=app ***!
  \******************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("const NOOP=()=>{}; setInterval(NOOP, 1000);\r\nglobal.__globalComponents = [];\r\nglobal.__qaRoute = 'app';\r\n__webpack_require__(/*! ./app.js */ \"./app.js\");\r\nglobal.__qaRoute = 'miniprogram_npm/weui-miniprogram/cells/cells';\r\nglobal.usingComponents = [];\r\n__webpack_require__(/*! ./miniprogram_npm/weui-miniprogram/cells/cells.js */ \"./miniprogram_npm/weui-miniprogram/cells/cells.js\");\r\nglobal.__qaRoute = 'miniprogram_npm/weui-miniprogram/cell/cell';\r\nglobal.usingComponents = [\"miniprogram_npm/weui-miniprogram/cells/cells\"];\r\n__webpack_require__(/*! ./miniprogram_npm/weui-miniprogram/cell/cell.js */ \"./miniprogram_npm/weui-miniprogram/cell/cell.js\");\r\nglobal.__qaRoute = 'pages/index/index';\r\nglobal.usingComponents = [\"miniprogram_npm/weui-miniprogram/cells/cells\",\"miniprogram_npm/weui-miniprogram/cell/cell\"];\r\n__webpack_require__(/*! ./pages/index/index.js */ \"./pages/index/index.js\");\r\nglobal.__qaRoute = 'components/animation/index';\r\nglobal.usingComponents = [];\r\n__webpack_require__(/*! ./components/animation/index.js */ \"./components/animation/index.js\");\r\nglobal.__qaRoute = 'pages/svga/index';\r\nglobal.usingComponents = [\"components/animation/index\"];\r\n__webpack_require__(/*! ./pages/svga/index.js */ \"./pages/svga/index.js\");\r\nglobal.__qaRoute = 'components/animation2/index';\r\nglobal.usingComponents = [];\r\n__webpack_require__(/*! ./components/animation2/index.js */ \"./components/animation2/index.js\");\r\nglobal.__qaRoute = 'pages/svga2/index';\r\nglobal.usingComponents = [\"components/animation2/index\"];\r\n__webpack_require__(/*! ./pages/svga2/index.js */ \"./pages/svga2/index.js\");\r\nglobal.__qaRoute = 'components/poster/index';\r\nglobal.usingComponents = [];\r\n__webpack_require__(/*! ./components/poster/index.js */ \"./components/poster/index.js\");\r\nglobal.__qaRoute = 'pages/poster/index';\r\nglobal.usingComponents = [\"components/poster/index\"];\r\n__webpack_require__(/*! ./pages/poster/index.js */ \"./pages/poster/index.js\");\r\nglobal.__qaRoute = 'pages/webview/index';\r\nglobal.usingComponents = [];\r\n__webpack_require__(/*! ./pages/webview/index.js */ \"./pages/webview/index.js\");\r\nglobal.__qaRoute = 'pages/apng/index';\r\nglobal.usingComponents = [];\r\n__webpack_require__(/*! ./pages/apng/index.js */ \"./pages/apng/index.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAuanNvbj9wYWNrYWdlPWFwcC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmlwcm9ncmFtLXdlYXBwLy4vYXBwLmpzb24/NjI4YSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBOT09QPSgpPT57fTsgc2V0SW50ZXJ2YWwoTk9PUCwgMTAwMCk7XHJcbmdsb2JhbC5fX2dsb2JhbENvbXBvbmVudHMgPSBbXTtcclxuZ2xvYmFsLl9fcWFSb3V0ZSA9ICdhcHAnO1xyXG5yZXF1aXJlKCcuL2FwcC5qcycpO1xyXG5nbG9iYWwuX19xYVJvdXRlID0gJ21pbmlwcm9ncmFtX25wbS93ZXVpLW1pbmlwcm9ncmFtL2NlbGxzL2NlbGxzJztcclxuZ2xvYmFsLnVzaW5nQ29tcG9uZW50cyA9IFtdO1xyXG5yZXF1aXJlKCcuL21pbmlwcm9ncmFtX25wbS93ZXVpLW1pbmlwcm9ncmFtL2NlbGxzL2NlbGxzLmpzJyk7XHJcbmdsb2JhbC5fX3FhUm91dGUgPSAnbWluaXByb2dyYW1fbnBtL3dldWktbWluaXByb2dyYW0vY2VsbC9jZWxsJztcclxuZ2xvYmFsLnVzaW5nQ29tcG9uZW50cyA9IFtcIm1pbmlwcm9ncmFtX25wbS93ZXVpLW1pbmlwcm9ncmFtL2NlbGxzL2NlbGxzXCJdO1xyXG5yZXF1aXJlKCcuL21pbmlwcm9ncmFtX25wbS93ZXVpLW1pbmlwcm9ncmFtL2NlbGwvY2VsbC5qcycpO1xyXG5nbG9iYWwuX19xYVJvdXRlID0gJ3BhZ2VzL2luZGV4L2luZGV4JztcclxuZ2xvYmFsLnVzaW5nQ29tcG9uZW50cyA9IFtcIm1pbmlwcm9ncmFtX25wbS93ZXVpLW1pbmlwcm9ncmFtL2NlbGxzL2NlbGxzXCIsXCJtaW5pcHJvZ3JhbV9ucG0vd2V1aS1taW5pcHJvZ3JhbS9jZWxsL2NlbGxcIl07XHJcbnJlcXVpcmUoJy4vcGFnZXMvaW5kZXgvaW5kZXguanMnKTtcclxuZ2xvYmFsLl9fcWFSb3V0ZSA9ICdjb21wb25lbnRzL2FuaW1hdGlvbi9pbmRleCc7XHJcbmdsb2JhbC51c2luZ0NvbXBvbmVudHMgPSBbXTtcclxucmVxdWlyZSgnLi9jb21wb25lbnRzL2FuaW1hdGlvbi9pbmRleC5qcycpO1xyXG5nbG9iYWwuX19xYVJvdXRlID0gJ3BhZ2VzL3N2Z2EvaW5kZXgnO1xyXG5nbG9iYWwudXNpbmdDb21wb25lbnRzID0gW1wiY29tcG9uZW50cy9hbmltYXRpb24vaW5kZXhcIl07XHJcbnJlcXVpcmUoJy4vcGFnZXMvc3ZnYS9pbmRleC5qcycpO1xyXG5nbG9iYWwuX19xYVJvdXRlID0gJ2NvbXBvbmVudHMvYW5pbWF0aW9uMi9pbmRleCc7XHJcbmdsb2JhbC51c2luZ0NvbXBvbmVudHMgPSBbXTtcclxucmVxdWlyZSgnLi9jb21wb25lbnRzL2FuaW1hdGlvbjIvaW5kZXguanMnKTtcclxuZ2xvYmFsLl9fcWFSb3V0ZSA9ICdwYWdlcy9zdmdhMi9pbmRleCc7XHJcbmdsb2JhbC51c2luZ0NvbXBvbmVudHMgPSBbXCJjb21wb25lbnRzL2FuaW1hdGlvbjIvaW5kZXhcIl07XHJcbnJlcXVpcmUoJy4vcGFnZXMvc3ZnYTIvaW5kZXguanMnKTtcclxuZ2xvYmFsLl9fcWFSb3V0ZSA9ICdjb21wb25lbnRzL3Bvc3Rlci9pbmRleCc7XHJcbmdsb2JhbC51c2luZ0NvbXBvbmVudHMgPSBbXTtcclxucmVxdWlyZSgnLi9jb21wb25lbnRzL3Bvc3Rlci9pbmRleC5qcycpO1xyXG5nbG9iYWwuX19xYVJvdXRlID0gJ3BhZ2VzL3Bvc3Rlci9pbmRleCc7XHJcbmdsb2JhbC51c2luZ0NvbXBvbmVudHMgPSBbXCJjb21wb25lbnRzL3Bvc3Rlci9pbmRleFwiXTtcclxucmVxdWlyZSgnLi9wYWdlcy9wb3N0ZXIvaW5kZXguanMnKTtcclxuZ2xvYmFsLl9fcWFSb3V0ZSA9ICdwYWdlcy93ZWJ2aWV3L2luZGV4JztcclxuZ2xvYmFsLnVzaW5nQ29tcG9uZW50cyA9IFtdO1xyXG5yZXF1aXJlKCcuL3BhZ2VzL3dlYnZpZXcvaW5kZXguanMnKTtcclxuZ2xvYmFsLl9fcWFSb3V0ZSA9ICdwYWdlcy9hcG5nL2luZGV4JztcclxuZ2xvYmFsLnVzaW5nQ29tcG9uZW50cyA9IFtdO1xyXG5yZXF1aXJlKCcuL3BhZ2VzL2FwbmcvaW5kZXguanMnKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./app.json?package=app\n");

/***/ }),

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _urlSearchParams = _interopRequireDefault(__webpack_require__(/*! @ungap/url-search-params */ \"./miniprogram_npm/@ungap/url-search-params/cjs/index.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nApp({\n  onLaunch() {},\n  onPageNotFound(e) {\n    const {\n      path,\n      query\n    } = e;\n    if (path === 'pages/index') {\n      const params = new _urlSearchParams.default(query);\n      const url = `${path}/index?${params.toString()}`;\n      console.warn('未找到页面，正在重定向到', url);\n      has.navigateTo({\n        url\n      });\n    } else {\n      console.error('未找到页面', e);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9hcHAuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmlwcm9ncmFtLXdlYXBwLy4vYXBwLmpzP2Q4NzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfdXJsU2VhcmNoUGFyYW1zID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQHVuZ2FwL3VybC1zZWFyY2gtcGFyYW1zXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoZSkgeyByZXR1cm4gZSAmJiBlLl9fZXNNb2R1bGUgPyBlIDogeyBkZWZhdWx0OiBlIH07IH1cbkFwcCh7XG4gIG9uTGF1bmNoKCkge30sXG4gIG9uUGFnZU5vdEZvdW5kKGUpIHtcbiAgICBjb25zdCB7XG4gICAgICBwYXRoLFxuICAgICAgcXVlcnlcbiAgICB9ID0gZTtcbiAgICBpZiAocGF0aCA9PT0gJ3BhZ2VzL2luZGV4Jykge1xuICAgICAgY29uc3QgcGFyYW1zID0gbmV3IF91cmxTZWFyY2hQYXJhbXMuZGVmYXVsdChxdWVyeSk7XG4gICAgICBjb25zdCB1cmwgPSBgJHtwYXRofS9pbmRleD8ke3BhcmFtcy50b1N0cmluZygpfWA7XG4gICAgICBjb25zb2xlLndhcm4oJ+acquaJvuWIsOmhtemdou+8jOato+WcqOmHjeWumuWQkeWIsCcsIHVybCk7XG4gICAgICBoYXMubmF2aWdhdGVUbyh7XG4gICAgICAgIHVybFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+acquaJvuWIsOmhtemdoicsIGUpO1xuICAgIH1cbiAgfVxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./app.js\n");

/***/ }),

/***/ "./components/animation/index.js":
/*!***************************************!*\
  !*** ./components/animation/index.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _fuckSvga = __webpack_require__(/*! ../../utils/fuck-svga */ \"./utils/fuck-svga.js\");\nvar _fuckBenchmark = __webpack_require__(/*! ../../utils/fuck-benchmark */ \"./utils/fuck-benchmark.js\");\nvar _ReadyGo = _interopRequireDefault(__webpack_require__(/*! ../../utils/ReadyGo */ \"./utils/ReadyGo.js\"));\nvar _EnhancedWorker = __webpack_require__(/*! ../../utils/EnhancedWorker */ \"./utils/EnhancedWorker.js\");\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nlet player, observer;\nconst playerAwait = async scope => {\n  player = new _fuckSvga.Player();\n  player.onStart = async () => {\n    _fuckBenchmark.benchmark.mark(\"持续时间\");\n    _fuckBenchmark.benchmark.mark(\"总消耗时间\");\n    const bucket = await videoManager.get();\n    _fuckBenchmark.benchmark.log(\"---- START ----\", \"每帧期望消耗时长\", 1000 / bucket.entity.fps, \"预期总消耗时长\", bucket.entity.frames / bucket.entity.fps * 1000);\n  };\n  player.onProcess = (percent, frame) => {\n    _fuckBenchmark.benchmark.log(\"---- UPDATE ----\", \"当前进度\", percent, \"当前帧\", frame);\n    _fuckBenchmark.benchmark.mark(\"持续时间\");\n  };\n  player.onResume = () => {\n    _fuckBenchmark.benchmark.log(\"---- RESUME ----\");\n  };\n  player.onPause = () => {\n    _fuckBenchmark.benchmark.log(\"---- PAUSE ----\");\n  };\n  player.onStop = () => {\n    _fuckBenchmark.benchmark.log(\"---- STOP ----\");\n  };\n  player.onEnd = () => {\n    _fuckBenchmark.benchmark.log(\"---- END ----\");\n    _fuckBenchmark.benchmark.mark(\"总消耗时间\");\n    _fuckBenchmark.benchmark.reset(\"持续时间\");\n    _fuckBenchmark.benchmark.reset(\"总消耗时间\");\n  };\n  await player.setConfig({\n    container: \"#palette\",\n    loop: 1,\n    playMode: \"forwards\",\n    fillMode: \"backwards\",\n    contentMode: \"aspect-fit\"\n  }, scope);\n  _fuckBenchmark.benchmark.time(\"创建 100 个 Image 元素的总时长\", () => {\n    for (let i = 0; i < 100; i++) {\n      player.painter.F.createImage();\n    }\n  });\n  observer = has.createIntersectionObserver(scope, {\n    thresholds: [0, 0.5, 1],\n    initialRatio: 0,\n    nativeMode: true\n  });\n  observer.relativeToViewport().observe(\"#palette\", ({\n    intersectionRatio\n  }) => {\n    if (intersectionRatio > 0) {\n      player.resume();\n    } else {\n      player.pause();\n    }\n  });\n};\nconst worker = new _EnhancedWorker.EnhancedWorker();\nconst readyGo = new _ReadyGo.default();\nconst videoManager = new _fuckSvga.VideoManager(\"fast\", {\n  preprocess: async bucket => {\n    const {\n      local,\n      remote\n    } = _fuckSvga.platform;\n    if (await local.exists(bucket.local)) {\n      return local.read(bucket.local);\n    }\n    const buff = await remote.fetch(bucket.origin);\n    return new Promise(resolve => {\n      worker.once(bucket.origin, data => resolve(data));\n      worker.emit(bucket.origin, buff);\n    });\n  },\n  postprocess: (bucket, data) => _fuckSvga.Parser.parseVideo(data, bucket.origin, false)\n});\nComponent({\n  properties: {\n    current: {\n      type: Number,\n      value: 0\n    },\n    sources: {\n      type: Array,\n      value: []\n    }\n  },\n  observers: {\n    current(value) {\n      _fuckBenchmark.benchmark.log(\"当前动效位置\", value);\n      readyGo.ready(this.initialize.bind(this));\n    }\n  },\n  lifetimes: {\n    ready() {\n      Promise.all([worker.open(), playerAwait(this)]).then(() => {\n        const urls = this.properties.sources.map(item => typeof item === \"string\" ? item : item.url);\n        _fuckBenchmark.benchmark.log(\"准备资源中\");\n        return videoManager.prepare(urls);\n      }).then(() => {\n        _fuckBenchmark.benchmark.log(\"组件准备就绪\");\n        readyGo.go();\n      });\n    },\n    detached() {\n      var _player, _observer;\n      readyGo.reset();\n      videoManager.clear();\n      worker.close();\n      (_player = player) === null || _player === void 0 || _player.destroy();\n      (_observer = observer) === null || _observer === void 0 || _observer.disconnect();\n      player = null;\n      observer = null;\n    }\n  },\n  data: {\n    message: \"\"\n  },\n  methods: {\n    async initialize() {\n      try {\n        const {\n          current,\n          sources\n        } = this.properties;\n        const source = sources[current];\n        const bucket = await videoManager.go(current);\n        if (typeof source === \"object\" && source !== null && source.replace) {\n          const editor = new _fuckSvga.VideoEditor(player.painter, player.resource, bucket.entity);\n          this.setData({\n            message: \"文件编辑中\"\n          });\n          await _fuckBenchmark.benchmark.time(\"replace images\", () => Promise.all(Object.keys(source.replace).map(key => editor.setImage(key, source.replace[key]))));\n        }\n        this.setData({\n          message: \"资源装载中...\"\n        });\n        _fuckBenchmark.benchmark.log(source, bucket);\n        await _fuckBenchmark.benchmark.time(\"mount\", () => player.mount(bucket.entity));\n        // player.stepToPercentage(0.3);\n        player.start();\n        this.setData({\n          message: \"\"\n        });\n      } catch (ex) {\n        console.error(\"svga初始化失败\", ex);\n        this.setData({\n          message: ex.message + \"\\n\" + ex.stack\n        });\n      }\n    },\n    handlePlay() {\n      var _player2;\n      (_player2 = player) === null || _player2 === void 0 || _player2.start();\n    },\n    handleResume() {\n      var _player3;\n      (_player3 = player) === null || _player3 === void 0 || _player3.resume();\n    },\n    handlePause() {\n      var _player4;\n      (_player4 = player) === null || _player4 === void 0 || _player4.pause();\n    },\n    handleStop() {\n      var _player5;\n      (_player5 = player) === null || _player5 === void 0 || _player5.stop();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/animation/index.js\n");

/***/ }),

/***/ "./components/animation2/index.js":
/*!****************************************!*\
  !*** ./components/animation2/index.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _svga2dfire = _interopRequireDefault(__webpack_require__(/*! ../../utils/svga-2dfire */ \"./utils/svga-2dfire.js\"));\nvar _ReadyGo = _interopRequireDefault(__webpack_require__(/*! ../../utils/ReadyGo */ \"./utils/ReadyGo.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst {\n  Parser,\n  Player\n} = _svga2dfire.default;\nlet player;\nlet parser;\nconst readyGo = new _ReadyGo.default();\nComponent({\n  properties: {\n    url: {\n      type: String,\n      value: \"\"\n    }\n  },\n  observers: {\n    url(value) {\n      if (value !== \"\") {\n        readyGo.ready(this.initialize.bind(this));\n      }\n    }\n  },\n  lifetimes: {\n    async ready() {\n      parser = new Parser();\n      player = new Player();\n      await player.setCanvas(\"#palette\", this);\n      player.loops = 1;\n      player.playMode = \"fallbacks\";\n      player.fillMode = \"forwards\";\n      player.onPercentage((percent, frame) => {\n        console.log('当前进度', percent, frame);\n        console.log('---- UPDATE ----');\n      });\n      player.onFinished(() => {\n        console.log('---- END ----');\n      });\n      readyGo.go();\n    },\n    detached() {\n      var _player, _player2;\n      readyGo.reset();\n      (_player = player) === null || _player === void 0 || _player.stopAnimation();\n      (_player2 = player) === null || _player2 === void 0 || _player2.clear();\n      player = null;\n      parser = null;\n    }\n  },\n  data: {\n    message: \"\"\n  },\n  methods: {\n    async initialize() {\n      try {\n        this.setData({\n          message: \"准备下载资源\"\n        });\n        const videoItem = await parser.load(this.properties.url);\n        this.setData({\n          message: \"下载资源成功\"\n        });\n        console.log(this.properties.url, videoItem);\n        await player.setVideoItem(videoItem);\n        this.setData({\n          message: \"资源装载成功\"\n        });\n        // player.stepToPercentage(0.3);\n        player.startAnimation();\n        this.setData({\n          message: \"\"\n        });\n      } catch (ex) {\n        console.error(\"svga初始化失败！\", ex);\n        this.setData({\n          message: ex.message + \"\\n\" + ex.stack\n        });\n      }\n    },\n    handlePlay() {\n      var _player3;\n      (_player3 = player) === null || _player3 === void 0 || _player3.startAnimation();\n    },\n    handleResume() {\n      var _player4;\n      (_player4 = player) === null || _player4 === void 0 || _player4.startAnimation();\n    },\n    handlePause() {\n      var _player5;\n      (_player5 = player) === null || _player5 === void 0 || _player5.pauseAnimation();\n    },\n    handleStop() {\n      var _player6;\n      (_player6 = player) === null || _player6 === void 0 || _player6.stopAnimation();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2FuaW1hdGlvbjIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taW5pcHJvZ3JhbS13ZWFwcC8uL2NvbXBvbmVudHMvYW5pbWF0aW9uMi9pbmRleC5qcz81Mzg4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX3N2Z2EyZGZpcmUgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi91dGlscy9zdmdhLTJkZmlyZVwiKSk7XG52YXIgX1JlYWR5R28gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi91dGlscy9SZWFkeUdvXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoZSkgeyByZXR1cm4gZSAmJiBlLl9fZXNNb2R1bGUgPyBlIDogeyBkZWZhdWx0OiBlIH07IH1cbmNvbnN0IHtcbiAgUGFyc2VyLFxuICBQbGF5ZXJcbn0gPSBfc3ZnYTJkZmlyZS5kZWZhdWx0O1xubGV0IHBsYXllcjtcbmxldCBwYXJzZXI7XG5jb25zdCByZWFkeUdvID0gbmV3IF9SZWFkeUdvLmRlZmF1bHQoKTtcbkNvbXBvbmVudCh7XG4gIHByb3BlcnRpZXM6IHtcbiAgICB1cmw6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIHZhbHVlOiBcIlwiXG4gICAgfVxuICB9LFxuICBvYnNlcnZlcnM6IHtcbiAgICB1cmwodmFsdWUpIHtcbiAgICAgIGlmICh2YWx1ZSAhPT0gXCJcIikge1xuICAgICAgICByZWFkeUdvLnJlYWR5KHRoaXMuaW5pdGlhbGl6ZS5iaW5kKHRoaXMpKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIGxpZmV0aW1lczoge1xuICAgIGFzeW5jIHJlYWR5KCkge1xuICAgICAgcGFyc2VyID0gbmV3IFBhcnNlcigpO1xuICAgICAgcGxheWVyID0gbmV3IFBsYXllcigpO1xuICAgICAgYXdhaXQgcGxheWVyLnNldENhbnZhcyhcIiNwYWxldHRlXCIsIHRoaXMpO1xuICAgICAgcGxheWVyLmxvb3BzID0gMTtcbiAgICAgIHBsYXllci5wbGF5TW9kZSA9IFwiZmFsbGJhY2tzXCI7XG4gICAgICBwbGF5ZXIuZmlsbE1vZGUgPSBcImZvcndhcmRzXCI7XG4gICAgICBwbGF5ZXIub25QZXJjZW50YWdlKChwZXJjZW50LCBmcmFtZSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygn5b2T5YmN6L+b5bqmJywgcGVyY2VudCwgZnJhbWUpO1xuICAgICAgICBjb25zb2xlLmxvZygnLS0tLSBVUERBVEUgLS0tLScpO1xuICAgICAgfSk7XG4gICAgICBwbGF5ZXIub25GaW5pc2hlZCgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCctLS0tIEVORCAtLS0tJyk7XG4gICAgICB9KTtcbiAgICAgIHJlYWR5R28uZ28oKTtcbiAgICB9LFxuICAgIGRldGFjaGVkKCkge1xuICAgICAgdmFyIF9wbGF5ZXIsIF9wbGF5ZXIyO1xuICAgICAgcmVhZHlHby5yZXNldCgpO1xuICAgICAgKF9wbGF5ZXIgPSBwbGF5ZXIpID09PSBudWxsIHx8IF9wbGF5ZXIgPT09IHZvaWQgMCB8fCBfcGxheWVyLnN0b3BBbmltYXRpb24oKTtcbiAgICAgIChfcGxheWVyMiA9IHBsYXllcikgPT09IG51bGwgfHwgX3BsYXllcjIgPT09IHZvaWQgMCB8fCBfcGxheWVyMi5jbGVhcigpO1xuICAgICAgcGxheWVyID0gbnVsbDtcbiAgICAgIHBhcnNlciA9IG51bGw7XG4gICAgfVxuICB9LFxuICBkYXRhOiB7XG4gICAgbWVzc2FnZTogXCJcIlxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgYXN5bmMgaW5pdGlhbGl6ZSgpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgbWVzc2FnZTogXCLlh4blpIfkuIvovb3otYTmupBcIlxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdmlkZW9JdGVtID0gYXdhaXQgcGFyc2VyLmxvYWQodGhpcy5wcm9wZXJ0aWVzLnVybCk7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgbWVzc2FnZTogXCLkuIvovb3otYTmupDmiJDlip9cIlxuICAgICAgICB9KTtcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5wcm9wZXJ0aWVzLnVybCwgdmlkZW9JdGVtKTtcbiAgICAgICAgYXdhaXQgcGxheWVyLnNldFZpZGVvSXRlbSh2aWRlb0l0ZW0pO1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIG1lc3NhZ2U6IFwi6LWE5rqQ6KOF6L295oiQ5YqfXCJcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIHBsYXllci5zdGVwVG9QZXJjZW50YWdlKDAuMyk7XG4gICAgICAgIHBsYXllci5zdGFydEFuaW1hdGlvbigpO1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIG1lc3NhZ2U6IFwiXCJcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwic3ZnYeWIneWni+WMluWksei0pe+8gVwiLCBleCk7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgbWVzc2FnZTogZXgubWVzc2FnZSArIFwiXFxuXCIgKyBleC5zdGFja1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhhbmRsZVBsYXkoKSB7XG4gICAgICB2YXIgX3BsYXllcjM7XG4gICAgICAoX3BsYXllcjMgPSBwbGF5ZXIpID09PSBudWxsIHx8IF9wbGF5ZXIzID09PSB2b2lkIDAgfHwgX3BsYXllcjMuc3RhcnRBbmltYXRpb24oKTtcbiAgICB9LFxuICAgIGhhbmRsZVJlc3VtZSgpIHtcbiAgICAgIHZhciBfcGxheWVyNDtcbiAgICAgIChfcGxheWVyNCA9IHBsYXllcikgPT09IG51bGwgfHwgX3BsYXllcjQgPT09IHZvaWQgMCB8fCBfcGxheWVyNC5zdGFydEFuaW1hdGlvbigpO1xuICAgIH0sXG4gICAgaGFuZGxlUGF1c2UoKSB7XG4gICAgICB2YXIgX3BsYXllcjU7XG4gICAgICAoX3BsYXllcjUgPSBwbGF5ZXIpID09PSBudWxsIHx8IF9wbGF5ZXI1ID09PSB2b2lkIDAgfHwgX3BsYXllcjUucGF1c2VBbmltYXRpb24oKTtcbiAgICB9LFxuICAgIGhhbmRsZVN0b3AoKSB7XG4gICAgICB2YXIgX3BsYXllcjY7XG4gICAgICAoX3BsYXllcjYgPSBwbGF5ZXIpID09PSBudWxsIHx8IF9wbGF5ZXI2ID09PSB2b2lkIDAgfHwgX3BsYXllcjYuc3RvcEFuaW1hdGlvbigpO1xuICAgIH1cbiAgfVxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/animation2/index.js\n");

/***/ }),

/***/ "./components/poster/index.js":
/*!************************************!*\
  !*** ./components/poster/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _fuckSvga = __webpack_require__(/*! ../../utils/fuck-svga */ \"./utils/fuck-svga.js\");\nvar _ReadyGo = _interopRequireDefault(__webpack_require__(/*! ../../utils/ReadyGo */ \"./utils/ReadyGo.js\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nconst readyGo = new _ReadyGo.default();\nlet poster;\nComponent({\n  properties: {\n    current: {\n      type: Number,\n      value: 0\n    },\n    sources: {\n      type: Array,\n      value: []\n    },\n    frame: {\n      type: Number,\n      value: 0\n    }\n  },\n  observers: {\n    current(value) {\n      if (typeof value === \"number\") {\n        readyGo.ready(this.initialize.bind(this));\n      }\n    }\n  },\n  lifetimes: {\n    async ready() {\n      const {\n        windowWidth: width,\n        windowHeight: height\n      } = has.getSystemInfoSync();\n      poster = new _fuckSvga.Poster(width, height);\n      await poster.setConfig(\"#palette\", this);\n      readyGo.go();\n    },\n    detached() {\n      var _poster;\n      readyGo.reset();\n      (_poster = poster) === null || _poster === void 0 || _poster.destroy();\n    }\n  },\n  data: {\n    source: \"\",\n    message: \"\"\n  },\n  methods: {\n    async initialize() {\n      const {\n        current,\n        sources,\n        frame\n      } = this.properties;\n      const source = sources[current];\n      let videoItem;\n      try {\n        this.setData({\n          message: \"准备下载资源\"\n        });\n        if (typeof source === \"string\") {\n          videoItem = await _fuckSvga.Parser.load(source);\n        } else {\n          videoItem = await _fuckSvga.Parser.load(source.url);\n          const editor = new VideoEditor(player.painter, player.resource, bucket.entity);\n          this.setData({\n            message: \"文件编辑中\"\n          });\n          await benchmark.time(\"replace images\", () => Promise.all(Object.keys(source.replace).map(key => editor.setImage(key, source.replace[key]))));\n        }\n        this.setData({\n          message: \"下载资源成功\"\n        });\n        await poster.mount(videoItem, frame);\n        this.setData({\n          message: \"资源装载成功\"\n        });\n        poster.draw();\n        const imageData = poster.toImageData();\n        this.setData({\n          source: (0, _fuckSvga.createImageDataUrl)(imageData)\n        });\n        this.setData({\n          message: \"\"\n        });\n      } catch (ex) {\n        console.error(\"svga初始化失败！\", ex);\n        this.setData({\n          message: ex.message + \"\\n\" + ex.stack\n        });\n      }\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL3Bvc3Rlci9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taW5pcHJvZ3JhbS13ZWFwcC8uL2NvbXBvbmVudHMvcG9zdGVyL2luZGV4LmpzPzQ2NGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfZnVja1N2Z2EgPSByZXF1aXJlKFwiLi4vLi4vdXRpbHMvZnVjay1zdmdhXCIpO1xudmFyIF9SZWFkeUdvID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vdXRpbHMvUmVhZHlHb1wiKSk7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGUpIHsgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZSA6IHsgZGVmYXVsdDogZSB9OyB9XG5jb25zdCByZWFkeUdvID0gbmV3IF9SZWFkeUdvLmRlZmF1bHQoKTtcbmxldCBwb3N0ZXI7XG5Db21wb25lbnQoe1xuICBwcm9wZXJ0aWVzOiB7XG4gICAgY3VycmVudDoge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgdmFsdWU6IDBcbiAgICB9LFxuICAgIHNvdXJjZXM6IHtcbiAgICAgIHR5cGU6IEFycmF5LFxuICAgICAgdmFsdWU6IFtdXG4gICAgfSxcbiAgICBmcmFtZToge1xuICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgdmFsdWU6IDBcbiAgICB9XG4gIH0sXG4gIG9ic2VydmVyczoge1xuICAgIGN1cnJlbnQodmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgcmVhZHlHby5yZWFkeSh0aGlzLmluaXRpYWxpemUuYmluZCh0aGlzKSk7XG4gICAgICB9XG4gICAgfVxuICB9LFxuICBsaWZldGltZXM6IHtcbiAgICBhc3luYyByZWFkeSgpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgd2luZG93V2lkdGg6IHdpZHRoLFxuICAgICAgICB3aW5kb3dIZWlnaHQ6IGhlaWdodFxuICAgICAgfSA9IGhhcy5nZXRTeXN0ZW1JbmZvU3luYygpO1xuICAgICAgcG9zdGVyID0gbmV3IF9mdWNrU3ZnYS5Qb3N0ZXIod2lkdGgsIGhlaWdodCk7XG4gICAgICBhd2FpdCBwb3N0ZXIuc2V0Q29uZmlnKFwiI3BhbGV0dGVcIiwgdGhpcyk7XG4gICAgICByZWFkeUdvLmdvKCk7XG4gICAgfSxcbiAgICBkZXRhY2hlZCgpIHtcbiAgICAgIHZhciBfcG9zdGVyO1xuICAgICAgcmVhZHlHby5yZXNldCgpO1xuICAgICAgKF9wb3N0ZXIgPSBwb3N0ZXIpID09PSBudWxsIHx8IF9wb3N0ZXIgPT09IHZvaWQgMCB8fCBfcG9zdGVyLmRlc3Ryb3koKTtcbiAgICB9XG4gIH0sXG4gIGRhdGE6IHtcbiAgICBzb3VyY2U6IFwiXCIsXG4gICAgbWVzc2FnZTogXCJcIlxuICB9LFxuICBtZXRob2RzOiB7XG4gICAgYXN5bmMgaW5pdGlhbGl6ZSgpIHtcbiAgICAgIGNvbnN0IHtcbiAgICAgICAgY3VycmVudCxcbiAgICAgICAgc291cmNlcyxcbiAgICAgICAgZnJhbWVcbiAgICAgIH0gPSB0aGlzLnByb3BlcnRpZXM7XG4gICAgICBjb25zdCBzb3VyY2UgPSBzb3VyY2VzW2N1cnJlbnRdO1xuICAgICAgbGV0IHZpZGVvSXRlbTtcbiAgICAgIHRyeSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgbWVzc2FnZTogXCLlh4blpIfkuIvovb3otYTmupBcIlxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHR5cGVvZiBzb3VyY2UgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICB2aWRlb0l0ZW0gPSBhd2FpdCBfZnVja1N2Z2EuUGFyc2VyLmxvYWQoc291cmNlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB2aWRlb0l0ZW0gPSBhd2FpdCBfZnVja1N2Z2EuUGFyc2VyLmxvYWQoc291cmNlLnVybCk7XG4gICAgICAgICAgY29uc3QgZWRpdG9yID0gbmV3IFZpZGVvRWRpdG9yKHBsYXllci5wYWludGVyLCBwbGF5ZXIucmVzb3VyY2UsIGJ1Y2tldC5lbnRpdHkpO1xuICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICBtZXNzYWdlOiBcIuaWh+S7tue8lui+keS4rVwiXG4gICAgICAgICAgfSk7XG4gICAgICAgICAgYXdhaXQgYmVuY2htYXJrLnRpbWUoXCJyZXBsYWNlIGltYWdlc1wiLCAoKSA9PiBQcm9taXNlLmFsbChPYmplY3Qua2V5cyhzb3VyY2UucmVwbGFjZSkubWFwKGtleSA9PiBlZGl0b3Iuc2V0SW1hZ2Uoa2V5LCBzb3VyY2UucmVwbGFjZVtrZXldKSkpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIG1lc3NhZ2U6IFwi5LiL6L296LWE5rqQ5oiQ5YqfXCJcbiAgICAgICAgfSk7XG4gICAgICAgIGF3YWl0IHBvc3Rlci5tb3VudCh2aWRlb0l0ZW0sIGZyYW1lKTtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICBtZXNzYWdlOiBcIui1hOa6kOijhei9veaIkOWKn1wiXG4gICAgICAgIH0pO1xuICAgICAgICBwb3N0ZXIuZHJhdygpO1xuICAgICAgICBjb25zdCBpbWFnZURhdGEgPSBwb3N0ZXIudG9JbWFnZURhdGEoKTtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICBzb3VyY2U6ICgwLCBfZnVja1N2Z2EuY3JlYXRlSW1hZ2VEYXRhVXJsKShpbWFnZURhdGEpXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgIG1lc3NhZ2U6IFwiXCJcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwic3ZnYeWIneWni+WMluWksei0pe+8gVwiLCBleCk7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgbWVzc2FnZTogZXgubWVzc2FnZSArIFwiXFxuXCIgKyBleC5zdGFja1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/poster/index.js\n");

/***/ }),

/***/ "./miniprogram_npm/weui-miniprogram/_commons/0.js":
/*!********************************************************!*\
  !*** ./miniprogram_npm/weui-miniprogram/_commons/0.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar globalThis = void 0,\n  self = void 0;\nmodule.exports = function (e) {\n  var t = {},\n    r = {\n      0: 0\n    };\n  function n(r) {\n    if (t[r]) return t[r].exports;\n    var o = t[r] = {\n      i: r,\n      l: !1,\n      exports: {}\n    };\n    return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n  }\n  return n.m = e, n.c = t, n.d = function (e, t, r) {\n    n.o(e, t) || Object.defineProperty(e, t, {\n      enumerable: !0,\n      get: r\n    });\n  }, n.r = function (e) {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n  }, n.t = function (e, t) {\n    if (1 & t && (e = n(e)), 8 & t) return e;\n    if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n    var r = Object.create(null);\n    if (n.r(r), Object.defineProperty(r, \"default\", {\n      enumerable: !0,\n      value: e\n    }), 2 & t && \"string\" != typeof e) for (var o in e) n.d(r, o, function (t) {\n      return e[t];\n    }.bind(null, o));\n    return r;\n  }, n.n = function (e) {\n    var t = e && e.__esModule ? function () {\n      return e.default;\n    } : function () {\n      return e;\n    };\n    return n.d(t, \"a\", t), t;\n  }, n.o = function (e, t) {\n    return Object.prototype.hasOwnProperty.call(e, t);\n  }, n.p = \"\", n.oe = function (e) {\n    process.nextTick(function () {\n      throw e;\n    });\n  }, function (t) {\n    for (var o, u, l, i, f, c, a, p, s, d, b, y = 0, g = 0, h = []; y < t.length; ++y) {\n      for (i = (l = t[y]).ids, c = l.modules, a = l.entries || [], o = 0; o < i.length; o++) f = i[o], r[f] = 0;\n      for (p in c) Object.prototype.hasOwnProperty.call(c, p) && (e[p] = c[p]);\n      h.push.apply(h, a || []);\n    }\n    for (; g < h.length; g++) {\n      for (s = h[g], d = !0, o = 1; o < s.length; o++) b = s[o], 0 !== r[b] && (d = !1);\n      d && (h.splice(g--, 1), u = n(n.s = s[0]));\n    }\n    return u;\n  };\n}([]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9taW5pcHJvZ3JhbV9ucG0vd2V1aS1taW5pcHJvZ3JhbS9fY29tbW9ucy8wLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmlwcm9ncmFtLXdlYXBwLy4vbWluaXByb2dyYW1fbnBtL3dldWktbWluaXByb2dyYW0vX2NvbW1vbnMvMC5qcz9lYjMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgZ2xvYmFsVGhpcyA9IHZvaWQgMCxcbiAgc2VsZiA9IHZvaWQgMDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGUpIHtcbiAgdmFyIHQgPSB7fSxcbiAgICByID0ge1xuICAgICAgMDogMFxuICAgIH07XG4gIGZ1bmN0aW9uIG4ocikge1xuICAgIGlmICh0W3JdKSByZXR1cm4gdFtyXS5leHBvcnRzO1xuICAgIHZhciBvID0gdFtyXSA9IHtcbiAgICAgIGk6IHIsXG4gICAgICBsOiAhMSxcbiAgICAgIGV4cG9ydHM6IHt9XG4gICAgfTtcbiAgICByZXR1cm4gZVtyXS5jYWxsKG8uZXhwb3J0cywgbywgby5leHBvcnRzLCBuKSwgby5sID0gITAsIG8uZXhwb3J0cztcbiAgfVxuICByZXR1cm4gbi5tID0gZSwgbi5jID0gdCwgbi5kID0gZnVuY3Rpb24gKGUsIHQsIHIpIHtcbiAgICBuLm8oZSwgdCkgfHwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHQsIHtcbiAgICAgIGVudW1lcmFibGU6ICEwLFxuICAgICAgZ2V0OiByXG4gICAgfSk7XG4gIH0sIG4uciA9IGZ1bmN0aW9uIChlKSB7XG4gICAgXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIFN5bWJvbC50b1N0cmluZ1RhZyAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgU3ltYm9sLnRvU3RyaW5nVGFnLCB7XG4gICAgICB2YWx1ZTogXCJNb2R1bGVcIlxuICAgIH0pLCBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICAgIHZhbHVlOiAhMFxuICAgIH0pO1xuICB9LCBuLnQgPSBmdW5jdGlvbiAoZSwgdCkge1xuICAgIGlmICgxICYgdCAmJiAoZSA9IG4oZSkpLCA4ICYgdCkgcmV0dXJuIGU7XG4gICAgaWYgKDQgJiB0ICYmIFwib2JqZWN0XCIgPT0gdHlwZW9mIGUgJiYgZSAmJiBlLl9fZXNNb2R1bGUpIHJldHVybiBlO1xuICAgIHZhciByID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBpZiAobi5yKHIpLCBPYmplY3QuZGVmaW5lUHJvcGVydHkociwgXCJkZWZhdWx0XCIsIHtcbiAgICAgIGVudW1lcmFibGU6ICEwLFxuICAgICAgdmFsdWU6IGVcbiAgICB9KSwgMiAmIHQgJiYgXCJzdHJpbmdcIiAhPSB0eXBlb2YgZSkgZm9yICh2YXIgbyBpbiBlKSBuLmQociwgbywgZnVuY3Rpb24gKHQpIHtcbiAgICAgIHJldHVybiBlW3RdO1xuICAgIH0uYmluZChudWxsLCBvKSk7XG4gICAgcmV0dXJuIHI7XG4gIH0sIG4ubiA9IGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyIHQgPSBlICYmIGUuX19lc01vZHVsZSA/IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBlLmRlZmF1bHQ7XG4gICAgfSA6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBlO1xuICAgIH07XG4gICAgcmV0dXJuIG4uZCh0LCBcImFcIiwgdCksIHQ7XG4gIH0sIG4ubyA9IGZ1bmN0aW9uIChlLCB0KSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLCB0KTtcbiAgfSwgbi5wID0gXCJcIiwgbi5vZSA9IGZ1bmN0aW9uIChlKSB7XG4gICAgcHJvY2Vzcy5uZXh0VGljayhmdW5jdGlvbiAoKSB7XG4gICAgICB0aHJvdyBlO1xuICAgIH0pO1xuICB9LCBmdW5jdGlvbiAodCkge1xuICAgIGZvciAodmFyIG8sIHUsIGwsIGksIGYsIGMsIGEsIHAsIHMsIGQsIGIsIHkgPSAwLCBnID0gMCwgaCA9IFtdOyB5IDwgdC5sZW5ndGg7ICsreSkge1xuICAgICAgZm9yIChpID0gKGwgPSB0W3ldKS5pZHMsIGMgPSBsLm1vZHVsZXMsIGEgPSBsLmVudHJpZXMgfHwgW10sIG8gPSAwOyBvIDwgaS5sZW5ndGg7IG8rKykgZiA9IGlbb10sIHJbZl0gPSAwO1xuICAgICAgZm9yIChwIGluIGMpIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChjLCBwKSAmJiAoZVtwXSA9IGNbcF0pO1xuICAgICAgaC5wdXNoLmFwcGx5KGgsIGEgfHwgW10pO1xuICAgIH1cbiAgICBmb3IgKDsgZyA8IGgubGVuZ3RoOyBnKyspIHtcbiAgICAgIGZvciAocyA9IGhbZ10sIGQgPSAhMCwgbyA9IDE7IG8gPCBzLmxlbmd0aDsgbysrKSBiID0gc1tvXSwgMCAhPT0gcltiXSAmJiAoZCA9ICExKTtcbiAgICAgIGQgJiYgKGguc3BsaWNlKGctLSwgMSksIHUgPSBuKG4ucyA9IHNbMF0pKTtcbiAgICB9XG4gICAgcmV0dXJuIHU7XG4gIH07XG59KFtdKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./miniprogram_npm/weui-miniprogram/_commons/0.js\n");

/***/ }),

/***/ "./miniprogram_npm/weui-miniprogram/cell/cell.js":
/*!*******************************************************!*\
  !*** ./miniprogram_npm/weui-miniprogram/cell/cell.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar globalThis = void 0,\n  self = void 0;\nmodule.exports = __webpack_require__(/*! ../_commons/0.js */ \"./miniprogram_npm/weui-miniprogram/_commons/0.js\")([{\n  ids: [3],\n  modules: {\n    6: function (e, t, o) {\n      e.exports = o(74);\n    },\n    74: function (e, t) {\n      Component({\n        options: {\n          multipleSlots: !0\n        },\n        properties: {\n          hover: {\n            type: Boolean,\n            value: !1\n          },\n          link: {\n            type: Boolean,\n            value: !1\n          },\n          extClass: {\n            type: String,\n            value: \"\"\n          },\n          iconClass: {\n            type: String,\n            value: \"\"\n          },\n          bodyClass: {\n            type: String,\n            value: \"\"\n          },\n          icon: {\n            type: String,\n            value: \"\"\n          },\n          title: {\n            type: String,\n            value: \"\"\n          },\n          value: {\n            type: String,\n            value: \"\"\n          },\n          showError: {\n            type: Boolean,\n            value: !1\n          },\n          prop: {\n            type: String,\n            value: \"\"\n          },\n          url: {\n            type: String,\n            value: \"\"\n          },\n          footerClass: {\n            type: String,\n            value: \"\"\n          },\n          footer: {\n            type: String,\n            value: \"\"\n          },\n          inline: {\n            type: Boolean,\n            value: !0\n          },\n          hasHeader: {\n            type: Boolean,\n            value: !0\n          },\n          hasFooter: {\n            type: Boolean,\n            value: !0\n          },\n          hasBody: {\n            type: Boolean,\n            value: !0\n          },\n          extHoverClass: {\n            type: String,\n            value: \"\"\n          },\n          ariaRole: {\n            type: String,\n            value: \"\"\n          }\n        },\n        relations: {\n          \"../form/form\": {\n            type: \"ancestor\"\n          },\n          \"../cells/cells\": {\n            type: \"ancestor\"\n          }\n        },\n        data: {\n          inForm: !1\n        },\n        methods: {\n          setError: function (e) {\n            this.setData({\n              error: e || !1\n            });\n          },\n          setInForm: function () {\n            this.setData({\n              inForm: !0\n            });\n          },\n          setOuterClass: function (e) {\n            this.setData({\n              outerClass: e\n            });\n          },\n          navigateTo: function () {\n            var e = this,\n              t = this.data;\n            t.url && t.link && has.navigateTo({\n              url: t.url,\n              success: function (t) {\n                e.triggerEvent(\"navigatesuccess\", t, {});\n              },\n              fail: function (t) {\n                e.triggerEvent(\"navigateerror\", t, {});\n              }\n            });\n          }\n        }\n      });\n    }\n  },\n  entries: [[6, 0]]\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9taW5pcHJvZ3JhbV9ucG0vd2V1aS1taW5pcHJvZ3JhbS9jZWxsL2NlbGwuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taW5pcHJvZ3JhbS13ZWFwcC8uL21pbmlwcm9ncmFtX25wbS93ZXVpLW1pbmlwcm9ncmFtL2NlbGwvY2VsbC5qcz8xN2ZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgZ2xvYmFsVGhpcyA9IHZvaWQgMCxcbiAgc2VsZiA9IHZvaWQgMDtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL19jb21tb25zLzAuanNcIikoW3tcbiAgaWRzOiBbM10sXG4gIG1vZHVsZXM6IHtcbiAgICA2OiBmdW5jdGlvbiAoZSwgdCwgbykge1xuICAgICAgZS5leHBvcnRzID0gbyg3NCk7XG4gICAgfSxcbiAgICA3NDogZnVuY3Rpb24gKGUsIHQpIHtcbiAgICAgIENvbXBvbmVudCh7XG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICBtdWx0aXBsZVNsb3RzOiAhMFxuICAgICAgICB9LFxuICAgICAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgaG92ZXI6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICB2YWx1ZTogITFcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxpbms6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICB2YWx1ZTogITFcbiAgICAgICAgICB9LFxuICAgICAgICAgIGV4dENsYXNzOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgaWNvbkNsYXNzOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgYm9keUNsYXNzOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgaWNvbjoge1xuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzaG93RXJyb3I6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICB2YWx1ZTogITFcbiAgICAgICAgICB9LFxuICAgICAgICAgIHByb3A6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB1cmw6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmb290ZXJDbGFzczoge1xuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGZvb3Rlcjoge1xuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIGlubGluZToge1xuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgICAgIHZhbHVlOiAhMFxuICAgICAgICAgIH0sXG4gICAgICAgICAgaGFzSGVhZGVyOiB7XG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgICAgdmFsdWU6ICEwXG4gICAgICAgICAgfSxcbiAgICAgICAgICBoYXNGb290ZXI6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICB2YWx1ZTogITBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGhhc0JvZHk6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICB2YWx1ZTogITBcbiAgICAgICAgICB9LFxuICAgICAgICAgIGV4dEhvdmVyQ2xhc3M6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhcmlhUm9sZToge1xuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlbGF0aW9uczoge1xuICAgICAgICAgIFwiLi4vZm9ybS9mb3JtXCI6IHtcbiAgICAgICAgICAgIHR5cGU6IFwiYW5jZXN0b3JcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCIuLi9jZWxscy9jZWxsc1wiOiB7XG4gICAgICAgICAgICB0eXBlOiBcImFuY2VzdG9yXCJcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBpbkZvcm06ICExXG4gICAgICAgIH0sXG4gICAgICAgIG1ldGhvZHM6IHtcbiAgICAgICAgICBzZXRFcnJvcjogZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgIGVycm9yOiBlIHx8ICExXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHNldEluRm9ybTogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgaW5Gb3JtOiAhMFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZXRPdXRlckNsYXNzOiBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgb3V0ZXJDbGFzczogZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBuYXZpZ2F0ZVRvOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgZSA9IHRoaXMsXG4gICAgICAgICAgICAgIHQgPSB0aGlzLmRhdGE7XG4gICAgICAgICAgICB0LnVybCAmJiB0LmxpbmsgJiYgaGFzLm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgICB1cmw6IHQudXJsLFxuICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgICAgIGUudHJpZ2dlckV2ZW50KFwibmF2aWdhdGVzdWNjZXNzXCIsIHQsIHt9KTtcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgICBlLnRyaWdnZXJFdmVudChcIm5hdmlnYXRlZXJyb3JcIiwgdCwge30pO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfSxcbiAgZW50cmllczogW1s2LCAwXV1cbn1dKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./miniprogram_npm/weui-miniprogram/cell/cell.js\n");

/***/ }),

/***/ "./miniprogram_npm/weui-miniprogram/cells/cells.js":
/*!*********************************************************!*\
  !*** ./miniprogram_npm/weui-miniprogram/cells/cells.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar globalThis = void 0,\n  self = void 0;\nmodule.exports = __webpack_require__(/*! ../_commons/0.js */ \"./miniprogram_npm/weui-miniprogram/_commons/0.js\")([{\n  ids: [4],\n  modules: {\n    7: function (t, e, s) {\n      t.exports = s(82);\n    },\n    82: function (t, e) {\n      Component({\n        options: {\n          multipleSlots: !0\n        },\n        properties: {\n          title: {\n            type: String,\n            value: \"\"\n          },\n          extClass: {\n            type: String,\n            value: \"\"\n          },\n          footer: {\n            type: String,\n            value: \"\"\n          },\n          ariaRole: {\n            type: String,\n            value: \"\"\n          }\n        },\n        data: {\n          firstItem: null,\n          checkboxCount: 0,\n          checkboxIsMulti: !1,\n          outerClass: \"\",\n          childClass: \"\"\n        },\n        relations: {\n          \"../cell/cell\": {\n            type: \"descendant\",\n            linked: function (t) {\n              this.data.firstItem || (this.data.firstItem = t), t !== this.data.firstItem && t.setOuterClass(\"weui-cell_wxss\");\n            }\n          },\n          \"../form-page/form-page\": {\n            type: \"ancestor\"\n          },\n          \"../checkbox-group/checkbox-group\": {\n            type: \"descendant\",\n            linked: function (t) {\n              this.setData({\n                checkboxCount: this.data.checkboxCount + 1,\n                checkboxIsMulti: t.data.multi\n              });\n            },\n            unlinked: function (t) {\n              this.setData({\n                checkboxCount: this.data.checkboxCount - 1,\n                checkboxIsMulti: t.data.multi\n              });\n            }\n          }\n        },\n        methods: {\n          setCellMulti: function (t) {\n            this.setData({\n              checkboxIsMulti: t\n            });\n          },\n          setCellsClass: function (t) {\n            this.setData({\n              childClass: t\n            });\n          },\n          setOuterClass: function (t) {\n            this.setData({\n              outerClass: t\n            });\n          }\n        }\n      });\n    }\n  },\n  entries: [[7, 0]]\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9taW5pcHJvZ3JhbV9ucG0vd2V1aS1taW5pcHJvZ3JhbS9jZWxscy9jZWxscy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmlwcm9ncmFtLXdlYXBwLy4vbWluaXByb2dyYW1fbnBtL3dldWktbWluaXByb2dyYW0vY2VsbHMvY2VsbHMuanM/N2IxNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIGdsb2JhbFRoaXMgPSB2b2lkIDAsXG4gIHNlbGYgPSB2b2lkIDA7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9fY29tbW9ucy8wLmpzXCIpKFt7XG4gIGlkczogWzRdLFxuICBtb2R1bGVzOiB7XG4gICAgNzogZnVuY3Rpb24gKHQsIGUsIHMpIHtcbiAgICAgIHQuZXhwb3J0cyA9IHMoODIpO1xuICAgIH0sXG4gICAgODI6IGZ1bmN0aW9uICh0LCBlKSB7XG4gICAgICBDb21wb25lbnQoe1xuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgbXVsdGlwbGVTbG90czogITBcbiAgICAgICAgfSxcbiAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICB2YWx1ZTogXCJcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgZXh0Q2xhc3M6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmb290ZXI6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhcmlhUm9sZToge1xuICAgICAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCJcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBmaXJzdEl0ZW06IG51bGwsXG4gICAgICAgICAgY2hlY2tib3hDb3VudDogMCxcbiAgICAgICAgICBjaGVja2JveElzTXVsdGk6ICExLFxuICAgICAgICAgIG91dGVyQ2xhc3M6IFwiXCIsXG4gICAgICAgICAgY2hpbGRDbGFzczogXCJcIlxuICAgICAgICB9LFxuICAgICAgICByZWxhdGlvbnM6IHtcbiAgICAgICAgICBcIi4uL2NlbGwvY2VsbFwiOiB7XG4gICAgICAgICAgICB0eXBlOiBcImRlc2NlbmRhbnRcIixcbiAgICAgICAgICAgIGxpbmtlZDogZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgdGhpcy5kYXRhLmZpcnN0SXRlbSB8fCAodGhpcy5kYXRhLmZpcnN0SXRlbSA9IHQpLCB0ICE9PSB0aGlzLmRhdGEuZmlyc3RJdGVtICYmIHQuc2V0T3V0ZXJDbGFzcyhcIndldWktY2VsbF93eHNzXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCIuLi9mb3JtLXBhZ2UvZm9ybS1wYWdlXCI6IHtcbiAgICAgICAgICAgIHR5cGU6IFwiYW5jZXN0b3JcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCIuLi9jaGVja2JveC1ncm91cC9jaGVja2JveC1ncm91cFwiOiB7XG4gICAgICAgICAgICB0eXBlOiBcImRlc2NlbmRhbnRcIixcbiAgICAgICAgICAgIGxpbmtlZDogZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICBjaGVja2JveENvdW50OiB0aGlzLmRhdGEuY2hlY2tib3hDb3VudCArIDEsXG4gICAgICAgICAgICAgICAgY2hlY2tib3hJc011bHRpOiB0LmRhdGEubXVsdGlcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdW5saW5rZWQ6IGZ1bmN0aW9uICh0KSB7XG4gICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgY2hlY2tib3hDb3VudDogdGhpcy5kYXRhLmNoZWNrYm94Q291bnQgLSAxLFxuICAgICAgICAgICAgICAgIGNoZWNrYm94SXNNdWx0aTogdC5kYXRhLm11bHRpXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgbWV0aG9kczoge1xuICAgICAgICAgIHNldENlbGxNdWx0aTogZnVuY3Rpb24gKHQpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgIGNoZWNrYm94SXNNdWx0aTogdFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZXRDZWxsc0NsYXNzOiBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgY2hpbGRDbGFzczogdFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZXRPdXRlckNsYXNzOiBmdW5jdGlvbiAodCkge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgb3V0ZXJDbGFzczogdFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG4gIGVudHJpZXM6IFtbNywgMF1dXG59XSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./miniprogram_npm/weui-miniprogram/cells/cells.js\n");

/***/ }),

/***/ "./pages/apng/index.js":
/*!*****************************!*\
  !*** ./pages/apng/index.js ***!
  \*****************************/
/***/ (() => {

"use strict";
eval("\n\nPage({});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9hcG5nL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmlwcm9ncmFtLXdlYXBwLy4vcGFnZXMvYXBuZy9pbmRleC5qcz9mMmNiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5QYWdlKHt9KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/apng/index.js\n");

/***/ }),

/***/ "./pages/index/index.js":
/*!******************************!*\
  !*** ./pages/index/index.js ***!
  \******************************/
/***/ (() => {

"use strict";
eval("\n\nif (typeof has.createSharedArrayBuffer === \"function\") {\n  const sharedArrayBuffer = has.createSharedArrayBuffer(128);\n  console.log('sharedArrayBuffer', sharedArrayBuffer);\n} else {\n  console.warn('not support createSharedArrayBuffer');\n}\nif (typeof SharedArrayBuffer === \"function\") {\n  const sharedArrayBuffer = new SharedArrayBuffer(128);\n  console.log('sharedArrayBuffer', sharedArrayBuffer);\n} else {\n  console.warn('not support SharedArrayBuffer');\n}\nPage({\n  data: {\n    btnList: [{\n      text: \"跳转SVGA动画库(官方版)\",\n      path: \"/pages/svga2/index\"\n    }, {\n      text: \"跳转SVGA动画库(自研版)\",\n      path: \"/pages/svga/index\"\n    }, {\n      text: \"跳转SVGA海报(自研版)\",\n      path: \"/pages/poster/index\"\n    }, {\n      text: \"跳转Webview\",\n      path: \"/pages/webview/index\"\n    }, {\n      text: \"跳转APNG动画\",\n      path: \"/pages/apng/index\"\n    }]\n  },\n  handleNavigateTo(e) {\n    const {\n      url\n    } = e.currentTarget.dataset;\n    if (url) {\n      has.navigateTo({\n        url\n      });\n    } else {\n      console.error(\"未获取到跳转路径\", e);\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmlwcm9ncmFtLXdlYXBwLy4vcGFnZXMvaW5kZXgvaW5kZXguanM/MGM5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaWYgKHR5cGVvZiBoYXMuY3JlYXRlU2hhcmVkQXJyYXlCdWZmZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICBjb25zdCBzaGFyZWRBcnJheUJ1ZmZlciA9IGhhcy5jcmVhdGVTaGFyZWRBcnJheUJ1ZmZlcigxMjgpO1xuICBjb25zb2xlLmxvZygnc2hhcmVkQXJyYXlCdWZmZXInLCBzaGFyZWRBcnJheUJ1ZmZlcik7XG59IGVsc2Uge1xuICBjb25zb2xlLndhcm4oJ25vdCBzdXBwb3J0IGNyZWF0ZVNoYXJlZEFycmF5QnVmZmVyJyk7XG59XG5pZiAodHlwZW9mIFNoYXJlZEFycmF5QnVmZmVyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgY29uc3Qgc2hhcmVkQXJyYXlCdWZmZXIgPSBuZXcgU2hhcmVkQXJyYXlCdWZmZXIoMTI4KTtcbiAgY29uc29sZS5sb2coJ3NoYXJlZEFycmF5QnVmZmVyJywgc2hhcmVkQXJyYXlCdWZmZXIpO1xufSBlbHNlIHtcbiAgY29uc29sZS53YXJuKCdub3Qgc3VwcG9ydCBTaGFyZWRBcnJheUJ1ZmZlcicpO1xufVxuUGFnZSh7XG4gIGRhdGE6IHtcbiAgICBidG5MaXN0OiBbe1xuICAgICAgdGV4dDogXCLot7PovaxTVkdB5Yqo55S75bqTKOWumOaWueeJiClcIixcbiAgICAgIHBhdGg6IFwiL3BhZ2VzL3N2Z2EyL2luZGV4XCJcbiAgICB9LCB7XG4gICAgICB0ZXh0OiBcIui3s+i9rFNWR0HliqjnlLvlupMo6Ieq56CU54mIKVwiLFxuICAgICAgcGF0aDogXCIvcGFnZXMvc3ZnYS9pbmRleFwiXG4gICAgfSwge1xuICAgICAgdGV4dDogXCLot7PovaxTVkdB5rW35oqlKOiHqueglOeJiClcIixcbiAgICAgIHBhdGg6IFwiL3BhZ2VzL3Bvc3Rlci9pbmRleFwiXG4gICAgfSwge1xuICAgICAgdGV4dDogXCLot7PovaxXZWJ2aWV3XCIsXG4gICAgICBwYXRoOiBcIi9wYWdlcy93ZWJ2aWV3L2luZGV4XCJcbiAgICB9LCB7XG4gICAgICB0ZXh0OiBcIui3s+i9rEFQTkfliqjnlLtcIixcbiAgICAgIHBhdGg6IFwiL3BhZ2VzL2FwbmcvaW5kZXhcIlxuICAgIH1dXG4gIH0sXG4gIGhhbmRsZU5hdmlnYXRlVG8oZSkge1xuICAgIGNvbnN0IHtcbiAgICAgIHVybFxuICAgIH0gPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldDtcbiAgICBpZiAodXJsKSB7XG4gICAgICBoYXMubmF2aWdhdGVUbyh7XG4gICAgICAgIHVybFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCLmnKrojrflj5bliLDot7Povazot6/lvoRcIiwgZSk7XG4gICAgfVxuICB9XG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index/index.js\n");

/***/ }),

/***/ "./pages/poster/index.js":
/*!*******************************!*\
  !*** ./pages/poster/index.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _constants = __webpack_require__(/*! ../../utils/constants */ \"./utils/constants.js\");\nPage({\n  data: {\n    sources: [_constants.posterSources][0],\n    current: 0\n  },\n  handleSwitchAtRandom() {\n    const {\n      sources\n    } = this.data;\n    const {\n      ranIndex\n    } = (0, _constants.getOneAtRandom)(sources.length);\n    this.setData({\n      current: ranIndex\n    });\n  },\n  handleSwitchPrev() {\n    const {\n      current,\n      sources\n    } = this.data;\n    let prev = current - 1;\n    if (prev < 0) {\n      prev = sources.length - 1;\n    }\n    this.setData({\n      current: prev\n    });\n  },\n  handleSwitchNext() {\n    const {\n      current,\n      sources\n    } = this.data;\n    let next = current + 1;\n    if (next > sources.length - 1) {\n      next = 0;\n    }\n    this.setData({\n      current: next\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9wb3N0ZXIvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taW5pcHJvZ3JhbS13ZWFwcC8uL3BhZ2VzL3Bvc3Rlci9pbmRleC5qcz9hMTU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9jb25zdGFudHNcIik7XG5QYWdlKHtcbiAgZGF0YToge1xuICAgIHNvdXJjZXM6IFtfY29uc3RhbnRzLnBvc3RlclNvdXJjZXNdWzBdLFxuICAgIGN1cnJlbnQ6IDBcbiAgfSxcbiAgaGFuZGxlU3dpdGNoQXRSYW5kb20oKSB7XG4gICAgY29uc3Qge1xuICAgICAgc291cmNlc1xuICAgIH0gPSB0aGlzLmRhdGE7XG4gICAgY29uc3Qge1xuICAgICAgcmFuSW5kZXhcbiAgICB9ID0gKDAsIF9jb25zdGFudHMuZ2V0T25lQXRSYW5kb20pKHNvdXJjZXMubGVuZ3RoKTtcbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgY3VycmVudDogcmFuSW5kZXhcbiAgICB9KTtcbiAgfSxcbiAgaGFuZGxlU3dpdGNoUHJldigpIHtcbiAgICBjb25zdCB7XG4gICAgICBjdXJyZW50LFxuICAgICAgc291cmNlc1xuICAgIH0gPSB0aGlzLmRhdGE7XG4gICAgbGV0IHByZXYgPSBjdXJyZW50IC0gMTtcbiAgICBpZiAocHJldiA8IDApIHtcbiAgICAgIHByZXYgPSBzb3VyY2VzLmxlbmd0aCAtIDE7XG4gICAgfVxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICBjdXJyZW50OiBwcmV2XG4gICAgfSk7XG4gIH0sXG4gIGhhbmRsZVN3aXRjaE5leHQoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY3VycmVudCxcbiAgICAgIHNvdXJjZXNcbiAgICB9ID0gdGhpcy5kYXRhO1xuICAgIGxldCBuZXh0ID0gY3VycmVudCArIDE7XG4gICAgaWYgKG5leHQgPiBzb3VyY2VzLmxlbmd0aCAtIDEpIHtcbiAgICAgIG5leHQgPSAwO1xuICAgIH1cbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgY3VycmVudDogbmV4dFxuICAgIH0pO1xuICB9XG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/poster/index.js\n");

/***/ }),

/***/ "./pages/svga/index.js":
/*!*****************************!*\
  !*** ./pages/svga/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _constants = __webpack_require__(/*! ../../utils/constants */ \"./utils/constants.js\");\nPage({\n  data: {\n    sources: [_constants.svgaSources, _constants.svgaCustomSources, _constants.yySources, _constants.svgaLargeSources, _constants.svgaHugeSources][3],\n    current: 0\n  },\n  handleSwitchAtRandom() {\n    const {\n      sources\n    } = this.data;\n    const {\n      ranIndex\n    } = (0, _constants.getOneAtRandom)(sources.length);\n    this.setData({\n      current: ranIndex\n    });\n  },\n  handleSwitchPrev() {\n    const {\n      current,\n      sources\n    } = this.data;\n    let prev = current - 1;\n    if (prev < 0) {\n      prev = sources.length - 1;\n    }\n    this.setData({\n      current: prev\n    });\n  },\n  handleSwitchNext() {\n    const {\n      current,\n      sources\n    } = this.data;\n    let next = current + 1;\n    if (next > sources.length - 1) {\n      next = 0;\n    }\n    this.setData({\n      current: next\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9zdmdhL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWluaXByb2dyYW0td2VhcHAvLi9wYWdlcy9zdmdhL2luZGV4LmpzPzhkOGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfY29uc3RhbnRzID0gcmVxdWlyZShcIi4uLy4uL3V0aWxzL2NvbnN0YW50c1wiKTtcblBhZ2Uoe1xuICBkYXRhOiB7XG4gICAgc291cmNlczogW19jb25zdGFudHMuc3ZnYVNvdXJjZXMsIF9jb25zdGFudHMuc3ZnYUN1c3RvbVNvdXJjZXMsIF9jb25zdGFudHMueXlTb3VyY2VzLCBfY29uc3RhbnRzLnN2Z2FMYXJnZVNvdXJjZXMsIF9jb25zdGFudHMuc3ZnYUh1Z2VTb3VyY2VzXVszXSxcbiAgICBjdXJyZW50OiAwXG4gIH0sXG4gIGhhbmRsZVN3aXRjaEF0UmFuZG9tKCkge1xuICAgIGNvbnN0IHtcbiAgICAgIHNvdXJjZXNcbiAgICB9ID0gdGhpcy5kYXRhO1xuICAgIGNvbnN0IHtcbiAgICAgIHJhbkluZGV4XG4gICAgfSA9ICgwLCBfY29uc3RhbnRzLmdldE9uZUF0UmFuZG9tKShzb3VyY2VzLmxlbmd0aCk7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIGN1cnJlbnQ6IHJhbkluZGV4XG4gICAgfSk7XG4gIH0sXG4gIGhhbmRsZVN3aXRjaFByZXYoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY3VycmVudCxcbiAgICAgIHNvdXJjZXNcbiAgICB9ID0gdGhpcy5kYXRhO1xuICAgIGxldCBwcmV2ID0gY3VycmVudCAtIDE7XG4gICAgaWYgKHByZXYgPCAwKSB7XG4gICAgICBwcmV2ID0gc291cmNlcy5sZW5ndGggLSAxO1xuICAgIH1cbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgY3VycmVudDogcHJldlxuICAgIH0pO1xuICB9LFxuICBoYW5kbGVTd2l0Y2hOZXh0KCkge1xuICAgIGNvbnN0IHtcbiAgICAgIGN1cnJlbnQsXG4gICAgICBzb3VyY2VzXG4gICAgfSA9IHRoaXMuZGF0YTtcbiAgICBsZXQgbmV4dCA9IGN1cnJlbnQgKyAxO1xuICAgIGlmIChuZXh0ID4gc291cmNlcy5sZW5ndGggLSAxKSB7XG4gICAgICBuZXh0ID0gMDtcbiAgICB9XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIGN1cnJlbnQ6IG5leHRcbiAgICB9KTtcbiAgfVxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/svga/index.js\n");

/***/ }),

/***/ "./pages/svga2/index.js":
/*!******************************!*\
  !*** ./pages/svga2/index.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _constants = __webpack_require__(/*! ../../utils/constants */ \"./utils/constants.js\");\n// const sources = [\n//   'http://10.1.133.197:5151/svga/序列1.svga',\n//   'http://10.1.133.197:5151/svga/序列2.svga',\n//   'http://10.1.133.197:5151/svga/序列3.svga'\n// ]\nconst sources = _constants.svgaSources;\nPage({\n  data: {\n    url: \"\",\n    current: 0\n  },\n  handleSwitchAtRandom() {\n    const {\n      ranIndex,\n      url\n    } = (0, _constants.getOneAtRandom)();\n    this.setData({\n      url,\n      current: ranIndex\n    });\n  },\n  handleSwitchPrev() {\n    const {\n      current\n    } = this.data;\n    let prev = current - 1;\n    if (prev < 0) {\n      prev = _constants.svgaSources.length - 1;\n    }\n    this.setData({\n      url: sources[prev],\n      current: prev\n    });\n  },\n  handleSwitchNext() {\n    const {\n      current\n    } = this.data;\n    let next = current + 1;\n    if (next > sources.length - 1) {\n      next = 0;\n    }\n    this.setData({\n      url: sources[next],\n      current: next\n    });\n  },\n  onLoad() {\n    // this.handleSwitchAtRandom();\n    const current = 0;\n    this.setData({\n      current,\n      url: sources[current]\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9zdmdhMi9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWluaXByb2dyYW0td2VhcHAvLi9wYWdlcy9zdmdhMi9pbmRleC5qcz83MzdiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2NvbnN0YW50cyA9IHJlcXVpcmUoXCIuLi8uLi91dGlscy9jb25zdGFudHNcIik7XG4vLyBjb25zdCBzb3VyY2VzID0gW1xuLy8gICAnaHR0cDovLzEwLjEuMTMzLjE5Nzo1MTUxL3N2Z2Ev5bqP5YiXMS5zdmdhJyxcbi8vICAgJ2h0dHA6Ly8xMC4xLjEzMy4xOTc6NTE1MS9zdmdhL+W6j+WIlzIuc3ZnYScsXG4vLyAgICdodHRwOi8vMTAuMS4xMzMuMTk3OjUxNTEvc3ZnYS/luo/liJczLnN2Z2EnXG4vLyBdXG5jb25zdCBzb3VyY2VzID0gX2NvbnN0YW50cy5zdmdhU291cmNlcztcblBhZ2Uoe1xuICBkYXRhOiB7XG4gICAgdXJsOiBcIlwiLFxuICAgIGN1cnJlbnQ6IDBcbiAgfSxcbiAgaGFuZGxlU3dpdGNoQXRSYW5kb20oKSB7XG4gICAgY29uc3Qge1xuICAgICAgcmFuSW5kZXgsXG4gICAgICB1cmxcbiAgICB9ID0gKDAsIF9jb25zdGFudHMuZ2V0T25lQXRSYW5kb20pKCk7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIHVybCxcbiAgICAgIGN1cnJlbnQ6IHJhbkluZGV4XG4gICAgfSk7XG4gIH0sXG4gIGhhbmRsZVN3aXRjaFByZXYoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY3VycmVudFxuICAgIH0gPSB0aGlzLmRhdGE7XG4gICAgbGV0IHByZXYgPSBjdXJyZW50IC0gMTtcbiAgICBpZiAocHJldiA8IDApIHtcbiAgICAgIHByZXYgPSBfY29uc3RhbnRzLnN2Z2FTb3VyY2VzLmxlbmd0aCAtIDE7XG4gICAgfVxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICB1cmw6IHNvdXJjZXNbcHJldl0sXG4gICAgICBjdXJyZW50OiBwcmV2XG4gICAgfSk7XG4gIH0sXG4gIGhhbmRsZVN3aXRjaE5leHQoKSB7XG4gICAgY29uc3Qge1xuICAgICAgY3VycmVudFxuICAgIH0gPSB0aGlzLmRhdGE7XG4gICAgbGV0IG5leHQgPSBjdXJyZW50ICsgMTtcbiAgICBpZiAobmV4dCA+IHNvdXJjZXMubGVuZ3RoIC0gMSkge1xuICAgICAgbmV4dCA9IDA7XG4gICAgfVxuICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICB1cmw6IHNvdXJjZXNbbmV4dF0sXG4gICAgICBjdXJyZW50OiBuZXh0XG4gICAgfSk7XG4gIH0sXG4gIG9uTG9hZCgpIHtcbiAgICAvLyB0aGlzLmhhbmRsZVN3aXRjaEF0UmFuZG9tKCk7XG4gICAgY29uc3QgY3VycmVudCA9IDA7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIGN1cnJlbnQsXG4gICAgICB1cmw6IHNvdXJjZXNbY3VycmVudF1cbiAgICB9KTtcbiAgfVxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/svga2/index.js\n");

/***/ }),

/***/ "./pages/webview/index.js":
/*!********************************!*\
  !*** ./pages/webview/index.js ***!
  \********************************/
/***/ (() => {

"use strict";
eval("\n\nPage({\n  data: {\n    src: \"\"\n  },\n  onLoad() {\n    this.setData({\n      src: \"http://localhost:3000/navigate-to-miniprogram\"\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy93ZWJ2aWV3L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21pbmlwcm9ncmFtLXdlYXBwLy4vcGFnZXMvd2Vidmlldy9pbmRleC5qcz8wNjY4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5QYWdlKHtcbiAgZGF0YToge1xuICAgIHNyYzogXCJcIlxuICB9LFxuICBvbkxvYWQoKSB7XG4gICAgdGhpcy5zZXREYXRhKHtcbiAgICAgIHNyYzogXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvbmF2aWdhdGUtdG8tbWluaXByb2dyYW1cIlxuICAgIH0pO1xuICB9XG59KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/webview/index.js\n");

/***/ }),

/***/ "./utils/EnhancedWorker.js":
/*!*********************************!*\
  !*** ./utils/EnhancedWorker.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.EnhancedWorker = void 0;\nvar _fuckBenchmark = __webpack_require__(/*! ./fuck-benchmark */ \"./utils/fuck-benchmark.js\");\nclass EnhancedWorker {\n  constructor() {\n    this.worker;\n    this.listeners = new Map();\n  }\n\n  /**\n   * @private\n   * 创建 Worker\n   */\n  createWorker() {\n    this.worker = has.createWorker(\"workers/index.js\", {\n      useExperimentalWorker: true\n    });\n    // 监听 worker 消息响应。\n    this.worker.onMessage(result => {\n      const {\n        method,\n        data\n      } = result || {};\n      const handler = this.listeners.get(method);\n      const {\n        fn,\n        options\n      } = handler;\n      fn(data);\n      if (options.once) {\n        this.listeners.delete(method);\n      }\n      _fuckBenchmark.benchmark.stop(`${method} 解压时间`);\n    });\n\n    // 实验模式可能会出现 worker 被杀的情况，需要重新创建 worker\n    this.worker.onProcessKilled(() => {\n      _fuckBenchmark.benchmark.log(\"worker killed\");\n      this.createWorker();\n    });\n  }\n\n  /**\n   * 下载并启动 Worker\n   * @returns \n   */\n  async open() {\n    return new Promise((resolve, reject) => {\n      const task = has.preDownloadSubpackage({\n        packageType: \"workers\",\n        success: res => {\n          _fuckBenchmark.benchmark.log(\"load worker success\", res);\n          // 创建 worker。 如果 worker 分包没下载完就调 createWorker 的话将报错\n          this.createWorker();\n          resolve();\n        },\n        fail: res => {\n          _fuckBenchmark.benchmark.log(\"load worker fail\", res);\n          reject(res);\n        }\n      });\n      task.onProgressUpdate(res => {\n        // 可通过 onProgressUpdate 接口监听下载进度\n        _fuckBenchmark.benchmark.log(\"【workers download progress】\", res.progress, res.totalBytesWritten, res.totalBytesExpectedToWrite);\n      });\n    });\n  }\n\n  /**\n   * 一次绑定事件\n   * @param {*} method \n   * @param {*} fn \n   */\n  once(method, fn) {\n    this.listeners.set(method, {\n      fn: data => fn === null || fn === void 0 ? void 0 : fn(data),\n      options: {\n        once: true\n      }\n    });\n  }\n\n  /**\n   * 永久绑定事件\n   * @param {*} method \n   * @param {*} fn \n   */\n  on(method, fn) {\n    this.listeners.set(method, {\n      fn: data => fn === null || fn === void 0 ? void 0 : fn(data),\n      options: {\n        once: false\n      }\n    });\n  }\n\n  /**\n   * 移除绑定事件\n   * @param {*} method \n   */\n  off(method) {\n    this.listeners.delete(method);\n  }\n\n  /**\n   * 触发事件\n   * @param {*} method \n   * @param {*} data \n   */\n  emit(method, data) {\n    _fuckBenchmark.benchmark.start(`${method} 解压时间`);\n    this.worker.postMessage({\n      method,\n      data\n    });\n  }\n\n  /**\n   * 关闭 Worker\n   */\n  close() {\n    var _this$worker;\n    this.listeners.clear();\n    (_this$worker = this.worker) === null || _this$worker === void 0 || _this$worker.terminate();\n  }\n}\nexports.EnhancedWorker = EnhancedWorker;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9FbmhhbmNlZFdvcmtlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWluaXByb2dyYW0td2VhcHAvLi91dGlscy9FbmhhbmNlZFdvcmtlci5qcz8xZWFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5FbmhhbmNlZFdvcmtlciA9IHZvaWQgMDtcbnZhciBfZnVja0JlbmNobWFyayA9IHJlcXVpcmUoXCIuL2Z1Y2stYmVuY2htYXJrXCIpO1xuY2xhc3MgRW5oYW5jZWRXb3JrZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLndvcmtlcjtcbiAgICB0aGlzLmxpc3RlbmVycyA9IG5ldyBNYXAoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJpdmF0ZVxuICAgKiDliJvlu7ogV29ya2VyXG4gICAqL1xuICBjcmVhdGVXb3JrZXIoKSB7XG4gICAgdGhpcy53b3JrZXIgPSBoYXMuY3JlYXRlV29ya2VyKFwid29ya2Vycy9pbmRleC5qc1wiLCB7XG4gICAgICB1c2VFeHBlcmltZW50YWxXb3JrZXI6IHRydWVcbiAgICB9KTtcbiAgICAvLyDnm5HlkKwgd29ya2VyIOa2iOaBr+WTjeW6lOOAglxuICAgIHRoaXMud29ya2VyLm9uTWVzc2FnZShyZXN1bHQgPT4ge1xuICAgICAgY29uc3Qge1xuICAgICAgICBtZXRob2QsXG4gICAgICAgIGRhdGFcbiAgICAgIH0gPSByZXN1bHQgfHwge307XG4gICAgICBjb25zdCBoYW5kbGVyID0gdGhpcy5saXN0ZW5lcnMuZ2V0KG1ldGhvZCk7XG4gICAgICBjb25zdCB7XG4gICAgICAgIGZuLFxuICAgICAgICBvcHRpb25zXG4gICAgICB9ID0gaGFuZGxlcjtcbiAgICAgIGZuKGRhdGEpO1xuICAgICAgaWYgKG9wdGlvbnMub25jZSkge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUobWV0aG9kKTtcbiAgICAgIH1cbiAgICAgIF9mdWNrQmVuY2htYXJrLmJlbmNobWFyay5zdG9wKGAke21ldGhvZH0g6Kej5Y6L5pe26Ze0YCk7XG4gICAgfSk7XG5cbiAgICAvLyDlrp7pqozmqKHlvI/lj6/og73kvJrlh7rnjrAgd29ya2VyIOiiq+adgOeahOaDheWGte+8jOmcgOimgemHjeaWsOWIm+W7uiB3b3JrZXJcbiAgICB0aGlzLndvcmtlci5vblByb2Nlc3NLaWxsZWQoKCkgPT4ge1xuICAgICAgX2Z1Y2tCZW5jaG1hcmsuYmVuY2htYXJrLmxvZyhcIndvcmtlciBraWxsZWRcIik7XG4gICAgICB0aGlzLmNyZWF0ZVdvcmtlcigpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIOS4i+i9veW5tuWQr+WKqCBXb3JrZXJcbiAgICogQHJldHVybnMgXG4gICAqL1xuICBhc3luYyBvcGVuKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25zdCB0YXNrID0gaGFzLnByZURvd25sb2FkU3VicGFja2FnZSh7XG4gICAgICAgIHBhY2thZ2VUeXBlOiBcIndvcmtlcnNcIixcbiAgICAgICAgc3VjY2VzczogcmVzID0+IHtcbiAgICAgICAgICBfZnVja0JlbmNobWFyay5iZW5jaG1hcmsubG9nKFwibG9hZCB3b3JrZXIgc3VjY2Vzc1wiLCByZXMpO1xuICAgICAgICAgIC8vIOWIm+W7uiB3b3JrZXLjgIIg5aaC5p6cIHdvcmtlciDliIbljIXmsqHkuIvovb3lrozlsLHosIMgY3JlYXRlV29ya2VyIOeahOivneWwhuaKpemUmVxuICAgICAgICAgIHRoaXMuY3JlYXRlV29ya2VyKCk7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9LFxuICAgICAgICBmYWlsOiByZXMgPT4ge1xuICAgICAgICAgIF9mdWNrQmVuY2htYXJrLmJlbmNobWFyay5sb2coXCJsb2FkIHdvcmtlciBmYWlsXCIsIHJlcyk7XG4gICAgICAgICAgcmVqZWN0KHJlcyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgdGFzay5vblByb2dyZXNzVXBkYXRlKHJlcyA9PiB7XG4gICAgICAgIC8vIOWPr+mAmui/hyBvblByb2dyZXNzVXBkYXRlIOaOpeWPo+ebkeWQrOS4i+i9vei/m+W6plxuICAgICAgICBfZnVja0JlbmNobWFyay5iZW5jaG1hcmsubG9nKFwi44CQd29ya2VycyBkb3dubG9hZCBwcm9ncmVzc+OAkVwiLCByZXMucHJvZ3Jlc3MsIHJlcy50b3RhbEJ5dGVzV3JpdHRlbiwgcmVzLnRvdGFsQnl0ZXNFeHBlY3RlZFRvV3JpdGUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICog5LiA5qyh57uR5a6a5LqL5Lu2XG4gICAqIEBwYXJhbSB7Kn0gbWV0aG9kIFxuICAgKiBAcGFyYW0geyp9IGZuIFxuICAgKi9cbiAgb25jZShtZXRob2QsIGZuKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuc2V0KG1ldGhvZCwge1xuICAgICAgZm46IGRhdGEgPT4gZm4gPT09IG51bGwgfHwgZm4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGZuKGRhdGEpLFxuICAgICAgb3B0aW9uczoge1xuICAgICAgICBvbmNlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICog5rC45LmF57uR5a6a5LqL5Lu2XG4gICAqIEBwYXJhbSB7Kn0gbWV0aG9kIFxuICAgKiBAcGFyYW0geyp9IGZuIFxuICAgKi9cbiAgb24obWV0aG9kLCBmbikge1xuICAgIHRoaXMubGlzdGVuZXJzLnNldChtZXRob2QsIHtcbiAgICAgIGZuOiBkYXRhID0+IGZuID09PSBudWxsIHx8IGZuID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmbihkYXRhKSxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgb25jZTogZmFsc2VcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDnp7vpmaTnu5Hlrprkuovku7ZcbiAgICogQHBhcmFtIHsqfSBtZXRob2QgXG4gICAqL1xuICBvZmYobWV0aG9kKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuZGVsZXRlKG1ldGhvZCk7XG4gIH1cblxuICAvKipcbiAgICog6Kem5Y+R5LqL5Lu2XG4gICAqIEBwYXJhbSB7Kn0gbWV0aG9kIFxuICAgKiBAcGFyYW0geyp9IGRhdGEgXG4gICAqL1xuICBlbWl0KG1ldGhvZCwgZGF0YSkge1xuICAgIF9mdWNrQmVuY2htYXJrLmJlbmNobWFyay5zdGFydChgJHttZXRob2R9IOino+WOi+aXtumXtGApO1xuICAgIHRoaXMud29ya2VyLnBvc3RNZXNzYWdlKHtcbiAgICAgIG1ldGhvZCxcbiAgICAgIGRhdGFcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiDlhbPpl60gV29ya2VyXG4gICAqL1xuICBjbG9zZSgpIHtcbiAgICB2YXIgX3RoaXMkd29ya2VyO1xuICAgIHRoaXMubGlzdGVuZXJzLmNsZWFyKCk7XG4gICAgKF90aGlzJHdvcmtlciA9IHRoaXMud29ya2VyKSA9PT0gbnVsbCB8fCBfdGhpcyR3b3JrZXIgPT09IHZvaWQgMCB8fCBfdGhpcyR3b3JrZXIudGVybWluYXRlKCk7XG4gIH1cbn1cbmV4cG9ydHMuRW5oYW5jZWRXb3JrZXIgPSBFbmhhbmNlZFdvcmtlcjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/EnhancedWorker.js\n");

/***/ }),

/***/ "./utils/ReadyGo.js":
/*!**************************!*\
  !*** ./utils/ReadyGo.js ***!
  \**************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nfunction _classPrivateFieldInitSpec(e, t, a) { _checkPrivateRedeclaration(e, t), t.set(e, a); }\nfunction _checkPrivateRedeclaration(e, t) { if (t.has(e)) throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); }\nfunction _classPrivateFieldGet(s, a) { return s.get(_assertClassBrand(s, a)); }\nfunction _classPrivateFieldSet(s, a, r) { return s.set(_assertClassBrand(s, a), r), r; }\nfunction _assertClassBrand(e, t, n) { if (\"function\" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n; throw new TypeError(\"Private element is not present on this object\"); }\nvar _isReady = /*#__PURE__*/new WeakMap();\nvar _list = /*#__PURE__*/new WeakMap();\nclass ReadyGo {\n  constructor() {\n    _classPrivateFieldInitSpec(this, _isReady, void 0);\n    _classPrivateFieldInitSpec(this, _list, void 0);\n    _classPrivateFieldSet(_isReady, this, false);\n    _classPrivateFieldSet(_list, this, new Set());\n  }\n  has() {\n    return _classPrivateFieldGet(_list, this).size !== 0;\n  }\n  ready(callback) {\n    if (_classPrivateFieldGet(_isReady, this)) {\n      callback();\n    } else {\n      _classPrivateFieldGet(_list, this).add(callback);\n    }\n  }\n  go() {\n    _classPrivateFieldSet(_isReady, this, true);\n    _classPrivateFieldGet(_list, this).forEach(callback => callback());\n    _classPrivateFieldSet(_list, this, new Set());\n  }\n  reset() {\n    _classPrivateFieldSet(_isReady, this, false);\n    _classPrivateFieldSet(_list, this, new Set());\n  }\n}\nexports[\"default\"] = ReadyGo;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9SZWFkeUdvLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taW5pcHJvZ3JhbS13ZWFwcC8uL3V0aWxzL1JlYWR5R28uanM/NjUyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbmZ1bmN0aW9uIF9jbGFzc1ByaXZhdGVGaWVsZEluaXRTcGVjKGUsIHQsIGEpIHsgX2NoZWNrUHJpdmF0ZVJlZGVjbGFyYXRpb24oZSwgdCksIHQuc2V0KGUsIGEpOyB9XG5mdW5jdGlvbiBfY2hlY2tQcml2YXRlUmVkZWNsYXJhdGlvbihlLCB0KSB7IGlmICh0LmhhcyhlKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBpbml0aWFsaXplIHRoZSBzYW1lIHByaXZhdGUgZWxlbWVudHMgdHdpY2Ugb24gYW4gb2JqZWN0XCIpOyB9XG5mdW5jdGlvbiBfY2xhc3NQcml2YXRlRmllbGRHZXQocywgYSkgeyByZXR1cm4gcy5nZXQoX2Fzc2VydENsYXNzQnJhbmQocywgYSkpOyB9XG5mdW5jdGlvbiBfY2xhc3NQcml2YXRlRmllbGRTZXQocywgYSwgcikgeyByZXR1cm4gcy5zZXQoX2Fzc2VydENsYXNzQnJhbmQocywgYSksIHIpLCByOyB9XG5mdW5jdGlvbiBfYXNzZXJ0Q2xhc3NCcmFuZChlLCB0LCBuKSB7IGlmIChcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGUgPyBlID09PSB0IDogZS5oYXModCkpIHJldHVybiBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHQgOiBuOyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiUHJpdmF0ZSBlbGVtZW50IGlzIG5vdCBwcmVzZW50IG9uIHRoaXMgb2JqZWN0XCIpOyB9XG52YXIgX2lzUmVhZHkgPSAvKiNfX1BVUkVfXyovbmV3IFdlYWtNYXAoKTtcbnZhciBfbGlzdCA9IC8qI19fUFVSRV9fKi9uZXcgV2Vha01hcCgpO1xuY2xhc3MgUmVhZHlHbyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZEluaXRTcGVjKHRoaXMsIF9pc1JlYWR5LCB2b2lkIDApO1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZEluaXRTcGVjKHRoaXMsIF9saXN0LCB2b2lkIDApO1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZFNldChfaXNSZWFkeSwgdGhpcywgZmFsc2UpO1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZFNldChfbGlzdCwgdGhpcywgbmV3IFNldCgpKTtcbiAgfVxuICBoYXMoKSB7XG4gICAgcmV0dXJuIF9jbGFzc1ByaXZhdGVGaWVsZEdldChfbGlzdCwgdGhpcykuc2l6ZSAhPT0gMDtcbiAgfVxuICByZWFkeShjYWxsYmFjaykge1xuICAgIGlmIChfY2xhc3NQcml2YXRlRmllbGRHZXQoX2lzUmVhZHksIHRoaXMpKSB7XG4gICAgICBjYWxsYmFjaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfY2xhc3NQcml2YXRlRmllbGRHZXQoX2xpc3QsIHRoaXMpLmFkZChjYWxsYmFjayk7XG4gICAgfVxuICB9XG4gIGdvKCkge1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZFNldChfaXNSZWFkeSwgdGhpcywgdHJ1ZSk7XG4gICAgX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KF9saXN0LCB0aGlzKS5mb3JFYWNoKGNhbGxiYWNrID0+IGNhbGxiYWNrKCkpO1xuICAgIF9jbGFzc1ByaXZhdGVGaWVsZFNldChfbGlzdCwgdGhpcywgbmV3IFNldCgpKTtcbiAgfVxuICByZXNldCgpIHtcbiAgICBfY2xhc3NQcml2YXRlRmllbGRTZXQoX2lzUmVhZHksIHRoaXMsIGZhbHNlKTtcbiAgICBfY2xhc3NQcml2YXRlRmllbGRTZXQoX2xpc3QsIHRoaXMsIG5ldyBTZXQoKSk7XG4gIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFJlYWR5R287Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/ReadyGo.js\n");

/***/ }),

/***/ "./utils/constants.js":
/*!****************************!*\
  !*** ./utils/constants.js ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getOneAtRandom = getOneAtRandom;\nexports.yySources = exports.svgaSources = exports.svgaLargeSources = exports.svgaHugeSources = exports.svgaCustomSources = exports.posterSources = void 0;\n// const LOCAL_SVGA_URL = \"http://10.1.131.177:3536/svga\";\nconst LOCAL_SVGA_URL = \"http://192.168.1.29:3536/svga\";\nconst REMOTE_SVGA_URL = 'https://assets.2dfire.com/frontend';\nconst svgaSources = exports.svgaSources = [\"9ce0cce7205fbebba380ed44879e5660.svga\", \"1ddb590515d196f07c411794633e4406.svga\", \"9a96c2c0fbe8ec39f0a192e3e1303d22.svga\", \"c4b3c4f8a05070352e036e869fc58b2f.svga\", \"a14788e60808428413f2b5cf984864b4.svga\", \"53266274807cd8e715c1433de8f400e9.svga\", \"95c40b88e02b1947a745fafaebf28fad.svga\", \"c78088a384285e18d9e9e38299b49e28.svga\", \"4e3768eb16c3ea7bafea3d75f1ff61e0.svga\", \"c06ba39b86a51fef584b4324d5511b8e.svga\", \"58f182116152001e79df1c0c78229e3b.svga\", \"5104feee82c9877c6e297f961010b5b7.svga\", \"6941a7b097a9e0b7bcdc4556c784e9e8.svga\", \"6481dcd75c34604731f1b2e77c02ece7.svga\", \"825015b9418620078ed09fece72d2b9c.svga\", \"ba8d3752c99154d7aa25f8e959cbd102.svga\", \"582d3f48ce07aaf5f12462ec34184021.svga\", \"24b50bd34845b070d051053e9814a658.svga\", \"cae7dd790cc423100372bb8b9de4064f.svga\", \"446179f5d94dd92165e24122f6ee0e13.svga\", \"3af554cafda2c7be95953c661e3a5d8f.svga\", \"a505eba87fabb8988ac920bb4b265cdc.svga\", \"567b81b194546668bb32f783ecae0902.svga\", \"4b3213a4df25d397786016b1bf0e0c01.svga\", \"88bcb99b38a0367866e646db9439437c.svga\", \"a7789d4a7b6e1d88e3a3a451b60eb2a0.svga\", \"ec33f22852725891476961fb62512f0c.svga\", \"0c4ba4b393af35bd0e030f08f48bc5c6.svga\", \"e5466a98c43cef9fae1151d8cf0a4269.svga\", \"56d381d396d5319c80492d2bc77c6fa5.svga\", \"34f8221e7b8a50cb562d7e675deafeb9.svga\", \"059c107da06c599dc49340280bde2bba.svga\", \"73bb57f6697de3069c02d6d9a3f1da63.svga\", \"5048039becf37d1a6ba56256aaf6c5a4.svga\", \"004ffa6820b48816c1ca789a6645e4c8.svga\", \"f922b9de74d15bd2c87c1e4cde5173be.svga\", \"6b9c17410cf3d11732a230174fedc9ad.svga\", \"15895fb79f97705094de089db31f3010.svga\", \"e8e0420a1208962d5a81772bfeb42351.svga\", \"ed15d1b5000314b76016005b5b202b09.svga\", \"23990e59a42fc9977937879e118fccd3.svga\", \"f3f502aa447602ddf3ce08ef9ef58f51.svga\", \"2698b666a73b9f0088271219269d31d4.svga\", \"b5f2308f9afcca6bcbfb18f88f06251f.svga\", \"fea4ce9565e726e1f0f6d1a46f381fe3.svga\", \"870e733803774fd432acbfbd721c1d2c.svga\", \"97e422a1a6a53d12f8d1b01248ef8fae.svga\", \"02ad1a44da1f90ae0c310454637aa8d6.svga\", \"644c8278a0b4638747666c7ea169c337.svga\", \"e3f209a5b492fbbef27343b3a1ebc5dc.svga\", \"c0cb9c1bdcd67ad51f8c8237ae1f746d.svga\", \"46291021b61f2d677f06841b84a443ce.svga\", \"e5ed31cec6b576cd67df0271b69320aa.svga\", \"ad6d6a788bb88520f908bb0fe04a75ca.svga\", \"45eadf03bee2013daa407fd4b91e29f5.svga\"].map(filename => `${REMOTE_SVGA_URL}/${filename}`);\nconst svgaCustomSources = exports.svgaCustomSources = [{\n  filename: \"custom.svga\",\n  replace: {\n    qrcode_001: \"custom_qrcode_001.png\",\n    qrcode_002: \"custom_qrcode_002.png\",\n    bj_001: \"custom_bj_001.png\",\n    bj_002: \"custom_bj_002.png\"\n  }\n}, {\n  filename: \"replace_001.svga\",\n  replace: {\n    qrcode_001: \"replace_001.png\"\n  }\n}, {\n  filename: \"replace_002.svga\",\n  replace: {\n    qrcode_001: \"replace_002.png\"\n  }\n}].map(item => {\n  const {\n    filename,\n    replace\n  } = item;\n  return {\n    filename,\n    url: `${LOCAL_SVGA_URL}/custom/${filename}`,\n    replace: Object.keys(replace).reduce((values, key) => {\n      values[key] = `${LOCAL_SVGA_URL}/custom/${replace[key]}`;\n      return values;\n    }, {})\n  };\n});\nconst svgaLargeSources = exports.svgaLargeSources = [\"frame00.svga\", \"frame01.svga\", \"frame02.svga\", \"frame03.svga\"].map(filename => `${LOCAL_SVGA_URL}/large/${filename}`);\nconst yySources = exports.yySources = [\"angel.svga\", \"EmptyState.svga\", \"halloween.svga\", \"HamburgerArrow.svga\", \"kingset.svga\", \"matteBitmap.svga\", \"matteRect.svga\", \"PinJump.svga\", \"posche.svga\", \"rose.svga\", \"TwitterHeart.svga\", \"Walkthrough.svga\"].map(filename => `${LOCAL_SVGA_URL}/yy/${filename}`);\nconst svgaHugeSources = exports.svgaHugeSources = [\"frame01.svga\", \"frame02.svga\", \"frame03.svga\"].map(filename => `${LOCAL_SVGA_URL}/huge/${filename}`);\nconst posterSources = exports.posterSources = [\"微信认证授权码-纯净版.svga\", \"微信认证授权码.svga\", \"支付宝认证授权码-纯净版.svga\", \"支付宝认证授权码.svga\"].map(filename => `${LOCAL_SVGA_URL}/poster/${filename}`);\nfunction getOneAtRandom(size) {\n  return {\n    ranIndex: Math.floor(Math.random() * size)\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9taW5pcHJvZ3JhbS13ZWFwcC8uL3V0aWxzL2NvbnN0YW50cy5qcz8xODRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXRPbmVBdFJhbmRvbSA9IGdldE9uZUF0UmFuZG9tO1xuZXhwb3J0cy55eVNvdXJjZXMgPSBleHBvcnRzLnN2Z2FTb3VyY2VzID0gZXhwb3J0cy5zdmdhTGFyZ2VTb3VyY2VzID0gZXhwb3J0cy5zdmdhSHVnZVNvdXJjZXMgPSBleHBvcnRzLnN2Z2FDdXN0b21Tb3VyY2VzID0gZXhwb3J0cy5wb3N0ZXJTb3VyY2VzID0gdm9pZCAwO1xuLy8gY29uc3QgTE9DQUxfU1ZHQV9VUkwgPSBcImh0dHA6Ly8xMC4xLjEzMS4xNzc6MzUzNi9zdmdhXCI7XG5jb25zdCBMT0NBTF9TVkdBX1VSTCA9IFwiaHR0cDovLzE5Mi4xNjguMS4yOTozNTM2L3N2Z2FcIjtcbmNvbnN0IFJFTU9URV9TVkdBX1VSTCA9ICdodHRwczovL2Fzc2V0cy4yZGZpcmUuY29tL2Zyb250ZW5kJztcbmNvbnN0IHN2Z2FTb3VyY2VzID0gZXhwb3J0cy5zdmdhU291cmNlcyA9IFtcIjljZTBjY2U3MjA1ZmJlYmJhMzgwZWQ0NDg3OWU1NjYwLnN2Z2FcIiwgXCIxZGRiNTkwNTE1ZDE5NmYwN2M0MTE3OTQ2MzNlNDQwNi5zdmdhXCIsIFwiOWE5NmMyYzBmYmU4ZWMzOWYwYTE5MmUzZTEzMDNkMjIuc3ZnYVwiLCBcImM0YjNjNGY4YTA1MDcwMzUyZTAzNmU4NjlmYzU4YjJmLnN2Z2FcIiwgXCJhMTQ3ODhlNjA4MDg0Mjg0MTNmMmI1Y2Y5ODQ4NjRiNC5zdmdhXCIsIFwiNTMyNjYyNzQ4MDdjZDhlNzE1YzE0MzNkZThmNDAwZTkuc3ZnYVwiLCBcIjk1YzQwYjg4ZTAyYjE5NDdhNzQ1ZmFmYWViZjI4ZmFkLnN2Z2FcIiwgXCJjNzgwODhhMzg0Mjg1ZTE4ZDllOWUzODI5OWI0OWUyOC5zdmdhXCIsIFwiNGUzNzY4ZWIxNmMzZWE3YmFmZWEzZDc1ZjFmZjYxZTAuc3ZnYVwiLCBcImMwNmJhMzliODZhNTFmZWY1ODRiNDMyNGQ1NTExYjhlLnN2Z2FcIiwgXCI1OGYxODIxMTYxNTIwMDFlNzlkZjFjMGM3ODIyOWUzYi5zdmdhXCIsIFwiNTEwNGZlZWU4MmM5ODc3YzZlMjk3Zjk2MTAxMGI1Yjcuc3ZnYVwiLCBcIjY5NDFhN2IwOTdhOWUwYjdiY2RjNDU1NmM3ODRlOWU4LnN2Z2FcIiwgXCI2NDgxZGNkNzVjMzQ2MDQ3MzFmMWIyZTc3YzAyZWNlNy5zdmdhXCIsIFwiODI1MDE1Yjk0MTg2MjAwNzhlZDA5ZmVjZTcyZDJiOWMuc3ZnYVwiLCBcImJhOGQzNzUyYzk5MTU0ZDdhYTI1ZjhlOTU5Y2JkMTAyLnN2Z2FcIiwgXCI1ODJkM2Y0OGNlMDdhYWY1ZjEyNDYyZWMzNDE4NDAyMS5zdmdhXCIsIFwiMjRiNTBiZDM0ODQ1YjA3MGQwNTEwNTNlOTgxNGE2NTguc3ZnYVwiLCBcImNhZTdkZDc5MGNjNDIzMTAwMzcyYmI4YjlkZTQwNjRmLnN2Z2FcIiwgXCI0NDYxNzlmNWQ5NGRkOTIxNjVlMjQxMjJmNmVlMGUxMy5zdmdhXCIsIFwiM2FmNTU0Y2FmZGEyYzdiZTk1OTUzYzY2MWUzYTVkOGYuc3ZnYVwiLCBcImE1MDVlYmE4N2ZhYmI4OTg4YWM5MjBiYjRiMjY1Y2RjLnN2Z2FcIiwgXCI1NjdiODFiMTk0NTQ2NjY4YmIzMmY3ODNlY2FlMDkwMi5zdmdhXCIsIFwiNGIzMjEzYTRkZjI1ZDM5Nzc4NjAxNmIxYmYwZTBjMDEuc3ZnYVwiLCBcIjg4YmNiOTliMzhhMDM2Nzg2NmU2NDZkYjk0Mzk0MzdjLnN2Z2FcIiwgXCJhNzc4OWQ0YTdiNmUxZDg4ZTNhM2E0NTFiNjBlYjJhMC5zdmdhXCIsIFwiZWMzM2YyMjg1MjcyNTg5MTQ3Njk2MWZiNjI1MTJmMGMuc3ZnYVwiLCBcIjBjNGJhNGIzOTNhZjM1YmQwZTAzMGYwOGY0OGJjNWM2LnN2Z2FcIiwgXCJlNTQ2NmE5OGM0M2NlZjlmYWUxMTUxZDhjZjBhNDI2OS5zdmdhXCIsIFwiNTZkMzgxZDM5NmQ1MzE5YzgwNDkyZDJiYzc3YzZmYTUuc3ZnYVwiLCBcIjM0ZjgyMjFlN2I4YTUwY2I1NjJkN2U2NzVkZWFmZWI5LnN2Z2FcIiwgXCIwNTljMTA3ZGEwNmM1OTlkYzQ5MzQwMjgwYmRlMmJiYS5zdmdhXCIsIFwiNzNiYjU3ZjY2OTdkZTMwNjljMDJkNmQ5YTNmMWRhNjMuc3ZnYVwiLCBcIjUwNDgwMzliZWNmMzdkMWE2YmE1NjI1NmFhZjZjNWE0LnN2Z2FcIiwgXCIwMDRmZmE2ODIwYjQ4ODE2YzFjYTc4OWE2NjQ1ZTRjOC5zdmdhXCIsIFwiZjkyMmI5ZGU3NGQxNWJkMmM4N2MxZTRjZGU1MTczYmUuc3ZnYVwiLCBcIjZiOWMxNzQxMGNmM2QxMTczMmEyMzAxNzRmZWRjOWFkLnN2Z2FcIiwgXCIxNTg5NWZiNzlmOTc3MDUwOTRkZTA4OWRiMzFmMzAxMC5zdmdhXCIsIFwiZThlMDQyMGExMjA4OTYyZDVhODE3NzJiZmViNDIzNTEuc3ZnYVwiLCBcImVkMTVkMWI1MDAwMzE0Yjc2MDE2MDA1YjViMjAyYjA5LnN2Z2FcIiwgXCIyMzk5MGU1OWE0MmZjOTk3NzkzNzg3OWUxMThmY2NkMy5zdmdhXCIsIFwiZjNmNTAyYWE0NDc2MDJkZGYzY2UwOGVmOWVmNThmNTEuc3ZnYVwiLCBcIjI2OThiNjY2YTczYjlmMDA4ODI3MTIxOTI2OWQzMWQ0LnN2Z2FcIiwgXCJiNWYyMzA4ZjlhZmNjYTZiY2JmYjE4Zjg4ZjA2MjUxZi5zdmdhXCIsIFwiZmVhNGNlOTU2NWU3MjZlMWYwZjZkMWE0NmYzODFmZTMuc3ZnYVwiLCBcIjg3MGU3MzM4MDM3NzRmZDQzMmFjYmZiZDcyMWMxZDJjLnN2Z2FcIiwgXCI5N2U0MjJhMWE2YTUzZDEyZjhkMWIwMTI0OGVmOGZhZS5zdmdhXCIsIFwiMDJhZDFhNDRkYTFmOTBhZTBjMzEwNDU0NjM3YWE4ZDYuc3ZnYVwiLCBcIjY0NGM4Mjc4YTBiNDYzODc0NzY2NmM3ZWExNjljMzM3LnN2Z2FcIiwgXCJlM2YyMDlhNWI0OTJmYmJlZjI3MzQzYjNhMWViYzVkYy5zdmdhXCIsIFwiYzBjYjljMWJkY2Q2N2FkNTFmOGM4MjM3YWUxZjc0NmQuc3ZnYVwiLCBcIjQ2MjkxMDIxYjYxZjJkNjc3ZjA2ODQxYjg0YTQ0M2NlLnN2Z2FcIiwgXCJlNWVkMzFjZWM2YjU3NmNkNjdkZjAyNzFiNjkzMjBhYS5zdmdhXCIsIFwiYWQ2ZDZhNzg4YmI4ODUyMGY5MDhiYjBmZTA0YTc1Y2Euc3ZnYVwiLCBcIjQ1ZWFkZjAzYmVlMjAxM2RhYTQwN2ZkNGI5MWUyOWY1LnN2Z2FcIl0ubWFwKGZpbGVuYW1lID0+IGAke1JFTU9URV9TVkdBX1VSTH0vJHtmaWxlbmFtZX1gKTtcbmNvbnN0IHN2Z2FDdXN0b21Tb3VyY2VzID0gZXhwb3J0cy5zdmdhQ3VzdG9tU291cmNlcyA9IFt7XG4gIGZpbGVuYW1lOiBcImN1c3RvbS5zdmdhXCIsXG4gIHJlcGxhY2U6IHtcbiAgICBxcmNvZGVfMDAxOiBcImN1c3RvbV9xcmNvZGVfMDAxLnBuZ1wiLFxuICAgIHFyY29kZV8wMDI6IFwiY3VzdG9tX3FyY29kZV8wMDIucG5nXCIsXG4gICAgYmpfMDAxOiBcImN1c3RvbV9ial8wMDEucG5nXCIsXG4gICAgYmpfMDAyOiBcImN1c3RvbV9ial8wMDIucG5nXCJcbiAgfVxufSwge1xuICBmaWxlbmFtZTogXCJyZXBsYWNlXzAwMS5zdmdhXCIsXG4gIHJlcGxhY2U6IHtcbiAgICBxcmNvZGVfMDAxOiBcInJlcGxhY2VfMDAxLnBuZ1wiXG4gIH1cbn0sIHtcbiAgZmlsZW5hbWU6IFwicmVwbGFjZV8wMDIuc3ZnYVwiLFxuICByZXBsYWNlOiB7XG4gICAgcXJjb2RlXzAwMTogXCJyZXBsYWNlXzAwMi5wbmdcIlxuICB9XG59XS5tYXAoaXRlbSA9PiB7XG4gIGNvbnN0IHtcbiAgICBmaWxlbmFtZSxcbiAgICByZXBsYWNlXG4gIH0gPSBpdGVtO1xuICByZXR1cm4ge1xuICAgIGZpbGVuYW1lLFxuICAgIHVybDogYCR7TE9DQUxfU1ZHQV9VUkx9L2N1c3RvbS8ke2ZpbGVuYW1lfWAsXG4gICAgcmVwbGFjZTogT2JqZWN0LmtleXMocmVwbGFjZSkucmVkdWNlKCh2YWx1ZXMsIGtleSkgPT4ge1xuICAgICAgdmFsdWVzW2tleV0gPSBgJHtMT0NBTF9TVkdBX1VSTH0vY3VzdG9tLyR7cmVwbGFjZVtrZXldfWA7XG4gICAgICByZXR1cm4gdmFsdWVzO1xuICAgIH0sIHt9KVxuICB9O1xufSk7XG5jb25zdCBzdmdhTGFyZ2VTb3VyY2VzID0gZXhwb3J0cy5zdmdhTGFyZ2VTb3VyY2VzID0gW1wiZnJhbWUwMC5zdmdhXCIsIFwiZnJhbWUwMS5zdmdhXCIsIFwiZnJhbWUwMi5zdmdhXCIsIFwiZnJhbWUwMy5zdmdhXCJdLm1hcChmaWxlbmFtZSA9PiBgJHtMT0NBTF9TVkdBX1VSTH0vbGFyZ2UvJHtmaWxlbmFtZX1gKTtcbmNvbnN0IHl5U291cmNlcyA9IGV4cG9ydHMueXlTb3VyY2VzID0gW1wiYW5nZWwuc3ZnYVwiLCBcIkVtcHR5U3RhdGUuc3ZnYVwiLCBcImhhbGxvd2Vlbi5zdmdhXCIsIFwiSGFtYnVyZ2VyQXJyb3cuc3ZnYVwiLCBcImtpbmdzZXQuc3ZnYVwiLCBcIm1hdHRlQml0bWFwLnN2Z2FcIiwgXCJtYXR0ZVJlY3Quc3ZnYVwiLCBcIlBpbkp1bXAuc3ZnYVwiLCBcInBvc2NoZS5zdmdhXCIsIFwicm9zZS5zdmdhXCIsIFwiVHdpdHRlckhlYXJ0LnN2Z2FcIiwgXCJXYWxrdGhyb3VnaC5zdmdhXCJdLm1hcChmaWxlbmFtZSA9PiBgJHtMT0NBTF9TVkdBX1VSTH0veXkvJHtmaWxlbmFtZX1gKTtcbmNvbnN0IHN2Z2FIdWdlU291cmNlcyA9IGV4cG9ydHMuc3ZnYUh1Z2VTb3VyY2VzID0gW1wiZnJhbWUwMS5zdmdhXCIsIFwiZnJhbWUwMi5zdmdhXCIsIFwiZnJhbWUwMy5zdmdhXCJdLm1hcChmaWxlbmFtZSA9PiBgJHtMT0NBTF9TVkdBX1VSTH0vaHVnZS8ke2ZpbGVuYW1lfWApO1xuY29uc3QgcG9zdGVyU291cmNlcyA9IGV4cG9ydHMucG9zdGVyU291cmNlcyA9IFtcIuW+ruS/oeiupOivgeaOiOadg+eggS3nuq/lh4DniYguc3ZnYVwiLCBcIuW+ruS/oeiupOivgeaOiOadg+eggS5zdmdhXCIsIFwi5pSv5LuY5a6d6K6k6K+B5o6I5p2D56CBLee6r+WHgOeJiC5zdmdhXCIsIFwi5pSv5LuY5a6d6K6k6K+B5o6I5p2D56CBLnN2Z2FcIl0ubWFwKGZpbGVuYW1lID0+IGAke0xPQ0FMX1NWR0FfVVJMfS9wb3N0ZXIvJHtmaWxlbmFtZX1gKTtcbmZ1bmN0aW9uIGdldE9uZUF0UmFuZG9tKHNpemUpIHtcbiAgcmV0dXJuIHtcbiAgICByYW5JbmRleDogTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogc2l6ZSlcbiAgfTtcbn0iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/constants.js\n");

/***/ }),

/***/ "./utils/fuck-benchmark.js":
/*!*********************************!*\
  !*** ./utils/fuck-benchmark.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\n(function (g, f) {\n   true ? f(exports) : 0;\n})(void 0, function (exports) {\n  'use strict';\n\n  function _arrayLikeToArray(r, a) {\n    (null == a || a > r.length) && (a = r.length);\n    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n    return n;\n  }\n  function _assertThisInitialized(e) {\n    if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return e;\n  }\n  function asyncGeneratorStep(n, t, e, r, o, a, c) {\n    try {\n      var i = n[a](c),\n        u = i.value;\n    } catch (n) {\n      return void e(n);\n    }\n    i.done ? t(u) : Promise.resolve(u).then(r, o);\n  }\n  function _asyncToGenerator(n) {\n    return function () {\n      var t = this,\n        e = arguments;\n      return new Promise(function (r, o) {\n        var a = n.apply(t, e);\n        function _next(n) {\n          asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n        }\n        function _throw(n) {\n          asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n        }\n        _next(void 0);\n      });\n    };\n  }\n  function _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n  }\n  function _classCallCheck(a, n) {\n    if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function _defineProperties(e, r) {\n    for (var t = 0; t < r.length; t++) {\n      var o = r[t];\n      o.enumerable = o.enumerable || false, o.configurable = true, \"value\" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);\n    }\n  }\n  function _createClass(e, r, t) {\n    return r && _defineProperties(e.prototype, r), Object.defineProperty(e, \"prototype\", {\n      writable: false\n    }), e;\n  }\n  function _createForOfIteratorHelper(r, e) {\n    var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (!t) {\n      if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {\n        t && (r = t);\n        var n = 0,\n          F = function () {};\n        return {\n          s: F,\n          n: function () {\n            return n >= r.length ? {\n              done: true\n            } : {\n              done: false,\n              value: r[n++]\n            };\n          },\n          e: function (r) {\n            throw r;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var o,\n      a = true,\n      u = false;\n    return {\n      s: function () {\n        t = t.call(r);\n      },\n      n: function () {\n        var r = t.next();\n        return a = r.done, r;\n      },\n      e: function (r) {\n        u = true, o = r;\n      },\n      f: function () {\n        try {\n          a || null == t.return || t.return();\n        } finally {\n          if (u) throw o;\n        }\n      }\n    };\n  }\n  function _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n      value: t,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    }) : e[r] = t, e;\n  }\n  function _getPrototypeOf(t) {\n    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n      return t.__proto__ || Object.getPrototypeOf(t);\n    }, _getPrototypeOf(t);\n  }\n  function _inherits(t, e) {\n    if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n    t.prototype = Object.create(e && e.prototype, {\n      constructor: {\n        value: t,\n        writable: true,\n        configurable: true\n      }\n    }), Object.defineProperty(t, \"prototype\", {\n      writable: false\n    }), e && _setPrototypeOf(t, e);\n  }\n  function _isNativeReflectConstruct() {\n    try {\n      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function () {\n      return !!t;\n    })();\n  }\n  function _possibleConstructorReturn(t, e) {\n    if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n    if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n    return _assertThisInitialized(t);\n  }\n  function _regenerator() {\n    /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */\n    var e,\n      t,\n      r = \"function\" == typeof Symbol ? Symbol : {},\n      n = r.iterator || \"@@iterator\",\n      o = r.toStringTag || \"@@toStringTag\";\n    function i(r, n, o, i) {\n      var c = n && n.prototype instanceof Generator ? n : Generator,\n        u = Object.create(c.prototype);\n      return _regeneratorDefine(u, \"_invoke\", function (r, n, o) {\n        var i,\n          c,\n          u,\n          f = 0,\n          p = o || [],\n          y = false,\n          G = {\n            p: 0,\n            n: 0,\n            v: e,\n            a: d,\n            f: d.bind(e, 4),\n            d: function (t, r) {\n              return i = t, c = 0, u = e, G.n = r, a;\n            }\n          };\n        function d(r, n) {\n          for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) {\n            var o,\n              i = p[t],\n              d = G.p,\n              l = i[2];\n            r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0));\n          }\n          if (o || r > 1) return a;\n          throw y = true, n;\n        }\n        return function (o, p, l) {\n          if (f > 1) throw TypeError(\"Generator is already running\");\n          for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) {\n            i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u);\n            try {\n              if (f = 2, i) {\n                if (c || (o = \"next\"), t = i[o]) {\n                  if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\");\n                  if (!t.done) return t;\n                  u = t.value, c < 2 && (c = 0);\n                } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1);\n                i = e;\n              } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break;\n            } catch (t) {\n              i = e, c = 1, u = t;\n            } finally {\n              f = 1;\n            }\n          }\n          return {\n            value: t,\n            done: y\n          };\n        };\n      }(r, o, i), true), u;\n    }\n    var a = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    t = Object.getPrototypeOf;\n    var c = [][n] ? t(t([][n]())) : (_regeneratorDefine(t = {}, n, function () {\n        return this;\n      }), t),\n      u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c);\n    function f(e) {\n      return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e;\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine(u), _regeneratorDefine(u, o, \"Generator\"), _regeneratorDefine(u, n, function () {\n      return this;\n    }), _regeneratorDefine(u, \"toString\", function () {\n      return \"[object Generator]\";\n    }), (_regenerator = function () {\n      return {\n        w: i,\n        m: f\n      };\n    })();\n  }\n  function _regeneratorDefine(e, r, n, t) {\n    var i = Object.defineProperty;\n    try {\n      i({}, \"\", {});\n    } catch (e) {\n      i = 0;\n    }\n    _regeneratorDefine = function (e, r, n, t) {\n      if (r) i ? i(e, r, {\n        value: n,\n        enumerable: !t,\n        configurable: !t,\n        writable: !t\n      }) : e[r] = n;else {\n        function o(r, n) {\n          _regeneratorDefine(e, r, function (e) {\n            return this._invoke(r, n, e);\n          });\n        }\n        o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2);\n      }\n    }, _regeneratorDefine(e, r, n, t);\n  }\n  function _setPrototypeOf(t, e) {\n    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n      return t.__proto__ = e, t;\n    }, _setPrototypeOf(t, e);\n  }\n  function _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n      var i = e.call(t, r);\n      if (\"object\" != typeof i) return i;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return String(t);\n  }\n  function _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n  }\n  function _unsupportedIterableToArray(r, a) {\n    if (r) {\n      if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n      var t = {}.toString.call(r).slice(8, -1);\n      return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n    }\n  } /******************************************************************************\n    Copyright (c) Microsoft Corporation.\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n  /* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n  typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n  };\n  var noop = function noop() {};\n  function delay(callback, interval) {\n    return new Promise(function (resolve) {\n      return setTimeout(function () {\n        return resolve(callback());\n      }, interval);\n    });\n  }\n  function retry(_x) {\n    return _retry.apply(this, arguments);\n  } // 使用静态缓冲区，避免重复创建\n  function _retry() {\n    _retry = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(fn) {\n      var intervals,\n        times,\n        _args4 = arguments,\n        _t5;\n      return _regenerator().w(function (_context4) {\n        while (1) switch (_context4.p = _context4.n) {\n          case 0:\n            intervals = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : [];\n            times = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 0;\n            _context4.p = 1;\n            return _context4.a(2, fn());\n          case 2:\n            _context4.p = 2;\n            _t5 = _context4.v;\n            if (!(times >= intervals.length)) {\n              _context4.n = 3;\n              break;\n            }\n            throw _t5;\n          case 3:\n            return _context4.a(2, delay(function () {\n              return retry(fn, intervals, ++times);\n            }, intervals[times]));\n        }\n      }, _callee4, null, [[1, 2]]);\n    }));\n    return _retry.apply(this, arguments);\n  }\n  var OctopusPlatform = /*#__PURE__*/function () {\n    function OctopusPlatform(plugins, version) {\n      _classCallCheck(this, OctopusPlatform);\n      /**\n       * 插件列表\n       */\n      _defineProperty(this, \"plugins\", []);\n      /**\n       * 平台版本\n       */\n      _defineProperty(this, \"platformVersion\", \"0.1.3\");\n      /**\n       * 应用版本\n       */\n      _defineProperty(this, \"version\", \"\");\n      /**\n       * 全局变量\n       */\n      _defineProperty(this, \"globals\", {\n        env: \"unknown\",\n        br: null,\n        dpr: 1,\n        system: \"\"\n      });\n      _defineProperty(this, \"noop\", noop);\n      _defineProperty(this, \"retry\", retry);\n      this.version = version || \"\";\n      this.plugins = plugins;\n      this.globals.env = this.autoEnv();\n    }\n    return _createClass(OctopusPlatform, [{\n      key: \"init\",\n      value: function init() {\n        var globals = this.globals,\n          plugins = this.plugins;\n        var collection = new Map();\n        var names = [];\n        var installedPlugins = new Set();\n        globals.br = this.useBridge();\n        globals.dpr = this.usePixelRatio();\n        globals.system = this.useSystem();\n        var _iterator = _createForOfIteratorHelper(plugins),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var plugin = _step.value;\n            names.push(plugin.name);\n            collection.set(plugin.name, plugin);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this.usePlugins(collection, names, installedPlugins);\n        installedPlugins.clear();\n      }\n    }, {\n      key: \"autoEnv\",\n      value: function autoEnv() {\n        if (typeof window !== \"undefined\") {\n          return \"h5\";\n        }\n        // FIXME：由于抖音场景支持wx对象，所以需要放在wx对象之前检查\n        if (typeof tt !== \"undefined\") {\n          return \"tt\";\n        }\n        if (typeof my !== \"undefined\") {\n          return \"alipay\";\n        }\n        if (typeof wx !== \"undefined\") {\n          return \"weapp\";\n        }\n        if (typeof has !== \"undefined\") {\n          return \"harmony\";\n        }\n        throw new Error(\"Unsupported platform！\");\n      }\n    }, {\n      key: \"useBridge\",\n      value: function useBridge() {\n        switch (this.globals.env) {\n          case \"alipay\":\n            return my;\n          case \"tt\":\n            return tt;\n          case \"weapp\":\n            return wx;\n        }\n        return globalThis;\n      }\n    }, {\n      key: \"usePixelRatio\",\n      value: function usePixelRatio() {\n        var _this$globals = this.globals,\n          env = _this$globals.env,\n          br = _this$globals.br;\n        if (env === \"h5\") {\n          return devicePixelRatio;\n        }\n        if (\"getWindowInfo\" in br) {\n          return br.getWindowInfo().pixelRatio;\n        }\n        if (\"getSystemInfoSync\" in br) {\n          return br.getSystemInfoSync().pixelRatio;\n        }\n        return 1;\n      }\n    }, {\n      key: \"useSystem\",\n      value: function useSystem() {\n        var env = this.globals.env;\n        var system;\n        switch (env) {\n          case \"weapp\":\n            system = wx.getDeviceInfo().platform;\n            break;\n          case \"alipay\":\n            system = my.getDeviceBaseInfo().platform;\n            break;\n          case \"tt\":\n            system = has.getDeviceInfoSync().platform;\n            break;\n          case \"harmony\":\n            system = has.getSystemInfoSync().platform;\n            break;\n          case \"h5\":\n            if (\"userAgentData\" in navigator) {\n              // @ts-ignore\n              system = navigator.userAgentData.platform;\n            } else {\n              var UA = navigator.userAgent;\n              if (/(Android|Adr)/i.test(UA)) {\n                system = \"android\";\n              } else if (/\\(i[^;]+;( U;)? CPU.+Mac OS X/i.test(UA)) {\n                system = \"ios\";\n              } else if (/HarmonyOS/i.test(UA)) {\n                system = \"harmony\";\n              } else {\n                system = \"unknown\";\n              }\n            }\n            break;\n          default:\n            system = \"unknown\";\n        }\n        return system.toLowerCase();\n      }\n    }, {\n      key: \"usePlugins\",\n      value: function usePlugins(plugins, pluginNames, installedPlugins) {\n        var _iterator2 = _createForOfIteratorHelper(pluginNames),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var pluginName = _step2.value;\n            if (!plugins.has(pluginName)) {\n              throw new Error(\"Plugin \".concat(pluginName, \" not found\"));\n            }\n            if (installedPlugins.has(pluginName)) {\n              return;\n            }\n            var plugin = plugins.get(pluginName);\n            // 递归调用依赖\n            if (Array.isArray(plugin.dependencies)) {\n              var _iterator3 = _createForOfIteratorHelper(plugin.dependencies),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var _plugins$get;\n                  var dependency = _step3.value;\n                  if (typeof ((_plugins$get = plugins.get(dependency)) === null || _plugins$get === void 0 ? void 0 : _plugins$get.install) !== \"function\") {\n                    throw new Error(\"Plugin \".concat(pluginName, \" depends on plugin \").concat(dependency, \", but \").concat(dependency, \" is not found\"));\n                  }\n                }\n                // 递归加载依赖\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              this.usePlugins(plugins, plugin.dependencies, installedPlugins);\n            }\n            this.installPlugin(plugin);\n            installedPlugins.add(pluginName);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }, {\n      key: \"switch\",\n      value: function _switch(env) {\n        this.globals.env = env;\n        this.init();\n      }\n    }]);\n  }();\n  /**\n   * 定义平台插件\n   */\n  var definePlugin = function definePlugin(plugin) {\n    return plugin;\n  };\n  function installPlugin(platform, plugin) {\n    var value = plugin.install.call(platform);\n    Object.defineProperty(platform, plugin.name, {\n      get: function get() {\n        return value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  var pluginNow = definePlugin({\n    name: \"now\",\n    install: function install() {\n      var _this$globals7 = this.globals,\n        env = _this$globals7.env,\n        br = _this$globals7.br;\n      // performance可以提供更高精度的时间测量，且不受系统时间的调整（如更改系统时间或同步时间）的影响\n      var perf = env === \"h5\" || env === \"tt\" ? performance : br.getPerformance();\n      if (typeof (perf === null || perf === void 0 ? void 0 : perf.now) === \"function\") {\n        // 支付宝小程序的performance.now()获取的是当前时间戳，单位是微秒。\n        if (perf.now() - Date.now() > 1) {\n          return function () {\n            return perf.now() / 1000;\n          };\n        }\n        // H5环境下，performance.now()获取的不是当前时间戳，而是从页面加载开始的时间戳，单位是毫秒。\n        return function () {\n          return perf.now();\n        };\n      }\n      return function () {\n        return Date.now();\n      };\n    }\n  });\n  var EnhancedPlatform = /*#__PURE__*/function (_OctopusPlatform) {\n    function EnhancedPlatform() {\n      var _this;\n      _classCallCheck(this, EnhancedPlatform);\n      _this = _callSuper(this, EnhancedPlatform, [[pluginNow], \"1.1.1\"]);\n      _this.init();\n      return _this;\n    }\n    _inherits(EnhancedPlatform, _OctopusPlatform);\n    return _createClass(EnhancedPlatform, [{\n      key: \"installPlugin\",\n      value: function installPlugin$1(plugin) {\n        installPlugin(this, plugin);\n      }\n    }]);\n  }(OctopusPlatform);\n  var platform = new EnhancedPlatform();\n  var logBadge = [\"%cBENCHMARK\", \"padding: 2px 4px; background: #68B984; color: #FFFFFF; border-radius: 4px;\"];\n  var infoBadge = [\"%cBENCHMARK\", \"padding: 2px 4px; background: #89CFF0; color: #FFFFFF; border-radius: 4px;\"];\n  var Stopwatch = /*#__PURE__*/function () {\n    function Stopwatch() {\n      _classCallCheck(this, Stopwatch);\n      this.timeLabels = new Map();\n      this.markLabels = new Map();\n    }\n    return _createClass(Stopwatch, [{\n      key: \"start\",\n      value: function start(label) {\n        this.timeLabels.set(label, platform.now());\n      }\n    }, {\n      key: \"stop\",\n      value: function stop(label) {\n        var nowTime = platform.now();\n        var timeLabels = this.timeLabels;\n        if (timeLabels.has(label)) {\n          console.log(\"\".concat(label, \": \").concat(nowTime - timeLabels.get(label), \" ms\"));\n          timeLabels.delete(label);\n        }\n      }\n    }, {\n      key: \"mark\",\n      value: function mark(label) {\n        var nowTime = platform.now();\n        var markLabels = this.markLabels;\n        if (markLabels.has(label)) {\n          console.log(\"\".concat(label, \": \").concat(nowTime - markLabels.get(label), \" ms\"));\n        }\n        markLabels.set(label, nowTime);\n      }\n    }, {\n      key: \"reset\",\n      value: function reset(label) {\n        this.markLabels.delete(label);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this.timeLabels.clear();\n        this.markLabels.clear();\n      }\n    }]);\n  }();\n  var stopwatch = new Stopwatch();\n  var benchmark = Object.create(stopwatch);\n  benchmark.now = function () {\n    return platform.now();\n  };\n  benchmark.time = function (label, callback) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee() {\n      var result;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            stopwatch.start(label);\n            _context.n = 1;\n            return callback();\n          case 1:\n            result = _context.v;\n            stopwatch.stop(label);\n            return _context.a(2, result);\n        }\n      }, _callee);\n    }));\n  };\n  benchmark.line = function () {\n    var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 40;\n    console.log(\"-\".repeat(size));\n  };\n  benchmark.log = function () {\n    var _console;\n    for (var _len = arguments.length, message = new Array(_len), _key = 0; _key < _len; _key++) {\n      message[_key] = arguments[_key];\n    }\n    (_console = console).log.apply(_console, logBadge.concat(message));\n  };\n  benchmark.info = function () {\n    var _console2;\n    for (var _len2 = arguments.length, message = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      message[_key2] = arguments[_key2];\n    }\n    (_console2 = console).info.apply(_console2, infoBadge.concat(message));\n  };\n  exports.benchmark = benchmark;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/fuck-benchmark.js\n");

/***/ }),

/***/ "./utils/fuck-svga.js":
/*!****************************!*\
  !*** ./utils/fuck-svga.js ***!
  \****************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\n(function (g, f) {\n   true ? f(exports) : 0;\n})(void 0, function (exports) {\n  'use strict';\n\n  function _arrayLikeToArray(r, a) {\n    (null == a || a > r.length) && (a = r.length);\n    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n    return n;\n  }\n  function _arrayWithHoles(r) {\n    if (Array.isArray(r)) return r;\n  }\n  function _assertThisInitialized(e) {\n    if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return e;\n  }\n  function asyncGeneratorStep(n, t, e, r, o, a, c) {\n    try {\n      var i = n[a](c),\n        u = i.value;\n    } catch (n) {\n      return void e(n);\n    }\n    i.done ? t(u) : Promise.resolve(u).then(r, o);\n  }\n  function _asyncToGenerator(n) {\n    return function () {\n      var t = this,\n        e = arguments;\n      return new Promise(function (r, o) {\n        var a = n.apply(t, e);\n        function _next(n) {\n          asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n        }\n        function _throw(n) {\n          asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n        }\n        _next(void 0);\n      });\n    };\n  }\n  function _callSuper(t, o, e) {\n    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n  }\n  function _classCallCheck(a, n) {\n    if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function _defineProperties(e, r) {\n    for (var t = 0; t < r.length; t++) {\n      var o = r[t];\n      o.enumerable = o.enumerable || false, o.configurable = true, \"value\" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);\n    }\n  }\n  function _createClass(e, r, t) {\n    return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n      writable: false\n    }), e;\n  }\n  function _createForOfIteratorHelper(r, e) {\n    var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (!t) {\n      if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {\n        t && (r = t);\n        var n = 0,\n          F = function () {};\n        return {\n          s: F,\n          n: function () {\n            return n >= r.length ? {\n              done: true\n            } : {\n              done: false,\n              value: r[n++]\n            };\n          },\n          e: function (r) {\n            throw r;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var o,\n      a = true,\n      u = false;\n    return {\n      s: function () {\n        t = t.call(r);\n      },\n      n: function () {\n        var r = t.next();\n        return a = r.done, r;\n      },\n      e: function (r) {\n        u = true, o = r;\n      },\n      f: function () {\n        try {\n          a || null == t.return || t.return();\n        } finally {\n          if (u) throw o;\n        }\n      }\n    };\n  }\n  function _defineProperty(e, r, t) {\n    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n      value: t,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    }) : e[r] = t, e;\n  }\n  function _getPrototypeOf(t) {\n    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n      return t.__proto__ || Object.getPrototypeOf(t);\n    }, _getPrototypeOf(t);\n  }\n  function _inherits(t, e) {\n    if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n    t.prototype = Object.create(e && e.prototype, {\n      constructor: {\n        value: t,\n        writable: true,\n        configurable: true\n      }\n    }), Object.defineProperty(t, \"prototype\", {\n      writable: false\n    }), e && _setPrototypeOf(t, e);\n  }\n  function _isNativeReflectConstruct() {\n    try {\n      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function () {\n      return !!t;\n    })();\n  }\n  function _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n      var e,\n        n,\n        i,\n        u,\n        a = [],\n        f = true,\n        o = false;\n      try {\n        if (i = (t = t.call(r)).next, 0 === l) {\n          if (Object(t) !== t) return;\n          f = !1;\n        } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n      } catch (r) {\n        o = true, n = r;\n      } finally {\n        try {\n          if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n        } finally {\n          if (o) throw n;\n        }\n      }\n      return a;\n    }\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n      var o = Object.getOwnPropertySymbols(e);\n      r && (o = o.filter(function (r) {\n        return Object.getOwnPropertyDescriptor(e, r).enumerable;\n      })), t.push.apply(t, o);\n    }\n    return t;\n  }\n  function _objectSpread2(e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = null != arguments[r] ? arguments[r] : {};\n      r % 2 ? ownKeys(Object(t), true).forEach(function (r) {\n        _defineProperty(e, r, t[r]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n      });\n    }\n    return e;\n  }\n  function _possibleConstructorReturn(t, e) {\n    if (e && (\"object\" == typeof e || \"function\" == typeof e)) return e;\n    if (void 0 !== e) throw new TypeError(\"Derived constructors may only return object or undefined\");\n    return _assertThisInitialized(t);\n  }\n  function _regenerator() {\n    /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */\n    var e,\n      t,\n      r = \"function\" == typeof Symbol ? Symbol : {},\n      n = r.iterator || \"@@iterator\",\n      o = r.toStringTag || \"@@toStringTag\";\n    function i(r, n, o, i) {\n      var c = n && n.prototype instanceof Generator ? n : Generator,\n        u = Object.create(c.prototype);\n      return _regeneratorDefine(u, \"_invoke\", function (r, n, o) {\n        var i,\n          c,\n          u,\n          f = 0,\n          p = o || [],\n          y = false,\n          G = {\n            p: 0,\n            n: 0,\n            v: e,\n            a: d,\n            f: d.bind(e, 4),\n            d: function (t, r) {\n              return i = t, c = 0, u = e, G.n = r, a;\n            }\n          };\n        function d(r, n) {\n          for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) {\n            var o,\n              i = p[t],\n              d = G.p,\n              l = i[2];\n            r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0));\n          }\n          if (o || r > 1) return a;\n          throw y = true, n;\n        }\n        return function (o, p, l) {\n          if (f > 1) throw TypeError(\"Generator is already running\");\n          for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) {\n            i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u);\n            try {\n              if (f = 2, i) {\n                if (c || (o = \"next\"), t = i[o]) {\n                  if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\");\n                  if (!t.done) return t;\n                  u = t.value, c < 2 && (c = 0);\n                } else 1 === c && (t = i.return) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1);\n                i = e;\n              } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break;\n            } catch (t) {\n              i = e, c = 1, u = t;\n            } finally {\n              f = 1;\n            }\n          }\n          return {\n            value: t,\n            done: y\n          };\n        };\n      }(r, o, i), true), u;\n    }\n    var a = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    t = Object.getPrototypeOf;\n    var c = [][n] ? t(t([][n]())) : (_regeneratorDefine(t = {}, n, function () {\n        return this;\n      }), t),\n      u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c);\n    function f(e) {\n      return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e;\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine(u), _regeneratorDefine(u, o, \"Generator\"), _regeneratorDefine(u, n, function () {\n      return this;\n    }), _regeneratorDefine(u, \"toString\", function () {\n      return \"[object Generator]\";\n    }), (_regenerator = function () {\n      return {\n        w: i,\n        m: f\n      };\n    })();\n  }\n  function _regeneratorDefine(e, r, n, t) {\n    var i = Object.defineProperty;\n    try {\n      i({}, \"\", {});\n    } catch (e) {\n      i = 0;\n    }\n    _regeneratorDefine = function (e, r, n, t) {\n      if (r) i ? i(e, r, {\n        value: n,\n        enumerable: !t,\n        configurable: !t,\n        writable: !t\n      }) : e[r] = n;else {\n        function o(r, n) {\n          _regeneratorDefine(e, r, function (e) {\n            return this._invoke(r, n, e);\n          });\n        }\n        o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2);\n      }\n    }, _regeneratorDefine(e, r, n, t);\n  }\n  function _setPrototypeOf(t, e) {\n    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n      return t.__proto__ = e, t;\n    }, _setPrototypeOf(t, e);\n  }\n  function _slicedToArray(r, e) {\n    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n  }\n  function _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n      var i = e.call(t, r);\n      if (\"object\" != typeof i) return i;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return String(t);\n  }\n  function _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n  }\n  function _unsupportedIterableToArray(r, a) {\n    if (r) {\n      if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n      var t = {}.toString.call(r).slice(8, -1);\n      return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n    }\n  } /******************************************************************************\n    Copyright (c) Microsoft Corporation.\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n  /* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\n  function __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function (resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  }\n  typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n  };\n  var noop$1 = function noop() {};\n  function delay(callback, interval) {\n    return new Promise(function (resolve) {\n      return setTimeout(function () {\n        return resolve(callback());\n      }, interval);\n    });\n  }\n  function retry(_x) {\n    return _retry.apply(this, arguments);\n  } // 使用静态缓冲区，避免重复创建\n  function _retry() {\n    _retry = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(fn) {\n      var intervals,\n        times,\n        _args4 = arguments,\n        _t5;\n      return _regenerator().w(function (_context4) {\n        while (1) switch (_context4.p = _context4.n) {\n          case 0:\n            intervals = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : [];\n            times = _args4.length > 2 && _args4[2] !== undefined ? _args4[2] : 0;\n            _context4.p = 1;\n            return _context4.a(2, fn());\n          case 2:\n            _context4.p = 2;\n            _t5 = _context4.v;\n            if (!(times >= intervals.length)) {\n              _context4.n = 3;\n              break;\n            }\n            throw _t5;\n          case 3:\n            return _context4.a(2, delay(function () {\n              return retry(fn, intervals, ++times);\n            }, intervals[times]));\n        }\n      }, _callee4, null, [[1, 2]]);\n    }));\n    return _retry.apply(this, arguments);\n  }\n  var BUFFER_SIZE = 4096; // 更大的缓冲区，减少字符串拼接次数\n  var STATIC_BUFFER = new Uint16Array(BUFFER_SIZE); // 预分配ASCII缓冲区\n  /**\n   * 优化的 UTF-8 解码函数\n   * 主要优化点：\n   * 1. 使用静态缓冲区减少内存分配\n   * 2. 批量处理 ASCII 字符\n   * 3. 优化循环结构和条件判断\n   * 4. 使用 Uint16Array 代替普通数组提高性能\n   */\n  function utf8(buffer, start, end) {\n    // 边界检查\n    if (start < 0 || end > buffer.length) throw new RangeError(\"Index out of range\");\n    if (end - start < 1) return \"\";\n    var resultParts = [];\n    var bufferPos = 0;\n    var appendBuffer = function appendBuffer(parts) {\n      resultParts.push(String.fromCharCode.apply(null, Array.from(parts)));\n    };\n    // 快速路径：检查是否全是 ASCII\n    var allAscii = true;\n    for (var i = start; i < end; i++) {\n      if (buffer[i] > 0x7F) {\n        allAscii = false;\n        break;\n      }\n    }\n    // 全 ASCII 优化路径\n    if (allAscii) {\n      for (var _i = start; _i < end; _i += BUFFER_SIZE) {\n        var chunkEnd = Math.min(_i + BUFFER_SIZE, end);\n        var len = chunkEnd - _i;\n        // 直接复制到 Uint16Array\n        for (var j = 0; j < len; j++) {\n          STATIC_BUFFER[j] = buffer[_i + j];\n        }\n        appendBuffer(STATIC_BUFFER.subarray(0, len));\n      }\n      return resultParts.join('');\n    }\n    // 混合内容处理\n    for (var _i2 = start; _i2 < end;) {\n      var byte = buffer[_i2++];\n      // ASCII 字符处理\n      if (byte < 0x80) {\n        STATIC_BUFFER[bufferPos++] = byte;\n        // 如果缓冲区满了，提交并清空\n        if (bufferPos === BUFFER_SIZE) {\n          appendBuffer(STATIC_BUFFER);\n          bufferPos = 0;\n        }\n        continue;\n      }\n      // 提交之前的 ASCII 字符\n      if (bufferPos > 0) {\n        appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n        bufferPos = 0;\n      }\n      // 变长编码处理 - 使用查表法代替多个条件判断\n      var codePoint = void 0;\n      // 2 字节序列: 110xxxxx 10xxxxxx\n      if ((byte & 0xE0) === 0xC0 && _i2 < end) {\n        codePoint = (byte & 0x1F) << 6 | buffer[_i2++] & 0x3F;\n      }\n      // 3 字节序列: 1110xxxx 10xxxxxx 10xxxxxx\n      else if ((byte & 0xF0) === 0xE0 && _i2 + 1 < end) {\n        codePoint = (byte & 0x0F) << 12 | (buffer[_i2++] & 0x3F) << 6 | buffer[_i2++] & 0x3F;\n      }\n      // 4 字节序列: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      else if ((byte & 0xF8) === 0xF0 && _i2 + 2 < end) {\n        codePoint = (byte & 0x07) << 18 | (buffer[_i2++] & 0x3F) << 12 | (buffer[_i2++] & 0x3F) << 6 | buffer[_i2++] & 0x3F;\n        // 处理 Unicode 代理对\n        if (codePoint > 0xFFFF) {\n          codePoint -= 0x10000;\n          STATIC_BUFFER[bufferPos++] = 0xD800 + (codePoint >> 10);\n          STATIC_BUFFER[bufferPos++] = 0xDC00 + (codePoint & 0x3FF);\n          // 检查缓冲区是否需要提交\n          if (bufferPos >= BUFFER_SIZE - 2) {\n            // 预留空间给下一个可能的代理对\n            appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n            bufferPos = 0;\n          }\n          continue;\n        }\n      }\n      // 无效的 UTF-8 序列\n      else {\n        codePoint = 0xFFFD; // Unicode 替换字符\n        // 跳过可能的后续字节\n        while (_i2 < end && (buffer[_i2] & 0xC0) === 0x80) _i2++;\n      }\n      STATIC_BUFFER[bufferPos++] = codePoint;\n      // 检查缓冲区是否需要提交\n      if (bufferPos >= BUFFER_SIZE - 3) {\n        // 预留空间给下一个可能的多字节字符\n        appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n        bufferPos = 0;\n      }\n    }\n    // 提交剩余字符\n    if (bufferPos > 0) {\n      appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n    }\n    return resultParts.join('');\n  }\n  var OctopusPlatform = /*#__PURE__*/function () {\n    function OctopusPlatform(plugins, version) {\n      _classCallCheck(this, OctopusPlatform);\n      /**\n       * 插件列表\n       */\n      _defineProperty(this, \"plugins\", []);\n      /**\n       * 平台版本\n       */\n      _defineProperty(this, \"platformVersion\", \"0.1.3\");\n      /**\n       * 应用版本\n       */\n      _defineProperty(this, \"version\", \"\");\n      /**\n       * 全局变量\n       */\n      _defineProperty(this, \"globals\", {\n        env: \"unknown\",\n        br: null,\n        dpr: 1,\n        system: \"\"\n      });\n      _defineProperty(this, \"noop\", noop$1);\n      _defineProperty(this, \"retry\", retry);\n      this.version = version || \"\";\n      this.plugins = plugins;\n      this.globals.env = this.autoEnv();\n    }\n    return _createClass(OctopusPlatform, [{\n      key: \"init\",\n      value: function init() {\n        var globals = this.globals,\n          plugins = this.plugins;\n        var collection = new Map();\n        var names = [];\n        var installedPlugins = new Set();\n        globals.br = this.useBridge();\n        globals.dpr = this.usePixelRatio();\n        globals.system = this.useSystem();\n        var _iterator = _createForOfIteratorHelper(plugins),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var plugin = _step.value;\n            names.push(plugin.name);\n            collection.set(plugin.name, plugin);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this.usePlugins(collection, names, installedPlugins);\n        installedPlugins.clear();\n      }\n    }, {\n      key: \"autoEnv\",\n      value: function autoEnv() {\n        if (typeof window !== \"undefined\") {\n          return \"h5\";\n        }\n        // FIXME：由于抖音场景支持wx对象，所以需要放在wx对象之前检查\n        if (typeof tt !== \"undefined\") {\n          return \"tt\";\n        }\n        if (typeof my !== \"undefined\") {\n          return \"alipay\";\n        }\n        if (typeof wx !== \"undefined\") {\n          return \"weapp\";\n        }\n        if (typeof has !== \"undefined\") {\n          return \"harmony\";\n        }\n        throw new Error(\"Unsupported platform！\");\n      }\n    }, {\n      key: \"useBridge\",\n      value: function useBridge() {\n        switch (this.globals.env) {\n          case \"alipay\":\n            return my;\n          case \"tt\":\n            return tt;\n          case \"weapp\":\n            return wx;\n        }\n        return globalThis;\n      }\n    }, {\n      key: \"usePixelRatio\",\n      value: function usePixelRatio() {\n        var _this$globals = this.globals,\n          env = _this$globals.env,\n          br = _this$globals.br;\n        if (env === \"h5\") {\n          return devicePixelRatio;\n        }\n        if (\"getWindowInfo\" in br) {\n          return br.getWindowInfo().pixelRatio;\n        }\n        if (\"getSystemInfoSync\" in br) {\n          return br.getSystemInfoSync().pixelRatio;\n        }\n        return 1;\n      }\n    }, {\n      key: \"useSystem\",\n      value: function useSystem() {\n        var env = this.globals.env;\n        var system;\n        switch (env) {\n          case \"weapp\":\n            // 暂不支持api has.getDeviceInfo TODO\n            system = has.getDeviceInfo().platform;\n            break;\n          case \"alipay\":\n            system = my.getDeviceBaseInfo().platform;\n            break;\n          case \"tt\":\n            system = has.getDeviceInfoSync().platform;\n            break;\n          case \"harmony\":\n            system = has.getSystemInfoSync().platform;\n            break;\n          case \"h5\":\n            if (\"userAgentData\" in navigator) {\n              // @ts-ignore\n              system = navigator.userAgentData.platform;\n            } else {\n              var UA = navigator.userAgent;\n              if (/(Android|Adr)/i.test(UA)) {\n                system = \"android\";\n              } else if (/\\(i[^;]+;( U;)? CPU.+Mac OS X/i.test(UA)) {\n                system = \"ios\";\n              } else if (/HarmonyOS/i.test(UA)) {\n                system = \"harmony\";\n              } else {\n                system = \"unknown\";\n              }\n            }\n            break;\n          default:\n            system = \"unknown\";\n        }\n        return system.toLowerCase();\n      }\n    }, {\n      key: \"usePlugins\",\n      value: function usePlugins(plugins, pluginNames, installedPlugins) {\n        var _iterator2 = _createForOfIteratorHelper(pluginNames),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var pluginName = _step2.value;\n            if (!plugins.has(pluginName)) {\n              throw new Error(\"Plugin \".concat(pluginName, \" not found\"));\n            }\n            if (installedPlugins.has(pluginName)) {\n              return;\n            }\n            var plugin = plugins.get(pluginName);\n            // 递归调用依赖\n            if (Array.isArray(plugin.dependencies)) {\n              var _iterator3 = _createForOfIteratorHelper(plugin.dependencies),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var _plugins$get;\n                  var dependency = _step3.value;\n                  if (typeof ((_plugins$get = plugins.get(dependency)) === null || _plugins$get === void 0 ? void 0 : _plugins$get.install) !== \"function\") {\n                    throw new Error(\"Plugin \".concat(pluginName, \" depends on plugin \").concat(dependency, \", but \").concat(dependency, \" is not found\"));\n                  }\n                }\n                // 递归加载依赖\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n              this.usePlugins(plugins, plugin.dependencies, installedPlugins);\n            }\n            this.installPlugin(plugin);\n            installedPlugins.add(pluginName);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }, {\n      key: \"switch\",\n      value: function _switch(env) {\n        this.globals.env = env;\n        this.init();\n      }\n    }]);\n  }();\n  /**\n   * 定义平台插件\n   */\n  var definePlugin = function definePlugin(plugin) {\n    return plugin;\n  };\n  function installPlugin(platform, plugin) {\n    var value = plugin.install.call(platform);\n    Object.defineProperty(platform, plugin.name, {\n      get: function get() {\n        return value;\n      },\n      enumerable: true,\n      configurable: true\n    });\n  }\n  var pluginSelector = definePlugin({\n    name: \"getSelector\",\n    install: function install() {\n      var _this$globals2 = this.globals,\n        env = _this$globals2.env,\n        br = _this$globals2.br;\n      if (env === \"h5\") {\n        return function (selector) {\n          return document.querySelector(selector);\n        };\n      }\n      return function (selector, component) {\n        return (component || br).createSelectorQuery().select(selector).fields({\n          node: true,\n          size: true\n        });\n      };\n    }\n  });\n\n  /**\n   * 通过选择器匹配获取canvas实例\n   * @returns\n   */\n  var pluginCanvas = definePlugin({\n    name: \"getCanvas\",\n    dependencies: [\"getSelector\"],\n    install: function install() {\n      var retry = this.retry,\n        getSelector = this.getSelector;\n      var _this$globals3 = this.globals,\n        env = _this$globals3.env;\n      _this$globals3.br;\n      var dpr = _this$globals3.dpr;\n      var intervals = [50, 100, 100];\n      function initCanvas(canvas, width, height) {\n        if (!canvas) {\n          throw new Error(\"canvas not found.\");\n        }\n        // const MAX_SIZE = 1365;\n        var context = canvas.getContext(\"2d\");\n        // let virtualWidth = width * dpr;\n        // let virtualHeight = height * dpr;\n        // // 微信小程序限制canvas最大尺寸为 1365 * 1365\n        // if (\n        //   env === \"weapp\" &&\n        //   (virtualWidth > MAX_SIZE || virtualHeight > MAX_SIZE)\n        // ) {\n        //   if (virtualWidth > virtualHeight) {\n        //     virtualHeight = (virtualHeight / virtualWidth) * MAX_SIZE;\n        //     virtualWidth = MAX_SIZE;\n        //   } else {\n        //     virtualWidth = (virtualWidth / virtualHeight) * MAX_SIZE;\n        //     virtualHeight = MAX_SIZE;\n        //   }\n        // }\n        // canvas!.width = virtualWidth;\n        // canvas!.height = virtualHeight;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        return {\n          canvas: canvas,\n          context: context\n        };\n      }\n      if (env === \"h5\") {\n        return function (selector) {\n          return retry(function () {\n            // FIXME: Taro 对 canvas 做了特殊处理，canvas 元素的 id 会被加上 canvas-id 的前缀\n            var canvas = getSelector(\"canvas[canvas-id=\".concat(selector.slice(1), \"]\")) || getSelector(selector);\n            return initCanvas(canvas, canvas === null || canvas === void 0 ? void 0 : canvas.clientWidth, canvas === null || canvas === void 0 ? void 0 : canvas.clientHeight);\n          }, intervals);\n        };\n      }\n      return function (selector, component) {\n        return retry(function () {\n          return new Promise(function (resolve, reject) {\n            var query = getSelector(selector, component);\n            query.exec(function (res) {\n              var _ref = res[0] || {},\n                node = _ref.node,\n                width = _ref.width,\n                height = _ref.height;\n              try {\n                resolve(initCanvas(node, width, height));\n              } catch (e) {\n                reject(e);\n              }\n            });\n          });\n        }, intervals);\n      };\n    }\n  });\n\n  /**\n   * 用于处理数据解码\n   * @returns\n   */\n  var pluginDecode = definePlugin({\n    name: \"decode\",\n    install: function install() {\n      var _this$globals4 = this.globals,\n        env = _this$globals4.env,\n        br = _this$globals4.br;\n      var b64Wrap = function b64Wrap(b64) {\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"image/png\";\n        return \"data:\".concat(type, \";base64,\").concat(b64);\n      };\n      var decode = {\n        toBuffer: function toBuffer(data) {\n          var buffer = data.buffer,\n            byteOffset = data.byteOffset,\n            byteLength = data.byteLength;\n          if (buffer instanceof ArrayBuffer) {\n            return buffer.slice(byteOffset, byteOffset + byteLength);\n          }\n          var view = new Uint8Array(byteLength);\n          view.set(data);\n          return view.buffer;\n        },\n        bytesToString: function bytesToString(data) {\n          var chunkSize = 8192; // 安全的块大小\n          var result = \"\";\n          for (var i = 0; i < data.length; i += chunkSize) {\n            var chunk = data.slice(i, i + chunkSize);\n            // 在安全的块上使用 String.fromCharCode\n            result += String.fromCharCode.apply(null, Array.from(chunk));\n          }\n          return result;\n        }\n      };\n      if (env === \"h5\") {\n        var textDecoder = new TextDecoder(\"utf-8\", {\n          fatal: true\n        });\n        return _objectSpread2(_objectSpread2({}, decode), {}, {\n          toDataURL: function toDataURL(data) {\n            return b64Wrap(btoa(decode.bytesToString(data)));\n          },\n          utf8: function utf8(data, start, end) {\n            return textDecoder.decode(data.subarray(start, end));\n          }\n        });\n      }\n      return _objectSpread2(_objectSpread2({}, decode), {}, {\n        toDataURL: function toDataURL(data) {\n          return b64Wrap(br.arrayBufferToBase64(decode.toBuffer(data)));\n        },\n        utf8: utf8\n      });\n    }\n  });\n\n  /**\n   * 用于处理远程文件读取\n   * @returns\n   */\n  var pluginDownload = definePlugin({\n    name: \"remote\",\n    install: function install() {\n      var _this$globals5 = this.globals,\n        env = _this$globals5.env,\n        br = _this$globals5.br;\n      var isRemote = function isRemote(url) {\n        return /^(blob:)?http(s)?:\\/\\//.test(url);\n      };\n      if (env === \"h5\") {\n        return {\n          is: isRemote,\n          fetch: function (_fetch) {\n            function fetch(_x2) {\n              return _fetch.apply(this, arguments);\n            }\n            fetch.toString = function () {\n              return _fetch.toString();\n            };\n            return fetch;\n          }(function (url) {\n            return fetch(url).then(function (response) {\n              if (response.ok) {\n                return response.arrayBuffer();\n              }\n              throw new Error(\"HTTP error, status=\".concat(response.status, \", statusText=\").concat(response.statusText));\n            });\n          })\n        };\n      }\n      function download(url, enableCache) {\n        return new Promise(function (resolve, reject) {\n          br.request({\n            url: url,\n            // @ts-ignore 支付宝小程序必须有该字段\n            dataType: \"arraybuffer\",\n            responseType: \"arraybuffer\",\n            enableCache: enableCache,\n            success: function success(res) {\n              return resolve(res.data);\n            },\n            fail: reject\n          });\n        }).catch(function (err) {\n          var errorMessage = err.errMsg || err.errorMessage || err.message;\n          // FIXME: 可能存在写入网络缓存空间失败的情况，此时重新下载\n          if (errorMessage.includes(\"ERR_CACHE_WRITE_FAILURE\") || errorMessage.includes(\"ERR_CACHE_WRITE_FAILED\")) {\n            return download(url, false);\n          }\n          throw err;\n        });\n      }\n      return {\n        is: isRemote,\n        fetch: function fetch(url) {\n          return download(url, true);\n        }\n      };\n    }\n  });\n\n  /**\n   * 用于处理本地文件存储\n   * @returns\n   */\n  var pluginFsm = definePlugin({\n    name: \"local\",\n    install: function install() {\n      var _this$globals6 = this.globals,\n        env = _this$globals6.env,\n        br = _this$globals6.br;\n      if (env === \"h5\" || env === \"tt\") {\n        return null;\n      }\n      var fsm = br.getFileSystemManager();\n      return {\n        exists: function exists(filepath) {\n          return new Promise(function (resolve) {\n            fsm.access({\n              path: filepath,\n              success: function success() {\n                return resolve(true);\n              },\n              fail: function fail() {\n                return resolve(false);\n              }\n            });\n          });\n        },\n        write: function write(data, filePath) {\n          return new Promise(function (resolve, reject) {\n            fsm.writeFile({\n              filePath: filePath,\n              data: data,\n              success: function success() {\n                return resolve(filePath);\n              },\n              fail: reject\n            });\n          });\n        },\n        read: function read(filePath) {\n          return new Promise(function (resolve, reject) {\n            fsm.readFile({\n              filePath: filePath,\n              success: function success(res) {\n                return resolve(res.data);\n              },\n              fail: reject\n            });\n          });\n        },\n        remove: function remove(filePath) {\n          return new Promise(function (resolve, reject) {\n            fsm.unlink({\n              filePath: filePath,\n              success: function success() {\n                return resolve(filePath);\n              },\n              fail: reject\n            });\n          });\n        }\n      };\n    }\n  });\n\n  /**\n   * 图片加载插件\n   * @package plugin-fsm 本地文件存储能力\n   * @package plugin-path 路径处理能力\n   * @package plugin-decode 解码能力\n   */\n  var pluginImage = definePlugin({\n    name: \"image\",\n    dependencies: [\"local\", \"decode\"],\n    install: function install() {\n      var local = this.local,\n        decode = this.decode;\n      var env = this.globals.env;\n      var printError = function printError(msg) {\n        return console.error(\"image error: \".concat(msg));\n      };\n      var genImageSource = function genImageSource(data, _filepath) {\n        return typeof data === \"string\" ? data : decode.toDataURL(data);\n      };\n      /**\n       * 加载图片\n       * @param img\n       * @param url\n       * @returns\n       */\n      function loadImage(img, url) {\n        return new Promise(function (resolve, reject) {\n          img.onload = function () {\n            return resolve(img);\n          };\n          img.onerror = function () {\n            return reject(new Error(\"SVGA LOADING FAILURE: \".concat(url)));\n          };\n          img.crossOrigin = \"anonymous\";\n          img.src = url;\n        });\n      }\n      function releaseImage(img) {\n        img.onload = null;\n        img.onerror = null;\n        img.src = \"\";\n      }\n      if (env === \"h5\") {\n        return {\n          create: function create(_) {\n            return new Image();\n          },\n          load: function () {\n            var _load = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(createImage, data, filepath) {\n              var _t;\n              return _regenerator().w(function (_context) {\n                while (1) switch (_context.p = _context.n) {\n                  case 0:\n                    if (!(data instanceof Uint8Array && \"createImageBitmap\" in globalThis)) {\n                      _context.n = 4;\n                      break;\n                    }\n                    _context.p = 1;\n                    _context.n = 2;\n                    return createImageBitmap(new Blob([decode.toBuffer(data)]));\n                  case 2:\n                    data = _context.v;\n                    _context.n = 4;\n                    break;\n                  case 3:\n                    _context.p = 3;\n                    _t = _context.v;\n                    printError(_t.message);\n                  case 4:\n                    if (!(data instanceof ImageBitmap)) {\n                      _context.n = 5;\n                      break;\n                    }\n                    return _context.a(2, data);\n                  case 5:\n                    return _context.a(2, loadImage(createImage(), genImageSource(data, filepath)));\n                }\n              }, _callee, null, [[1, 3]]);\n            }));\n            function load(_x3, _x4, _x5) {\n              return _load.apply(this, arguments);\n            }\n            return load;\n          }(),\n          release: releaseImage\n        };\n      }\n      // FIXME: 支付宝小程序IDE保存临时文件会失败;抖音最大用户文件大小为10M\n      if (env === \"weapp\") {\n        genImageSource = /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(data, filepath) {\n            return _regenerator().w(function (_context2) {\n              while (1) switch (_context2.n) {\n                case 0:\n                  if (!(typeof data === \"string\")) {\n                    _context2.n = 1;\n                    break;\n                  }\n                  return _context2.a(2, data);\n                case 1:\n                  return _context2.a(2, local.write(decode.toBuffer(data), filepath).catch(function (ex) {\n                    printError(ex.errorMessage || ex.errMsg || ex.message);\n                    return decode.toDataURL(data);\n                  }));\n              }\n            }, _callee2);\n          }));\n          return function genImageSource(_x6, _x7) {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n      }\n      return {\n        create: function create(canvas) {\n          return canvas.createImage();\n        },\n        load: function () {\n          var _load2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(createImage, data, filepath) {\n            var _t2, _t3, _t4;\n            return _regenerator().w(function (_context3) {\n              while (1) switch (_context3.n) {\n                case 0:\n                  _t2 = loadImage;\n                  _t3 = createImage();\n                  _context3.n = 1;\n                  return genImageSource(data, filepath);\n                case 1:\n                  _t4 = _context3.v;\n                  return _context3.a(2, _t2(_t3, _t4));\n              }\n            }, _callee3);\n          }));\n          function load(_x8, _x9, _x0) {\n            return _load2.apply(this, arguments);\n          }\n          return load;\n        }(),\n        release: releaseImage\n      };\n    }\n  });\n  var pluginNow = definePlugin({\n    name: \"now\",\n    install: function install() {\n      var _this$globals7 = this.globals,\n        env = _this$globals7.env,\n        br = _this$globals7.br;\n      // performance可以提供更高精度的时间测量，且不受系统时间的调整（如更改系统时间或同步时间）的影响\n      var perf = env === \"h5\" || env === \"tt\" ? performance : br.getPerformance();\n      if (typeof (perf === null || perf === void 0 ? void 0 : perf.now) === \"function\") {\n        // 支付宝小程序的performance.now()获取的是当前时间戳，单位是微秒。\n        if (perf.now() - Date.now() > 1) {\n          return function () {\n            return perf.now() / 1000;\n          };\n        }\n        // H5环境下，performance.now()获取的不是当前时间戳，而是从页面加载开始的时间戳，单位是毫秒。\n        return function () {\n          return perf.now();\n        };\n      }\n      return function () {\n        return Date.now();\n      };\n    }\n  });\n\n  /**\n   * 用于创建离屏canvas\n   * @returns\n   */\n  var pluginOfsCanvas = definePlugin({\n    name: \"getOfsCanvas\",\n    install: function install() {\n      var env = this.globals.env;\n      var createOffscreenCanvas;\n      if (env === \"h5\") {\n        createOffscreenCanvas = function createOffscreenCanvas(options) {\n          return new OffscreenCanvas(options.width, options.height);\n        };\n      } else if (env === \"alipay\") {\n        createOffscreenCanvas = function createOffscreenCanvas(options) {\n          return my.createOffscreenCanvas(options);\n        };\n      } else if (env === \"tt\") {\n        createOffscreenCanvas = function createOffscreenCanvas(options) {\n          // 暂不支持api has.createOffscreenCanvas TODO\n          var canvas = has.createOffscreenCanvas();\n          canvas.width = options.width;\n          canvas.height = options.height;\n          return canvas;\n        };\n      } else {\n        createOffscreenCanvas = function createOffscreenCanvas(options) {\n          return wx.createOffscreenCanvas(options);\n        };\n      }\n      return function (options) {\n        var type = options.type || \"2d\";\n        var canvas = createOffscreenCanvas(_objectSpread2(_objectSpread2({}, options), {}, {\n          type: type\n        }));\n        var context = canvas.getContext(type);\n        return {\n          canvas: canvas,\n          context: context\n        };\n      };\n    }\n  });\n\n  /**\n   * 用于处理文件路径\n   * @returns\n   */\n  var pluginPath = definePlugin({\n    name: \"path\",\n    install: function install() {\n      var _this$globals8 = this.globals,\n        env = _this$globals8.env,\n        br = _this$globals8.br;\n      var filename = function filename(path) {\n        var filepath = path.split(/\\?#/g)[0];\n        return filepath.substring(filepath.lastIndexOf(\"/\") + 1);\n      };\n      if (env === \"h5\" || env === \"tt\") {\n        return {\n          USER_DATA_PATH: \"\",\n          is: function is(_) {\n            return false;\n          },\n          filename: filename,\n          resolve: function resolve(filename, prefix) {\n            return \"\";\n          }\n        };\n      }\n      var USER_DATA_PATH = br.env.USER_DATA_PATH;\n      return {\n        USER_DATA_PATH: USER_DATA_PATH,\n        is: function is(filepath) {\n          return filepath === null || filepath === void 0 ? void 0 : filepath.startsWith(USER_DATA_PATH);\n        },\n        filename: filename,\n        resolve: function resolve(filename, prefix) {\n          return \"\".concat(USER_DATA_PATH, \"/\").concat(prefix ? \"\".concat(prefix, \"__\") : \"\").concat(filename);\n        }\n      };\n    }\n  });\n\n  /**\n   * 用于处理requestAnimationFrame\n   * @returns\n   */\n  var pluginRaf = definePlugin({\n    name: \"rAF\",\n    install: function install() {\n      var env = this.globals.env;\n      function requestAnimationFrameImpl() {\n        return function (callback) {\n          return setTimeout(callback, Math.max(0, 16 - Date.now() % 16));\n        };\n      }\n      if (env === \"h5\") {\n        var rAF = \"requestAnimationFrame\" in globalThis ? requestAnimationFrame : requestAnimationFrameImpl();\n        return function (_, callback) {\n          return rAF(callback);\n        };\n      }\n      return function (canvas, callback) {\n        // 检查canvas是否存在\n        try {\n          return canvas.requestAnimationFrame(callback);\n        } catch (error) {\n          console.warn(error.message);\n          return requestAnimationFrameImpl()(callback);\n        }\n      };\n    }\n  });\n  var EnhancedPlatform = /*#__PURE__*/function (_OctopusPlatform) {\n    function EnhancedPlatform() {\n      var _this;\n      _classCallCheck(this, EnhancedPlatform);\n      _this = _callSuper(this, EnhancedPlatform, [[pluginSelector, pluginCanvas, pluginOfsCanvas, pluginDecode, pluginDownload, pluginFsm, pluginImage, pluginNow, pluginPath, pluginRaf], \"1.3.0\"]);\n      _this.init();\n      return _this;\n    }\n    _inherits(EnhancedPlatform, _OctopusPlatform);\n    return _createClass(EnhancedPlatform, [{\n      key: \"installPlugin\",\n      value: function installPlugin$1(plugin) {\n        installPlugin(this, plugin);\n      }\n    }]);\n  }(OctopusPlatform);\n  var platform = new EnhancedPlatform();\n  var ResourceManager = /*#__PURE__*/function () {\n    function ResourceManager(painter) {\n      _classCallCheck(this, ResourceManager);\n      this.painter = painter;\n      // FIXME: 微信小程序创建调用太多createImage会导致微信/微信小程序崩溃\n      this.caches = [];\n      /**\n       * 动态素材\n       */\n      this.dynamicMaterials = new Map();\n      /**\n       * 素材\n       */\n      this.materials = new Map();\n      /**\n       * 已清理Image对象的坐标\n       */\n      this.point = 0;\n    }\n    /**\n     * 创建图片标签\n     * @returns\n     */\n    return _createClass(ResourceManager, [{\n      key: \"createImage\",\n      value: function createImage() {\n        var img = null;\n        if (this.point > 0) {\n          this.point--;\n          img = this.caches.shift();\n        }\n        if (!img) {\n          img = platform.image.create(this.painter.F);\n        }\n        this.caches.push(img);\n        return img;\n      }\n      /**\n       * 将 ImageBitmap 插入到 caches\n       * @param img\n       */\n    }, {\n      key: \"inertBitmapIntoCaches\",\n      value: function inertBitmapIntoCaches(img) {\n        if (ResourceManager.isBitmap(img)) {\n          this.caches.push(img);\n        }\n      }\n      /**\n       * 加载额外的图片资源\n       * @param source 资源内容/地址\n       * @param filename 文件名称\n       * @returns\n       */\n    }, {\n      key: \"loadExtImage\",\n      value: function loadExtImage(source, filename) {\n        var _this = this;\n        return platform.image.load(function () {\n          return _this.createImage();\n        }, source, platform.path.resolve(filename, \"ext\")).then(function (img) {\n          _this.inertBitmapIntoCaches(img);\n          return img;\n        });\n      }\n      /**\n       * 加载图片集\n       * @param images 图片数据\n       * @param filename 文件名称\n       * @returns\n       */\n    }, {\n      key: \"loadImagesWithRecord\",\n      value: function loadImagesWithRecord(images_1, filename_1) {\n        return __awaiter(this, arguments, void 0, function (images, filename) {\n          var _this2 = this;\n          var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"normal\";\n          return /*#__PURE__*/_regenerator().m(function _callee() {\n            var imageAwaits, imageFilename;\n            return _regenerator().w(function (_context) {\n              while (1) switch (_context.n) {\n                case 0:\n                  imageAwaits = [];\n                  imageFilename = \"\".concat(filename.replace(/\\.svga$/g, \"\"), \".png\");\n                  Object.entries(images).forEach(function (_ref) {\n                    var _ref2 = _slicedToArray(_ref, 2),\n                      name = _ref2[0],\n                      image = _ref2[1];\n                    // 过滤 1px 透明图\n                    if (image instanceof Uint8Array && image.byteLength < 70) {\n                      return;\n                    }\n                    var p = platform.image.load(function () {\n                      return _this2.createImage();\n                    }, image, platform.path.resolve(imageFilename, type === \"dynamic\" ? \"dyn_\".concat(name) : name)).then(function (img) {\n                      _this2.inertBitmapIntoCaches(img);\n                      if (type === \"dynamic\") {\n                        _this2.dynamicMaterials.set(name, img);\n                      } else {\n                        _this2.materials.set(name, img);\n                      }\n                    });\n                    imageAwaits.push(p);\n                  });\n                  _context.n = 1;\n                  return Promise.all(imageAwaits);\n                case 1:\n                  return _context.a(2);\n              }\n            }, _callee);\n          })();\n        });\n      }\n      /**\n       * 释放图片资源\n       */\n    }, {\n      key: \"release\",\n      value: function release() {\n        // FIXME: 小程序 image 对象需要手动释放内存，否则可能导致小程序崩溃\n        var _iterator = _createForOfIteratorHelper(this.caches),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var img = _step.value;\n            ResourceManager.releaseOne(img);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this.materials.clear();\n        this.dynamicMaterials.clear();\n        // FIXME: 支付宝小程序 image 修改 src 无法触发 onload 事件\n        platform.globals.env === \"alipay\" ? this.cleanup() : this.tidyUp();\n      }\n      /**\n       * 整理图片资源，将重复的图片资源移除\n       */\n    }, {\n      key: \"tidyUp\",\n      value: function tidyUp() {\n        // 通过 Set 的去重特性，保持 caches 元素的唯一性\n        this.caches = Array.from(new Set(this.caches));\n        this.point = this.caches.length;\n      }\n      /**\n       * 清理图片资源\n       */\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        this.caches.length = 0;\n        this.point = 0;\n      }\n    }], [{\n      key: \"isBitmap\",\n      value:\n      /**\n       * 判断是否是 ImageBitmap\n       * @param img\n       * @returns\n       */\n      function isBitmap(img) {\n        return platform.globals.env === \"h5\" && img instanceof ImageBitmap;\n      }\n      /**\n       * 释放内存资源（图片）\n       * @param img\n       */\n    }, {\n      key: \"releaseOne\",\n      value: function releaseOne(img) {\n        if (ResourceManager.isBitmap(img)) {\n          img.close();\n        } else if (img.src !== \"\") {\n          // 将存在本地的文件删除，防止用户空间被占满\n          if (platform.path.is(img.src)) {\n            platform.local.remove(img.src);\n          }\n          platform.image.release(img);\n        }\n      }\n    }]);\n  }();\n  function readFloatLEImpl() {\n    // 使用静态DataView池\n    var DATA_VIEW_POOL_SIZE = 4;\n    var dataViewPool = Array(DATA_VIEW_POOL_SIZE).fill(0).map(function () {\n      return new DataView(new ArrayBuffer(8));\n    }); // 使用8字节支持double\n    var currentViewIndex = 0;\n    return function readFloatLE(buf, pos) {\n      if (pos < 0 || pos + 4 > buf.length) throw new RangeError(\"Index out of range\");\n      // 轮换使用DataView池中的实例\n      var view = dataViewPool[currentViewIndex];\n      currentViewIndex = (currentViewIndex + 1) % DATA_VIEW_POOL_SIZE;\n      // 直接设置字节，避免创建subarray\n      var u8 = new Uint8Array(view.buffer);\n      u8[0] = buf[pos];\n      u8[1] = buf[pos + 1];\n      u8[2] = buf[pos + 2];\n      u8[3] = buf[pos + 3];\n      return view.getFloat32(0, true);\n    };\n  }\n  var readFloatLE = readFloatLEImpl(); /**\n                                       * 简易的hash算法\n                                       * @param buff\n                                       * @param start\n                                       * @param end\n                                       * @param step\n                                       * @returns\n                                       */\n  function calculateHash(buff, start, end, step) {\n    // 使用简单的哈希算法\n    var hash = 0;\n    for (var i = start; i < end; i += step) {\n      // 简单的哈希算法，类似于字符串哈希\n      hash = (hash << 5) - hash + buff[i];\n      hash = hash & hash; // 转换为32位整数\n    }\n    // 添加数据长度作为哈希的一部分，增加唯一性\n    hash = (hash << 5) - hash + end - start;\n    hash = hash & hash;\n    // 转换为字符串\n    return hash.toString(36);\n  }\n  var Preflight = /*#__PURE__*/function () {\n    function Preflight() {\n      _classCallCheck(this, Preflight);\n      this.caches = new Map();\n      this.count = 0;\n    }\n    return _createClass(Preflight, [{\n      key: \"size\",\n      get: function get() {\n        return this.caches.size;\n      }\n    }, {\n      key: \"hitCount\",\n      get: function get() {\n        return this.count;\n      }\n      // get cache() {\n      //   return Object.fromEntries(this.caches);\n      // }\n      /**\n       * 计算二进制数据的哈希值\n       * @param reader Reader对象\n       * @param end 结束位置\n       * @returns 哈希值\n       */\n    }, {\n      key: \"calculate\",\n      value: function calculate(reader, end) {\n        // 保存原始位置\n        var startPos = reader.pos,\n          buf = reader.buf;\n        var endPos = Math.min(end, reader.len);\n        // 采样数据以加快计算速度，同时保持足够的唯一性\n        // 对于大数据，每隔几个字节采样一次\n        var step = Math.max(1, Math.floor((endPos - startPos) / 100));\n        return calculateHash(buf, startPos, endPos, step);\n      }\n      /**\n       * 检查是否存在缓存数据\n       * @param key 键\n       * @returns 是否存在\n       */\n    }, {\n      key: \"has\",\n      value: function has(key) {\n        var hit = this.caches.has(key);\n        if (hit) {\n          this.count++;\n        }\n        return hit;\n        // return this.caches.has(key);\n      }\n      /**\n       * 获取缓存数据\n       * @param key 键\n       * @returns 缓存数据\n       */\n    }, {\n      key: \"get\",\n      value: function get(key) {\n        return this.caches.get(key);\n      }\n      /**\n       * 设置缓存数据\n       * @param key 键\n       * @param value 缓存数据\n       */\n    }, {\n      key: \"set\",\n      value: function set(key, value) {\n        this.caches.set(key, value);\n      }\n      /**\n       * 清空所有缓存数据\n       */\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this.count = 0;\n        this.caches.clear();\n      }\n    }]);\n  }();\n  var Reader = /*#__PURE__*/function () {\n    /**\n     * Constructs a new reader instance using the specified buffer.\n     * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n     * @constructor\n     * @param {Uint8Array} buffer Buffer to read from\n     */\n    function Reader(buffer) {\n      _classCallCheck(this, Reader);\n      this.preflight = new Preflight();\n      this.buf = buffer;\n      this.pos = 0;\n      this.len = buffer.length;\n    }\n    return _createClass(Reader, [{\n      key: \"indexOutOfRange\",\n      value: function indexOutOfRange(reader, writeLength) {\n        return new RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n      }\n      /**\n       * 将复杂逻辑分离到单独方法\n       * @returns\n       */\n    }, {\n      key: \"readVarint32Slow\",\n      value: function readVarint32Slow() {\n        var byte = this.buf[this.pos++];\n        var value = byte & 0x7f;\n        var shift = 7;\n        // 使用do-while循环减少条件判断\n        do {\n          if (this.pos >= this.len) {\n            throw this.indexOutOfRange(this);\n          }\n          byte = this.buf[this.pos++];\n          value |= (byte & 0x7f) << shift;\n          shift += 7;\n        } while (byte >= 128 && shift < 32);\n        return value >>> 0; // 确保无符号\n      }\n      /**\n       * Reads a sequence of bytes preceded by its length as a varint.\n       * @param length\n       * @returns\n       */\n    }, {\n      key: \"end\",\n      value: function end(length) {\n        return length === undefined ? this.len : this.pos + length;\n      }\n      /**\n       * Reads a varint as an unsigned 32 bit value.\n       * @function\n       * @returns {number} Value read\n       */\n    }, {\n      key: \"uint32\",\n      value: function uint32() {\n        // 快速路径：大多数情况下是单字节\n        var byte = this.buf[this.pos];\n        if (byte < 128) {\n          this.pos++;\n          return byte;\n        }\n        // 慢速路径：多字节处理\n        return this.readVarint32Slow();\n      }\n      /**\n       * Reads a varint as a signed 32 bit value.\n       * @returns {number} Value read\n       */\n    }, {\n      key: \"int32\",\n      value: function int32() {\n        return this.uint32() | 0;\n      }\n      /**\n       * Reads a float (32 bit) as a number.\n       * @function\n       * @returns {number} Value read\n       */\n    }, {\n      key: \"float\",\n      value: function float() {\n        var pos = this.pos + 4;\n        if (pos > this.len) {\n          throw this.indexOutOfRange(this, 4);\n        }\n        var value = readFloatLE(this.buf, this.pos);\n        this.pos = pos;\n        return value;\n      }\n      /**\n       * read bytes range\n       * @returns\n       */\n    }, {\n      key: \"getBytesRange\",\n      value: function getBytesRange() {\n        var length = this.uint32();\n        var start = this.pos;\n        var end = start + length;\n        if (end > this.len) {\n          throw this.indexOutOfRange(this, length);\n        }\n        return [start, end, length];\n      }\n      /**\n       * Reads a sequence of bytes preceded by its length as a varint.\n       * @returns {Uint8Array} Value read\n       */\n    }, {\n      key: \"bytes\",\n      value: function bytes() {\n        var _this$getBytesRange = this.getBytesRange(),\n          _this$getBytesRange2 = _slicedToArray(_this$getBytesRange, 3),\n          start = _this$getBytesRange2[0],\n          end = _this$getBytesRange2[1],\n          length = _this$getBytesRange2[2];\n        this.pos += length;\n        if (length === 0) {\n          return Reader.EMPTY_UINT8ARRAY;\n        }\n        return this.buf.subarray(start, end);\n      }\n      /**\n       * Reads a string preceeded by its byte length as a varint.\n       * @returns {string} Value read\n       */\n    }, {\n      key: \"string\",\n      value: function string() {\n        var _this$getBytesRange3 = this.getBytesRange(),\n          _this$getBytesRange4 = _slicedToArray(_this$getBytesRange3, 2),\n          start = _this$getBytesRange4[0],\n          end = _this$getBytesRange4[1];\n        // 直接在原始buffer上解码，避免创建中间bytes对象\n        var result = platform.decode.utf8(this.buf, start, end);\n        this.pos = end;\n        return result;\n      }\n      /**\n       * Skips the specified number of bytes if specified, otherwise skips a varint.\n       * @param {number} [length] Length if known, otherwise a varint is assumed\n       * @returns {Reader} `this`\n       */\n    }, {\n      key: \"skip\",\n      value: function skip(length) {\n        if (typeof length === \"number\") {\n          if (this.pos + length > this.len) {\n            throw this.indexOutOfRange(this, length);\n          }\n          this.pos += length;\n          return this;\n        }\n        // 变长整数跳过优化 - 使用位运算\n        var buf = this.buf,\n          len = this.len;\n        var pos = this.pos;\n        // 一次检查多个字节，减少循环次数\n        while (pos < len) {\n          var byte = buf[pos++];\n          if ((byte & 0x80) === 0) {\n            this.pos = pos;\n            return this;\n          }\n          // 快速检查连续的高位字节\n          if (pos < len && (buf[pos] & 0x80) !== 0) {\n            pos++;\n            if (pos < len && (buf[pos] & 0x80) !== 0) {\n              pos++;\n              if (pos < len && (buf[pos] & 0x80) !== 0) {\n                pos++;\n                // 继续检查剩余字节\n                while (pos < len && (buf[pos] & 0x80) !== 0) {\n                  pos++;\n                  if (pos - this.pos >= 10) {\n                    throw Error(\"invalid varint encoding\");\n                  }\n                }\n                if (pos < len) {\n                  this.pos = pos + 1;\n                  return this;\n                }\n              }\n            }\n          }\n        }\n        throw this.indexOutOfRange(this);\n      }\n      /**\n       * Skips the next element of the specified wire type.\n       * @param {number} wireType Wire type received\n       * @returns {Reader} `this`\n       */\n    }, {\n      key: \"skipType\",\n      value: function skipType(wireType) {\n        switch (wireType) {\n          case 0:\n            this.skip();\n            break;\n          case 1:\n            this.skip(8);\n            break;\n          case 2:\n            this.skip(this.uint32());\n            break;\n          case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n              this.skipType(wireType);\n            }\n            break;\n          case 5:\n            this.skip(4);\n            break;\n          /* istanbul ignore next */\n          default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n        }\n        return this;\n      }\n    }]);\n  }(); // 添加静态缓存，用于常用的空数组\n  Reader.EMPTY_UINT8ARRAY = new Uint8Array(0);\n  var Layout = /*#__PURE__*/function () {\n    function Layout() {\n      _classCallCheck(this, Layout);\n      /**\n       * Layout x.\n       * @member {number} x\n       * @memberof com.opensource.svga.Layout\n       * @instance\n       */\n      this.x = 0;\n      /**\n       * Layout y.\n       * @member {number} y\n       * @memberof com.opensource.svga.Layout\n       * @instance\n       */\n      this.y = 0;\n      /**\n       * Layout width.\n       * @member {number} width\n       * @memberof com.opensource.svga.Layout\n       * @instance\n       */\n      this.width = 0;\n      /**\n       * Layout height.\n       * @member {number} height\n       * @memberof com.opensource.svga.Layout\n       * @instance\n       */\n      this.height = 0;\n    }\n    /**\n     * Decodes a Layout message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.Layout\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.Layout} Layout\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(Layout, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var preflight = reader.preflight;\n        var end = reader.end(length);\n        var hash = preflight.calculate(reader, end);\n        if (preflight.has(hash)) {\n          reader.pos = end;\n          return preflight.get(hash);\n        }\n        var message = new Layout();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.x = reader.float();\n                break;\n              }\n            case 2:\n              {\n                message.y = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.width = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.height = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        preflight.set(hash, Layout.format(message));\n        return preflight.get(hash);\n      }\n    }, {\n      key: \"format\",\n      value: function format(message) {\n        var _message$x = message.x,\n          x = _message$x === void 0 ? 0 : _message$x,\n          _message$y = message.y,\n          y = _message$y === void 0 ? 0 : _message$y,\n          _message$width = message.width,\n          width = _message$width === void 0 ? 0 : _message$width,\n          _message$height = message.height,\n          height = _message$height === void 0 ? 0 : _message$height;\n        return {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        };\n      }\n    }]);\n  }();\n  var Transform = /*#__PURE__*/function () {\n    function Transform() {\n      _classCallCheck(this, Transform);\n      /**\n       * Transform a.\n       * @member {number} a\n       * @memberof com.opensource.svga.Transform\n       * @instance\n       */\n      this.a = 0;\n      /**\n       * Transform b.\n       * @member {number} b\n       * @memberof com.opensource.svga.Transform\n       * @instance\n       */\n      this.b = 0;\n      /**\n       * Transform c.\n       * @member {number} c\n       * @memberof com.opensource.svga.Transform\n       * @instance\n       */\n      this.c = 0;\n      /**\n       * Transform d.\n       * @member {number} d\n       * @memberof com.opensource.svga.Transform\n       * @instance\n       */\n      this.d = 0;\n      /**\n       * Transform tx.\n       * @member {number} tx\n       * @memberof com.opensource.svga.Transform\n       * @instance\n       */\n      this.tx = 0;\n      /**\n       * Transform ty.\n       * @member {number} ty\n       * @memberof com.opensource.svga.Transform\n       * @instance\n       */\n      this.ty = 0;\n    }\n    /**\n     * Decodes a Transform message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.Transform\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.Transform} Transform\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(Transform, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var end = reader.end(length);\n        var message = new Transform();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.a = reader.float();\n                break;\n              }\n            case 2:\n              {\n                message.b = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.c = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.d = reader.float();\n                break;\n              }\n            case 5:\n              {\n                message.tx = reader.float();\n                break;\n              }\n            case 6:\n              {\n                message.ty = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      }\n    }]);\n  }();\n  var ShapeArgs = /*#__PURE__*/function () {\n    function ShapeArgs() {\n      _classCallCheck(this, ShapeArgs);\n      /**\n       * ShapeArgs d.\n       * @member {string} d\n       * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n       * @instance\n       */\n      this.d = \"\";\n    }\n    /**\n     * Decodes a ShapeArgs message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.ShapeEntity.ShapeArgs} ShapeArgs\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(ShapeArgs, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var preflight = reader.preflight;\n        var end = reader.end(length);\n        var hash = preflight.calculate(reader, end);\n        if (preflight.has(hash)) {\n          reader.pos = end;\n          return preflight.get(hash);\n        }\n        var message = new ShapeArgs();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.d = reader.string();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        preflight.set(hash, message);\n        return preflight.get(hash);\n      }\n    }]);\n  }();\n  var RectArgs = /*#__PURE__*/function () {\n    function RectArgs() {\n      _classCallCheck(this, RectArgs);\n      /**\n       * RectArgs x.\n       * @member {number} x\n       * @memberof com.opensource.svga.ShapeEntity.RectArgs\n       * @instance\n       */\n      this.x = 0;\n      /**\n       * RectArgs y.\n       * @member {number} y\n       * @memberof com.opensource.svga.ShapeEntity.RectArgs\n       * @instance\n       */\n      this.y = 0;\n      /**\n       * RectArgs width.\n       * @member {number} width\n       * @memberof com.opensource.svga.ShapeEntity.RectArgs\n       * @instance\n       */\n      this.width = 0;\n      /**\n       * RectArgs height.\n       * @member {number} height\n       * @memberof com.opensource.svga.ShapeEntity.RectArgs\n       * @instance\n       */\n      this.height = 0;\n      /**\n       * RectArgs cornerRadius.\n       * @member {number} cornerRadius\n       * @memberof com.opensource.svga.ShapeEntity.RectArgs\n       * @instance\n       */\n      this.cornerRadius = 0;\n    }\n    /**\n     * Decodes a RectArgs message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.ShapeEntity.RectArgs\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.ShapeEntity.RectArgs} RectArgs\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(RectArgs, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var preflight = reader.preflight;\n        var end = reader.end(length);\n        var hash = preflight.calculate(reader, end);\n        if (preflight.has(hash)) {\n          reader.pos = end;\n          return preflight.get(hash);\n        }\n        var message = new RectArgs();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.x = reader.float();\n                break;\n              }\n            case 2:\n              {\n                message.y = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.width = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.height = reader.float();\n                break;\n              }\n            case 5:\n              {\n                message.cornerRadius = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        preflight.set(hash, message);\n        return preflight.get(hash);\n      }\n    }]);\n  }();\n  var EllipseArgs = /*#__PURE__*/function () {\n    function EllipseArgs() {\n      _classCallCheck(this, EllipseArgs);\n      /**\n       * EllipseArgs x.\n       * @member {number} x\n       * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n       * @instance\n       */\n      this.x = 0;\n      /**\n       * EllipseArgs y.\n       * @member {number} y\n       * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n       * @instance\n       */\n      this.y = 0;\n      /**\n       * EllipseArgs radiusX.\n       * @member {number} radiusX\n       * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n       * @instance\n       */\n      this.radiusX = 0;\n      /**\n       * EllipseArgs radiusY.\n       * @member {number} radiusY\n       * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n       * @instance\n       */\n      this.radiusY = 0;\n    }\n    /**\n     * Decodes an EllipseArgs message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.ShapeEntity.EllipseArgs} EllipseArgs\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(EllipseArgs, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var preflight = reader.preflight;\n        var end = reader.end(length);\n        var hash = preflight.calculate(reader, end);\n        if (preflight.has(hash)) {\n          reader.pos = end;\n          return preflight.get(hash);\n        }\n        var message = new EllipseArgs();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.x = reader.float();\n                break;\n              }\n            case 2:\n              {\n                message.y = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.radiusX = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.radiusY = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        preflight.set(hash, message);\n        return preflight.get(hash);\n      }\n    }]);\n  }();\n  var RGBAColor = /*#__PURE__*/function () {\n    function RGBAColor() {\n      _classCallCheck(this, RGBAColor);\n      /**\n       * RGBAColor r.\n       * @member {number} r\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n       * @instance\n       */\n      this.r = 0;\n      /**\n       * RGBAColor g.\n       * @member {number} g\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n       * @instance\n       */\n      this.g = 0;\n      /**\n       * RGBAColor b.\n       * @member {number} b\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n       * @instance\n       */\n      this.b = 0;\n      /**\n       * RGBAColor a.\n       * @member {number} a\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n       * @instance\n       */\n      this.a = 0;\n    }\n    /**\n     * Decodes a RGBAColor message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor} RGBAColor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(RGBAColor, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var preflight = reader.preflight;\n        var end = reader.end(length);\n        var hash = preflight.calculate(reader, end);\n        if (preflight.has(hash)) {\n          reader.pos = end;\n          return preflight.get(hash);\n        }\n        var message = new RGBAColor();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.r = reader.float();\n                break;\n              }\n            case 2:\n              {\n                message.g = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.b = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.a = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        preflight.set(hash, RGBAColor.format(message));\n        return preflight.get(hash);\n      }\n    }, {\n      key: \"format\",\n      value: function format(message) {\n        var r = message.r,\n          g = message.g,\n          b = message.b,\n          a = message.a;\n        return \"rgba(\".concat(r * 255 | 0, \", \").concat(g * 255 | 0, \", \").concat(b * 255 | 0, \", \").concat(a * 1 | 0, \")\");\n      }\n    }]);\n  }();\n  var ShapeStyle = /*#__PURE__*/function () {\n    function ShapeStyle() {\n      _classCallCheck(this, ShapeStyle);\n      /**\n       * ShapeStyle fill.\n       * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} fill\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.fill = null;\n      /**\n       * ShapeStyle stroke.\n       * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} stroke\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.stroke = null;\n      /**\n       * ShapeStyle strokeWidth.\n       * @member {number} strokeWidth\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.strokeWidth = 0;\n      /**\n       * ShapeStyle lineCap.\n       * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineCap} lineCap\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.lineCap = 0;\n      /**\n       * ShapeStyle lineJoin.\n       * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin} lineJoin\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.lineJoin = 0;\n      /**\n       * ShapeStyle miterLimit.\n       * @member {number} miterLimit\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.miterLimit = 0;\n      /**\n       * ShapeStyle lineDashI.\n       * @member {number} lineDashI\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.lineDashI = 0;\n      /**\n       * ShapeStyle lineDashII.\n       * @member {number} lineDashII\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.lineDashII = 0;\n      /**\n       * ShapeStyle lineDashIII.\n       * @member {number} lineDashIII\n       * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n       * @instance\n       */\n      this.lineDashIII = 0;\n    }\n    /**\n     * Decodes a ShapeStyle message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.ShapeEntity.ShapeStyle} ShapeStyle\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(ShapeStyle, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var preflight = reader.preflight;\n        var end = reader.end(length);\n        var hash = preflight.calculate(reader, end);\n        if (preflight.has(hash)) {\n          reader.pos = end;\n          return preflight.get(hash);\n        }\n        var message = new ShapeStyle();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.fill = RGBAColor.decode(reader, reader.uint32());\n                break;\n              }\n            case 2:\n              {\n                message.stroke = RGBAColor.decode(reader, reader.uint32());\n                break;\n              }\n            case 3:\n              {\n                message.strokeWidth = reader.float();\n                break;\n              }\n            case 4:\n              {\n                message.lineCap = reader.int32();\n                break;\n              }\n            case 5:\n              {\n                message.lineJoin = reader.int32();\n                break;\n              }\n            case 6:\n              {\n                message.miterLimit = reader.float();\n                break;\n              }\n            case 7:\n              {\n                message.lineDashI = reader.float();\n                break;\n              }\n            case 8:\n              {\n                message.lineDashII = reader.float();\n                break;\n              }\n            case 9:\n              {\n                message.lineDashIII = reader.float();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        preflight.set(hash, ShapeStyle.format(message));\n        return preflight.get(hash);\n      }\n    }, {\n      key: \"format\",\n      value: function format(message) {\n        var fill = message.fill,\n          stroke = message.stroke,\n          strokeWidth = message.strokeWidth,\n          miterLimit = message.miterLimit,\n          lineDashI = message.lineDashI,\n          lineDashII = message.lineDashII,\n          lineDashIII = message.lineDashIII;\n        var lineDash = [];\n        var lineCap;\n        var lineJoin;\n        if (lineDashI > 0) {\n          lineDash.push(lineDashI);\n        }\n        if (lineDashII > 0) {\n          if (lineDash.length < 1) {\n            lineDash.push(0);\n          }\n          lineDash.push(lineDashII);\n        }\n        if (lineDashIII > 0) {\n          if (lineDash.length < 2) {\n            lineDash.push(0, 0);\n          }\n          lineDash.push(lineDashIII);\n        }\n        switch (message.lineCap) {\n          case 0 /* PlatformVideo.LINE_CAP_CODE.BUTT */:\n            lineCap = \"butt\" /* PlatformVideo.LINE_CAP.BUTT */;\n            break;\n          case 1 /* PlatformVideo.LINE_CAP_CODE.ROUND */:\n            lineCap = \"round\" /* PlatformVideo.LINE_CAP.ROUND */;\n            break;\n          case 2 /* PlatformVideo.LINE_CAP_CODE.SQUARE */:\n            lineCap = \"square\" /* PlatformVideo.LINE_CAP.SQUARE */;\n            break;\n        }\n        switch (message.lineJoin) {\n          case 0 /* PlatformVideo.LINE_JOIN_CODE.MITER */:\n            lineJoin = \"miter\" /* PlatformVideo.LINE_JOIN.MITER */;\n            break;\n          case 1 /* PlatformVideo.LINE_JOIN_CODE.ROUND */:\n            lineJoin = \"round\" /* PlatformVideo.LINE_JOIN.ROUND */;\n            break;\n          case 2 /* PlatformVideo.LINE_JOIN_CODE.BEVEL */:\n            lineJoin = \"bevel\" /* PlatformVideo.LINE_JOIN.BEVEL */;\n            break;\n        }\n        return {\n          lineDash: lineDash,\n          fill: fill ? fill : null,\n          stroke: stroke ? stroke : null,\n          lineCap: lineCap,\n          lineJoin: lineJoin,\n          strokeWidth: strokeWidth,\n          miterLimit: miterLimit\n        };\n      }\n    }]);\n  }();\n  var ShapeEntity = /*#__PURE__*/function () {\n    function ShapeEntity() {\n      _classCallCheck(this, ShapeEntity);\n      /**\n       * ShapeEntity type.\n       * @member {com.opensource.svga.ShapeEntity.ShapeType} type\n       * @memberof com.opensource.svga.ShapeEntity\n       * @instance\n       */\n      this.type = 0;\n      /**\n       * ShapeEntity shape.\n       * @member {com.opensource.svga.ShapeEntity.IShapeArgs|null|undefined} shape\n       * @memberof com.opensource.svga.ShapeEntity\n       * @instance\n       */\n      this.shape = null;\n      /**\n       * ShapeEntity rect.\n       * @member {com.opensource.svga.ShapeEntity.IRectArgs|null|undefined} rect\n       * @memberof com.opensource.svga.ShapeEntity\n       * @instance\n       */\n      this.rect = null;\n      /**\n       * ShapeEntity ellipse.\n       * @member {com.opensource.svga.ShapeEntity.IEllipseArgs|null|undefined} ellipse\n       * @memberof com.opensource.svga.ShapeEntity\n       * @instance\n       */\n      this.ellipse = null;\n      /**\n       * ShapeEntity styles.\n       * @member {com.opensource.svga.ShapeEntity.IShapeStyle|null|undefined} styles\n       * @memberof com.opensource.svga.ShapeEntity\n       * @instance\n       */\n      this.styles = null;\n      /**\n       * ShapeEntity transform.\n       * @member {com.opensource.svga.ITransform|null|undefined} transform\n       * @memberof com.opensource.svga.ShapeEntity\n       * @instance\n       */\n      this.transform = null;\n    }\n    /**\n     * Decodes a ShapeEntity message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.ShapeEntity\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.ShapeEntity} ShapeEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(ShapeEntity, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var end = reader.end(length);\n        var message = new ShapeEntity();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.type = reader.int32();\n                break;\n              }\n            case 2:\n              {\n                message.shape = ShapeArgs.decode(reader, reader.uint32());\n                break;\n              }\n            case 3:\n              {\n                message.rect = RectArgs.decode(reader, reader.uint32());\n                break;\n              }\n            case 4:\n              {\n                message.ellipse = EllipseArgs.decode(reader, reader.uint32());\n                break;\n              }\n            case 10:\n              {\n                message.styles = ShapeStyle.decode(reader, reader.uint32());\n                break;\n              }\n            case 11:\n              {\n                message.transform = Transform.decode(reader, reader.uint32());\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return ShapeEntity.format(message);\n      }\n    }, {\n      key: \"format\",\n      value: function format(message) {\n        var type = message.type,\n          shape = message.shape,\n          rect = message.rect,\n          ellipse = message.ellipse,\n          styles = message.styles,\n          transform = message.transform;\n        switch (type) {\n          case 0 /* PlatformVideo.SHAPE_TYPE_CODE.SHAPE */:\n            return {\n              type: \"shape\" /* PlatformVideo.SHAPE_TYPE.SHAPE */,\n              path: shape,\n              styles: styles,\n              transform: transform\n            };\n          case 1 /* PlatformVideo.SHAPE_TYPE_CODE.RECT */:\n            return {\n              type: \"rect\" /* PlatformVideo.SHAPE_TYPE.RECT */,\n              path: rect,\n              styles: styles,\n              transform: transform\n            };\n          case 2 /* PlatformVideo.SHAPE_TYPE_CODE.ELLIPSE */:\n            return {\n              type: \"ellipse\" /* PlatformVideo.SHAPE_TYPE.ELLIPSE */,\n              path: ellipse,\n              styles: styles,\n              transform: transform\n            };\n        }\n        return null;\n      }\n    }]);\n  }();\n  var FrameEntity = /*#__PURE__*/function () {\n    function FrameEntity() {\n      _classCallCheck(this, FrameEntity);\n      /**\n       * FrameEntity shapes.\n       * @member {Array.<com.opensource.svga.IShapeEntity>} shapes\n       * @memberof com.opensource.svga.FrameEntity\n       * @instance\n       */\n      this.shapes = [];\n      /**\n       * FrameEntity alpha.\n       * @member {number} alpha\n       * @memberof com.opensource.svga.FrameEntity\n       * @instance\n       */\n      this.alpha = 0;\n      /**\n       * FrameEntity layout.\n       * @member {com.opensource.svga.ILayout|null|undefined} layout\n       * @memberof com.opensource.svga.FrameEntity\n       * @instance\n       */\n      this.layout = null;\n      /**\n       * FrameEntity transform.\n       * @member {com.opensource.svga.ITransform|null|undefined} transform\n       * @memberof com.opensource.svga.FrameEntity\n       * @instance\n       */\n      this.transform = null;\n      /**\n       * FrameEntity clipPath.\n       * @member {string} clipPath\n       * @memberof com.opensource.svga.FrameEntity\n       * @instance\n       */\n      this.clipPath = \"\";\n    }\n    /**\n     * Decodes a FrameEntity message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.FrameEntity\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.FrameEntity} FrameEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(FrameEntity, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var end = reader.end(length);\n        var message = new FrameEntity();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.alpha = reader.float();\n                break;\n              }\n            case 2:\n              {\n                message.layout = Layout.decode(reader, reader.uint32());\n                break;\n              }\n            case 3:\n              {\n                message.transform = Transform.decode(reader, reader.uint32());\n                break;\n              }\n            case 4:\n              {\n                message.clipPath = reader.string();\n                break;\n              }\n            case 5:\n              {\n                var shape = ShapeEntity.decode(reader, reader.uint32());\n                if (shape !== null) {\n                  message.shapes.push(shape);\n                }\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        if (message.shapes.length === 0) {\n          message.shapes = reader.preflight.get(\"latest_shapes\");\n        } else {\n          reader.preflight.set(\"latest_shapes\", message.shapes);\n        }\n        return FrameEntity.format(message);\n      }\n    }, {\n      key: \"format\",\n      value: function format(message) {\n        // alpha值小于 0.05 将不展示，所以不做解析处理\n        if (message.alpha < 0.05) {\n          return FrameEntity.HIDDEN_FRAME;\n        }\n        var alpha = message.alpha,\n          layout = message.layout,\n          transform = message.transform,\n          shapes = message.shapes;\n        return {\n          alpha: alpha,\n          layout: layout,\n          transform: transform,\n          shapes: shapes\n        };\n      }\n    }]);\n  }();\n  FrameEntity.HIDDEN_FRAME = {\n    alpha: 0\n  };\n  var SpriteEntity = /*#__PURE__*/function () {\n    function SpriteEntity() {\n      _classCallCheck(this, SpriteEntity);\n      /**\n       * SpriteEntity frames.\n       * @member {Array.<com.opensource.svga.IFrameEntity>} frames\n       * @memberof com.opensource.svga.SpriteEntity\n       * @instance\n       */\n      this.frames = [];\n      /**\n       * SpriteEntity imageKey.\n       * @member {string} imageKey\n       * @memberof com.opensource.svga.SpriteEntity\n       * @instance\n       */\n      this.imageKey = \"\";\n      /**\n       * SpriteEntity matteKey.\n       * @member {string} matteKey\n       * @memberof com.opensource.svga.SpriteEntity\n       * @instance\n       */\n      this.matteKey = \"\";\n    }\n    /**\n     * Decodes a SpriteEntity message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.SpriteEntity\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.SpriteEntity} SpriteEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(SpriteEntity, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var end = reader.end(length);\n        var message = new SpriteEntity();\n        var tag;\n        reader.preflight.set(\"latest_shapes\", []);\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.imageKey = reader.string();\n                break;\n              }\n            case 2:\n              {\n                if (!(message.frames && message.frames.length)) {\n                  message.frames = [];\n                }\n                message.frames.push(FrameEntity.decode(reader, reader.uint32()));\n                break;\n              }\n            case 3:\n              {\n                message.matteKey = reader.string();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return SpriteEntity.format(message);\n      }\n    }, {\n      key: \"format\",\n      value: function format(message) {\n        return {\n          imageKey: message.imageKey,\n          frames: message.frames\n        };\n      }\n    }]);\n  }();\n  var MovieParams = /*#__PURE__*/function () {\n    function MovieParams() {\n      _classCallCheck(this, MovieParams);\n      /**\n       * MovieParams viewBoxWidth.\n       * @member {number} viewBoxWidth\n       * @memberof com.opensource.svga.MovieParams\n       * @instance\n       */\n      this.viewBoxWidth = 0;\n      /**\n       * MovieParams viewBoxHeight.\n       * @member {number} viewBoxHeight\n       * @memberof com.opensource.svga.MovieParams\n       * @instance\n       */\n      this.viewBoxHeight = 0;\n      /**\n       * MovieParams fps.\n       * @member {number} fps\n       * @memberof com.opensource.svga.MovieParams\n       * @instance\n       */\n      this.fps = 0;\n      /**\n       * MovieParams frames.\n       * @member {number} frames\n       * @memberof com.opensource.svga.MovieParams\n       * @instance\n       */\n      this.frames = 0;\n    }\n    /**\n     * Decodes a MovieParams message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.MovieParams\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.MovieParams} MovieParams\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(MovieParams, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var end = reader.end(length);\n        var message = new MovieParams();\n        var tag;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.viewBoxWidth = reader.float();\n                break;\n              }\n            case 2:\n              {\n                message.viewBoxHeight = reader.float();\n                break;\n              }\n            case 3:\n              {\n                message.fps = reader.int32();\n                break;\n              }\n            case 4:\n              {\n                message.frames = reader.int32();\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return message;\n      }\n    }]);\n  }();\n  var MovieEntity = /*#__PURE__*/function () {\n    function MovieEntity() {\n      _classCallCheck(this, MovieEntity);\n      /**\n       * MovieEntity version.\n       * @member {string} version\n       * @memberof com.opensource.svga.MovieEntity\n       * @instance\n       */\n      this.version = \"\";\n      /**\n       * MovieEntity params.\n       * @member {com.opensource.svga.IMovieParams|null|undefined} params\n       * @memberof com.opensource.svga.MovieEntity\n       * @instance\n       */\n      this.params = null;\n      /**\n       * MovieEntity images.\n       * @member {Object.<string,Uint8Array>} images\n       * @memberof com.opensource.svga.MovieEntity\n       * @instance\n       */\n      this.images = {};\n      /**\n       * MovieEntity sprites.\n       * @member {Array.<com.opensource.svga.ISpriteEntity>} sprites\n       * @memberof com.opensource.svga.MovieEntity\n       * @instance\n       */\n      this.sprites = [];\n    }\n    /**\n     * Decodes a MovieEntity message from the specified reader.\n     * @function decode\n     * @memberof com.opensource.svga.MovieEntity\n     * @static\n     * @param {$protobuf.Reader} reader Reader to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {com.opensource.svga.MovieEntity} MovieEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    return _createClass(MovieEntity, null, [{\n      key: \"decode\",\n      value: function decode(reader, length) {\n        var end = reader.end(length);\n        var message = new MovieEntity();\n        var key;\n        var value;\n        var end2;\n        var tag;\n        var tag2;\n        while (reader.pos < end) {\n          tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              {\n                message.version = reader.string();\n                break;\n              }\n            case 2:\n              {\n                message.params = MovieParams.decode(reader, reader.uint32());\n                break;\n              }\n            case 3:\n              {\n                end2 = reader.uint32() + reader.pos;\n                key = \"\";\n                value = MovieEntity.EMPTY_U8;\n                while (reader.pos < end2) {\n                  tag2 = reader.uint32();\n                  switch (tag2 >>> 3) {\n                    case 1:\n                      key = reader.string();\n                      break;\n                    case 2:\n                      value = reader.bytes();\n                      break;\n                    default:\n                      reader.skipType(tag2 & 7);\n                      break;\n                  }\n                }\n                message.images[key] = value;\n                break;\n              }\n            case 4:\n              {\n                message.sprites.push(SpriteEntity.decode(reader, reader.uint32()));\n                break;\n              }\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return MovieEntity.format(message);\n      }\n    }, {\n      key: \"format\",\n      value: function format(message) {\n        var version = message.version,\n          images = message.images,\n          sprites = message.sprites;\n        var _message$params = message.params,\n          fps = _message$params.fps,\n          frames = _message$params.frames,\n          viewBoxWidth = _message$params.viewBoxWidth,\n          viewBoxHeight = _message$params.viewBoxHeight;\n        return {\n          version: version,\n          filename: \"\",\n          locked: false,\n          dynamicElements: {},\n          size: {\n            width: viewBoxWidth,\n            height: viewBoxHeight\n          },\n          fps: fps,\n          frames: frames,\n          images: images,\n          sprites: sprites\n        };\n      }\n    }]);\n  }();\n  MovieEntity.EMPTY_U8 = new Uint8Array(0); // import benchmark from \"octopus-benchmark\";\n  function createVideoEntity(data, filename) {\n    if (data instanceof Uint8Array) {\n      var reader = new Reader(data);\n      var video = MovieEntity.decode(reader);\n      // benchmark.log('preflight cache size', reader.preflight.size);\n      // benchmark.log('preflight hit count', reader.preflight.hitCount);\n      video.filename = filename;\n      reader.preflight.clear();\n      return video;\n    }\n    throw new Error(\"Invalid data type\");\n  } /**\n    * CurrentPoint对象池，用于减少对象创建和GC压力\n    */\n  var PointPool = /*#__PURE__*/function () {\n    function PointPool() {\n      _classCallCheck(this, PointPool);\n      this.pool = [];\n    }\n    return _createClass(PointPool, [{\n      key: \"acquire\",\n      value: function acquire() {\n        var pool = this.pool;\n        return pool.length > 0 ? pool.pop() : {\n          x: 0,\n          y: 0,\n          x1: 0,\n          y1: 0,\n          x2: 0,\n          y2: 0\n        };\n      }\n    }, {\n      key: \"release\",\n      value: function release(point) {\n        // 重置点的属性\n        point.x = point.y = point.x1 = point.y1 = point.x2 = point.y2 = 0;\n        this.pool.push(point);\n      }\n    }]);\n  }();\n  var Renderer2D = /*#__PURE__*/function () {\n    function Renderer2D(context) {\n      _classCallCheck(this, Renderer2D);\n      this.context = context;\n      this.pointPool = new PointPool();\n      this.lastResizeKey = \"\";\n      this.globalTransform = undefined;\n      this.currentPoint = this.pointPool.acquire();\n    }\n    return _createClass(Renderer2D, [{\n      key: \"setTransform\",\n      value: function setTransform(transform) {\n        if (transform && this.context) {\n          this.context.transform(transform.a, transform.b, transform.c, transform.d, transform.tx, transform.ty);\n        }\n      }\n    }, {\n      key: \"drawBezier\",\n      value: function drawBezier(d, transform, styles) {\n        var context = this.context,\n          pointPool = this.pointPool;\n        this.currentPoint = pointPool.acquire();\n        context.save();\n        Renderer2D.resetShapeStyles(context, styles);\n        this.setTransform(transform);\n        context.beginPath();\n        if (d) {\n          // 使用状态机解析器替代正则表达式\n          var commands = Renderer2D.parseSVGPath(d);\n          var _iterator = _createForOfIteratorHelper(commands),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _step$value = _step.value,\n                command = _step$value.command,\n                args = _step$value.args;\n              if (Renderer2D.SVG_PATH.has(command)) {\n                this.drawBezierElement(this.currentPoint, command, args.split(/[\\s,]+/).filter(Boolean));\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n        Renderer2D.fillOrStroke(context, styles);\n        pointPool.release(this.currentPoint);\n        context.restore();\n      }\n    }, {\n      key: \"drawBezierElement\",\n      value: function drawBezierElement(currentPoint, method, args) {\n        var context = this.context;\n        switch (method) {\n          case \"M\":\n            currentPoint.x = +args[0];\n            currentPoint.y = +args[1];\n            context.moveTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"m\":\n            currentPoint.x += +args[0];\n            currentPoint.y += +args[1];\n            context.moveTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"L\":\n            currentPoint.x = +args[0];\n            currentPoint.y = +args[1];\n            context.lineTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"l\":\n            currentPoint.x += +args[0];\n            currentPoint.y += +args[1];\n            context.lineTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"H\":\n            currentPoint.x = +args[0];\n            context.lineTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"h\":\n            currentPoint.x += +args[0];\n            context.lineTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"V\":\n            currentPoint.y = +args[0];\n            context.lineTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"v\":\n            currentPoint.y += +args[0];\n            context.lineTo(currentPoint.x, currentPoint.y);\n            break;\n          case \"C\":\n            currentPoint.x1 = +args[0];\n            currentPoint.y1 = +args[1];\n            currentPoint.x2 = +args[2];\n            currentPoint.y2 = +args[3];\n            currentPoint.x = +args[4];\n            currentPoint.y = +args[5];\n            context.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\n            break;\n          case \"c\":\n            currentPoint.x1 = currentPoint.x + +args[0];\n            currentPoint.y1 = currentPoint.y + +args[1];\n            currentPoint.x2 = currentPoint.x + +args[2];\n            currentPoint.y2 = currentPoint.y + +args[3];\n            currentPoint.x += +args[4];\n            currentPoint.y += +args[5];\n            context.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\n            break;\n          case \"S\":\n            if (currentPoint.x1 !== undefined && currentPoint.y1 !== undefined && currentPoint.x2 !== undefined && currentPoint.y2 !== undefined) {\n              currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n              currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n              currentPoint.x2 = +args[0];\n              currentPoint.y2 = +args[1];\n              currentPoint.x = +args[2];\n              currentPoint.y = +args[3];\n              context.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\n            } else {\n              currentPoint.x1 = +args[0];\n              currentPoint.y1 = +args[1];\n              currentPoint.x = +args[2];\n              currentPoint.y = +args[3];\n              context.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\n            }\n            break;\n          case \"s\":\n            if (currentPoint.x1 !== undefined && currentPoint.y1 !== undefined && currentPoint.x2 !== undefined && currentPoint.y2 !== undefined) {\n              currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n              currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n              currentPoint.x2 = currentPoint.x + +args[0];\n              currentPoint.y2 = currentPoint.y + +args[1];\n              currentPoint.x += +args[2];\n              currentPoint.y += +args[3];\n              context.bezierCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x2, currentPoint.y2, currentPoint.x, currentPoint.y);\n            } else {\n              currentPoint.x1 = currentPoint.x + +args[0];\n              currentPoint.y1 = currentPoint.y + +args[1];\n              currentPoint.x += +args[2];\n              currentPoint.y += +args[3];\n              context.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\n            }\n            break;\n          case \"Q\":\n            currentPoint.x1 = +args[0];\n            currentPoint.y1 = +args[1];\n            currentPoint.x = +args[2];\n            currentPoint.y = +args[3];\n            context.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\n            break;\n          case \"q\":\n            currentPoint.x1 = currentPoint.x + +args[0];\n            currentPoint.y1 = currentPoint.y + +args[1];\n            currentPoint.x += +args[2];\n            currentPoint.y += +args[3];\n            context.quadraticCurveTo(currentPoint.x1, currentPoint.y1, currentPoint.x, currentPoint.y);\n            break;\n          case \"Z\":\n          case \"z\":\n            context.closePath();\n            break;\n        }\n      }\n    }, {\n      key: \"drawEllipse\",\n      value: function drawEllipse(x, y, radiusX, radiusY, transform, styles) {\n        var context = this.context;\n        context.save();\n        Renderer2D.resetShapeStyles(context, styles);\n        this.setTransform(transform);\n        x -= radiusX;\n        y -= radiusY;\n        var w = radiusX * 2;\n        var h = radiusY * 2;\n        var kappa = 0.5522848;\n        var ox = w / 2 * kappa;\n        var oy = h / 2 * kappa;\n        var xe = x + w;\n        var ye = y + h;\n        var xm = x + w / 2;\n        var ym = y + h / 2;\n        context.beginPath();\n        context.moveTo(x, ym);\n        context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n        Renderer2D.fillOrStroke(context, styles);\n        context.restore();\n      }\n    }, {\n      key: \"drawRect\",\n      value: function drawRect(x, y, width, height, cornerRadius, transform, styles) {\n        var context = this.context;\n        context.save();\n        Renderer2D.resetShapeStyles(context, styles);\n        this.setTransform(transform);\n        var radius = cornerRadius;\n        if (width < 2 * radius) {\n          radius = width / 2;\n        }\n        if (height < 2 * radius) {\n          radius = height / 2;\n        }\n        context.beginPath();\n        context.moveTo(x + radius, y);\n        context.arcTo(x + width, y, x + width, y + height, radius);\n        context.arcTo(x + width, y + height, x, y + height, radius);\n        context.arcTo(x, y + height, x, y, radius);\n        context.arcTo(x, y, x + width, y, radius);\n        context.closePath();\n        Renderer2D.fillOrStroke(context, styles);\n        context.restore();\n      }\n    }, {\n      key: \"drawShape\",\n      value: function drawShape(shape) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        var type = shape.type,\n          path = shape.path,\n          transform = shape.transform,\n          styles = shape.styles;\n        switch (type) {\n          case \"shape\" /* PlatformVideo.SHAPE_TYPE.SHAPE */:\n            this.drawBezier(path.d, transform, styles);\n            break;\n          case \"ellipse\" /* PlatformVideo.SHAPE_TYPE.ELLIPSE */:\n            this.drawEllipse((_a = path.x) !== null && _a !== void 0 ? _a : 0, (_b = path.y) !== null && _b !== void 0 ? _b : 0, (_c = path.radiusX) !== null && _c !== void 0 ? _c : 0, (_d = path.radiusY) !== null && _d !== void 0 ? _d : 0, transform, styles);\n            break;\n          case \"rect\" /* PlatformVideo.SHAPE_TYPE.RECT */:\n            this.drawRect((_e = path.x) !== null && _e !== void 0 ? _e : 0, (_f = path.y) !== null && _f !== void 0 ? _f : 0, (_g = path.width) !== null && _g !== void 0 ? _g : 0, (_h = path.height) !== null && _h !== void 0 ? _h : 0, (_j = path.cornerRadius) !== null && _j !== void 0 ? _j : 0, transform, styles);\n            break;\n        }\n      }\n    }, {\n      key: \"drawSprite\",\n      value: function drawSprite(frame, bitmap, dynamicElement) {\n        if (frame.alpha === 0) return;\n        var context = this.context;\n        var alpha = frame.alpha,\n          transform = frame.transform,\n          layout = frame.layout,\n          shapes = frame.shapes;\n        var _ref = transform !== null && transform !== void 0 ? transform : {},\n          _ref$a = _ref.a,\n          a = _ref$a === void 0 ? 1 : _ref$a,\n          _ref$b = _ref.b,\n          b = _ref$b === void 0 ? 0 : _ref$b,\n          _ref$c = _ref.c,\n          c = _ref$c === void 0 ? 0 : _ref$c,\n          _ref$d = _ref.d,\n          d = _ref$d === void 0 ? 1 : _ref$d,\n          _ref$tx = _ref.tx,\n          tx = _ref$tx === void 0 ? 0 : _ref$tx,\n          _ref$ty = _ref.ty,\n          ty = _ref$ty === void 0 ? 0 : _ref$ty;\n        context.save();\n        this.setTransform(this.globalTransform);\n        context.globalAlpha = alpha;\n        context.transform(a, b, c, d, tx, ty);\n        if (bitmap) {\n          context.drawImage(bitmap, 0, 0, layout.width, layout.height);\n        }\n        if (dynamicElement) {\n          context.drawImage(dynamicElement, (layout.width - dynamicElement.width) / 2, (layout.height - dynamicElement.height) / 2);\n        }\n        for (var i = 0; i < shapes.length; i++) {\n          this.drawShape(shapes[i]);\n        }\n        context.restore();\n      }\n      /**\n       * 调整画布尺寸\n       * @param contentMode\n       * @param videoSize\n       * @param canvasSize\n       * @returns\n       */\n    }, {\n      key: \"resize\",\n      value: function resize(contentMode, videoSize, canvasSize) {\n        var canvasWidth = canvasSize.width,\n          canvasHeight = canvasSize.height;\n        var videoWidth = videoSize.width,\n          videoHeight = videoSize.height;\n        var resizeKey = \"\".concat(contentMode, \"-\").concat(videoWidth, \"-\").concat(videoHeight, \"-\").concat(canvasWidth, \"-\").concat(canvasHeight);\n        var lastTransform = this.globalTransform;\n        if (this.lastResizeKey === resizeKey && lastTransform) {\n          return;\n        }\n        var scale = {\n          scaleX: 1,\n          scaleY: 1,\n          translateX: 0,\n          translateY: 0\n        };\n        if (contentMode === \"fill\" /* PLAYER_CONTENT_MODE.FILL */) {\n          scale.scaleX = canvasWidth / videoWidth;\n          scale.scaleY = canvasHeight / videoHeight;\n        } else {\n          scale = Renderer2D.calculateScale(contentMode, videoSize, canvasSize);\n        }\n        this.lastResizeKey = resizeKey;\n        this.globalTransform = {\n          a: scale.scaleX,\n          b: 0.0,\n          c: 0.0,\n          d: scale.scaleY,\n          tx: scale.translateX,\n          ty: scale.translateY\n        };\n      }\n    }, {\n      key: \"render\",\n      value: function render(videoEntity, materials, dynamicMaterials, currentFrame, head, tail) {\n        var sprite;\n        var imageKey;\n        var bitmap;\n        var dynamicElement;\n        for (var i = head; i < tail; i++) {\n          sprite = videoEntity.sprites[i];\n          imageKey = sprite.imageKey;\n          bitmap = materials.get(imageKey);\n          dynamicElement = dynamicMaterials.get(imageKey);\n          this.drawSprite(sprite.frames[currentFrame], bitmap, dynamicElement);\n        }\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        this.globalTransform = undefined;\n        this.lastResizeKey = \"\";\n        this.context = null;\n      }\n    }], [{\n      key: \"parseSVGPath\",\n      value:\n      // 在Renderer2D类中添加新的解析方法\n      function parseSVGPath(d) {\n        var SVG_LETTER_REGEXP = Renderer2D.SVG_LETTER_REGEXP;\n        var result = [];\n        var currentIndex = 0;\n        // 状态：0 - 等待命令，1 - 读取参数\n        var state = 0;\n        var currentCommand = \"\";\n        var currentArgs = \"\";\n        while (currentIndex < d.length) {\n          var char = d[currentIndex];\n          switch (state) {\n            case 0:\n              // 等待命令\n              if (SVG_LETTER_REGEXP.test(char)) {\n                currentCommand = char;\n                state = 1;\n              }\n              break;\n            case 1:\n              // 读取参数\n              if (SVG_LETTER_REGEXP.test(char)) {\n                // 遇到新命令，保存当前命令和参数\n                result.push({\n                  command: currentCommand,\n                  args: currentArgs.trim()\n                });\n                currentCommand = char;\n                currentArgs = \"\";\n              } else {\n                currentArgs += char;\n              }\n              break;\n          }\n          currentIndex++;\n        }\n        // 处理最后一个命令\n        if (currentCommand && state === 1) {\n          result.push({\n            command: currentCommand,\n            args: currentArgs.trim()\n          });\n        }\n        return result;\n      }\n    }, {\n      key: \"fillOrStroke\",\n      value: function fillOrStroke(context, styles) {\n        if (styles) {\n          if (styles.fill) {\n            context.fill();\n          }\n          if (styles.stroke) {\n            context.stroke();\n          }\n        }\n      }\n    }, {\n      key: \"resetShapeStyles\",\n      value: function resetShapeStyles(context, styles) {\n        if (styles) {\n          context.strokeStyle = styles.stroke || \"transparent\";\n          if (styles.strokeWidth > 0) {\n            context.lineWidth = styles.strokeWidth;\n          }\n          if (styles.miterLimit > 0) {\n            context.miterLimit = styles.miterLimit;\n          }\n          if (styles.lineCap) {\n            context.lineCap = styles.lineCap;\n          }\n          if (styles.lineJoin) {\n            context.lineJoin = styles.lineJoin;\n          }\n          context.fillStyle = styles.fill || \"transparent\";\n          if (styles.lineDash) {\n            context.setLineDash(styles.lineDash);\n          }\n        }\n      }\n      /**\n       * 计算缩放比例\n       * @param contentMode\n       * @param videoSize\n       * @param canvasSize\n       * @returns\n       */\n    }, {\n      key: \"calculateScale\",\n      value: function calculateScale(contentMode, videoSize, canvasSize) {\n        var imageRatio = videoSize.width / videoSize.height;\n        var viewRatio = canvasSize.width / canvasSize.height;\n        var isAspectFit = contentMode === \"aspect-fit\" /* PLAYER_CONTENT_MODE.ASPECT_FIT */;\n        var shouldUseWidth = imageRatio >= viewRatio && isAspectFit || imageRatio <= viewRatio && !isAspectFit;\n        var createTransform = function createTransform(scale, translateX, translateY) {\n          return {\n            scaleX: scale,\n            scaleY: scale,\n            translateX: translateX,\n            translateY: translateY\n          };\n        };\n        if (shouldUseWidth) {\n          var _scale = canvasSize.width / videoSize.width;\n          return createTransform(_scale, 0, (canvasSize.height - videoSize.height * _scale) / 2);\n        }\n        var scale = canvasSize.height / videoSize.height;\n        return createTransform(scale, (canvasSize.width - videoSize.width * scale) / 2, 0);\n      }\n    }]);\n  }();\n  /**\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths\n   * 绘制路径的不同指令：\n   * * 直线命令\n   * - M: moveTo，移动到指定点，不绘制直线。\n   * - L: lineTo，从起始点绘制一条直线到指定点。\n   * - H: horizontal lineTo，从起始点绘制一条水平线到指定点。\n   * - V: vertical lineTo，从起始点绘制一条垂直线到指定点。\n   * - Z: closePath，从起始点绘制一条直线到路径起点，形成一个闭合路径。\n   * * 曲线命令\n   * - C: bezierCurveTo，绘制三次贝塞尔曲线。\n   * - S: smooth curveTo，绘制平滑三次贝塞尔曲线。\n   * - Q: quadraticCurveTo，绘制两次贝塞尔曲线。\n   * - T: smooth quadraticCurveTo，绘制平滑两次贝塞尔曲线。\n   * * 弧线命令\n   * - A: arcTo，从起始点绘制一条弧线到指定点。\n   */\n  Renderer2D.SVG_PATH = new Set([\"M\", \"L\", \"H\", \"V\", \"Z\", \"C\", \"S\", \"Q\", \"m\", \"l\", \"h\", \"v\", \"z\", \"c\", \"s\", \"q\"]);\n  Renderer2D.SVG_LETTER_REGEXP = /[a-zA-Z]/;\n  var Renderer2DExtension = {\n    stick: function stick(context, bitmap) {\n      return function () {\n        return context.drawImage(bitmap, 0, 0);\n      };\n    },\n    clear: function clear(type, context, canvas, width, height) {\n      if (type === \"CL\") {\n        return function () {\n          // FIXME:【支付宝小程序】无法通过改变尺寸来清理画布，无论是Canvas还是OffscreenCanvas\n          context.clearRect(0, 0, width, height);\n        };\n      }\n      return function () {\n        canvas.width = width;\n        canvas.height = height;\n      };\n    }\n  }; /**\n     * 动画控制器\n     */\n  var Animator = /*#__PURE__*/function () {\n    function Animator() {\n      _classCallCheck(this, Animator);\n      /**\n       * 动画是否执行\n       */\n      this.isRunning = false;\n      /**\n       * 动画开始时间\n       */\n      this.startTime = 0;\n      /**\n       * 动画持续时间\n       */\n      this.duration = 0;\n      /**\n       * 循环播放开始帧与动画开始帧之间的时间偏差\n       */\n      this.loopStart = 0;\n      /**\n       * 动画暂停时的时间偏差\n       */\n      this.pauseTime = 0;\n      /**\n       * 循环持续时间\n       */\n      this.loopDuration = 0;\n      this.onAnimate = platform.noop;\n      /* ---- 事件钩子 ---- */\n      this.onStart = platform.noop;\n      this.onUpdate = platform.noop;\n      this.onEnd = platform.noop;\n    }\n    /**\n     * 设置动画的必要参数\n     * @param duration\n     * @param loopStart\n     * @param loop\n     * @param fillValue\n     */\n    return _createClass(Animator, [{\n      key: \"setConfig\",\n      value: function setConfig(duration, loopStart, loop, fillValue) {\n        this.duration = duration;\n        this.loopStart = loopStart;\n        this.loopDuration = duration * loop + fillValue - loopStart;\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        this.isRunning = true;\n        this.startTime = platform.now();\n        this.pauseTime = 0;\n        this.onStart();\n        this.doFrame();\n      }\n    }, {\n      key: \"resume\",\n      value: function resume() {\n        if (this.startTime === 0) {\n          return false;\n        }\n        this.isRunning = true;\n        this.doFrame();\n        return true;\n      }\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        if (this.startTime === 0) {\n          return false;\n        }\n        this.isRunning = false;\n        // 设置暂停的位置\n        this.pauseTime = (platform.now() - this.startTime) % this.duration;\n        return true;\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        this.isRunning = false;\n        this.startTime = 0;\n      }\n    }, {\n      key: \"doFrame\",\n      value: function doFrame() {\n        var _this = this;\n        if (this.isRunning) {\n          this.doDeltaTime(platform.now() - this.startTime);\n          if (this.isRunning) {\n            this.onAnimate(function () {\n              return _this.doFrame();\n            });\n          }\n        }\n      }\n    }, {\n      key: \"doDeltaTime\",\n      value: function doDeltaTime(deltaTime) {\n        var duration = this.duration,\n          loopStart = this.loopStart,\n          pauseTime = this.pauseTime,\n          loopDuration = this.loopDuration;\n        // 本轮动画已消耗的时间比例（Percentage of speed time）\n        var percent;\n        var ended = false;\n        // 运行时间 大于等于 循环持续时间\n        if (deltaTime >= loopDuration) {\n          // 动画已结束\n          percent = 1.0;\n          ended = true;\n          this.stop();\n        } else {\n          // 本轮动画已消耗的时间比例 = 本轮动画已消耗的时间 / 动画持续时间\n          percent = (deltaTime + loopStart + pauseTime) % duration / duration;\n        }\n        this.onUpdate(percent);\n        if (!this.isRunning && ended) {\n          this.onEnd();\n        }\n      }\n    }]);\n  }(); // DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n  // https://tools.ietf.org/html/rfc1951\n  // You may also wish to take a look at the guide I made about this program:\n  // https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n  // Some of the following code is similar to that of UZIP.js:\n  // https://github.com/photopea/UZIP.js\n  // However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n  // Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n  // is better for memory in most engines (I *think*).\n  // aliases for shorter compressed code (most minifers don't do this)\n  var u8 = Uint8Array,\n    u16 = Uint16Array,\n    i32 = Int32Array;\n  // fixed length extra bits\n  var fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */0, 0, /* impossible */0]);\n  // fixed distance extra bits\n  var fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */0, 0]);\n  // code length index map\n  var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  // get base, reverse index map from extra bits\n  var freb = function freb(eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n      b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var _i = 1; _i < 30; ++_i) {\n      for (var j = b[_i]; j < b[_i + 1]; ++j) {\n        r[j] = j - b[_i] << 5 | _i;\n      }\n    }\n    return {\n      b: b,\n      r: r\n    };\n  };\n  var _freb = freb(fleb, 2),\n    fl = _freb.b,\n    revfl = _freb.r;\n  // we can ignore the fact that the other numbers are wrong; they never happen anyway\n  fl[28] = 258, revfl[258] = 28;\n  var _freb2 = freb(fdeb, 0),\n    fd = _freb2.b,\n    revfd = _freb2.r;\n  // map of value to reverse (assuming 16 bits)\n  var rev = new u16(32768);\n  for (var i$1 = 0; i$1 < 32768; ++i$1) {\n    // reverse table algorithm from SO\n    var x = (i$1 & 0xAAAA) >> 1 | (i$1 & 0x5555) << 1;\n    x = (x & 0xCCCC) >> 2 | (x & 0x3333) << 2;\n    x = (x & 0xF0F0) >> 4 | (x & 0x0F0F) << 4;\n    rev[i$1] = ((x & 0xFF00) >> 8 | (x & 0x00FF) << 8) >> 1;\n  }\n  // create huffman tree from u8 \"map\": index -> code length for code index\n  // mb (max bits) must be at most 15\n  // TODO: optimize/split up?\n  var hMap = function hMap(cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n      if (cd[i]) ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n      le[i] = le[i - 1] + l[i - 1] << 1;\n    }\n    var co;\n    if (r) {\n      // u16 \"map\": index -> number of actual bits, symbol for code\n      co = new u16(1 << mb);\n      // bits to remove for reverser\n      var rvb = 15 - mb;\n      for (i = 0; i < s; ++i) {\n        // ignore 0 lengths\n        if (cd[i]) {\n          // num encoding both symbol and bits read\n          var sv = i << 4 | cd[i];\n          // free bits\n          var _r = mb - cd[i];\n          // start value\n          var v = le[cd[i] - 1]++ << _r;\n          // m is end value\n          for (var m = v | (1 << _r) - 1; v <= m; ++v) {\n            // every 16 bit value starting with the code yields the same result\n            co[rev[v] >> rvb] = sv;\n          }\n        }\n      }\n    } else {\n      co = new u16(s);\n      for (i = 0; i < s; ++i) {\n        if (cd[i]) {\n          co[i] = rev[le[cd[i] - 1]++] >> 15 - cd[i];\n        }\n      }\n    }\n    return co;\n  };\n  // fixed length tree\n  var flt = new u8(288);\n  for (var _i2$1 = 0; _i2$1 < 144; ++_i2$1) flt[_i2$1] = 8;\n  for (var _i3 = 144; _i3 < 256; ++_i3) flt[_i3] = 9;\n  for (var _i4 = 256; _i4 < 280; ++_i4) flt[_i4] = 7;\n  for (var _i5 = 280; _i5 < 288; ++_i5) flt[_i5] = 8;\n  // fixed distance tree\n  var fdt = new u8(32);\n  for (var _i6 = 0; _i6 < 32; ++_i6) fdt[_i6] = 5;\n  // fixed length map\n  var flm = /*#__PURE__*/hMap(flt, 9, 0),\n    flrm = /*#__PURE__*/hMap(flt, 9, 1);\n  // fixed distance map\n  var fdm = /*#__PURE__*/hMap(fdt, 5, 0),\n    fdrm = /*#__PURE__*/hMap(fdt, 5, 1);\n  // find max of array\n  var max = function max(a) {\n    var m = a[0];\n    for (var _i7 = 1; _i7 < a.length; ++_i7) {\n      if (a[_i7] > m) m = a[_i7];\n    }\n    return m;\n  };\n  // read d, starting at bit p and mask with m\n  var bits = function bits(d, p, m) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n  };\n  // read d, starting at bit p continuing for at least 16 bits\n  var bits16 = function bits16(d, p) {\n    var o = p / 8 | 0;\n    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n  };\n  // get end of byte\n  var shft = function shft(p) {\n    return (p + 7) / 8 | 0;\n  };\n  // typed array slice - allows garbage collector to free original reference,\n  // while being more compatible than .slice\n  var slc = function slc(v, s, e) {\n    if (e == null || e > v.length) e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n  };\n  // error codes\n  var ec = ['unexpected EOF', 'invalid block type', 'invalid length/literal', 'invalid distance', 'stream finished', 'no stream handler',,\n  // determined by compression function\n  'no callback', 'invalid UTF-8 data', 'extra field too long', 'date not in range 1980-2099', 'filename too long', 'stream finishing', 'invalid zip data'\n  // determined by unknown compression method\n  ];\n  var _err = function err(ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace) Error.captureStackTrace(e, _err);\n    if (!nt) throw e;\n    return e;\n  };\n  // expands raw DEFLATE data\n  var inflt = function inflt(dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length,\n      dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l) return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf) buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function cbuf(l) {\n      var bl = buf.length;\n      // need to increase size to fit\n      if (l > bl) {\n        // Double or set to necessary, whichever is greater\n        var nbuf = new u8(Math.max(bl * 2, l));\n        nbuf.set(buf);\n        buf = nbuf;\n      }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0,\n      pos = st.p || 0,\n      bt = st.b || 0,\n      lm = st.l,\n      dm = st.d,\n      lbt = st.m,\n      dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n      if (!lm) {\n        // BFINAL - this is only 1 when last chunk is next\n        final = bits(dat, pos, 1);\n        // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n        var type = bits(dat, pos + 1, 3);\n        pos += 3;\n        if (!type) {\n          // go to end of byte boundary\n          var s = shft(pos) + 4,\n            l = dat[s - 4] | dat[s - 3] << 8,\n            t = s + l;\n          if (t > sl) {\n            if (noSt) _err(0);\n            break;\n          }\n          // ensure size\n          if (resize) cbuf(bt + l);\n          // Copy over uncompressed data\n          buf.set(dat.subarray(s, t), bt);\n          // Get new bitpos, update byte count\n          st.b = bt += l, st.p = pos = t * 8, st.f = final;\n          continue;\n        } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n          //  literal                            lengths\n          var hLit = bits(dat, pos, 31) + 257,\n            hcLen = bits(dat, pos + 10, 15) + 4;\n          var tl = hLit + bits(dat, pos + 5, 31) + 1;\n          pos += 14;\n          // length+distance tree\n          var ldt = new u8(tl);\n          // code length tree\n          var clt = new u8(19);\n          for (var _i8 = 0; _i8 < hcLen; ++_i8) {\n            // use index map to get real code\n            clt[clim[_i8]] = bits(dat, pos + _i8 * 3, 7);\n          }\n          pos += hcLen * 3;\n          // code lengths bits\n          var clb = max(clt),\n            clbmsk = (1 << clb) - 1;\n          // code lengths map\n          var clm = hMap(clt, clb, 1);\n          for (var _i9 = 0; _i9 < tl;) {\n            var r = clm[bits(dat, pos, clbmsk)];\n            // bits read\n            pos += r & 15;\n            // symbol\n            var _s = r >> 4;\n            // code length to copy\n            if (_s < 16) {\n              ldt[_i9++] = _s;\n            } else {\n              //  copy   count\n              var c = 0,\n                n = 0;\n              if (_s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[_i9 - 1];else if (_s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (_s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n              while (n--) ldt[_i9++] = c;\n            }\n          }\n          //    length tree                 distance tree\n          var lt = ldt.subarray(0, hLit),\n            dt = ldt.subarray(hLit);\n          // max length bits\n          lbt = max(lt);\n          // max dist bits\n          dbt = max(dt);\n          lm = hMap(lt, lbt, 1);\n          dm = hMap(dt, dbt, 1);\n        } else _err(1);\n        if (pos > tbts) {\n          if (noSt) _err(0);\n          break;\n        }\n      }\n      // Make sure the buffer can hold this + the largest possible addition\n      // Maximum chunk size (practically, theoretically infinite) is 2^17\n      if (resize) cbuf(bt + 131072);\n      var lms = (1 << lbt) - 1,\n        dms = (1 << dbt) - 1;\n      var lpos = pos;\n      for (;; lpos = pos) {\n        // bits read, code\n        var _c = lm[bits16(dat, pos) & lms],\n          sym = _c >> 4;\n        pos += _c & 15;\n        if (pos > tbts) {\n          if (noSt) _err(0);\n          break;\n        }\n        if (!_c) _err(2);\n        if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n          lpos = pos, lm = undefined;\n          break;\n        } else {\n          var add = sym - 254;\n          // no extra bits needed if less\n          if (sym > 264) {\n            // index\n            var _i0 = sym - 257,\n              b = fleb[_i0];\n            add = bits(dat, pos, (1 << b) - 1) + fl[_i0];\n            pos += b;\n          }\n          // dist\n          var d = dm[bits16(dat, pos) & dms],\n            dsym = d >> 4;\n          if (!d) _err(3);\n          pos += d & 15;\n          var _dt = fd[dsym];\n          if (dsym > 3) {\n            var _b2 = fdeb[dsym];\n            _dt += bits16(dat, pos) & (1 << _b2) - 1, pos += _b2;\n          }\n          if (pos > tbts) {\n            if (noSt) _err(0);\n            break;\n          }\n          if (resize) cbuf(bt + 131072);\n          var end = bt + add;\n          if (bt < _dt) {\n            var shift = dl - _dt,\n              dend = Math.min(_dt, end);\n            if (shift + bt < 0) _err(3);\n            for (; bt < dend; ++bt) buf[bt] = dict[shift + bt];\n          }\n          for (; bt < end; ++bt) buf[bt] = buf[bt - _dt];\n        }\n      }\n      st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n      if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n  };\n  // starting at p, write the minimum number of bits that can hold v to d\n  var wbits = function wbits(d, p, v) {\n    v <<= p & 7;\n    var o = p / 8 | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n  };\n  // starting at p, write the minimum number of bits (>8) that can hold v to d\n  var wbits16 = function wbits16(d, p, v) {\n    v <<= p & 7;\n    var o = p / 8 | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n  };\n  // creates code lengths from a frequency table\n  var hTree = function hTree(d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var _i1 = 0; _i1 < d.length; ++_i1) {\n      if (d[_i1]) t.push({\n        s: _i1,\n        f: d[_i1]\n      });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s) return {\n      t: et,\n      l: 0\n    };\n    if (s == 1) {\n      var v = new u8(t[0].s + 1);\n      v[t[0].s] = 1;\n      return {\n        t: v,\n        l: 1\n      };\n    }\n    t.sort(function (a, b) {\n      return a.f - b.f;\n    });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({\n      s: -1,\n      f: 25001\n    });\n    var l = t[0],\n      r = t[1],\n      i0 = 0,\n      i1 = 1,\n      i2 = 2;\n    t[0] = {\n      s: -1,\n      f: l.f + r.f,\n      l: l,\n      r: r\n    };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n      l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n      r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n      t[i1++] = {\n        s: -1,\n        f: l.f + r.f,\n        l: l,\n        r: r\n      };\n    }\n    var maxSym = t2[0].s;\n    for (var _i10 = 1; _i10 < s; ++_i10) {\n      if (t2[_i10].s > maxSym) maxSym = t2[_i10].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = _ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n      // more algorithms from UZIP.js\n      // TODO: find out how this code works (debt)\n      //  ind    debt\n      var _i11 = 0,\n        dt = 0;\n      //    left            cost\n      var lft = mbt - mb,\n        cst = 1 << lft;\n      t2.sort(function (a, b) {\n        return tr[b.s] - tr[a.s] || a.f - b.f;\n      });\n      for (; _i11 < s; ++_i11) {\n        var _i12 = t2[_i11].s;\n        if (tr[_i12] > mb) {\n          dt += cst - (1 << mbt - tr[_i12]);\n          tr[_i12] = mb;\n        } else break;\n      }\n      dt >>= lft;\n      while (dt > 0) {\n        var _i13 = t2[_i11].s;\n        if (tr[_i13] < mb) dt -= 1 << mb - tr[_i13]++ - 1;else ++_i11;\n      }\n      for (; _i11 >= 0 && dt; --_i11) {\n        var _i14 = t2[_i11].s;\n        if (tr[_i14] == mb) {\n          --tr[_i14];\n          ++dt;\n        }\n      }\n      mbt = mb;\n    }\n    return {\n      t: new u8(tr),\n      l: mbt\n    };\n  };\n  // get the max length and assign length codes\n  var _ln = function ln(n, l, d) {\n    return n.s == -1 ? Math.max(_ln(n.l, l, d + 1), _ln(n.r, l, d + 1)) : l[n.s] = d;\n  };\n  // length codes generation\n  var lc = function lc(c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s]);\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0,\n      cln = c[0],\n      cls = 1;\n    var w = function w(v) {\n      cl[cli++] = v;\n    };\n    for (var _i15 = 1; _i15 <= s; ++_i15) {\n      if (c[_i15] == cln && _i15 != s) ++cls;else {\n        if (!cln && cls > 2) {\n          for (; cls > 138; cls -= 138) w(32754);\n          if (cls > 2) {\n            w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);\n            cls = 0;\n          }\n        } else if (cls > 3) {\n          w(cln), --cls;\n          for (; cls > 6; cls -= 6) w(8304);\n          if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;\n        }\n        while (cls--) w(cln);\n        cls = 1;\n        cln = c[_i15];\n      }\n    }\n    return {\n      c: cl.subarray(0, cli),\n      n: s\n    };\n  };\n  // calculate the length of output from tree, code lengths\n  var clen = function clen(cf, cl) {\n    var l = 0;\n    for (var _i16 = 0; _i16 < cl.length; ++_i16) l += cf[_i16] * cl[_i16];\n    return l;\n  };\n  // writes a fixed block\n  // returns the new bit pos\n  var wfblk = function wfblk(out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var _i17 = 0; _i17 < s; ++_i17) out[o + _i17 + 4] = dat[_i17];\n    return (o + 4 + s) * 8;\n  };\n  // writes a block\n  var wblk = function wblk(dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _hTree = hTree(lf, 15),\n      dlt = _hTree.t,\n      mlb = _hTree.l;\n    var _hTree2 = hTree(df, 15),\n      ddt = _hTree2.t,\n      mdb = _hTree2.l;\n    var _lc = lc(dlt),\n      lclt = _lc.c,\n      nlc = _lc.n;\n    var _lc2 = lc(ddt),\n      lcdt = _lc2.c,\n      ndc = _lc2.n;\n    var lcfreq = new u16(19);\n    for (var _i18 = 0; _i18 < lclt.length; ++_i18) ++lcfreq[lclt[_i18] & 31];\n    for (var _i19 = 0; _i19 < lcdt.length; ++_i19) ++lcfreq[lcdt[_i19] & 31];\n    var _hTree3 = hTree(lcfreq, 7),\n      lct = _hTree3.t,\n      mlcb = _hTree3.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n    var flen = bl + 5 << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n      lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n      var llm = hMap(lct, mlcb, 0);\n      wbits(out, p, nlc - 257);\n      wbits(out, p + 5, ndc - 1);\n      wbits(out, p + 10, nlcc - 4);\n      p += 14;\n      for (var _i20 = 0; _i20 < nlcc; ++_i20) wbits(out, p + 3 * _i20, lct[clim[_i20]]);\n      p += 3 * nlcc;\n      var lcts = [lclt, lcdt];\n      for (var it = 0; it < 2; ++it) {\n        var clct = lcts[it];\n        for (var _i21 = 0; _i21 < clct.length; ++_i21) {\n          var len = clct[_i21] & 31;\n          wbits(out, p, llm[len]), p += lct[len];\n          if (len > 15) wbits(out, p, clct[_i21] >> 5 & 127), p += clct[_i21] >> 12;\n        }\n      }\n    } else {\n      lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var _i22 = 0; _i22 < li; ++_i22) {\n      var sym = syms[_i22];\n      if (sym > 255) {\n        var _len = sym >> 18 & 31;\n        wbits16(out, p, lm[_len + 257]), p += ll[_len + 257];\n        if (_len > 7) wbits(out, p, sym >> 23 & 31), p += fleb[_len];\n        var dst = sym & 31;\n        wbits16(out, p, dm[dst]), p += dl[dst];\n        if (dst > 3) wbits16(out, p, sym >> 5 & 8191), p += fdeb[dst];\n      } else {\n        wbits16(out, p, lm[sym]), p += ll[sym];\n      }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n  };\n  // deflate options (nice << 13) | chain\n  var deo = /*#__PURE__*/new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n  // empty\n  var et = /*#__PURE__*/new u8(0);\n  // compresses data into a raw DEFLATE buffer\n  var dflt = function dflt(dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n      if (pos) w[0] = st.r >> 3;\n      var opt = deo[lvl - 1];\n      var n = opt >> 13,\n        c = opt & 8191;\n      var msk = (1 << plvl) - 1;\n      //    prev 2-byte val map    curr 2-byte val map\n      var prev = st.p || new u16(32768),\n        head = st.h || new u16(msk + 1);\n      var bs1 = Math.ceil(plvl / 3),\n        bs2 = 2 * bs1;\n      var hsh = function hsh(i) {\n        return (dat[i] ^ dat[i + 1] << bs1 ^ dat[i + 2] << bs2) & msk;\n      };\n      // 24576 is an arbitrary number of maximum symbols per block\n      // 424 buffer for last block\n      var syms = new i32(25000);\n      // length/literal freq   distance freq\n      var lf = new u16(288),\n        df = new u16(32);\n      //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n      var _lc3 = 0,\n        eb = 0,\n        _i23 = st.i || 0,\n        li = 0,\n        wi = st.w || 0,\n        bs = 0;\n      for (; _i23 + 2 < s; ++_i23) {\n        // hash value\n        var hv = hsh(_i23);\n        // index mod 32768    previous index mod\n        var imod = _i23 & 32767,\n          pimod = head[hv];\n        prev[imod] = pimod;\n        head[hv] = imod;\n        // We always should modify head and prev, but only add symbols if\n        // this data is not yet processed (\"wait\" for wait index)\n        if (wi <= _i23) {\n          // bytes remaining\n          var rem = s - _i23;\n          if ((_lc3 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n            pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, _i23 - bs, pos);\n            li = _lc3 = eb = 0, bs = _i23;\n            for (var j = 0; j < 286; ++j) lf[j] = 0;\n            for (var _j = 0; _j < 30; ++_j) df[_j] = 0;\n          }\n          //  len    dist   chain\n          var l = 2,\n            d = 0,\n            ch = c,\n            dif = imod - pimod & 32767;\n          if (rem > 2 && hv == hsh(_i23 - dif)) {\n            var maxn = Math.min(n, rem) - 1;\n            var maxd = Math.min(32767, _i23);\n            // max possible length\n            // not capped at dif because decompressors implement \"rolling\" index population\n            var ml = Math.min(258, rem);\n            while (dif <= maxd && --ch && imod != pimod) {\n              if (dat[_i23 + l] == dat[_i23 + l - dif]) {\n                var nl = 0;\n                for (; nl < ml && dat[_i23 + nl] == dat[_i23 + nl - dif]; ++nl);\n                if (nl > l) {\n                  l = nl, d = dif;\n                  // break out early when we reach \"nice\" (we are satisfied enough)\n                  if (nl > maxn) break;\n                  // now, find the rarest 2-byte sequence within this\n                  // length of literals and search for that instead.\n                  // Much faster than just using the start\n                  var mmd = Math.min(dif, nl - 2);\n                  var md = 0;\n                  for (var _j2 = 0; _j2 < mmd; ++_j2) {\n                    var ti = _i23 - dif + _j2 & 32767;\n                    var pti = prev[ti];\n                    var cd = ti - pti & 32767;\n                    if (cd > md) md = cd, pimod = ti;\n                  }\n                }\n              }\n              // check the previous match\n              imod = pimod, pimod = prev[imod];\n              dif += imod - pimod & 32767;\n            }\n          }\n          // d will be nonzero only when a match was found\n          if (d) {\n            // store both dist and len data in one int32\n            // Make sure this is recognized as a len/dist with 28th bit (2^28)\n            syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];\n            var lin = revfl[l] & 31,\n              din = revfd[d] & 31;\n            eb += fleb[lin] + fdeb[din];\n            ++lf[257 + lin];\n            ++df[din];\n            wi = _i23 + l;\n            ++_lc3;\n          } else {\n            syms[li++] = dat[_i23];\n            ++lf[dat[_i23]];\n          }\n        }\n      }\n      for (_i23 = Math.max(_i23, wi); _i23 < s; ++_i23) {\n        syms[li++] = dat[_i23];\n        ++lf[dat[_i23]];\n      }\n      pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, _i23 - bs, pos);\n      if (!lst) {\n        st.r = pos & 7 | w[pos / 8 | 0] << 3;\n        // shft(pos) now 1 less if pos & 7 != 0\n        pos -= 7;\n        st.h = head, st.p = prev, st.i = _i23, st.w = wi;\n      }\n    } else {\n      for (var _i24 = st.w || 0; _i24 < s + lst; _i24 += 65535) {\n        // end\n        var e = _i24 + 65535;\n        if (e >= s) {\n          // write final block\n          w[pos / 8 | 0] = lst;\n          e = s;\n        }\n        pos = wfblk(w, pos + 1, dat.subarray(_i24, e));\n      }\n      st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n  };\n  // Adler32\n  var adler = function adler() {\n    var a = 1,\n      b = 0;\n    return {\n      p: function p(d) {\n        // closures have awful performance\n        var n = a,\n          m = b;\n        var l = d.length | 0;\n        for (var _i25 = 0; _i25 != l;) {\n          var e = Math.min(_i25 + 2655, l);\n          for (; _i25 < e; ++_i25) m += n += d[_i25];\n          n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n        }\n        a = n, b = m;\n      },\n      d: function d() {\n        a %= 65521, b %= 65521;\n        return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | b >> 8;\n      }\n    };\n  };\n  // deflate with opts\n  var dopt = function dopt(dat, opt, pre, post, st) {\n    if (!st) {\n      st = {\n        l: 1\n      };\n      if (opt.dictionary) {\n        var dict = opt.dictionary.subarray(-32768);\n        var newDat = new u8(dict.length + dat.length);\n        newDat.set(dict);\n        newDat.set(dat, dict.length);\n        dat = newDat;\n        st.w = dict.length;\n      }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20 : 12 + opt.mem, pre, post, st);\n  };\n  // write bytes\n  var wbytes = function wbytes(d, b, v) {\n    for (; v; ++b) d[b] = v, v >>>= 8;\n  };\n  // zlib header\n  var zlh = function zlh(c, o) {\n    var _a, _b;\n    var lv = (_a = o.level) !== null && _a !== void 0 ? _a : 0,\n      fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = fl << 6 | (((_b = o.dictionary) !== null && _b !== void 0 ? _b : 0) && 32);\n    c[1] |= 31 - (c[0] << 8 | c[1]) % 31;\n    if (o.dictionary) {\n      var h = adler();\n      h.p(o.dictionary);\n      wbytes(c, 2, h.d());\n    }\n  };\n  // zlib start\n  var zls = function zls(d, dict) {\n    if ((d[0] & 15) != 8 || d[0] >> 4 > 7 || (d[0] << 8 | d[1]) % 31) _err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict) _err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n  };\n  // before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n  /**\n   * Compress data with Zlib\n   * @param data The data to compress\n   * @param opts The compression options\n   * @returns The zlib-compressed version of the data\n   */\n  function zlibSync(data) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n  }\n  /**\n   * Expands Zlib data\n   * @param data The data to decompress\n   * @param opts The decompression options\n   * @returns The decompressed version of the data\n   */\n  function unzlibSync(data) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return inflt(data.subarray(zls(data, opts.dictionary), -4), {\n      i: 2\n    }, opts && opts.out, opts && opts.dictionary);\n  }\n  var CRC32 = /*#__PURE__*/function () {\n    function CRC32() {\n      _classCallCheck(this, CRC32);\n      this.caches = new Map();\n    }\n    return _createClass(CRC32, [{\n      key: \"calculate\",\n      value: function calculate(buff) {\n        if (!(buff instanceof Uint8Array)) {\n          throw new TypeError('Input must be a Uint8Array');\n        }\n        var caches = this.caches;\n        var key = platform.decode.bytesToString(buff);\n        if (caches.has(key)) {\n          return caches.get(key);\n        }\n        var crc = CRC32.WHITE_COLOR;\n        // 使用位运算优化\n        for (var i = 0; i < buff.length; i++) {\n          crc = crc >>> 8 ^ CRC32.table[(crc ^ buff[i]) & 0xff];\n        }\n        caches.set(key, (crc ^ CRC32.WHITE_COLOR) >>> 0);\n        return caches.get(key);\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this.caches.clear();\n      }\n    }]);\n  }();\n  // CRC32 Table 初始化\n  CRC32.table = Uint32Array.from(Array(256), function (_, i) {\n    var c = i;\n    for (var j = 0; j < 8; j++) {\n      c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n    }\n    return c >>> 0;\n  });\n  CRC32.WHITE_COLOR = 0xffffffff;\n  var PNGEncoder = /*#__PURE__*/function () {\n    function PNGEncoder(width, height) {\n      _classCallCheck(this, PNGEncoder);\n      this.width = width;\n      this.height = height;\n      this.crc32 = new CRC32();\n      this.view = new DataView(new ArrayBuffer(4 * width * height));\n    }\n    return _createClass(PNGEncoder, [{\n      key: \"createChunk\",\n      value: function createChunk(type, data) {\n        // 长度（4字节，大端序）\n        var length = new Uint8Array(4);\n        new DataView(length.buffer).setUint32(0, data.length, false);\n        // 块类型（4字节， ASCII）\n        var chunkType = Uint8Array.from(type, function (c) {\n          return c.charCodeAt(0);\n        });\n        // 计算 CRC32 校验（类型 + 数据）\n        var partialChunk = new Uint8Array(chunkType.length + data.length);\n        partialChunk.set(chunkType);\n        partialChunk.set(data, chunkType.length);\n        var crc = new Uint8Array(4);\n        new DataView(crc.buffer).setUint32(0, this.crc32.calculate(partialChunk) >>> 0, false);\n        // 汇总成完整的chunk数据\n        var result = new Uint8Array(length.length + partialChunk.length + crc.length);\n        result.set(length);\n        result.set(partialChunk, length.length);\n        result.set(crc, length.length + partialChunk.length);\n        return result;\n      }\n    }, {\n      key: \"createIHDRChunk\",\n      value: function createIHDRChunk() {\n        var ihdrData = new Uint8Array(13);\n        var view = new DataView(ihdrData.buffer);\n        // 宽度\n        view.setUint32(0, this.width, false);\n        // 高度\n        view.setUint32(4, this.height, false);\n        // 位深度\n        view.setUint8(8, 8);\n        // 颜色类型\n        view.setUint8(9, 6);\n        // 压缩方法\n        view.setUint8(10, 0);\n        // 过滤器方法\n        view.setUint8(11, 0);\n        // 交错方法\n        view.setUint8(12, 0);\n        return this.createChunk(\"IHDR\", ihdrData);\n      }\n    }, {\n      key: \"createIDATChunk\",\n      value: function createIDATChunk() {\n        var width = this.width,\n          height = this.height;\n        var validRowSize = width * 4;\n        // 每行开头添加一位过滤头数据\n        var rowSize = validRowSize + 1;\n        var data = new Uint8Array(rowSize * height);\n        // 将Uint32数据转换为Uint8数据\n        var pixelsData = new Uint8Array(this.view.buffer);\n        var startIdx;\n        var srcStart;\n        for (var y = 0; y < height; y++) {\n          startIdx = y * rowSize;\n          data[startIdx] = 0x00; // 过滤头\n          // ✅ 复制预先转换好的 RGBA 数据\n          srcStart = y * validRowSize; // Uint32 => 每个元素占 4 字节\n          data.set(pixelsData.subarray(srcStart, srcStart + validRowSize), startIdx + 1);\n        }\n        // 使用 zlib 进行压缩, 平衡压缩率有利于提升文件生成速度\n        return this.createChunk(\"IDAT\", zlibSync(data));\n      }\n    }, {\n      key: \"setPixel\",\n      value: function setPixel(x, y, pixel) {\n        this.view.setUint32((y * this.width + x) * 4, pixel, false);\n      }\n    }, {\n      key: \"write\",\n      value: function write(pixels) {\n        var width = this.width,\n          height = this.height;\n        var pos;\n        var r;\n        var g;\n        var b;\n        var a;\n        var pixel;\n        for (var y = 0; y < height; y++) {\n          for (var x = 0; x < width; x++) {\n            pos = (y * width + x) * 4;\n            r = pixels[pos];\n            g = pixels[pos + 1];\n            b = pixels[pos + 2];\n            a = pixels[pos + 3];\n            pixel = (r << 24 | g << 16 | b << 8 | a) >>> 0;\n            this.setPixel(x, y, pixel);\n          }\n        }\n        return this;\n      }\n    }, {\n      key: \"flush\",\n      value: function flush() {\n        // 预先创建所有块\n        var iHDRChunk = this.createIHDRChunk();\n        var iDATChunk = this.createIDATChunk();\n        var iENDChunk = this.createChunk(\"IEND\", new Uint8Array(0));\n        // 一次性分配内存（直接计算总大小）\n        var pngData = new Uint8Array(8 + iHDRChunk.length + iDATChunk.length + iENDChunk.length);\n        /* ------ 按顺序写入数据 ------ */\n        // 1. 写入文件头（固定 8 字节）\n        var offset = 0;\n        pngData.set(new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]), offset);\n        // 2. 写入IHDR块\n        offset += 8;\n        pngData.set(iHDRChunk, offset);\n        // 3. 写入IDAT块\n        offset += iHDRChunk.length;\n        pngData.set(iDATChunk, offset);\n        // 4. 写入IEND块\n        offset += iDATChunk.length;\n        pngData.set(iENDChunk, offset);\n        /* ------ 清空 CRC32 缓存 ------ */\n        this.crc32.clear();\n        return pngData;\n      }\n    }]);\n  }(); // ---------------------------------------------------------------------\n  // qrBitBuffer\n  // ---------------------------------------------------------------------\n  var BitBuffer = /*#__PURE__*/function () {\n    function BitBuffer() {\n      _classCallCheck(this, BitBuffer);\n      this.buffer = [];\n      this.lengthInBits = 0;\n    }\n    return _createClass(BitBuffer, [{\n      key: \"getAt\",\n      value: function getAt(i) {\n        var bufIndex = ~~(i / 8);\n        return (this.buffer[bufIndex] >>> 7 - i % 8 & 1) === 1;\n      }\n    }, {\n      key: \"put\",\n      value: function put(num, length) {\n        for (var i = 0; i < length; i++) {\n          this.putBit((num >>> length - i - 1 & 1) === 1);\n        }\n      }\n    }, {\n      key: \"putBit\",\n      value: function putBit(bit) {\n        var len = this.lengthInBits,\n          buffer = this.buffer;\n        var bufIndex = ~~(len / 8);\n        if (buffer.length <= bufIndex) {\n          buffer.push(0);\n        }\n        if (bit) {\n          buffer[bufIndex] |= 0x80 >>> len % 8;\n        }\n        this.lengthInBits += 1;\n      }\n    }]);\n  }(); // ---------------------------------------------------------------------\n  // QRMode\n  // ---------------------------------------------------------------------\n  var QRMode = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3\n  };\n  // ---------------------------------------------------------------------\n  // QRErrorCorrectLevel\n  // ---------------------------------------------------------------------\n  var QRErrorCorrectLevel = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  };\n  // ---------------------------------------------------------------------\n  // QRMaskPattern\n  // ---------------------------------------------------------------------\n  var QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n  };\n  var BitByte = /*#__PURE__*/function () {\n    function BitByte(data) {\n      _classCallCheck(this, BitByte);\n      var parsedData = [];\n      // Added to support UTF-8 Characters\n      for (var i = 0; i < data.length; i++) {\n        var byteArray = [];\n        var code = data.charCodeAt(i);\n        if (code > 0x10000) {\n          byteArray[0] = 0xf0 | (code & 0x1c0000) >>> 18;\n          byteArray[1] = 0x80 | (code & 0x3f000) >>> 12;\n          byteArray[2] = 0x80 | (code & 0xfc0) >>> 6;\n          byteArray[3] = 0x80 | code & 0x3f;\n        } else if (code > 0x800) {\n          byteArray[0] = 0xe0 | (code & 0xf000) >>> 12;\n          byteArray[1] = 0x80 | (code & 0xfc0) >>> 6;\n          byteArray[2] = 0x80 | code & 0x3f;\n        } else if (code > 0x80) {\n          byteArray[0] = 0xc0 | (code & 0x7c0) >>> 6;\n          byteArray[1] = 0x80 | code & 0x3f;\n        } else {\n          byteArray[0] = code;\n        }\n        // Fix Unicode corruption bug\n        parsedData.push(byteArray);\n      }\n      this.bytes = parsedData.flat(1);\n      var bytes = this.bytes;\n      if (bytes.length !== data.length) {\n        bytes.unshift(191);\n        bytes.unshift(187);\n        bytes.unshift(239);\n      }\n    }\n    return _createClass(BitByte, [{\n      key: \"mode\",\n      get: function get() {\n        return QRMode.MODE_8BIT_BYTE;\n      }\n    }, {\n      key: \"length\",\n      get: function get() {\n        return this.bytes.length;\n      }\n    }, {\n      key: \"write\",\n      value: function write(buff) {\n        var bytes = this.bytes;\n        for (var i = 0; i < bytes.length; i++) {\n          buff.put(bytes[i], 8);\n        }\n      }\n    }]);\n  }();\n  var RS_BLOCK_TABLE = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n  var RSBlock = /*#__PURE__*/function () {\n    function RSBlock() {\n      _classCallCheck(this, RSBlock);\n    }\n    return _createClass(RSBlock, [{\n      key: \"getRSBlockTable\",\n      value: function getRSBlockTable(typeNumber, errorCorrectLevel) {\n        var L = QRErrorCorrectLevel.L,\n          M = QRErrorCorrectLevel.M,\n          Q = QRErrorCorrectLevel.Q,\n          H = QRErrorCorrectLevel.H;\n        var pos = (typeNumber - 1) * 4;\n        switch (errorCorrectLevel) {\n          case L:\n            return RS_BLOCK_TABLE[pos + 0];\n          case M:\n            return RS_BLOCK_TABLE[pos + 1];\n          case Q:\n            return RS_BLOCK_TABLE[pos + 2];\n          case H:\n            return RS_BLOCK_TABLE[pos + 3];\n          default:\n            throw new Error(\"bad rs block @ typeNumber:\".concat(typeNumber, \"/errorCorrectLevel: \").concat(errorCorrectLevel));\n        }\n      }\n    }, {\n      key: \"getRSBlocks\",\n      value: function getRSBlocks(typeNumber, errorCorrectLevel) {\n        var rsBlock = this.getRSBlockTable(typeNumber, errorCorrectLevel);\n        var length = rsBlock.length / 3;\n        var list = [];\n        for (var i = 0; i < length; i++) {\n          var count = rsBlock[i * 3];\n          var totalCount = rsBlock[i * 3 + 1];\n          var dataCount = rsBlock[i * 3 + 2];\n          for (var j = 0; j < count; j++) {\n            list.push({\n              totalCount: totalCount,\n              dataCount: dataCount\n            });\n          }\n        }\n        return list;\n      }\n    }]);\n  }(); // ---------------------------------------------------------------------\n  // QRMath\n  // ---------------------------------------------------------------------\n  var EXP_TABLE = new Array(256);\n  var LOG_TABLE = new Array(256);\n  // initialize tables\n  for (var i = 0; i < 8; i++) {\n    EXP_TABLE[i] = 1 << i;\n  }\n  for (var _i = 8; _i < 256; _i++) {\n    EXP_TABLE[_i] = EXP_TABLE[_i - 4] ^ EXP_TABLE[_i - 5] ^ EXP_TABLE[_i - 6] ^ EXP_TABLE[_i - 8];\n  }\n  for (var _i2 = 0; _i2 < 255; _i2++) {\n    LOG_TABLE[EXP_TABLE[_i2]] = _i2;\n  }\n  var QRMath = {\n    glog: function glog(n) {\n      if (n < 1) {\n        throw new Error(\"glog(\".concat(n, \")\"));\n      }\n      return LOG_TABLE[n];\n    },\n    gexp: function gexp(n) {\n      if (n < 0) {\n        n = 255 + n % 255;\n      } else if (n > 255) {\n        n %= 255;\n      }\n      return EXP_TABLE[n];\n    }\n  };\n  var Polynomial = /*#__PURE__*/function () {\n    function Polynomial(num, shift) {\n      _classCallCheck(this, Polynomial);\n      var length = num.length;\n      if (length === undefined) {\n        throw new Error(\"\".concat(length, \"/\").concat(shift));\n      }\n      var offset = 0;\n      while (offset < length && num[offset] === 0) {\n        offset++;\n      }\n      var len = length - offset;\n      this.num = new Array(len + shift);\n      for (var i = 0; i < len; i++) {\n        this.num[i] = num[i + offset];\n      }\n    }\n    return _createClass(Polynomial, [{\n      key: \"length\",\n      get: function get() {\n        return this.num.length;\n      }\n    }, {\n      key: \"getAt\",\n      value: function getAt(i) {\n        return this.num[i];\n      }\n    }, {\n      key: \"multiply\",\n      value: function multiply(e) {\n        var glog = QRMath.glog,\n          gexp = QRMath.gexp;\n        var num = [];\n        for (var i = 0; i < this.length; i++) {\n          for (var j = 0; j < e.length; j++) {\n            num[i + j] ^= gexp(glog(this.getAt(i)) + glog(e.getAt(j)));\n          }\n        }\n        return new Polynomial(num, 0);\n      }\n    }, {\n      key: \"mod\",\n      value: function mod(e) {\n        if (this.length - e.length < 0) {\n          return this;\n        }\n        var glog = QRMath.glog,\n          gexp = QRMath.gexp;\n        var ratio = glog(this.getAt(0)) - glog(e.getAt(0));\n        var num = [];\n        for (var i = 0; i < this.length; i++) {\n          var n = this.getAt(i);\n          num[i] = i < e.length ? n ^ gexp(glog(e.getAt(i)) + ratio) : n;\n        }\n        // recursive call\n        return new Polynomial(num, 0).mod(e);\n      }\n    }]);\n  }();\n  var PATTERN_POSITION_TABLE = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]];\n  var G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;\n  var G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;\n  var G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;\n  var genBCHDigit = function genBCHDigit(data) {\n    return data === 0 ? 0 : Math.log2(data);\n  };\n  var BCH_G15 = genBCHDigit(G15);\n  var BCH_G18 = genBCHDigit(G18);\n  // ---------------------------------------------------------------------\n  // QRUtil\n  // ---------------------------------------------------------------------\n  var Util = {\n    getBCHTypeInfo: function getBCHTypeInfo(data) {\n      var d = data << 10;\n      while (genBCHDigit(d) - BCH_G15 >= 0) {\n        d ^= G15 << genBCHDigit(d) - BCH_G15;\n      }\n      return (data << 10 | d) ^ G15_MASK;\n    },\n    getBCHTypeNumber: function getBCHTypeNumber(data) {\n      var d = data << 12;\n      while (genBCHDigit(d) - BCH_G18 >= 0) {\n        d ^= G18 << genBCHDigit(d) - BCH_G18;\n      }\n      return data << 12 | d;\n    },\n    getPatternPosition: function getPatternPosition(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n    getMaskFunction: function getMaskFunction(maskPattern) {\n      var PATTERN000 = QRMaskPattern.PATTERN000,\n        PATTERN001 = QRMaskPattern.PATTERN001,\n        PATTERN010 = QRMaskPattern.PATTERN010,\n        PATTERN011 = QRMaskPattern.PATTERN011,\n        PATTERN100 = QRMaskPattern.PATTERN100,\n        PATTERN101 = QRMaskPattern.PATTERN101,\n        PATTERN110 = QRMaskPattern.PATTERN110,\n        PATTERN111 = QRMaskPattern.PATTERN111;\n      switch (maskPattern) {\n        case PATTERN000:\n          return function (i, j) {\n            return (i + j) % 2 === 0;\n          };\n        case PATTERN001:\n          return function (i) {\n            return i % 2 === 0;\n          };\n        case PATTERN010:\n          return function (_i, j) {\n            return j % 3 === 0;\n          };\n        case PATTERN011:\n          return function (i, j) {\n            return (i + j) % 3 === 0;\n          };\n        case PATTERN100:\n          return function (i, j) {\n            return (~~(i / 2) + ~~(j / 3)) % 2 === 0;\n          };\n        case PATTERN101:\n          return function (i, j) {\n            return i * j % 2 + i * j % 3 === 0;\n          };\n        case PATTERN110:\n          return function (i, j) {\n            return (i * j % 2 + i * j % 3) % 2 === 0;\n          };\n        case PATTERN111:\n          return function (i, j) {\n            return (i * j % 3 + (i + j) % 2) % 2 === 0;\n          };\n        default:\n          throw new Error(\"bad maskPattern: \".concat(maskPattern));\n      }\n    },\n    getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {\n      var a = new Polynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i++) {\n        a = a.multiply(new Polynomial([1, QRMath.gexp(i)], 0));\n      }\n      return a;\n    },\n    getLengthInBits: function getLengthInBits(mode, type) {\n      var MODE_NUMBER = QRMode.MODE_NUMBER,\n        MODE_ALPHA_NUM = QRMode.MODE_ALPHA_NUM,\n        MODE_8BIT_BYTE = QRMode.MODE_8BIT_BYTE,\n        MODE_KANJI = QRMode.MODE_KANJI;\n      if (type < 1 || type > 40) {\n        throw new Error(\"type: \".concat(type));\n      }\n      if (type >= 1 && type < 10) {\n        // 1 - 9\n        switch (mode) {\n          case MODE_NUMBER:\n            return 10;\n          case MODE_ALPHA_NUM:\n            return 9;\n          case MODE_8BIT_BYTE:\n            return 8;\n          case MODE_KANJI:\n            return 8;\n        }\n      }\n      if (type < 27) {\n        // 10 - 26\n        switch (mode) {\n          case MODE_NUMBER:\n            return 12;\n          case MODE_ALPHA_NUM:\n            return 11;\n          case MODE_8BIT_BYTE:\n            return 16;\n          case MODE_KANJI:\n            return 10;\n        }\n      }\n      if (type <= 40) {\n        // 27 - 40\n        switch (mode) {\n          case MODE_NUMBER:\n            return 14;\n          case MODE_ALPHA_NUM:\n            return 13;\n          case MODE_8BIT_BYTE:\n            return 16;\n          case MODE_KANJI:\n            return 12;\n        }\n      }\n      throw new Error(\"mode: \".concat(mode));\n    },\n    getLostPoint: function getLostPoint(qr) {\n      var moduleCount = qr.getModuleCount();\n      var lostPoint = 0;\n      // LEVEL1\n      for (var row = 0; row < moduleCount; row++) {\n        for (var col = 0; col < moduleCount; col++) {\n          var dark = qr.isDark(row, col);\n          var sameCount = 0;\n          for (var r = -1; r <= 1; r++) {\n            var nRow = row + r;\n            if (nRow < 0 || moduleCount <= nRow) continue;\n            for (var c = -1; c <= 1; c++) {\n              var nCol = col + c;\n              if (nCol < 0 || moduleCount <= nCol) continue;\n              if (r === 0 && c === 0) continue;\n              if (dark === qr.isDark(nRow, nCol)) {\n                sameCount++;\n              }\n            }\n          }\n          if (sameCount > 5) {\n            lostPoint += sameCount + 3 - 5;\n          }\n        }\n      }\n      // LEVEL2\n      for (var _row = 0; _row < moduleCount - 1; _row++) {\n        for (var _col = 0; _col < moduleCount - 1; _col++) {\n          var count = 0;\n          if (qr.isDark(_row, _col)) count++;\n          if (qr.isDark(_row + 1, _col)) count++;\n          if (qr.isDark(_row, _col + 1)) count++;\n          if (qr.isDark(_row + 1, _col + 1)) count++;\n          if (count === 0 || count === 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n      // LEVEL3\n      for (var _row2 = 0; _row2 < moduleCount; _row2++) {\n        for (var _col2 = 0; _col2 < moduleCount - 6; _col2++) {\n          if (qr.isDark(_row2, _col2) && !qr.isDark(_row2, _col2 + 1) && qr.isDark(_row2, _col2 + 2) && qr.isDark(_row2, _col2 + 3) && qr.isDark(_row2, _col2 + 4) && !qr.isDark(_row2, _col2 + 5) && qr.isDark(_row2, _col2 + 6)) {\n            lostPoint += 40;\n          }\n        }\n      }\n      for (var _col3 = 0; _col3 < moduleCount; _col3++) {\n        for (var _row3 = 0; _row3 < moduleCount - 6; _row3++) {\n          if (qr.isDark(_row3, _col3) && !qr.isDark(_row3 + 1, _col3) && qr.isDark(_row3 + 2, _col3) && qr.isDark(_row3 + 3, _col3) && qr.isDark(_row3 + 4, _col3) && !qr.isDark(_row3 + 5, _col3) && qr.isDark(_row3 + 6, _col3)) {\n            lostPoint += 40;\n          }\n        }\n      }\n      // LEVEL4\n      var darkCount = 0;\n      for (var _col4 = 0; _col4 < moduleCount; _col4++) {\n        for (var _row4 = 0; _row4 < moduleCount; _row4++) {\n          if (qr.isDark(_row4, _col4)) {\n            darkCount++;\n          }\n        }\n      }\n      var ratio = Math.abs(100 * darkCount / Math.pow(moduleCount, 2) - 50) / 5;\n      return lostPoint + ratio * 10;\n    }\n  };\n  var PAD0 = 0xec;\n  var PAD1 = 0x11;\n  /**\n   * QRCode实现\n   * https://www.cnblogs.com/leestar54/p/15782929.html\n   * @param typeNumber 1 to 40\n   * @param errorCorrectLevel 'L','M','Q','H'\n   */\n  var QRCode = /*#__PURE__*/function () {\n    function QRCode(typeNumber, errorCorrectLevel) {\n      _classCallCheck(this, QRCode);\n      this.typeNumber = typeNumber;\n      this.modules = [];\n      this.moduleCount = 0;\n      this.dataCache = null;\n      this.dataList = [];\n      this.errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];\n    }\n    return _createClass(QRCode, [{\n      key: \"makeImpl\",\n      value: function makeImpl(test, maskPattern) {\n        this.moduleCount = this.typeNumber * 4 + 17;\n        this.modules = function (moduleCount) {\n          var modules = [];\n          // 预设一个 moduleCount * moduleCount 的空白矩阵\n          for (var row = 0; row < moduleCount; row++) {\n            modules[row] = [];\n            for (var col = 0; col < moduleCount; col++) {\n              modules[row][col] = null;\n            }\n          }\n          return modules;\n        }(this.moduleCount);\n        var count = this.moduleCount - 7;\n        this.setupPositionProbePattern(0, 0);\n        this.setupPositionProbePattern(count, 0);\n        this.setupPositionProbePattern(0, count);\n        this.setupPositionAdjustPattern();\n        this.setupTimingPattern();\n        this.setupTypeInfo(test, maskPattern);\n        if (this.typeNumber >= 7) {\n          this.setupTypeNumber(test);\n        }\n        if (this.dataCache === null) {\n          this.dataCache = this.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n        }\n        this.mapData(this.dataCache, maskPattern);\n      }\n    }, {\n      key: \"setupPositionProbePattern\",\n      value: function setupPositionProbePattern(row, col) {\n        var modules = this.modules,\n          moduleCount = this.moduleCount;\n        for (var r = -1; r <= 7; r++) {\n          var nr = row + r;\n          if (nr <= -1 || moduleCount <= nr) continue;\n          for (var c = -1; c <= 7; c++) {\n            var nc = col + c;\n            if (nc <= -1 || moduleCount <= nc) continue;\n            modules[nr][nc] = r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4;\n          }\n        }\n      }\n    }, {\n      key: \"setupPositionAdjustPattern\",\n      value: function setupPositionAdjustPattern() {\n        var typeNumber = this.typeNumber,\n          modules = this.modules;\n        var pos = Util.getPatternPosition(typeNumber);\n        var length = pos.length;\n        for (var i = 0; i < length; i++) {\n          for (var j = 0; j < length; j++) {\n            var row = pos[i];\n            var col = pos[j];\n            if (modules[row][col] != null) continue;\n            for (var r = -2; r <= 2; r++) {\n              for (var c = -2; c <= 2; c++) {\n                modules[row + r][col + c] = r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0;\n              }\n            }\n          }\n        }\n      }\n    }, {\n      key: \"setupTimingPattern\",\n      value: function setupTimingPattern() {\n        var moduleCount = this.moduleCount,\n          modules = this.modules;\n        var count = moduleCount - 8;\n        for (var r = 8; r < count; r++) {\n          if (modules[r][6] != null) continue;\n          modules[r][6] = r % 2 === 0;\n        }\n        for (var c = 8; c < count; c++) {\n          if (modules[6][c] != null) continue;\n          modules[6][c] = c % 2 === 0;\n        }\n      }\n    }, {\n      key: \"setupTypeInfo\",\n      value: function setupTypeInfo(test, maskPattern) {\n        var errorCorrectLevel = this.errorCorrectLevel,\n          modules = this.modules,\n          moduleCount = this.moduleCount;\n        var data = errorCorrectLevel << 3 | maskPattern;\n        var bits = Util.getBCHTypeInfo(data);\n        // vertical\n        for (var i = 0; i < 15; i++) {\n          var mod = !test && (bits >> i & 1) === 1;\n          if (i < 6) {\n            modules[i][8] = mod;\n          } else if (i < 8) {\n            modules[i + 1][8] = mod;\n          } else {\n            modules[moduleCount - 15 + i][8] = mod;\n          }\n        }\n        // horizontal\n        for (var _i = 0; _i < 15; _i++) {\n          var _mod = !test && (bits >> _i & 1) === 1;\n          if (_i < 8) {\n            modules[8][moduleCount - _i - 1] = _mod;\n          } else if (_i < 9) {\n            modules[8][15 - _i] = _mod;\n          } else {\n            modules[8][15 - _i - 1] = _mod;\n          }\n        }\n        // fixed module\n        modules[moduleCount - 8][8] = !test;\n      }\n    }, {\n      key: \"getBestMaskPattern\",\n      value: function getBestMaskPattern() {\n        var minLostPoint = 0;\n        var pattern = 0;\n        for (var i = 0; i < 8; i++) {\n          this.makeImpl(true, i);\n          var lostPoint = Util.getLostPoint(this);\n          if (i === 0 || minLostPoint > lostPoint) {\n            minLostPoint = lostPoint;\n            pattern = i;\n          }\n        }\n        return pattern;\n      }\n    }, {\n      key: \"setupTypeNumber\",\n      value: function setupTypeNumber(test) {\n        var typeNumber = this.typeNumber,\n          modules = this.modules,\n          moduleCount = this.moduleCount;\n        var bits = Util.getBCHTypeNumber(typeNumber);\n        for (var i = 0; i < 18; i++) {\n          var mod = !test && (bits >> i & 1) === 1;\n          modules[~~(i / 3)][i % 3 + moduleCount - 8 - 3] = mod;\n          modules[i % 3 + moduleCount - 8 - 3][~~(i / 3)] = mod;\n        }\n      }\n    }, {\n      key: \"createData\",\n      value: function createData(typeNumber, errorCorrectLevel, dataList) {\n        var rsBlocks = new RSBlock().getRSBlocks(typeNumber, errorCorrectLevel);\n        var buffer = new BitBuffer();\n        for (var i = 0; i < dataList.length; i++) {\n          var data = dataList[i];\n          buffer.put(data.mode, 4);\n          buffer.put(data.length, Util.getLengthInBits(data.mode, typeNumber));\n          data.write(buffer);\n        }\n        // calc num max data.\n        var totalDataCount = 0;\n        for (var _i2 = 0; _i2 < rsBlocks.length; _i2++) {\n          totalDataCount += rsBlocks[_i2].dataCount;\n        }\n        var totalCount = totalDataCount * 8;\n        if (buffer.lengthInBits > totalCount) {\n          throw new Error(\"code length overflow. (\".concat(buffer.lengthInBits, \" > \").concat(totalCount, \")\"));\n        }\n        // end code\n        if (buffer.lengthInBits + 4 <= totalCount) {\n          buffer.put(0, 4);\n        }\n        // padding\n        while (buffer.lengthInBits % 8 !== 0) {\n          buffer.putBit(false);\n        }\n        // padding\n        while (true) {\n          if (buffer.lengthInBits >= totalCount) {\n            break;\n          }\n          buffer.put(PAD0, 8);\n          if (buffer.lengthInBits >= totalCount) {\n            break;\n          }\n          buffer.put(PAD1, 8);\n        }\n        return this.createBytes(buffer, rsBlocks);\n      }\n    }, {\n      key: \"mapData\",\n      value: function mapData(data, maskPattern) {\n        var modules = this.modules,\n          moduleCount = this.moduleCount;\n        var maskFunc = Util.getMaskFunction(maskPattern);\n        var inc = -1;\n        var row = moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n        for (var col = row; col > 0; col -= 2) {\n          if (col === 6) col -= 1;\n          while (true) {\n            for (var c = 0; c < 2; c++) {\n              if (modules[row][col - c] == null) {\n                var dark = false;\n                if (byteIndex < data.length) {\n                  dark = (data[byteIndex] >>> bitIndex & 1) === 1;\n                }\n                if (maskFunc(row, col - c)) {\n                  dark = !dark;\n                }\n                modules[row][col - c] = dark;\n                bitIndex--;\n                if (bitIndex === -1) {\n                  byteIndex++;\n                  bitIndex = 7;\n                }\n              }\n            }\n            row += inc;\n            if (row < 0 || moduleCount <= row) {\n              row -= inc;\n              inc = -inc;\n              break;\n            }\n          }\n        }\n      }\n    }, {\n      key: \"createBytes\",\n      value: function createBytes(bitBuffer, rsBlocks) {\n        var dcdata = [];\n        var ecdata = [];\n        var offset = 0;\n        var maxDcCount = 0;\n        var maxEcCount = 0;\n        for (var r = 0; r < rsBlocks.length; r++) {\n          var dcCount = rsBlocks[r].dataCount;\n          var ecCount = rsBlocks[r].totalCount - dcCount;\n          maxDcCount = Math.max(maxDcCount, dcCount);\n          maxEcCount = Math.max(maxEcCount, ecCount);\n          dcdata[r] = [];\n          for (var i = 0; i < dcCount; i++) {\n            dcdata[r][i] = 0xff & bitBuffer.buffer[i + offset];\n          }\n          offset += dcCount;\n          var rsPoly = Util.getErrorCorrectPolynomial(ecCount);\n          var rawPoly = new Polynomial(dcdata[r], rsPoly.length - 1);\n          var modPoly = rawPoly.mod(rsPoly);\n          ecdata[r] = new Array(rsPoly.length - 1);\n          for (var _i3 = 0; _i3 < ecdata[r].length; _i3++) {\n            var modIndex = _i3 + modPoly.length - ecdata[r].length;\n            ecdata[r][_i3] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n          }\n        }\n        var totalCodeCount = 0;\n        for (var _i4 = 0; _i4 < rsBlocks.length; _i4++) {\n          totalCodeCount += rsBlocks[_i4].totalCount;\n        }\n        var data = new Array(totalCodeCount);\n        var index = 0;\n        for (var _i5 = 0; _i5 < maxDcCount; _i5++) {\n          for (var _r = 0; _r < rsBlocks.length; _r++) {\n            if (_i5 < dcdata[_r].length) {\n              data[index++] = dcdata[_r][_i5];\n            }\n          }\n        }\n        for (var _i6 = 0; _i6 < maxEcCount; _i6++) {\n          for (var _r2 = 0; _r2 < rsBlocks.length; _r2++) {\n            if (_i6 < ecdata[_r2].length) {\n              data[index++] = ecdata[_r2][_i6];\n            }\n          }\n        }\n        return data;\n      }\n    }, {\n      key: \"isDark\",\n      value: function isDark(row, col) {\n        var moduleCount = this.moduleCount;\n        if (row < 0 || moduleCount <= row || col < 0 || moduleCount <= col) {\n          throw new Error(\"\".concat(row, \", \").concat(col));\n        }\n        return this.modules[row][col];\n      }\n    }, {\n      key: \"addData\",\n      value: function addData(data) {\n        this.dataList.push(new BitByte(data));\n        this.dataCache = null;\n      }\n    }, {\n      key: \"getModuleCount\",\n      value: function getModuleCount() {\n        return this.moduleCount;\n      }\n    }, {\n      key: \"make\",\n      value: function make() {\n        this.makeImpl(false, this.getBestMaskPattern());\n      }\n    }]);\n  }(); /**\n       * SVGA 下载解析器\n       */\n  var Parser = /*#__PURE__*/function () {\n    function Parser() {\n      _classCallCheck(this, Parser);\n    }\n    return _createClass(Parser, null, [{\n      key: \"decompress\",\n      value:\n      /**\n       * 解压视频源文件\n       * @param data\n       * @returns\n       */\n      function decompress(data) {\n        return unzlibSync(new Uint8Array(data)).buffer;\n      }\n      /**\n       * 解析视频实体\n       * @param data 视频二进制数据\n       * @param url 视频地址\n       * @param needDecompress 是否解压\n       * @returns\n       */\n    }, {\n      key: \"parseVideo\",\n      value: function parseVideo(data, url) {\n        var needDecompress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        return createVideoEntity(new Uint8Array(needDecompress ? this.decompress(data) : data), platform.path.filename(url));\n      }\n      /**\n       * 读取文件资源\n       * @param url 文件资源地址\n       * @returns\n       */\n    }, {\n      key: \"download\",\n      value: function download(url) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee() {\n          var globals, remote, path, local, env, supportLocal, filepath, buff, _t;\n          return _regenerator().w(function (_context) {\n            while (1) switch (_context.p = _context.n) {\n              case 0:\n                globals = platform.globals, remote = platform.remote, path = platform.path, local = platform.local;\n                env = globals.env;\n                supportLocal = env !== \"h5\" && env !== \"tt\";\n                filepath = path.is(url) ? url : path.resolve(path.filename(url)); // 本地读取\n                if (!supportLocal) {\n                  _context.n = 2;\n                  break;\n                }\n                _context.n = 1;\n                return local.exists(filepath);\n              case 1:\n                if (!_context.v) {\n                  _context.n = 2;\n                  break;\n                }\n                return _context.a(2, local.read(filepath));\n              case 2:\n                _context.n = 3;\n                return remote.fetch(url);\n              case 3:\n                buff = _context.v;\n                if (!supportLocal) {\n                  _context.n = 7;\n                  break;\n                }\n                _context.p = 4;\n                _context.n = 5;\n                return local.write(buff, filepath);\n              case 5:\n                _context.n = 7;\n                break;\n              case 6:\n                _context.p = 6;\n                _t = _context.v;\n                // eslint-disable-next-line no-console\n                console.error(_t);\n              case 7:\n                return _context.a(2, buff);\n            }\n          }, _callee, null, [[4, 6]]);\n        }));\n      }\n      /**\n       * 通过 url 下载并解析 SVGA 文件\n       * @param url SVGA 文件的下载链接\n       * @returns Promise<SVGA 数据源\n       */\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee2() {\n          var _t2, _t3, _t4;\n          return _regenerator().w(function (_context2) {\n            while (1) switch (_context2.n) {\n              case 0:\n                _t2 = Parser;\n                _context2.n = 1;\n                return Parser.download(url);\n              case 1:\n                _t3 = _context2.v;\n                _t4 = url;\n                return _context2.a(2, _t2.parseVideo.call(_t2, _t3, _t4));\n            }\n          }, _callee2);\n        }));\n      }\n    }]);\n  }();\n  var noop = platform.noop;\n  var Painter = /*#__PURE__*/function () {\n    /**\n     *\n     * @param mode\n     * @param W 海报模式必须传入\n     * @param H 海报模式必须传入\n     */\n    function Painter() {\n      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"dual\";\n      var width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      _classCallCheck(this, Painter);\n      this.mode = mode;\n      /**\n       * 主屏的 Canvas 元素\n       * Front Screen\n       */\n      this.F = null;\n      /**\n       * 主屏的 Context 对象\n       * Front Context\n       */\n      this.FC = null;\n      /**\n       * 副屏的 Canvas 元素\n       * Background Screen\n       */\n      this.B = null;\n      /**\n       * 副屏的 Context 对象\n       * Background Context\n       */\n      this.BC = null;\n      /**\n       * 粉刷模式\n       */\n      this.model = {};\n      /**\n       * 渲染器实例\n       */\n      this.renderer = null;\n      this.clearContainer = noop;\n      this.clearSecondary = noop;\n      this.resize = noop;\n      this.draw = noop;\n      this.stick = noop;\n      var dpr = platform.globals.dpr;\n      this.W = width * dpr;\n      this.H = height * dpr;\n    }\n    /**\n     * 设置 Canvas 的处理模式\n     * - C：代表 Canvas\n     * - O：代表 OffscreenCanvas\n     */\n    return _createClass(Painter, [{\n      key: \"setActionModel\",\n      value: function setActionModel(type) {\n        var model = this.model;\n        var env = platform.globals.env;\n        // set type\n        model.type = type;\n        // set clear\n        if (type === \"O\" && env === \"tt\" || env === \"alipay\") {\n          model.clear = \"CL\";\n        } else {\n          model.clear = \"RE\";\n        }\n      }\n      /**\n       * 注册画笔，根据环境判断生成最优的绘制方式\n       * @param selector\n       * @param ofsSelector\n       * @param component\n       */\n    }, {\n      key: \"register\",\n      value: function register(selector, ofsSelector, component) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee() {\n          var model, mode, getCanvas, getOfsCanvas, env, _W, _H, _getOfsCanvas, canvas, context, _yield$getCanvas, _canvas, _context, FC, F, W, H, clearType, ofsResult, _BC, _B, B, BC, renderer;\n          return _regenerator().w(function (_context2) {\n            while (1) switch (_context2.n) {\n              case 0:\n                model = this.model, mode = this.mode;\n                getCanvas = platform.getCanvas, getOfsCanvas = platform.getOfsCanvas;\n                env = platform.globals.env; // #region set main screen implement\n                // -------- 创建主屏 ---------\n                if (!(mode === \"single\" && (env !== \"h5\" || \"OffscreenCanvas\" in globalThis))) {\n                  _context2.n = 1;\n                  break;\n                }\n                _W = this.W, _H = this.H;\n                _getOfsCanvas = getOfsCanvas({\n                  width: _W,\n                  height: _H\n                }), canvas = _getOfsCanvas.canvas, context = _getOfsCanvas.context; // 添加主屏\n                this.F = canvas;\n                this.FC = context;\n                this.setActionModel(\"O\");\n                _context2.n = 3;\n                break;\n              case 1:\n                _context2.n = 2;\n                return getCanvas(selector, component);\n              case 2:\n                _yield$getCanvas = _context2.v;\n                _canvas = _yield$getCanvas.canvas;\n                _context = _yield$getCanvas.context;\n                // 添加主屏\n                this.F = _canvas;\n                this.FC = _context;\n                this.setActionModel(\"C\");\n                if (mode === \"single\") {\n                  _canvas.width = this.W;\n                  _canvas.height = this.H;\n                } else {\n                  this.W = _canvas.width;\n                  this.H = _canvas.height;\n                }\n              case 3:\n                // #endregion set main screen implement\n                FC = this.FC, F = this.F, W = this.W, H = this.H;\n                clearType = model.clear;\n                this.clearContainer = Renderer2DExtension.clear(clearType, FC, F, W, H);\n                if (!(mode === \"single\")) {\n                  _context2.n = 4;\n                  break;\n                }\n                this.B = F;\n                this.BC = FC;\n                this.clearSecondary = this.clearContainer;\n                this.stick = noop;\n                _context2.n = 8;\n                break;\n              case 4:\n                if (!(typeof ofsSelector === \"string\" && ofsSelector !== \"\")) {\n                  _context2.n = 6;\n                  break;\n                }\n                _context2.n = 5;\n                return getCanvas(ofsSelector, component);\n              case 5:\n                ofsResult = _context2.v;\n                ofsResult.canvas.width = W;\n                ofsResult.canvas.height = H;\n                this.setActionModel(\"C\");\n                _context2.n = 7;\n                break;\n              case 6:\n                ofsResult = getOfsCanvas({\n                  width: W,\n                  height: H\n                });\n                this.setActionModel(\"O\");\n              case 7:\n                this.B = ofsResult.canvas;\n                this.BC = ofsResult.context;\n                // #endregion set secondary screen implement\n                _BC = this.BC, _B = this.B;\n                this.clearSecondary = Renderer2DExtension.clear(clearType, _BC, _B, W, H);\n                this.stick = Renderer2DExtension.stick(FC, _B);\n              case 8:\n                // #region other methods implement\n                // ------- 生成其他方法 --------\n                B = this.B, BC = this.BC;\n                renderer = this.renderer = new Renderer2D(BC);\n                this.resize = function (contentMode, videoSize) {\n                  return renderer.resize(contentMode, videoSize, B);\n                };\n                this.draw = function (videoEntity, materials, dynamicMaterials, currentFrame, head, tail) {\n                  return renderer.render(videoEntity, materials, dynamicMaterials, currentFrame, head, tail);\n                };\n              // #endregion other methods implement\n              case 9:\n                return _context2.a(2);\n            }\n          }, _callee, this);\n        }));\n      }\n      /**\n       * 销毁画笔\n       */\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        var _a;\n        this.clearContainer();\n        this.clearSecondary();\n        this.F = this.FC = this.B = this.BC = null;\n        this.clearContainer = this.clearSecondary = this.stick = noop;\n        (_a = this.renderer) === null || _a === void 0 ? void 0 : _a.destroy();\n      }\n    }]);\n  }();\n  var Config = /*#__PURE__*/function () {\n    function Config() {\n      _classCallCheck(this, Config);\n      /**\n       * 最后停留的目标模式，类似于 animation-fill-mode，默认值 forwards。\n       */\n      this.fillMode = \"backwards\" /* PLAYER_FILL_MODE.BACKWARDS */;\n      /**\n       * 播放模式，默认值 forwards\n       */\n      this.playMode = \"forwards\" /* PLAYER_PLAY_MODE.FORWARDS */;\n      /**\n       * 填充模式，类似于 content-mode。\n       */\n      this.contentMode = \"fill\" /* PLAYER_CONTENT_MODE.FILL */;\n      /**\n       * 开始播放的帧，默认值 0\n       */\n      this.startFrame = 0;\n      /**\n       * 结束播放的帧，默认值 0\n       */\n      this.endFrame = 0;\n      /**\n       * 循环播放的开始帧，默认值 0\n       */\n      this.loopStartFrame = 0;\n      /**\n       * 循环次数，默认值 0（无限循环）\n       */\n      this.loop = 0;\n    }\n    return _createClass(Config, [{\n      key: \"register\",\n      value: function register(config) {\n        if (typeof config.loop === \"number\" && config.loop >= 0) {\n          this.loop = config.loop;\n        }\n        if (config.fillMode && [\"forwards\" /* PLAYER_FILL_MODE.FORWARDS */, \"backwards\" /* PLAYER_FILL_MODE.BACKWARDS */, \"none\" /* PLAYER_FILL_MODE.NONE */].includes(config.fillMode)) {\n          this.fillMode = config.fillMode;\n        }\n        if (config.playMode && [\"forwards\" /* PLAYER_PLAY_MODE.FORWARDS */, \"fallbacks\" /* PLAYER_PLAY_MODE.FALLBACKS */].includes(config.playMode)) {\n          this.playMode = config.playMode;\n        }\n        if (typeof config.startFrame === \"number\" && config.startFrame >= 0) {\n          this.startFrame = config.startFrame;\n        }\n        if (typeof config.endFrame === \"number\" && config.endFrame >= 0) {\n          this.endFrame = config.endFrame;\n        }\n        if (typeof config.loopStartFrame === \"number\" && config.loopStartFrame >= 0) {\n          this.loopStartFrame = config.loopStartFrame;\n        }\n        if (typeof config.contentMode === \"string\") {\n          this.contentMode = config.contentMode;\n        }\n      }\n    }, {\n      key: \"setItem\",\n      value: function setItem(key, value) {\n        this.register(_defineProperty({}, key, value));\n      }\n    }, {\n      key: \"getConfig\",\n      value: function getConfig(entity) {\n        var playMode = this.playMode,\n          loopStartFrame = this.loopStartFrame,\n          startFrame = this.startFrame,\n          endFrame = this.endFrame,\n          fillMode = this.fillMode,\n          loop = this.loop;\n        var fps = entity.fps,\n          sprites = entity.sprites;\n        var frames = entity.frames;\n        var spriteCount = sprites.length;\n        var start = startFrame > 0 ? startFrame : 0;\n        var end = endFrame > 0 && endFrame < frames ? endFrame : frames;\n        // 每帧持续的时间\n        var frameDuration = 1000 / fps;\n        if (start > end) {\n          throw new Error(\"StartFrame should greater than EndFrame\");\n        }\n        // 更新活动帧总数\n        if (end < frames) {\n          frames = end - start;\n        } else if (start > 0) {\n          frames -= start;\n        }\n        var duration = Math.floor(frames * frameDuration * Math.pow(10, 6)) / Math.pow(10, 6);\n        var currFrame = 0;\n        var extFrame = 0;\n        var loopStart;\n        // 顺序播放/倒叙播放\n        if (playMode === \"forwards\" /* PLAYER_PLAY_MODE.FORWARDS */) {\n          // 重置为开始帧\n          currFrame = Math.max(loopStartFrame, startFrame);\n          if (fillMode === \"forwards\" /* PLAYER_FILL_MODE.FORWARDS */) {\n            extFrame = 1;\n          }\n          loopStart = loopStartFrame > start ? (loopStartFrame - start) * frameDuration : 0;\n        } else {\n          // 重置为开始帧\n          currFrame = Math.min(loopStartFrame, end - 1);\n          if (fillMode === \"backwards\" /* PLAYER_FILL_MODE.BACKWARDS */) {\n            extFrame = 1;\n          }\n          loopStart = loopStartFrame < end ? (end - loopStartFrame) * frameDuration : 0;\n        }\n        return {\n          currFrame: currFrame,\n          startFrame: start,\n          endFrame: end,\n          totalFrame: frames,\n          spriteCount: spriteCount,\n          aniConfig: {\n            // 单个周期的运行时长\n            duration: duration,\n            // 第一个周期开始时间偏移量\n            loopStart: loopStart,\n            // 循环次数\n            loop: loop === 0 ? Infinity : loop,\n            // 最后一帧不在周期内，需要单独计算\n            fillValue: extFrame * frameDuration\n          }\n        };\n      }\n    }]);\n  }(); /**\n       * SVGA 播放器\n       */\n  var Player = /*#__PURE__*/function () {\n    function Player() {\n      _classCallCheck(this, Player);\n      /**\n       * 当前配置项\n       */\n      this.config = new Config();\n      /**\n       * 资源管理器\n       */\n      this.resource = null;\n      /**\n       * 刷头实例\n       */\n      this.painter = new Painter();\n      /**\n       * 动画实例\n       */\n      this.animator = new Animator();\n    }\n    /**\n     * 设置配置项\n     * @param options 可配置项\n     * @property container 主屏，播放动画的 Canvas 元素\n     * @property secondary 副屏，播放动画的 Canvas 元素\n     * @property loop 循环次数，默认值 0（无限循环）\n     * @property fillMode 最后停留的目标模式，类似于 animation-fill-mode，接受值 forwards 和 fallbacks，默认值 forwards。\n     * @property playMode 播放模式，接受值 forwards 和 fallbacks ，默认值 forwards。\n     * @property startFrame 单个循环周期内开始播放的帧数，默认值 0\n     * @property endFrame 单个循环周期内结束播放的帧数，默认值 0\n     * @property loopStartFrame 循环播放的开始帧，仅影响第一个周期的开始帧，默认值 0\n     * @property enableInObserver 是否启用 IntersectionObserver 监听容器是否处于浏览器视窗内，默认值 false\n     */\n    return _createClass(Player, [{\n      key: \"setConfig\",\n      value: function setConfig(options, component) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee() {\n          var config, container, secondary;\n          return _regenerator().w(function (_context) {\n            while (1) switch (_context.n) {\n              case 0:\n                config = typeof options === \"string\" ? {\n                  container: options\n                } : options;\n                container = config.container, secondary = config.secondary;\n                this.config.register(config);\n                // 监听容器是否处于浏览器视窗内\n                // this.setIntersectionObserver()\n                _context.n = 1;\n                return this.painter.register(container, secondary, component);\n              case 1:\n                this.resource = new ResourceManager(this.painter);\n                this.animator.onAnimate = platform.rAF.bind(null, this.painter.F);\n              case 2:\n                return _context.a(2);\n            }\n          }, _callee, this);\n        }));\n      }\n      /**\n       * 更新配置\n       * @param key\n       * @param value\n       */\n    }, {\n      key: \"setItem\",\n      value: function setItem(key, value) {\n        this.config.setItem(key, value);\n      }\n      /**\n       * 装载 SVGA 数据元\n       * @param videoEntity SVGA 数据源\n       * @returns Promise<void>\n       */\n    }, {\n      key: \"mount\",\n      value: function mount(videoEntity) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee2() {\n          var images, filename;\n          return _regenerator().w(function (_context2) {\n            while (1) switch (_context2.n) {\n              case 0:\n                if (videoEntity) {\n                  _context2.n = 1;\n                  break;\n                }\n                throw new Error(\"videoEntity undefined\");\n              case 1:\n                images = videoEntity.images, filename = videoEntity.filename;\n                this.animator.stop();\n                this.painter.clearSecondary();\n                this.resource.release();\n                this.entity = videoEntity;\n                _context2.n = 2;\n                return this.resource.loadImagesWithRecord(images, filename);\n              case 2:\n                return _context2.a(2);\n            }\n          }, _callee2, this);\n        }));\n      }\n      /**\n       * 开始播放\n       */\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _a;\n        this.startAnimation();\n        (_a = this.onStart) === null || _a === void 0 ? void 0 : _a.call(this);\n      }\n      /**\n       * 重新播放\n       */\n    }, {\n      key: \"resume\",\n      value: function resume() {\n        var _a;\n        if (this.animator.resume()) {\n          (_a = this.onResume) === null || _a === void 0 ? void 0 : _a.call(this);\n        }\n      }\n      /**\n       * 暂停播放\n       */\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        var _a;\n        if (this.animator.pause()) {\n          (_a = this.onPause) === null || _a === void 0 ? void 0 : _a.call(this);\n        }\n      }\n      /**\n       * 停止播放\n       */\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var _a;\n        this.animator.stop();\n        this.painter.clearContainer();\n        this.painter.clearSecondary();\n        (_a = this.onStop) === null || _a === void 0 ? void 0 : _a.call(this);\n      }\n      /**\n       * 销毁实例\n       */\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        var _a, _b;\n        this.animator.stop();\n        this.painter.destroy();\n        (_a = this.resource) === null || _a === void 0 ? void 0 : _a.release();\n        (_b = this.resource) === null || _b === void 0 ? void 0 : _b.cleanup();\n        this.entity = undefined;\n      }\n      /**\n       * 跳转到指定帧\n       * @param frame 目标帧\n       * @param andPlay 是否立即播放\n       */\n    }, {\n      key: \"stepToFrame\",\n      value: function stepToFrame(frame) {\n        var andPlay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        if (!this.entity || frame < 0 || frame >= this.entity.frames) return;\n        this.pause();\n        this.config.loopStartFrame = frame;\n        if (andPlay) {\n          this.start();\n        }\n      }\n      /**\n       * 跳转到指定百分比\n       * @param percent 目标百分比\n       * @param andPlay 是否立即播放\n       */\n    }, {\n      key: \"stepToPercentage\",\n      value: function stepToPercentage(percent) {\n        var andPlay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        if (!this.entity) return;\n        var frames = this.entity.frames;\n        var frame = percent < 0 ? 0 : Math.round(percent * frames);\n        if (frame >= frames) {\n          frame = frames - 1;\n        }\n        debugger;\n        this.stepToFrame(frame, andPlay);\n      }\n      /**\n       * 开始绘制动画\n       */\n    }, {\n      key: \"startAnimation\",\n      value: function startAnimation() {\n        var _this = this;\n        var entity = this.entity,\n          config = this.config,\n          animator = this.animator,\n          painter = this.painter,\n          resource = this.resource;\n        painter.W;\n        painter.H;\n        var materials = resource.materials,\n          dynamicMaterials = resource.dynamicMaterials;\n        var fillMode = config.fillMode,\n          playMode = config.playMode,\n          contentMode = config.contentMode;\n        var _config$getConfig = config.getConfig(entity),\n          currFrame = _config$getConfig.currFrame,\n          startFrame = _config$getConfig.startFrame,\n          endFrame = _config$getConfig.endFrame,\n          totalFrame = _config$getConfig.totalFrame,\n          spriteCount = _config$getConfig.spriteCount,\n          aniConfig = _config$getConfig.aniConfig;\n        var duration = aniConfig.duration,\n          loopStart = aniConfig.loopStart,\n          loop = aniConfig.loop,\n          fillValue = aniConfig.fillValue;\n        var isReverseMode = playMode === \"fallbacks\" /* PLAYER_PLAY_MODE.FALLBACKS */;\n        // 当前帧\n        var currentFrame = currFrame;\n        // 片段绘制结束位置\n        var tail = 0;\n        var nextTail;\n        // 上一帧\n        var latestFrame;\n        // 下一帧\n        var nextFrame;\n        // 精确帧\n        var exactFrame;\n        // 当前已完成的百分比\n        var percent;\n        // 是否还有剩余时间\n        var hasRemained;\n        // 更新动画基础信息\n        animator.setConfig(duration, loopStart, loop, fillValue);\n        painter.resize(contentMode, entity.size);\n        // 分段渲染函数\n        var MAX_DRAW_TIME_PER_FRAME = 8;\n        var MAX_ACCELERATE_DRAW_TIME_PER_FRAME = 3;\n        var MAX_DYNAMIC_CHUNK_SIZE = 34;\n        var MIN_DYNAMIC_CHUNK_SIZE = 1;\n        var render = function render(head, tail) {\n          return painter.draw(entity, materials, dynamicMaterials, currentFrame, head, tail);\n        };\n        // 动态调整每次绘制的块大小\n        var dynamicChunkSize = 4; // 初始块大小\n        var startTime;\n        var chunk;\n        var elapsed;\n        // 使用`指数退避算法`平衡渲染速度和流畅度\n        var patchDraw = function patchDraw(before) {\n          startTime = platform.now();\n          before();\n          while (tail < spriteCount) {\n            // 根据当前块大小计算nextTail\n            chunk = Math.min(dynamicChunkSize, spriteCount - tail);\n            nextTail = tail + chunk | 0;\n            render(tail, nextTail);\n            tail = nextTail;\n            // 动态调整块大小\n            elapsed = platform.now() - startTime;\n            if (elapsed < MAX_ACCELERATE_DRAW_TIME_PER_FRAME) {\n              dynamicChunkSize = Math.min(dynamicChunkSize * 2, MAX_DYNAMIC_CHUNK_SIZE); // 加快绘制\n            } else if (elapsed > MAX_DRAW_TIME_PER_FRAME) {\n              dynamicChunkSize = Math.max(dynamicChunkSize / 2, MIN_DYNAMIC_CHUNK_SIZE); // 减慢绘制\n              break;\n            }\n          }\n        };\n        // 动画绘制过程\n        animator.onUpdate = function (timePercent) {\n          var _a;\n          patchDraw(function () {\n            percent = isReverseMode ? 1 - timePercent : timePercent;\n            exactFrame = percent * totalFrame;\n            if (isReverseMode) {\n              nextFrame = (timePercent === 0 ? endFrame : Math.ceil(exactFrame)) - 1;\n              // FIXME: 倒序会有一帧的偏差，需要校准当前帧\n              percent = currentFrame / totalFrame;\n            } else {\n              nextFrame = timePercent === 1 ? startFrame : Math.floor(exactFrame);\n            }\n            hasRemained = currentFrame === nextFrame;\n          });\n          if (hasRemained) return;\n          if (tail < spriteCount) {\n            render(tail, spriteCount);\n          }\n          painter.clearContainer();\n          painter.stick();\n          painter.clearSecondary();\n          latestFrame = currentFrame;\n          currentFrame = nextFrame;\n          tail = 0;\n          (_a = _this.onProcess) === null || _a === void 0 ? void 0 : _a.call(_this, ~~(percent * 100) / 100, latestFrame);\n        };\n        animator.onStart = function () {\n          entity.locked = true;\n        };\n        animator.onEnd = function () {\n          var _a;\n          entity.locked = false;\n          // 如果不保留最后一帧渲染，则清空画布\n          if (fillMode === \"none\" /* PLAYER_FILL_MODE.NONE */) {\n            painter.clearContainer();\n          }\n          (_a = _this.onEnd) === null || _a === void 0 ? void 0 : _a.call(_this);\n        };\n        animator.start();\n      }\n    }]);\n  }();\n  var Poster = /*#__PURE__*/function () {\n    function Poster(width, height) {\n      _classCallCheck(this, Poster);\n      /**\n       * 海报配置项\n       */\n      this.config = {\n        /**\n         * 主屏，绘制海报的 Canvas 元素\n         */\n        container: \"\",\n        /**\n         * 填充模式，类似于 content-mode。\n         */\n        contentMode: \"fill\" /* PLAYER_CONTENT_MODE.FILL */,\n\n        /**\n         * 绘制成海报的帧，默认是0。\n         */\n        frame: 0\n      };\n      /**\n       * 是否配置完成\n       */\n      this.isConfigured = false;\n      /**\n       * 资源管理器\n       */\n      this.resource = null;\n      this.painter = new Painter(\"single\", width, height);\n    }\n    /**\n     * 注册 SVGA 海报\n     * @param selector 容器选择器\n     * @param component 组件\n     */\n    return _createClass(Poster, [{\n      key: \"register\",\n      value: function register() {\n        return __awaiter(this, arguments, void 0, function () {\n          var _this = this;\n          var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n          var component = arguments.length > 1 ? arguments[1] : undefined;\n          return /*#__PURE__*/_regenerator().m(function _callee() {\n            return _regenerator().w(function (_context) {\n              while (1) switch (_context.n) {\n                case 0:\n                  _context.n = 1;\n                  return _this.painter.register(selector, \"\", component);\n                case 1:\n                  _this.resource = new ResourceManager(_this.painter);\n                case 2:\n                  return _context.a(2);\n              }\n            }, _callee);\n          })();\n        });\n      }\n      /**\n       * 设置配置项\n       * @param options 可配置项\n       */\n    }, {\n      key: \"setConfig\",\n      value: function setConfig() {\n        return __awaiter(this, arguments, void 0, function () {\n          var _this2 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var component = arguments.length > 1 ? arguments[1] : undefined;\n          return /*#__PURE__*/_regenerator().m(function _callee2() {\n            return _regenerator().w(function (_context2) {\n              while (1) switch (_context2.n) {\n                case 0:\n                  if (typeof options === \"string\") {\n                    _this2.config.container = options;\n                  } else {\n                    Object.assign(_this2.config, options);\n                  }\n                  _this2.isConfigured = true;\n                  _context2.n = 1;\n                  return _this2.register(_this2.config.container, component);\n                case 1:\n                  return _context2.a(2);\n              }\n            }, _callee2);\n          })();\n        });\n      }\n      /**\n       * 修改内容模式\n       * @param contentMode\n       */\n    }, {\n      key: \"setContentMode\",\n      value: function setContentMode(contentMode) {\n        this.config.contentMode = contentMode;\n      }\n      /**\n       * 设置当前帧\n       * @param frame\n       */\n    }, {\n      key: \"setFrame\",\n      value: function setFrame(frame) {\n        this.config.frame = frame;\n      }\n      /**\n       * 装载 SVGA 数据元\n       * @param videoEntity SVGA 数据源\n       * @param currFrame\n       * @returns\n       */\n    }, {\n      key: \"mount\",\n      value: function mount(videoEntity) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee3() {\n          var images, filename;\n          return _regenerator().w(function (_context3) {\n            while (1) switch (_context3.n) {\n              case 0:\n                if (videoEntity) {\n                  _context3.n = 1;\n                  break;\n                }\n                throw new Error(\"videoEntity undefined\");\n              case 1:\n                if (this.isConfigured) {\n                  _context3.n = 3;\n                  break;\n                }\n                _context3.n = 2;\n                return this.register();\n              case 2:\n                this.isConfigured = true;\n              case 3:\n                images = videoEntity.images, filename = videoEntity.filename;\n                this.painter.clearContainer();\n                this.resource.release();\n                this.entity = videoEntity;\n                _context3.n = 4;\n                return this.resource.loadImagesWithRecord(images, filename);\n              case 4:\n                return _context3.a(2);\n            }\n          }, _callee3, this);\n        }));\n      }\n      /**\n       * 绘制海报\n       */\n    }, {\n      key: \"draw\",\n      value: function draw() {\n        if (!this.entity) return;\n        var painter = this.painter,\n          resource = this.resource,\n          entity = this.entity,\n          config = this.config;\n        painter.resize(config.contentMode, entity.size);\n        painter.draw(entity, resource.materials, resource.dynamicMaterials, config.frame, 0, entity.sprites.length);\n      }\n      /**\n       * 获取海报的 ImageData 数据\n       */\n    }, {\n      key: \"toImageData\",\n      value: function toImageData() {\n        var _this$painter = this.painter,\n          FC = _this$painter.FC,\n          width = _this$painter.W,\n          height = _this$painter.H;\n        return FC.getImageData(0, 0, width, height);\n      }\n      /**\n       * 销毁海报\n       */\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        var _a, _b;\n        this.painter.destroy();\n        (_a = this.resource) === null || _a === void 0 ? void 0 : _a.release();\n        (_b = this.resource) === null || _b === void 0 ? void 0 : _b.cleanup();\n        this.entity = undefined;\n      }\n    }]);\n  }();\n  function parseOptions(options) {\n    var _a, _b, _c, _d;\n    var typeNumber = (_a = options.typeNumber) !== null && _a !== void 0 ? _a : 4;\n    var correctLevel = (_b = options.correctLevel) !== null && _b !== void 0 ? _b : \"H\";\n    var codeColor = (_c = options.codeColor) !== null && _c !== void 0 ? _c : \"#000000\";\n    var backgroundColor = (_d = options.backgroundColor) !== null && _d !== void 0 ? _d : \"#FFFFFF\";\n    return {\n      code: options.code,\n      size: options.size,\n      typeNumber: typeNumber,\n      correctLevel: correctLevel,\n      codeColor: codeColor,\n      backgroundColor: backgroundColor\n    };\n  }\n  var calcCellSizeAndPadding = function calcCellSizeAndPadding(moduleCount, size) {\n    var cellSize = ~~(size / moduleCount);\n    return {\n      padding: ~~((size - moduleCount * cellSize) / 2),\n      cellSize: cellSize || 2\n    };\n  };\n  function generateImageBufferFromCode(options) {\n    var _parseOptions = parseOptions(options),\n      code = _parseOptions.code,\n      typeNumber = _parseOptions.typeNumber,\n      correctLevel = _parseOptions.correctLevel,\n      size = _parseOptions.size,\n      codeColor = _parseOptions.codeColor,\n      backgroundColor = _parseOptions.backgroundColor;\n    var qr;\n    try {\n      qr = new QRCode(typeNumber, correctLevel);\n      qr.addData(code);\n      qr.make();\n    } catch (e) {\n      if (typeNumber >= 40) {\n        throw new Error(\"Text too long to encode\");\n      }\n      return arguments.callee({\n        code: code,\n        size: size,\n        correctLevel: correctLevel,\n        typeNumber: typeNumber + 1,\n        codeColor: codeColor,\n        backgroundColor: backgroundColor\n      });\n    }\n    // calc cellsize and margin\n    var moduleCount = qr.getModuleCount();\n    var _calcCellSizeAndPaddi = calcCellSizeAndPadding(moduleCount, size),\n      padding = _calcCellSizeAndPaddi.padding,\n      cellSize = _calcCellSizeAndPaddi.cellSize;\n    var max = moduleCount * cellSize + padding;\n    var CODE_COLOR = +\"\".concat(codeColor.replace(\"#\", \"0x\"), \"FF\");\n    var BACKGROUND_COLOR = +\"\".concat(backgroundColor.replace(\"#\", \"0x\"), \"FF\");\n    var png = new PNGEncoder(size, size);\n    for (var y = 0; y < size; y++) {\n      for (var x = 0; x < size; x++) {\n        if (padding <= x && x < max && padding <= y && y < max) {\n          var c = ~~((x - padding) / cellSize);\n          var r = ~~((y - padding) / cellSize);\n          png.setPixel(x, y, qr.isDark(r, c) ? CODE_COLOR : BACKGROUND_COLOR);\n        } else {\n          png.setPixel(x, y, BACKGROUND_COLOR);\n        }\n      }\n    }\n    return png.flush();\n  }\n  function generateImageFromCode(options) {\n    var buff = generateImageBufferFromCode(options);\n    return platform.decode.toDataURL(buff);\n  } /**\n    * 将 ImageData 转换为 PNG 格式的 Buffer\n    * @param imageData\n    * @returns PNG 格式的 Buffer\n    */\n  function createBufferOfImageData(imageData) {\n    var width = imageData.width,\n      height = imageData.height,\n      data = imageData.data;\n    return new PNGEncoder(width, height).write(data).flush();\n  }\n  /**\n   * @deprecated 请使用 createBufferOfImageData 代替，此方法可能在后续版本中移除\n   */\n  var getBufferFromImageData = createBufferOfImageData;\n  /**\n   * 将 ImageData 转换为 PNG 格式的 Base64 字符串\n   * @param imageData\n   * @returns PNG 格式的 Base64 字符串\n   */\n  function createImageDataUrl(imageData) {\n    return platform.decode.toDataURL(createBufferOfImageData(imageData));\n  }\n  /**\n   * @deprecated 请使用 createImageDataUrl 代替，此方法可能在后续版本中移除\n   */\n  var getDataURLFromImageData = createImageDataUrl; /**\n                                                    * 检查数据是否为zlib压缩格式\n                                                    * @param data 待检查的二进制数据\n                                                    * @returns 是否为zlib压缩格式\n                                                    */\n  function isZlibCompressed(data) {\n    // 检查数据长度是否足够（至少需要2字节头部和4字节ADLER-32校验和）\n    if (data.length < 6) {\n      return false;\n    }\n    // 获取CMF和FLG字节\n    var cmf = data[0];\n    var flg = data[1];\n    // 检查CMF的压缩方法（低4位为8表示DEFLATE）\n    if ((cmf & 0x0f) !== 8) {\n      return false;\n    }\n    // 检查窗口大小（高4位通常为7，但不是严格要求）\n    // - 这里不强制检查，因为理论上可以是其他值\n    // 验证头部校验（CMF * 256 + FLG必须是31的倍数）\n    if ((cmf * 256 + flg) % 31 !== 0) {\n      return false;\n    }\n    // 检查字典标志位（如果设置了字典，需要额外验证，但这种情况很少见）\n    var fdict = (flg & 0x20) !== 0;\n    if (fdict) {\n      // 标准zlib压缩通常不使用预定义字典\n      // 这里假设不使用字典，若检测到字典标志则认为不是标准zlib格式\n      return false;\n    }\n    // 尝试提取ADLER-32校验和并验证其格式\n    // 虽然无法验证校验和值（需要解压后计算），但可以检查其是否为合理的数值\n    var adler32Bytes = data.slice(-4);\n    if (adler32Bytes.length !== 4) {\n      return false;\n    }\n    var adler32 = adler32Bytes[0] << 24 | adler32Bytes[1] << 16 | adler32Bytes[2] << 8 | adler32Bytes[3];\n    // 有效的ADLER-32值应大于0（除非是空数据）\n    if (data.length > 2 && adler32 === 0) {\n      return false;\n    }\n    // 所有检查都通过，数据可能是zlib压缩格式\n    return true;\n  }\n  var VideoManager = /*#__PURE__*/function () {\n    function VideoManager(loadMode, options) {\n      _classCallCheck(this, VideoManager);\n      /**\n       * 视频池的当前指针位置\n       */\n      this.point = 0;\n      /**\n       * 视频的最大留存数量，其他视频将放在磁盘上缓存\n       */\n      this.maxRemain = 3;\n      /**\n       * 留存视频的开始指针位置\n       */\n      this.remainStart = 0;\n      /**\n       * 留存视频的结束指针位置\n       */\n      this.remainEnd = 0;\n      /**\n       * 视频加载模式\n       * - 快速加载模式：可保证当前视频加载完成后，尽快播放；其他请求将使用Promise的方式保存在bucket中，以供后续使用\n       * - 完整加载模式：可保证所有视频加载完成，确保播放切换的流畅性\n       */\n      this.loadMode = \"fast\";\n      /**\n       * 视频池的所有数据\n       */\n      this.buckets = [];\n      this.options = {\n        /**\n         * 预处理动效数据\n         * @param url\n         * @returns\n         */\n        preprocess: function preprocess(bucket) {\n          return Parser.download(bucket.origin);\n        },\n        /**\n         * 后处理动效数据\n         * @param bucket\n         * @param data\n         * @returns\n         */\n        postprocess: function postprocess(bucket, data) {\n          return Parser.parseVideo(data, bucket.origin, true);\n        },\n        /**\n         * 清理数据\n         * @param buckets\n         * @returns\n         */\n        cleanup: function cleanup(buckets) {\n          platform.globals;\n          var local = platform.local,\n            path = platform.path;\n          buckets.forEach(function (bucket) {\n            if (path.is(bucket.local)) {\n              local.remove(bucket.local);\n            }\n          });\n        }\n      };\n      if (typeof loadMode === \"string\") {\n        this.loadMode = loadMode;\n      }\n      Object.assign(this.options, options);\n    }\n    /**\n     * 更新留存指针位置\n     */\n    return _createClass(VideoManager, [{\n      key: \"size\",\n      get:\n      /**\n       * 获取视频池大小\n       */\n      function get() {\n        return this.buckets.length;\n      }\n    }, {\n      key: \"updateRemainRange\",\n      value: function updateRemainRange(point, maxRemain, totalCount) {\n        if (point < 0) {\n          this.point = 0;\n        } else if (point >= totalCount) {\n          this.point = totalCount - 1;\n        } else {\n          this.point = point;\n        }\n        if (this.loadMode === \"whole\") {\n          this.remainStart = 0;\n          this.remainEnd = totalCount;\n        } else {\n          if (maxRemain < 1) {\n            this.maxRemain = 1;\n          } else if (maxRemain > totalCount) {\n            this.maxRemain = totalCount;\n          } else {\n            this.maxRemain = maxRemain;\n          }\n          this.remainStart = this.point - Math.floor(this.maxRemain / 2);\n          if (this.remainStart < 0) {\n            this.remainStart = totalCount + this.remainStart;\n          }\n          this.remainEnd = this.remainStart + this.maxRemain;\n          if (this.remainEnd > totalCount) {\n            this.remainEnd = this.remainEnd % totalCount;\n          }\n        }\n      }\n      /**\n       * 指针是否在留存空间内\n       * @param point\n       * @returns\n       */\n    }, {\n      key: \"includeRemainRange\",\n      value: function includeRemainRange(point) {\n        if (this.remainStart < this.remainEnd) {\n          return point >= this.remainStart && point < this.remainEnd;\n        }\n        if (this.remainStart > this.remainEnd) {\n          return point >= this.remainStart || point < this.remainEnd;\n        }\n        return true;\n      }\n    }, {\n      key: \"downloadAndParseVideo\",\n      value: function downloadAndParseVideo(bucket_1) {\n        return __awaiter(this, arguments, void 0, function (bucket) {\n          var _this = this;\n          var needParse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return /*#__PURE__*/_regenerator().m(function _callee() {\n            var options, data;\n            return _regenerator().w(function (_context) {\n              while (1) switch (_context.n) {\n                case 0:\n                  options = _this.options;\n                  _context.n = 1;\n                  return options.preprocess(bucket);\n                case 1:\n                  data = _context.v;\n                  if (!needParse) {\n                    _context.n = 2;\n                    break;\n                  }\n                  return _context.a(2, options.postprocess(bucket, data));\n                case 2:\n                  return _context.a(2, data);\n              }\n            }, _callee);\n          })();\n        });\n      }\n      /**\n       * 创建bucket\n       * @param url 远程地址\n       * @param point 指针位置\n       * @param needDownloadAndParse 是否需要下载并解析\n       * @returns\n       */\n    }, {\n      key: \"createBucket\",\n      value: function createBucket(url, point, needDownloadAndParse) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee2() {\n          var path, bucket;\n          return _regenerator().w(function (_context2) {\n            while (1) switch (_context2.n) {\n              case 0:\n                path = platform.path;\n                bucket = {\n                  origin: url,\n                  local: path.resolve(path.filename(url)),\n                  entity: null,\n                  promise: null\n                };\n                this.buckets[point] = bucket;\n                if (!needDownloadAndParse) {\n                  _context2.n = 2;\n                  break;\n                }\n                _context2.n = 1;\n                return this.downloadAndParseVideo(bucket, true);\n              case 1:\n                bucket.entity = _context2.v;\n                _context2.n = 3;\n                break;\n              case 2:\n                if (this.includeRemainRange(point)) {\n                  bucket.promise = this.downloadAndParseVideo(bucket);\n                }\n              case 3:\n                return _context2.a(2, bucket);\n            }\n          }, _callee2, this);\n        }));\n      }\n      /**\n       * 预加载视频到本地磁盘中\n       * @param urls 视频远程地址\n       * @param point 当前指针位置\n       * @param maxRemain 最大留存数量\n       */\n    }, {\n      key: \"prepare\",\n      value: function prepare(urls_1) {\n        return __awaiter(this, arguments, void 0, function (urls) {\n          var _this2 = this;\n          var point = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          var maxRemain = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n          return /*#__PURE__*/_regenerator().m(function _callee3() {\n            var loadMode, currentPoint, needDownloadAndParse, preloadBucket;\n            return _regenerator().w(function (_context3) {\n              while (1) switch (_context3.n) {\n                case 0:\n                  _this2.updateRemainRange(point, maxRemain, urls.length);\n                  loadMode = _this2.loadMode, currentPoint = _this2.point;\n                  needDownloadAndParse = loadMode === \"whole\"; // 优先加载当前动效\n                  _context3.n = 1;\n                  return _this2.createBucket(urls[currentPoint], currentPoint, needDownloadAndParse);\n                case 1:\n                  preloadBucket = _context3.v;\n                  _context3.n = 2;\n                  return Promise.all(urls.map(function (url, index) {\n                    return index === currentPoint ? preloadBucket : _this2.createBucket(url, index, needDownloadAndParse);\n                  }));\n                case 2:\n                  return _context3.a(2);\n              }\n            }, _callee3);\n          })();\n        });\n      }\n      /**\n       * 获取当前帧的bucket\n       * @returns\n       */\n    }, {\n      key: \"get\",\n      value: function get() {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee4() {\n          var _this3 = this;\n          var bucket;\n          return _regenerator().w(function (_context4) {\n            while (1) switch (_context4.n) {\n              case 0:\n                bucket = this.buckets[this.point];\n                if (bucket.entity) {\n                  _context4.n = 2;\n                  break;\n                }\n                if (!bucket.promise) {\n                  bucket.promise = this.downloadAndParseVideo(bucket);\n                }\n                _context4.n = 1;\n                return bucket.promise.then(function (data) {\n                  return _this3.options.postprocess(bucket, data);\n                });\n              case 1:\n                bucket.entity = _context4.v;\n                bucket.promise = null;\n              case 2:\n                return _context4.a(2, bucket);\n            }\n          }, _callee4, this);\n        }));\n      }\n      /**\n       * 获取当前的指针位置\n       * @returns\n       */\n    }, {\n      key: \"getPoint\",\n      value: function getPoint() {\n        return this.point;\n      }\n      /**\n       * 获取指定位置的bucket\n       * @param pos\n       * @returns\n       */\n    }, {\n      key: \"go\",\n      value: function go(point) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee5() {\n          var _this4 = this;\n          var size, buckets, loadMode;\n          return _regenerator().w(function (_context5) {\n            while (1) switch (_context5.n) {\n              case 0:\n                size = this.size, buckets = this.buckets, loadMode = this.loadMode;\n                if (!(point < 0 || point >= size)) {\n                  _context5.n = 1;\n                  break;\n                }\n                return _context5.a(2, buckets[this.point]);\n              case 1:\n                this.updateRemainRange(point, this.maxRemain, buckets.length);\n                if (loadMode === \"fast\" && this.maxRemain !== buckets.length) {\n                  buckets.forEach(function (bucket, index) {\n                    if (_this4.includeRemainRange(index)) {\n                      if (bucket.entity === null && bucket.promise === null) {\n                        bucket.promise = _this4.downloadAndParseVideo(bucket);\n                      }\n                    } else {\n                      bucket.entity = null;\n                      bucket.promise = null;\n                    }\n                  });\n                }\n                return _context5.a(2, this.get());\n            }\n          }, _callee5, this);\n        }));\n      }\n      /**\n       * 清理所有的bucket\n       * @returns\n       */\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        return __awaiter(this, arguments, void 0, function () {\n          var _this5 = this;\n          var needRemoveFiles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n          return /*#__PURE__*/_regenerator().m(function _callee6() {\n            var buckets;\n            return _regenerator().w(function (_context6) {\n              while (1) switch (_context6.n) {\n                case 0:\n                  buckets = _this5.buckets;\n                  _this5.point = 0;\n                  _this5.remainStart = 0;\n                  _this5.remainEnd = 0;\n                  _this5.maxRemain = 3;\n                  _this5.buckets = [];\n                  if (!needRemoveFiles) {\n                    _context6.n = 1;\n                    break;\n                  }\n                  _context6.n = 1;\n                  return _this5.options.cleanup(buckets);\n                case 1:\n                  return _context6.a(2);\n              }\n            }, _callee6);\n          })();\n        });\n      }\n    }]);\n  }();\n  var VideoEditor = /*#__PURE__*/function () {\n    function VideoEditor(painter, resource, entity) {\n      _classCallCheck(this, VideoEditor);\n      this.painter = painter;\n      this.resource = resource;\n      this.entity = entity;\n    }\n    return _createClass(VideoEditor, [{\n      key: \"set\",\n      value: function set(key_1, value_1) {\n        return __awaiter(this, arguments, void 0, function (key, value) {\n          var _this = this;\n          var mode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"R\";\n          return /*#__PURE__*/_regenerator().m(function _callee() {\n            var entity, resource;\n            return _regenerator().w(function (_context) {\n              while (1) switch (_context.n) {\n                case 0:\n                  entity = _this.entity, resource = _this.resource;\n                  if (!(mode === \"A\")) {\n                    _context.n = 2;\n                    break;\n                  }\n                  _context.n = 1;\n                  return resource.loadImagesWithRecord(_defineProperty({}, key, value), entity.filename, \"dynamic\");\n                case 1:\n                  _context.n = 3;\n                  break;\n                case 2:\n                  entity.images[key] = value;\n                case 3:\n                  return _context.a(2);\n              }\n            }, _callee);\n          })();\n        });\n      }\n      /**\n       * 获取自定义编辑器\n       * @returns\n       */\n    }, {\n      key: \"getContext\",\n      value: function getContext() {\n        return this.painter.BC;\n      }\n      /**\n       * 是否是有效的Key\n       * @param key\n       * @returns\n       */\n    }, {\n      key: \"hasValidKey\",\n      value: function hasValidKey(key) {\n        var images = this.entity.images;\n        if (typeof Object.hasOwn === \"function\") {\n          return Object.hasOwn(images, key);\n        }\n        return Object.prototype.hasOwnProperty.call(images, key);\n      }\n      /**\n       * 加载并缓存图片\n       * @param source\n       * @param url\n       * @returns\n       */\n    }, {\n      key: \"loadImage\",\n      value: function loadImage(source, url) {\n        return this.resource.loadExtImage(source, platform.path.filename(url));\n      }\n      /**\n       * 创建画布图片\n       * @param key\n       * @param context\n       * @param options\n       * @returns\n       */\n    }, {\n      key: \"setCanvas\",\n      value: function setCanvas(key, context, options) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee2() {\n          var _a, _b, canvas, width, height, imageData;\n          return _regenerator().w(function (_context2) {\n            while (1) switch (_context2.n) {\n              case 0:\n                if (!this.entity.locked) {\n                  _context2.n = 1;\n                  break;\n                }\n                return _context2.a(2);\n              case 1:\n                canvas = context.canvas;\n                width = (_a = options === null || options === void 0 ? void 0 : options.width) !== null && _a !== void 0 ? _a : canvas.width;\n                height = (_b = options === null || options === void 0 ? void 0 : options.height) !== null && _b !== void 0 ? _b : canvas.height;\n                imageData = context.getImageData(0, 0, width, height);\n                this.painter.clearSecondary();\n                _context2.n = 2;\n                return this.set(key, new Uint8Array(createBufferOfImageData(imageData)), options === null || options === void 0 ? void 0 : options.mode);\n              case 2:\n                return _context2.a(2);\n            }\n          }, _callee2, this);\n        }));\n      }\n      /**\n       * 创建二进制图片\n       * @param key\n       * @param buff\n       * @param options\n       * @returns\n       */\n    }, {\n      key: \"setImage\",\n      value: function setImage(key, url, options) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee3() {\n          var _t, _t2, _t3, _t4, _t5, _t6;\n          return _regenerator().w(function (_context3) {\n            while (1) switch (_context3.n) {\n              case 0:\n                if (!this.entity.locked) {\n                  _context3.n = 1;\n                  break;\n                }\n                return _context3.a(2);\n              case 1:\n                if (!url.startsWith(\"data:image\")) {\n                  _context3.n = 3;\n                  break;\n                }\n                _context3.n = 2;\n                return this.set(key, url, options === null || options === void 0 ? void 0 : options.mode);\n              case 2:\n                _context3.n = 5;\n                break;\n              case 3:\n                _t = this;\n                _t2 = key;\n                _t3 = Uint8Array;\n                _context3.n = 4;\n                return Parser.download(url);\n              case 4:\n                _t4 = _context3.v;\n                _t5 = new _t3(_t4);\n                _t6 = options === null || options === void 0 ? void 0 : options.mode;\n                _context3.n = 5;\n                return _t.set.call(_t, _t2, _t5, _t6);\n              case 5:\n                return _context3.a(2);\n            }\n          }, _callee3, this);\n        }));\n      }\n      /**\n       * 创建二维码图片\n       * @param key\n       * @param code\n       * @param options\n       * @returns\n       */\n    }, {\n      key: \"setQRCode\",\n      value: function setQRCode(key, code, options) {\n        return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator().m(function _callee4() {\n          return _regenerator().w(function (_context4) {\n            while (1) switch (_context4.n) {\n              case 0:\n                if (!this.entity.locked) {\n                  _context4.n = 1;\n                  break;\n                }\n                return _context4.a(2);\n              case 1:\n                _context4.n = 2;\n                return this.set(key, new Uint8Array(generateImageBufferFromCode(Object.assign(Object.assign({}, options), {\n                  code: code\n                }))), options === null || options === void 0 ? void 0 : options.mode);\n              case 2:\n                return _context4.a(2);\n            }\n          }, _callee4, this);\n        }));\n      }\n    }]);\n  }();\n  exports.EnhancedPlatform = EnhancedPlatform;\n  exports.Painter = Painter;\n  exports.Parser = Parser;\n  exports.Player = Player;\n  exports.Poster = Poster;\n  exports.VideoEditor = VideoEditor;\n  exports.VideoManager = VideoManager;\n  exports.createBufferOfImageData = createBufferOfImageData;\n  exports.createImageDataUrl = createImageDataUrl;\n  exports.generateImageBufferFromCode = generateImageBufferFromCode;\n  exports.generateImageFromCode = generateImageFromCode;\n  exports.getBufferFromImageData = getBufferFromImageData;\n  exports.getDataURLFromImageData = getDataURLFromImageData;\n  exports.isZlibCompressed = isZlibCompressed;\n  exports.platform = platform;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/fuck-svga.js\n");

/***/ }),

/***/ "./utils/svga-2dfire.js":
/*!******************************!*\
  !*** ./utils/svga-2dfire.js ***!
  \******************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*! For license information please see svga.js.LICENSE.txt */\n// 暂不支持api has.arrayBufferToBase64 TODO// 暂不支持api has.createOffscreenCanvas TODO\n// 暂不支持api has.arrayBufferToBase64 TODO// 暂不支持api has.createOffscreenCanvas TODO\n!function (t, e) {\n   true ? module.exports = e() : 0;\n}(self, () => (() => {\n  var t = {\n      700: (t, e, r) => {\n        t.exports = function () {\n          var t = {};\n          function e() {\n            t.converter._configure(), t.decoder._configure(), t.Field._configure(), t.MapField._configure(), t.Message._configure(), t.Namespace._configure(), t.Method._configure(), t.ReflectionObject._configure(), t.OneOf._configure(), t.parse._configure(), t.Reader._configure(), t.Root._configure(), t.Service._configure(), t.verifier._configure(), t.Type._configure(), t.types._configure(), t.wrappers._configure(), t.Writer._configure();\n          }\n          if (t.build = \"minimal\", t.Writer = r(443), t.Reader = r(795), t.util = r(916), t.rpc = r(153), t.roots = r(587), t.verifier = r(122), t.tokenize = r(941), t.parse = r(121), t.common = r(453), t.ReflectionObject = r(719), t.Namespace = r(625), t.Root = r(572), t.Enum = r(421), t.Type = r(24), t.Field = r(238), t.OneOf = r(803), t.MapField = r(718), t.Service = r(673), t.Method = r(493), t.converter = r(954), t.decoder = r(910), t.Message = r(853), t.wrappers = r(432), t.types = r(471), t.util = r(916), t.configure = e, t.load = function (e, r, i) {\n            return \"function\" == typeof r ? (i = r, r = new t.Root()) : r || (r = new t.Root()), r.load(e, i);\n          }, t.loadSync = function (e, r) {\n            return r || (r = new t.Root()), r.loadSync(e);\n          }, t.parseFromPbString = function (e, r, i) {\n            return \"function\" == typeof r ? (i = r, r = new t.Root()) : r || (r = new t.Root()), r.parseFromPbString(e, i);\n          }, e(), arguments && arguments.length) for (var i = 0; i < arguments.length; i++) {\n            var n = arguments[i];\n            if (n.hasOwnProperty(\"exports\")) return void (n.exports = t);\n          }\n          return t;\n        }();\n      },\n      770: t => {\n        \"use strict\";\n\n        function e() {\n          this._listeners = {};\n        }\n        t.exports = e, e.prototype.on = function (t, e, r) {\n          return (this._listeners[t] || (this._listeners[t] = [])).push({\n            fn: e,\n            ctx: r || this\n          }), this;\n        }, e.prototype.off = function (t, e) {\n          if (void 0 === t) this._listeners = {};else if (void 0 === e) this._listeners[t] = [];else for (var r = this._listeners[t], i = 0; i < r.length;) r[i].fn === e ? r.splice(i, 1) : ++i;\n          return this;\n        }, e.prototype.emit = function (t) {\n          var e = this._listeners[t];\n          if (e) {\n            for (var r = [], i = 1; i < arguments.length;) r.push(arguments[i++]);\n            for (i = 0; i < e.length;) e[i].fn.apply(e[i++].ctx, r);\n          }\n          return this;\n        };\n      },\n      347: t => {\n        \"use strict\";\n\n        t.exports = function (t, e) {\n          for (var r = new Array(arguments.length - 1), i = 0, n = 2, s = !0; n < arguments.length;) r[i++] = arguments[n++];\n          return new Promise(function (n, o) {\n            r[i] = function (t) {\n              if (s) if (s = !1, t) o(t);else {\n                for (var e = new Array(arguments.length - 1), r = 0; r < e.length;) e[r++] = arguments[r];\n                n.apply(null, e);\n              }\n            };\n            try {\n              t.apply(e || null, r);\n            } catch (t) {\n              s && (s = !1, o(t));\n            }\n          });\n        };\n      },\n      203: t => {\n        \"use strict\";\n\n        var e = t.exports;\n        e.length = function (t) {\n          var e = t.length;\n          if (!e) return 0;\n          for (var r = 0; --e % 4 > 1 && \"=\" === t.charAt(e);) ++r;\n          return Math.ceil(3 * t.length) / 4 - r;\n        };\n        for (var r = new Array(64), i = new Array(123), n = 0; n < 64;) i[r[n] = n < 26 ? n + 65 : n < 52 ? n + 71 : n < 62 ? n - 4 : n - 59 | 43] = n++;\n        e.encode = function (t, e, i) {\n          for (var n, s = null, o = [], a = 0, h = 0; e < i;) {\n            var u = t[e++];\n            switch (h) {\n              case 0:\n                o[a++] = r[u >> 2], n = (3 & u) << 4, h = 1;\n                break;\n              case 1:\n                o[a++] = r[n | u >> 4], n = (15 & u) << 2, h = 2;\n                break;\n              case 2:\n                o[a++] = r[n | u >> 6], o[a++] = r[63 & u], h = 0;\n            }\n            a > 8191 && ((s || (s = [])).push(String.fromCharCode.apply(String, o)), a = 0);\n          }\n          return h && (o[a++] = r[n], o[a++] = 61, 1 === h && (o[a++] = 61)), s ? (a && s.push(String.fromCharCode.apply(String, o.slice(0, a))), s.join(\"\")) : String.fromCharCode.apply(String, o.slice(0, a));\n        };\n        var s = \"invalid encoding\";\n        e.decode = function (t, e, r) {\n          for (var n, o = r, a = 0, h = 0; h < t.length;) {\n            var u = t.charCodeAt(h++);\n            if (61 === u && a > 1) break;\n            if (void 0 === (u = i[u])) throw Error(s);\n            switch (a) {\n              case 0:\n                n = u, a = 1;\n                break;\n              case 1:\n                e[r++] = n << 2 | (48 & u) >> 4, n = u, a = 2;\n                break;\n              case 2:\n                e[r++] = (15 & n) << 4 | (60 & u) >> 2, n = u, a = 3;\n                break;\n              case 3:\n                e[r++] = (3 & n) << 6 | u, a = 0;\n            }\n          }\n          if (1 === a) throw Error(s);\n          return r - o;\n        }, e.test = function (t) {\n          return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(t);\n        };\n      },\n      453: t => {\n        t.exports = i;\n        var e,\n          r = /\\/|\\./;\n        function i(t, e) {\n          r.test(t) || (t = \"google/protobuf/\" + t + \".proto\", e = {\n            nested: {\n              google: {\n                nested: {\n                  protobuf: {\n                    nested: e\n                  }\n                }\n              }\n            }\n          }), i[t] = e;\n        }\n        i(\"any\", {\n          Any: {\n            fields: {\n              type_url: {\n                type: \"string\",\n                id: 1\n              },\n              value: {\n                type: \"bytes\",\n                id: 2\n              }\n            }\n          }\n        }), i(\"duration\", {\n          Duration: e = {\n            fields: {\n              seconds: {\n                type: \"int64\",\n                id: 1\n              },\n              nanos: {\n                type: \"int32\",\n                id: 2\n              }\n            }\n          }\n        }), i(\"timestamp\", {\n          Timestamp: e\n        }), i(\"empty\", {\n          Empty: {\n            fields: {}\n          }\n        }), i(\"struct\", {\n          Struct: {\n            fields: {\n              fields: {\n                keyType: \"string\",\n                type: \"Value\",\n                id: 1\n              }\n            }\n          },\n          Value: {\n            oneofs: {\n              kind: {\n                oneof: [\"nullValue\", \"numberValue\", \"stringValue\", \"boolValue\", \"structValue\", \"listValue\"]\n              }\n            },\n            fields: {\n              nullValue: {\n                type: \"NullValue\",\n                id: 1\n              },\n              numberValue: {\n                type: \"double\",\n                id: 2\n              },\n              stringValue: {\n                type: \"string\",\n                id: 3\n              },\n              boolValue: {\n                type: \"bool\",\n                id: 4\n              },\n              structValue: {\n                type: \"Struct\",\n                id: 5\n              },\n              listValue: {\n                type: \"ListValue\",\n                id: 6\n              }\n            }\n          },\n          NullValue: {\n            values: {\n              NULL_VALUE: 0\n            }\n          },\n          ListValue: {\n            fields: {\n              values: {\n                rule: \"repeated\",\n                type: \"Value\",\n                id: 1\n              }\n            }\n          }\n        }), i(\"wrappers\", {\n          DoubleValue: {\n            fields: {\n              value: {\n                type: \"double\",\n                id: 1\n              }\n            }\n          },\n          FloatValue: {\n            fields: {\n              value: {\n                type: \"float\",\n                id: 1\n              }\n            }\n          },\n          Int64Value: {\n            fields: {\n              value: {\n                type: \"int64\",\n                id: 1\n              }\n            }\n          },\n          UInt64Value: {\n            fields: {\n              value: {\n                type: \"uint64\",\n                id: 1\n              }\n            }\n          },\n          Int32Value: {\n            fields: {\n              value: {\n                type: \"int32\",\n                id: 1\n              }\n            }\n          },\n          UInt32Value: {\n            fields: {\n              value: {\n                type: \"uint32\",\n                id: 1\n              }\n            }\n          },\n          BoolValue: {\n            fields: {\n              value: {\n                type: \"bool\",\n                id: 1\n              }\n            }\n          },\n          StringValue: {\n            fields: {\n              value: {\n                type: \"string\",\n                id: 1\n              }\n            }\n          },\n          BytesValue: {\n            fields: {\n              value: {\n                type: \"bytes\",\n                id: 1\n              }\n            }\n          }\n        }), i(\"field_mask\", {\n          FieldMask: {\n            fields: {\n              paths: {\n                rule: \"repeated\",\n                type: \"string\",\n                id: 1\n              }\n            }\n          }\n        }), i.get = function (t) {\n          return i[t] || null;\n        };\n      },\n      954: (t, e, r) => {\n        var i,\n          n,\n          s = r(535).default,\n          o = t.exports;\n        function a(t, e, r, o) {\n          var a = o.m,\n            h = o.d,\n            u = o.types,\n            l = o.ksi,\n            f = void 0 !== l;\n          if (t.resolvedType) {\n            if (t.resolvedType instanceof i) {\n              for (var c = f ? h[r][l] : h[r], d = t.resolvedType.values, p = Object.keys(d), y = 0; y < p.length; y++) if (!(t.repeated && d[p[y]] === t.typeDefault || p[y] != c && d[p[y]] != c)) {\n                f ? a[r][l] = d[p[y]] : a[r] = d[p[y]];\n                break;\n              }\n            } else {\n              if (\"object\" !== s(f ? h[r][l] : h[r])) throw TypeError(t.fullName + \": object expected\");\n              f ? a[r][l] = u[e].fromObject(h[r][l]) : a[r] = u[e].fromObject(h[r]);\n            }\n          } else {\n            var v = !1;\n            switch (t.type) {\n              case \"double\":\n              case \"float\":\n                f ? a[r][l] = Number(h[r][l]) : a[r] = Number(h[r]);\n                break;\n              case \"uint32\":\n              case \"fixed32\":\n                f ? a[r][l] = h[r][l] >>> 0 : a[r] = h[r] >>> 0;\n                break;\n              case \"int32\":\n              case \"sint32\":\n              case \"sfixed32\":\n                f ? a[r][l] = 0 | h[r][l] : a[r] = 0 | h[r];\n                break;\n              case \"uint64\":\n                v = !0;\n              case \"int64\":\n              case \"sint64\":\n              case \"fixed64\":\n              case \"sfixed64\":\n                n.Long ? f ? a[r][l] = n.Long.fromValue(h[r][l]).unsigned = v : a[r] = n.Long.fromValue(h[r]).unsigned = v : \"string\" == typeof (f ? h[r][l] : h[r]) ? f ? a[r][l] = parseInt(h[r][l], 10) : a[r] = parseInt(h[r], 10) : \"number\" == typeof (f ? h[r][l] : h[r]) ? f ? a[r][l] = h[r][l] : a[r] = h[r] : \"object\" === s(f ? h[r][l] : h[r]) && (f ? a[r][l] = new n.LongBits(h[r][l].low >>> 0, h[r][l].high >>> 0).toNumber(v) : a[r] = new n.LongBits(h[r].low >>> 0, h[r].high >>> 0).toNumber(v));\n                break;\n              case \"bytes\":\n                \"string\" == typeof (f ? h[r][l] : h[r]) ? f ? n.base64.decode(h[r][l], a[r][l] = n.newBuffer(n.base64.length(h[r][l])), 0) : n.base64.decode(h[r], a[r] = n.newBuffer(n.base64.length(h[r])), 0) : (f ? h[r][l] : h[r]).length && (f ? a[r][l] = h[r][l] : a[r] = h[r]);\n                break;\n              case \"string\":\n                f ? a[r][l] = String(h[r][l]) : a[r] = String(h[r]);\n                break;\n              case \"bool\":\n                f ? a[r][l] = Boolean(h[r][l]) : a[r] = Boolean(h[r]);\n            }\n          }\n        }\n        function h(t, e, r, s) {\n          var o = s.m,\n            a = s.d,\n            h = s.types,\n            u = s.ksi,\n            l = s.o,\n            f = void 0 !== u;\n          if (t.resolvedType) t.resolvedType instanceof i ? f ? a[r][u] = l.enums === String ? h[e].values[o[r][u]] : o[r][u] : a[r] = l.enums === String ? h[e].values[o[r]] : o[r] : f ? a[r][u] = h[e].toObject(o[r][u], l) : a[r] = h[e].toObject(o[r], l);else {\n            var c = !1;\n            switch (t.type) {\n              case \"double\":\n              case \"float\":\n                f ? a[r][u] = l.json && !isFinite(o[r][u]) ? String(o[r][u]) : o[r][u] : a[r] = l.json && !isFinite(o[r]) ? String(o[r]) : o[r];\n                break;\n              case \"uint64\":\n                c = !0;\n              case \"int64\":\n              case \"sint64\":\n              case \"fixed64\":\n              case \"sfixed64\":\n                \"number\" == typeof o[r][u] ? f ? a[r][u] = l.longs === String ? String(o[r][u]) : o[r][u] : a[r] = l.longs === String ? String(o[r]) : o[r] : f ? a[r][u] = l.longs === String ? n.Long.prototype.toString.call(o[r][u]) : l.longs === Number ? new n.LongBits(o[r][u].low >>> 0, o[r][u].high >>> 0).toNumber(c) : o[r][u] : a[r] = l.longs === String ? n.Long.prototype.toString.call(o[r]) : l.longs === Number ? new n.LongBits(o[r].low >>> 0, o[r].high >>> 0).toNumber(c) : o[r];\n                break;\n              case \"bytes\":\n                f ? a[r][u] = l.bytes === String ? n.base64.encode(o[r][u], 0, o[r][u].length) : l.bytes === Array ? Array.prototype.slice.call(o[r][u]) : o[r][u] : a[r] = l.bytes === String ? n.base64.encode(o[r], 0, o[r].length) : l.bytes === Array ? Array.prototype.slice.call(o[r]) : o[r];\n                break;\n              default:\n                f ? a[r][u] = o[r][u] : a[r] = o[r];\n            }\n          }\n        }\n        o._configure = function () {\n          i = r(421), n = r(916);\n        }, o.fromObject = function (t) {\n          var e = t.fieldsArray;\n          return function (t) {\n            return function (r) {\n              if (r instanceof this.ctor) return r;\n              if (!e.length) return new this.ctor();\n              for (var o = new this.ctor(), h = 0; h < e.length; ++h) {\n                var u,\n                  l = e[h].resolve(),\n                  f = l.name;\n                if (l.map) {\n                  if (r[f]) {\n                    if (\"object\" !== s(r[f])) throw TypeError(l.fullName + \": object expected\");\n                    o[f] = {};\n                  }\n                  var c = Object.keys(r[f]);\n                  for (u = 0; u < c.length; ++u) a(l, h, f, n.merge(n.copy(t), {\n                    m: o,\n                    d: r,\n                    ksi: c[u]\n                  }));\n                } else if (l.repeated) {\n                  if (r[f]) {\n                    if (!Array.isArray(r[f])) throw TypeError(l.fullName + \": array expected\");\n                    for (o[f] = [], u = 0; u < r[f].length; ++u) a(l, h, f, n.merge(n.copy(t), {\n                      m: o,\n                      d: r,\n                      ksi: u\n                    }));\n                  }\n                } else (l.resolvedType instanceof i || null != r[f]) && a(l, h, f, n.merge(n.copy(t), {\n                  m: o,\n                  d: r\n                }));\n              }\n              return o;\n            };\n          };\n        }, o.toObject = function (t) {\n          var e = t.fieldsArray.slice().sort(n.compareFieldsById);\n          return function (r) {\n            return e.length ? function (s, o) {\n              o = o || {};\n              for (var a, u, l = {}, f = [], c = [], d = [], p = 0; p < e.length; ++p) e[p].partOf || (e[p].resolve().repeated ? f : e[p].map ? c : d).push(e[p]);\n              if (f.length && (o.arrays || o.defaults)) for (p = 0; p < f.length; ++p) l[f[p].name] = [];\n              if (c.length && (o.objects || o.defaults)) for (p = 0; p < c.length; ++p) l[c[p].name] = {};\n              if (d.length && o.defaults) for (p = 0; p < d.length; ++p) if (u = (a = d[p]).name, a.resolvedType instanceof i) l[u] = o.enums = String ? a.resolvedType.valuesById[a.typeDefault] : a.typeDefault;else if (a.long) {\n                if (n.Long) {\n                  var y = new n.Long(a.typeDefault.low, a.typeDefault.high, a.typeDefault.unsigned);\n                  l[u] = o.longs === String ? y.toString() : o.longs === Number ? y.toNumber() : y;\n                } else l[u] = o.longs === String ? a.typeDefault.toString() : a.typeDefault.toNumber();\n              } else a.bytes ? l[u] = o.bytes === String ? String.fromCharCode.apply(String, a.typeDefault) : Array.prototype.slice.call(a.typeDefault).join(\"*..*\").split(\"*..*\") : l[u] = a.typeDefault;\n              var v = !1;\n              for (p = 0; p < e.length; ++p) {\n                u = (a = e[p]).name;\n                var g,\n                  m,\n                  _ = t._fieldsArray.indexOf(a);\n                if (a.map) {\n                  if (v || (v = !0), s[u] && (g = Object.keys(s[u]).length)) for (l[u] = {}, m = 0; m < g.length; ++m) h(a, _, u, n.merge(n.copy(r), {\n                    m: s,\n                    d: l,\n                    ksi: g[m],\n                    o\n                  }));\n                } else if (a.repeated) {\n                  if (s[u] && s[u].length) for (l[u] = [], m = 0; m < s[u].length; ++m) h(a, _, u, n.merge(n.copy(r), {\n                    m: s,\n                    d: l,\n                    ksi: m,\n                    o\n                  }));\n                } else null != s[u] && s.hasOwnProperty(u) && h(a, _, u, n.merge(n.copy(r), {\n                  m: s,\n                  d: l,\n                  o\n                })), a.partOf && o.oneofs && (l[a.partOf.name] = u);\n              }\n              return l;\n            } : function () {\n              return {};\n            };\n          };\n        };\n      },\n      910: (t, e, r) => {\n        var i,\n          n,\n          s,\n          o = r(535).default;\n        function a(t) {\n          return \"missing required '\" + t.name + \"'\";\n        }\n        function h(t) {\n          return function (e) {\n            var r = e.Reader,\n              h = e.types,\n              u = e.util;\n            return function (e, l) {\n              e instanceof r || (e = r.create(e));\n              for (var f, c = void 0 === l ? e.len : e.pos + l, d = new this.ctor(); e.pos < c;) {\n                var p = e.uint32();\n                if (t.group && 4 == (7 & p)) break;\n                for (var y = p >>> 3, v = 0, g = !1; v < t.fieldsArray.length; ++v) {\n                  var m = t._fieldsArray[v].resolve(),\n                    _ = m.name,\n                    w = m.resolvedType instanceof i ? \"int32\" : m.type;\n                  if (y == m.id) {\n                    if (g = !0, m.map) e.skip().pos++, d[_] === u.emptyObject && (d[_] = {}), f = e[m.keyType](), e.pos++, n.long[m.keyType], null == n.basic[w] ? d[_][\"object\" === o(f) ? u.longToHash(f) : f] = h[v].decode(e, e.uint32()) : d[_][\"object\" === o(f) ? u.longToHash(f) : f] = e[w]();else if (m.repeated) {\n                      if (d[_] && d[_].length || (d[_] = []), null != n.packed[w] && 2 == (7 & p)) for (var b = e.uint32() + e.pos; e.pos < b;) d[_].push(e[w]());else null == n.basic[w] ? m.resolvedType.group ? d[_].push(h[v].decode(e)) : d[_].push(h[v].decode(e, e.uint32())) : d[_].push(e[w]());\n                    } else null == n.basic[w] ? m.resolvedType.group ? d[_] = h[v].decode(e) : d[_] = h[v].decode(e, e.uint32()) : d[_] = e[w]();\n                    break;\n                  }\n                }\n                g || (console.log(\"t\", p), e.skipType(7 & p));\n              }\n              for (v = 0; v < t._fieldsArray.length; ++v) {\n                var x = t._fieldsArray[v];\n                if (x.required && !d.hasOwnProperty(x.name)) throw s.ProtocolError(a(x), {\n                  instance: d\n                });\n              }\n              return d;\n            };\n          };\n        }\n        t.exports = h, h._configure = function () {\n          i = r(421), n = r(471), s = r(916);\n        };\n      },\n      421: (t, e, r) => {\n        var i = r(535).default;\n        t.exports = o;\n        var n = r(719);\n        ((o.prototype = Object.create(n.prototype)).constructor = o).className = \"Enum\";\n        var s = r(625);\n        function o(t, e, r, s, o) {\n          if (n.call(this, t, r), e && \"object\" !== i(e)) throw TypeError(\"values must be an object\");\n          if (this.valuesById = {}, this.values = Object.create(this.valuesById), this.comment = s, this.comments = o || {}, this.reserved = void 0, e) for (var a = Object.keys(e), h = 0; h < a.length; ++h) \"number\" == typeof e[a[h]] && (this.valuesById[this.values[a[h]] = e[a[h]]] = a[h]);\n        }\n        o.fromJSON = function (t, e) {\n          var r = new o(t, e.values, e.options, e.comment, e.comments);\n          return r.reserved = e.reserved, r;\n        }, o.prototype.toJSON = function (t) {\n          var e = !!t && Boolean(t.keepComments);\n          return util.toObject([\"options\", this.options, \"values\", this.values, \"reserved\", this.reserved && this.reserved.length ? this.reserved : void 0, \"comment\", e ? this.comment : void 0, \"comments\", e ? this.comments : void 0]);\n        }, o.prototype.add = function (t, e, r) {\n          if (!util.isString(t)) throw TypeError(\"name must be a string\");\n          if (!util.isInteger(e)) throw TypeError(\"id must be an integer\");\n          if (void 0 !== this.values[t]) throw Error(\"duplicate name '\" + t + \"' in \" + this);\n          if (this.isReservedId(e)) throw Error(\"id \" + e + \" is reserved in \" + this);\n          if (this.isReservedName(t)) throw Error(\"name '\" + t + \"' is reserved in \" + this);\n          if (void 0 !== this.valuesById[e]) {\n            if (!this.options || !this.options.allow_alias) throw Error(\"duplicate id \" + e + \" in \" + this);\n            this.values[t] = e;\n          } else this.valuesById[this.values[t] = e] = t;\n          return this.comments[t] = r || null, this;\n        }, o.prototype.remove = function (t) {\n          if (!util.isString(t)) throw TypeError(\"name must be a string\");\n          var e = this.values[t];\n          if (null == e) throw Error(\"name '\" + t + \"' does not exist in \" + this);\n          return delete this.valuesById[e], delete this.values[t], delete this.comments[t], this;\n        }, o.prototype.isReservedId = function (t) {\n          return s.isReservedId(this.reserved, t);\n        }, o.prototype.isReservedName = function (t) {\n          return s.isReservedName(this.reserved, t);\n        };\n      },\n      238: (t, e, r) => {\n        var i = r(535).default;\n        t.exports = l;\n        var n,\n          s,\n          o,\n          a,\n          h = r(719);\n        ((l.prototype = Object.create(h.prototype)).constructor = l).className = \"Field\";\n        var u = /^required|optional|repeated$/;\n        function l(t, e, r, i, n, a, l) {\n          if (o.isObject(i) ? (l = n, a = i, i = n = void 0) : o.isObject(n) && (l = a, a = n, n = void 0), h.call(this, t, a), !o.isInteger(e) || e < 0) throw TypeError(\"id must be a non-negative integer\");\n          if (!o.isString(r)) throw TypeError(\"type must be a string\");\n          if (void 0 !== i && !u.test(i = i.toString().toLowerCase())) throw TypeError(\"rule must be a string rule\");\n          if (void 0 !== n && !o.isString(n)) throw TypeError(\"extend must be a string\");\n          this.rule = i && \"optional\" !== i ? i : void 0, this.type = r, this.id = e, this.extend = n || void 0, this.required = \"required\" === i, this.optional = !this.required, this.repeated = \"repeated\" === i, this.map = !1, this.message = null, this.partOf = null, this.typeDefault = null, this.defaultValue = null, this.long = !!o.Long && void 0 !== s.long[r], this.bytes = \"bytes\" === r, this.resolvedType = null, this.extensionField = null, this.declaringField = null, this._packed = null, this.comment = l;\n        }\n        l.fromJSON = function (t, e) {\n          return new l(t, e.id, e.type, e.rule, e.extend, e.options, e.comment);\n        }, Object.defineProperty(l.prototype, \"packed\", {\n          get: function () {\n            return null === this._packed && (this._packed = !1 !== this.getOption(\"packed\")), this._packed;\n          }\n        }), l.prototype.setOption = function (t, e, r) {\n          return \"packed\" === t && (this._packed = null), h.prototype.setOption.call(this, t, e, r);\n        }, l.prototype.toJSON = function (t) {\n          var e = !!t && Boolean(t.keepComments);\n          return o.toObject([\"rule\", \"optional\" !== this.rule && this.rule || void 0, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", e ? this.comment : void 0]);\n        }, l.prototype.resolve = function () {\n          if (this.resolved) return this;\n          if (void 0 === (this.typeDefault = s.defaults[this.type]) && (this.resolvedType = (this.declaringField ? this.declaringField.parent : this.parent).lookupTypeOrEnum(this.type), this.resolvedType instanceof a ? this.typeDefault = null : this.typeDefault = this.resolvedType.values[Object.keys(this.resolvedType.values)[0]]), this.options && null != this.options.default && (this.typeDefault = this.options.default, this.resolvedType instanceof n && \"string\" == typeof this.typeDefault && (this.typeDefault = this.resolvedType.values[this.typeDefault])), this.options && (!0 !== this.options.packed && (void 0 === this.options.packed || !this.resolvedType || this.resolvedType instanceof n) || delete this.options.packed, Object.keys(this.options).length || (this.options = void 0)), this.long) this.typeDefault = o.Long.fromNumber(this.typeDefault, \"u\" === this.type.charAt(0)), Object.freeze && Object.freeze(this.typeDefault);else if (this.bytes && \"string\" == typeof this.typeDefault) {\n            var t;\n            o.utf8.write(this.typeDefault, t = o.newBuffer(o.utf8.length(this.typeDefault)), 0), this.typeDefault = t;\n          }\n          return this.map ? this.defaultValue = o.emptyObject : this.repeated ? this.defaultValue = o.emptyArray : this.defaultValue = this.typeDefault, this.parent instanceof a && (this.parent.ctor.prototype[this.name] = this.defaultValue), h.prototype.resolve.call(this);\n        }, l.d = function (t, e, r, n) {\n          return \"function\" == typeof e ? e = o.decorateType(e).name : e && \"object\" === i(e) && (e = o.decorateEnum(e).name), function (i, s) {\n            o.decorateType(i.constructor).add(new l(s, t, e, r, {\n              default: n\n            }));\n          };\n        }, l._configure = function () {\n          a = r(24), n = r(421), s = r(471), o = r(916);\n        };\n      },\n      620: t => {\n        function e(t) {\n          return \"undefined\" != typeof Float32Array ? function () {\n            var e = new Float32Array([-0]),\n              r = new Uint8Array(e.buffer),\n              i = 128 === r[3];\n            function n(t, i, n) {\n              e[0] = t, i[n] = r[0], i[n + 1] = r[1], i[n + 2] = r[2], i[n + 3] = r[3];\n            }\n            function s(t, i, n) {\n              e[0] = t, i[n] = r[3], i[n + 1] = r[2], i[n + 2] = r[1], i[n + 3] = r[0];\n            }\n            function o(t, i) {\n              return r[0] = t[i], r[1] = t[i + 1], r[2] = t[i + 2], r[3] = t[i + 3], e[0];\n            }\n            function a(t, i) {\n              return r[3] = t[i], r[2] = t[i + 1], r[1] = t[i + 2], r[0] = t[i + 3], e[0];\n            }\n            t.writeFloatLE = i ? n : s, t.writeFloatBE = i ? s : n, t.readFloatLE = i ? o : a, t.readFloatBE = i ? a : o;\n          }() : function () {\n            function e(t, e, r, i) {\n              var n = e < 0 ? 1 : 0;\n              if (n && (e = -e), 0 === e) t(1 / e > 0 ? 0 : 2147483648, r, i);else if (isNaN(e)) t(2143289344, r, i);else if (e > 34028234663852886e22) t((n << 31 | 2139095040) >>> 0, r, i);else if (e < 11754943508222875e-54) t((n << 31 | Math.round(e / 1401298464324817e-60)) >>> 0, r, i);else {\n                var s = Math.floor(Math.log(e) / Math.LN2);\n                t((n << 31 | s + 127 << 23 | 8388607 & Math.round(e * Math.pow(2, -s) * 8388608)) >>> 0, r, i);\n              }\n            }\n            function o(t, e, r) {\n              var i = t(e, r),\n                n = 2 * (i >> 31) + 1,\n                s = i >>> 23 & 255,\n                o = 8388607 & i;\n              return 255 === s ? o ? NaN : n * (1 / 0) : 0 === s ? 1401298464324817e-60 * n * o : n * Math.pow(2, s - 150) * (o + 8388608);\n            }\n            t.writeFloatLE = e.bind(null, r), t.writeFloatBE = e.bind(null, i), t.readFloatLE = o.bind(null, n), t.readFloatBE = o.bind(null, s);\n          }(), \"undefined\" != typeof Float64Array ? function () {\n            var e = new Float64Array([-0]),\n              r = new Uint8Array(e.buffer),\n              i = 128 === r[7];\n            function n(t, i, n) {\n              e[0] = t, i[n] = r[0], i[n + 1] = r[1], i[n + 2] = r[2], i[n + 3] = r[3], i[n + 4] = r[4], i[n + 5] = r[5], i[n + 6] = r[6], i[n + 7] = r[7];\n            }\n            function s(t, i, n) {\n              e[0] = t, i[n] = r[7], i[n + 1] = r[6], i[n + 2] = r[5], i[n + 3] = r[4], i[n + 4] = r[3], i[n + 5] = r[2], i[n + 6] = r[1], i[n + 7] = r[0];\n            }\n            function o(t, i) {\n              return r[0] = t[i], r[1] = t[i + 1], r[2] = t[i + 2], r[3] = t[i + 3], r[4] = t[i + 4], r[5] = t[i + 5], r[6] = t[i + 6], r[7] = t[i + 7], e[0];\n            }\n            function a(t, i) {\n              return r[7] = t[i], r[6] = t[i + 1], r[5] = t[i + 2], r[4] = t[i + 3], r[3] = t[i + 4], r[2] = t[i + 5], r[1] = t[i + 6], r[0] = t[i + 7], e[0];\n            }\n            t.writeDoubleLE = i ? n : s, t.writeDoubleBE = i ? s : n, t.readDoubleLE = i ? o : a, t.readDoubleBE = i ? a : o;\n          }() : function () {\n            function e(t, e, r, i, n, s) {\n              var o = i < 0 ? 1 : 0;\n              if (o && (i = -i), 0 === i) t(0, n, s + e), t(1 / i > 0 ? 0 : 2147483648, n, s + r);else if (isNaN(i)) t(0, n, s + e), t(2146959360, n, s + r);else if (i > 17976931348623157e292) t(0, n, s + e), t((o << 31 | 2146435072) >>> 0, n, s + r);else {\n                var a;\n                if (i < 22250738585072014e-324) t((a = i / 5e-324) >>> 0, n, s + e), t((o << 31 | a / 4294967296) >>> 0, n, s + r);else {\n                  var h = Math.floor(Math.log(i) / Math.LN2);\n                  1024 === h && (h = 1023), t(4503599627370496 * (a = i * Math.pow(2, -h)) >>> 0, n, s + e), t((o << 31 | h + 1023 << 20 | 1048576 * a & 1048575) >>> 0, n, s + r);\n                }\n              }\n            }\n            function o(t, e, r, i, n) {\n              var s = t(i, n + e),\n                o = t(i, n + r),\n                a = 2 * (o >> 31) + 1,\n                h = o >>> 20 & 2047,\n                u = 4294967296 * (1048575 & o) + s;\n              return 2047 === h ? u ? NaN : a * (1 / 0) : 0 === h ? 5e-324 * a * u : a * Math.pow(2, h - 1075) * (u + 4503599627370496);\n            }\n            t.writeDoubleLE = e.bind(null, r, 0, 4), t.writeDoubleBE = e.bind(null, i, 4, 0), t.readDoubleLE = o.bind(null, n, 0, 4), t.readDoubleBE = o.bind(null, s, 4, 0);\n          }(), t;\n        }\n        function r(t, e, r) {\n          e[r] = 255 & t, e[r + 1] = t >>> 8 & 255, e[r + 2] = t >>> 16 & 255, e[r + 3] = t >>> 24;\n        }\n        function i(t, e, r) {\n          e[r] = t >>> 24, e[r + 1] = t >>> 16 & 255, e[r + 2] = t >>> 8 & 255, e[r + 3] = 255 & t;\n        }\n        function n(t, e) {\n          return (t[e] | t[e + 1] << 8 | t[e + 2] << 16 | t[e + 3] << 24) >>> 0;\n        }\n        function s(t, e) {\n          return (t[e] << 24 | t[e + 1] << 16 | t[e + 2] << 8 | t[e + 3]) >>> 0;\n        }\n        t.exports = e(e);\n      },\n      470: t => {\n        t.exports = r;\n        var e = null;\n        try {\n          e = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n        } catch (t) {}\n        function r(t, e, r) {\n          this.low = 0 | t, this.high = 0 | e, this.unsigned = !!r;\n        }\n        function i(t) {\n          return !0 === (t && t.__isLong__);\n        }\n        r.prototype.__isLong__, Object.defineProperty(r.prototype, \"__isLong__\", {\n          value: !0\n        }), r.isLong = i;\n        var n = {},\n          s = {};\n        function o(t, e) {\n          var r, i, o;\n          return e ? (o = 0 <= (t >>>= 0) && t < 256) && (i = s[t]) ? i : (r = h(t, (0 | t) < 0 ? -1 : 0, !0), o && (s[t] = r), r) : (o = -128 <= (t |= 0) && t < 128) && (i = n[t]) ? i : (r = h(t, t < 0 ? -1 : 0, !1), o && (n[t] = r), r);\n        }\n        function a(t, e) {\n          if (isNaN(t)) return e ? g : v;\n          if (e) {\n            if (t < 0) return g;\n            if (t >= d) return x;\n          } else {\n            if (t <= -p) return k;\n            if (t + 1 >= p) return b;\n          }\n          return t < 0 ? a(-t, e).neg() : h(t % c | 0, t / c | 0, e);\n        }\n        function h(t, e, i) {\n          return new r(t, e, i);\n        }\n        r.fromInt = o, r.fromNumber = a, r.fromBits = h;\n        var u = Math.pow;\n        function l(t, e, r) {\n          if (0 === t.length) throw Error(\"empty string\");\n          if (\"NaN\" === t || \"Infinity\" === t || \"+Infinity\" === t || \"-Infinity\" === t) return v;\n          if (\"number\" == typeof e ? (r = e, e = !1) : e = !!e, (r = r || 10) < 2 || 36 < r) throw RangeError(\"radix\");\n          var i;\n          if ((i = t.indexOf(\"-\")) > 0) throw Error(\"interior hyphen\");\n          if (0 === i) return l(t.substring(1), e, r).neg();\n          for (var n = a(u(r, 8)), s = v, o = 0; o < t.length; o += 8) {\n            var h = Math.min(8, t.length - o),\n              f = parseInt(t.substring(o, o + h), r);\n            if (h < 8) {\n              var c = a(u(r, h));\n              s = s.mul(c).add(a(f));\n            } else s = (s = s.mul(n)).add(a(f));\n          }\n          return s.unsigned = e, s;\n        }\n        function f(t, e) {\n          return \"number\" == typeof t ? a(t, e) : \"string\" == typeof t ? l(t, e) : h(t.low, t.high, \"boolean\" == typeof e ? e : t.unsigned);\n        }\n        r.fromString = l, r.fromValue = f;\n        var c = 4294967296,\n          d = c * c,\n          p = d / 2,\n          y = o(1 << 24),\n          v = o(0);\n        r.ZERO = v;\n        var g = o(0, !0);\n        r.UZERO = g;\n        var m = o(1);\n        r.ONE = m;\n        var _ = o(1, !0);\n        r.UONE = _;\n        var w = o(-1);\n        r.NEG_ONE = w;\n        var b = h(-1, 2147483647, !1);\n        r.MAX_VALUE = b;\n        var x = h(-1, -1, !0);\n        r.MAX_UNSIGNED_VALUE = x;\n        var k = h(0, -2147483648, !1);\n        r.MIN_VALUE = k;\n        var A = r.prototype;\n        A.toInt = function () {\n          return this.unsigned ? this.low >>> 0 : this.low;\n        }, A.toNumber = function () {\n          return this.unsigned ? (this.high >>> 0) * c + (this.low >>> 0) : this.high * c + (this.low >>> 0);\n        }, A.toString = function (t) {\n          if ((t = t || 10) < 2 || 36 < t) throw RangeError(\"radix\");\n          if (this.isZero()) return \"0\";\n          if (this.isNegative()) {\n            if (this.eq(k)) {\n              var e = a(t),\n                r = this.div(e),\n                i = r.mul(e).sub(this);\n              return r.toString(t) + i.toInt().toString(t);\n            }\n            return \"-\" + this.neg().toString(t);\n          }\n          for (var n = a(u(t, 6), this.unsigned), s = this, o = \"\";;) {\n            var h = s.div(n),\n              l = (s.sub(h.mul(n)).toInt() >>> 0).toString(t);\n            if ((s = h).isZero()) return l + o;\n            for (; l.length < 6;) l = \"0\" + l;\n            o = \"\" + l + o;\n          }\n        }, A.getHighBits = function () {\n          return this.high;\n        }, A.getHighBitsUnsigned = function () {\n          return this.high >>> 0;\n        }, A.getLowBits = function () {\n          return this.low;\n        }, A.getLowBitsUnsigned = function () {\n          return this.low >>> 0;\n        }, A.getNumBitsAbs = function () {\n          if (this.isNegative()) return this.eq(k) ? 64 : this.neg().getNumBitsAbs();\n          for (var t = 0 != this.high ? this.high : this.low, e = 31; e > 0 && !(t & 1 << e); e--);\n          return 0 != this.high ? e + 33 : e + 1;\n        }, A.isZero = function () {\n          return 0 === this.high && 0 === this.low;\n        }, A.eqz = A.isZero, A.isNegative = function () {\n          return !this.unsigned && this.high < 0;\n        }, A.isPositive = function () {\n          return this.unsigned || this.high >= 0;\n        }, A.isOdd = function () {\n          return !(1 & ~this.low);\n        }, A.isEven = function () {\n          return !(1 & this.low);\n        }, A.equals = function (t) {\n          return i(t) || (t = f(t)), (this.unsigned === t.unsigned || this.high >>> 31 != 1 || t.high >>> 31 != 1) && this.high === t.high && this.low === t.low;\n        }, A.eq = A.equals, A.notEquals = function (t) {\n          return !this.eq(t);\n        }, A.neq = A.notEquals, A.ne = A.notEquals, A.lessThan = function (t) {\n          return this.comp(t) < 0;\n        }, A.lt = A.lessThan, A.lessThanOrEqual = function (t) {\n          return this.comp(t) <= 0;\n        }, A.lte = A.lessThanOrEqual, A.le = A.lessThanOrEqual, A.greaterThan = function (t) {\n          return this.comp(t) > 0;\n        }, A.gt = A.greaterThan, A.greaterThanOrEqual = function (t) {\n          return this.comp(t) >= 0;\n        }, A.gte = A.greaterThanOrEqual, A.ge = A.greaterThanOrEqual, A.compare = function (t) {\n          if (i(t) || (t = f(t)), this.eq(t)) return 0;\n          var e = this.isNegative(),\n            r = t.isNegative();\n          return e && !r ? -1 : !e && r ? 1 : this.unsigned ? t.high >>> 0 > this.high >>> 0 || t.high === this.high && t.low >>> 0 > this.low >>> 0 ? -1 : 1 : this.sub(t).isNegative() ? -1 : 1;\n        }, A.comp = A.compare, A.negate = function () {\n          return !this.unsigned && this.eq(k) ? k : this.not().add(m);\n        }, A.neg = A.negate, A.add = function (t) {\n          i(t) || (t = f(t));\n          var e = this.high >>> 16,\n            r = 65535 & this.high,\n            n = this.low >>> 16,\n            s = 65535 & this.low,\n            o = t.high >>> 16,\n            a = 65535 & t.high,\n            u = t.low >>> 16,\n            l = 0,\n            c = 0,\n            d = 0,\n            p = 0;\n          return d += (p += s + (65535 & t.low)) >>> 16, c += (d += n + u) >>> 16, l += (c += r + a) >>> 16, l += e + o, h((d &= 65535) << 16 | (p &= 65535), (l &= 65535) << 16 | (c &= 65535), this.unsigned);\n        }, A.subtract = function (t) {\n          return i(t) || (t = f(t)), this.add(t.neg());\n        }, A.sub = A.subtract, A.multiply = function (t) {\n          if (this.isZero()) return v;\n          if (i(t) || (t = f(t)), e) return h(e.mul(this.low, this.high, t.low, t.high), e.get_high(), this.unsigned);\n          if (t.isZero()) return v;\n          if (this.eq(k)) return t.isOdd() ? k : v;\n          if (t.eq(k)) return this.isOdd() ? k : v;\n          if (this.isNegative()) return t.isNegative() ? this.neg().mul(t.neg()) : this.neg().mul(t).neg();\n          if (t.isNegative()) return this.mul(t.neg()).neg();\n          if (this.lt(y) && t.lt(y)) return a(this.toNumber() * t.toNumber(), this.unsigned);\n          var r = this.high >>> 16,\n            n = 65535 & this.high,\n            s = this.low >>> 16,\n            o = 65535 & this.low,\n            u = t.high >>> 16,\n            l = 65535 & t.high,\n            c = t.low >>> 16,\n            d = 65535 & t.low,\n            p = 0,\n            g = 0,\n            m = 0,\n            _ = 0;\n          return m += (_ += o * d) >>> 16, g += (m += s * d) >>> 16, m &= 65535, g += (m += o * c) >>> 16, p += (g += n * d) >>> 16, g &= 65535, p += (g += s * c) >>> 16, g &= 65535, p += (g += o * l) >>> 16, p += r * d + n * c + s * l + o * u, h((m &= 65535) << 16 | (_ &= 65535), (p &= 65535) << 16 | (g &= 65535), this.unsigned);\n        }, A.mul = A.multiply, A.divide = function (t) {\n          if (i(t) || (t = f(t)), t.isZero()) throw Error(\"division by zero\");\n          var r, n, s;\n          if (e) return this.unsigned || -2147483648 !== this.high || -1 !== t.low || -1 !== t.high ? h((this.unsigned ? e.div_u : e.div_s)(this.low, this.high, t.low, t.high), e.get_high(), this.unsigned) : this;\n          if (this.isZero()) return this.unsigned ? g : v;\n          if (this.unsigned) {\n            if (t.unsigned || (t = t.toUnsigned()), t.gt(this)) return g;\n            if (t.gt(this.shru(1))) return _;\n            s = g;\n          } else {\n            if (this.eq(k)) return t.eq(m) || t.eq(w) ? k : t.eq(k) ? m : (r = this.shr(1).div(t).shl(1)).eq(v) ? t.isNegative() ? m : w : (n = this.sub(t.mul(r)), s = r.add(n.div(t)));\n            if (t.eq(k)) return this.unsigned ? g : v;\n            if (this.isNegative()) return t.isNegative() ? this.neg().div(t.neg()) : this.neg().div(t).neg();\n            if (t.isNegative()) return this.div(t.neg()).neg();\n            s = v;\n          }\n          for (n = this; n.gte(t);) {\n            r = Math.max(1, Math.floor(n.toNumber() / t.toNumber()));\n            for (var o = Math.ceil(Math.log(r) / Math.LN2), l = o <= 48 ? 1 : u(2, o - 48), c = a(r), d = c.mul(t); d.isNegative() || d.gt(n);) d = (c = a(r -= l, this.unsigned)).mul(t);\n            c.isZero() && (c = m), s = s.add(c), n = n.sub(d);\n          }\n          return s;\n        }, A.div = A.divide, A.modulo = function (t) {\n          return i(t) || (t = f(t)), e ? h((this.unsigned ? e.rem_u : e.rem_s)(this.low, this.high, t.low, t.high), e.get_high(), this.unsigned) : this.sub(this.div(t).mul(t));\n        }, A.mod = A.modulo, A.rem = A.modulo, A.not = function () {\n          return h(~this.low, ~this.high, this.unsigned);\n        }, A.and = function (t) {\n          return i(t) || (t = f(t)), h(this.low & t.low, this.high & t.high, this.unsigned);\n        }, A.or = function (t) {\n          return i(t) || (t = f(t)), h(this.low | t.low, this.high | t.high, this.unsigned);\n        }, A.xor = function (t) {\n          return i(t) || (t = f(t)), h(this.low ^ t.low, this.high ^ t.high, this.unsigned);\n        }, A.shiftLeft = function (t) {\n          return i(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? h(this.low << t, this.high << t | this.low >>> 32 - t, this.unsigned) : h(0, this.low << t - 32, this.unsigned);\n        }, A.shl = A.shiftLeft, A.shiftRight = function (t) {\n          return i(t) && (t = t.toInt()), 0 == (t &= 63) ? this : t < 32 ? h(this.low >>> t | this.high << 32 - t, this.high >> t, this.unsigned) : h(this.high >> t - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n        }, A.shr = A.shiftRight, A.shiftRightUnsigned = function (t) {\n          if (i(t) && (t = t.toInt()), 0 == (t &= 63)) return this;\n          var e = this.high;\n          return t < 32 ? h(this.low >>> t | e << 32 - t, e >>> t, this.unsigned) : h(32 === t ? e : e >>> t - 32, 0, this.unsigned);\n        }, A.shru = A.shiftRightUnsigned, A.shr_u = A.shiftRightUnsigned, A.toSigned = function () {\n          return this.unsigned ? h(this.low, this.high, !1) : this;\n        }, A.toUnsigned = function () {\n          return this.unsigned ? this : h(this.low, this.high, !0);\n        }, A.toBytes = function (t) {\n          return t ? this.toBytesLE() : this.toBytesBE();\n        }, A.toBytesLE = function () {\n          var t = this.high,\n            e = this.low;\n          return [255 & e, e >>> 8 & 255, e >>> 16 & 255, e >>> 24, 255 & t, t >>> 8 & 255, t >>> 16 & 255, t >>> 24];\n        }, A.toBytesBE = function () {\n          var t = this.high,\n            e = this.low;\n          return [t >>> 24, t >>> 16 & 255, t >>> 8 & 255, 255 & t, e >>> 24, e >>> 16 & 255, e >>> 8 & 255, 255 & e];\n        }, r.fromBytes = function (t, e, i) {\n          return i ? r.fromBytesLE(t, e) : r.fromBytesBE(t, e);\n        }, r.fromBytesLE = function (t, e) {\n          return new r(t[0] | t[1] << 8 | t[2] << 16 | t[3] << 24, t[4] | t[5] << 8 | t[6] << 16 | t[7] << 24, e);\n        }, r.fromBytesBE = function (t, e) {\n          return new r(t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7], t[0] << 24 | t[1] << 16 | t[2] << 8 | t[3], e);\n        };\n      },\n      218: t => {\n        function e(t, e) {\n          this.lo = t >>> 0, this.hi = e >>> 0;\n        }\n        t.exports = e;\n        var r = e.zero = new e(0, 0);\n        r.toNumber = function () {\n          return 0;\n        }, r.zzEncode = r.zzDecode = function () {\n          return this;\n        }, r.length = function () {\n          return 1;\n        };\n        var i = e.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n        e.fromNumber = function (t) {\n          if (0 === t) return r;\n          var i = t < 0;\n          i && (t = -t);\n          var n = t >>> 0,\n            s = (t - n) / 4294967296 >>> 0;\n          return i && (s = ~s >>> 0, n = ~n >>> 0, ++n > 4294967295 && (n = 0, ++s > 4294967295 && (s = 0))), new e(n, s);\n        }, e.from = function (t) {\n          return \"number\" == typeof t ? e.fromNumber(t) : \"string\" == typeof t || t instanceof String ? e.fromNumber(parseInt(t, 10)) : t.low || t.high ? new e(t.low >>> 0, t.high >>> 0) : r;\n        }, e.prototype.toNumber = function (t) {\n          if (!t && this.hi >>> 31) {\n            var e = 1 + ~this.lo >>> 0,\n              r = ~this.hi >>> 0;\n            return e || (r = r + 1 >>> 0), -(e + 4294967296 * r);\n          }\n          return this.lo + 4294967296 * this.hi;\n        }, e.prototype.toLong = function (t) {\n          return {\n            low: 0 | this.lo,\n            high: 0 | this.hi,\n            unsigned: Boolean(t)\n          };\n        };\n        var n = String.prototype.charCodeAt;\n        e.fromHash = function (t) {\n          return t === i ? r : new e((n.call(t, 0) | n.call(t, 1) << 8 | n.call(t, 2) << 16 | n.call(t, 3) << 24) >>> 0, (n.call(t, 4) | n.call(t, 5) << 8 | n.call(t, 6) << 16 | n.call(t, 7) << 24) >>> 0);\n        }, e.prototype.toHash = function () {\n          return String.fromCharCode(255 & this.lo, this.lo >>> 8 & 255, this.lo >>> 16 & 255, this.lo >>> 24, 255 & this.hi, this.hi >>> 8 & 255, this.hi >>> 16 & 255, this.hi >>> 24);\n        }, e.prototype.zzEncode = function () {\n          var t = this.hi >> 31;\n          return this.hi = ((this.hi << 1 | this.lo >>> 31) ^ t) >>> 0, this.lo = (this.lo << 1 ^ t) >>> 0, this;\n        }, e.prototype.zzDecode = function () {\n          var t = -(1 & this.lo);\n          return this.lo = ((this.lo >>> 1 | this.hi << 31) ^ t) >>> 0, this.hi = (this.hi >>> 1 ^ t) >>> 0, this;\n        }, e.prototype.length = function () {\n          var t = this.lo,\n            e = (this.lo >>> 28 | this.hi << 4) >>> 0,\n            r = this.hi >>> 24;\n          return 0 === r ? 0 === e ? t < 16384 ? t < 128 ? 1 : 2 : t < 2097152 ? 3 : 4 : e < 16384 ? e < 128 ? 5 : 6 : e < 2097152 ? 7 : 8 : r < 128 ? 9 : 10;\n        };\n      },\n      718: (t, e, r) => {\n        var i = r(535).default;\n        t.exports = a;\n        var n,\n          s,\n          o = r(238);\n        function a(t, e, r, i, n, a) {\n          if (o.call(this, t, e, i, void 0, void 0, n, a), !s.isString(r)) throw TypeError(\"keyType must be a string\");\n          this.keyType = r, this.resolvedKeyType = null, this.map = !0;\n        }\n        ((a.prototype = Object.create(o.prototype)).constructor = a).className = \"MapField\", a.fromJSON = function (t, e) {\n          return new a(t, e.id, e.keyType, e.type, e.options, e.comment);\n        }, a.prototype.toJSON = function (t) {\n          var e = !!t && Boolean(t.keepComments);\n          return s.toObject([\"keyType\", this.keyType, \"type\", this.type, \"id\", this.id, \"extend\", this.extend, \"options\", this.options, \"comment\", e ? this.comment : void 0]);\n        }, a.prototype.resolve = function () {\n          if (this.resolved) return this;\n          if (void 0 === n.mapKey[this.keyType]) throw Error(\"invalid key type: \" + this.keyType);\n          return o.prototype.resolve.call(this);\n        }, a.d = function (t, e, r) {\n          return \"function\" == typeof r ? r = s.decorateType(r).name : r && \"object\" === i(r) && (r = s.decorateEnum(r).name), function (i, n) {\n            s.decorateType(i.constructor).add(new a(n, t, e, r));\n          };\n        }, a._configure = function () {\n          n = r(471), s = r(916);\n        };\n      },\n      853: (t, e, r) => {\n        \"use strict\";\n\n        var i;\n        function n(t) {\n          if (t) for (var e = Object.keys(t), r = 0; r < e.length; ++r) this[e[r]] = t[e[r]];\n        }\n        t.exports = n, n.create = function (t) {\n          return this.$type.create(t);\n        }, n.encode = function (t, e) {\n          return arguments.length ? 1 == arguments.length ? this.$type.encode(arguments[0]) : this.$type.encode(arguments[0], arguments[1]) : this.$type.encode(this);\n        }, n.encodeDelimited = function (t, e) {\n          return this.$type.encodeDelimited(t, e);\n        }, n.decode = function (t) {\n          return this.$type.decode(t);\n        }, n.decodeDelimited = function (t) {\n          return this.$type.decodeDelimited(t);\n        }, n.verify = function (t) {\n          return this.$type.verify(t);\n        }, n.fromObject = function (t) {\n          return this.$type.fromObject(t);\n        }, n.toObject = function (t, e) {\n          return t = t || this, this.$type.toObject(t, e);\n        }, n.prototype.toJSON = function () {\n          return this.$type.toObject(this, i.toJSONOptions);\n        }, n.set = function (t, e) {\n          n[t] = e;\n        }, n.get = function (t) {\n          return n[t];\n        }, n._configure = function () {\n          i = r(916);\n        };\n      },\n      493: (t, e, r) => {\n        \"use strict\";\n\n        t.exports = s;\n        var i,\n          n = r(719);\n        function s(t, e, r, s, o, a, h, u) {\n          if (i.isObject(o) ? (h = o, o = a = void 0) : i.isObject(a) && (h = a, a = void 0), void 0 !== e && !i.isString(e)) throw TypeError(\"type must be a string\");\n          if (!i.isString(r)) throw TypeError(\"requestType must be a string\");\n          if (!i.isString(s)) throw TypeError(\"responseType must be a string\");\n          n.call(this, t, h), this.type = e || \"rpc\", this.requestType = r, this.requestStream = !!o || void 0, this.responseType = s, this.responseStream = !!a || void 0, this.resolvedRequestType = null, this.resolvedResponseType = null, this.comment = u;\n        }\n        ((s.prototype = Object.create(n.prototype)).constructor = s).className = \"Method\", s.fromJSON = function (t, e) {\n          return new s(t, e.type, e.requestType, e.responseType, e.requestStream, e.responseStream, e.options, e.comment);\n        }, s.prototype.toJSON = function (t) {\n          var e = !!t && Boolean(t.keepComments);\n          return i.toObject([\"type\", \"rpc\" !== this.type && this.type || void 0, \"requestType\", this.requestType, \"requestStream\", this.requestStream, \"responseType\", this.responseType, \"responseStream\", this.responseStream, \"options\", this.options, \"comment\", e ? this.comment : void 0]);\n        }, s.prototype.resolve = function () {\n          return this.resolved ? this : (this.resolvedRequestType = this.parent.lookupType(this.requestType), this.resolvedResponseType = this.parent.lookupType(this.responseType), n.prototype.resolve.call(this));\n        }, s._configure = function () {\n          i = r(916);\n        };\n      },\n      625: (t, e, r) => {\n        t.exports = l;\n        var i,\n          n,\n          s,\n          o,\n          a,\n          h = r(719);\n        function u(t, e) {\n          if (t && t.length) {\n            for (var r = {}, i = 0; i < t.length; ++i) r[t[i].name] = t[i].toJSON(e);\n            return r;\n          }\n        }\n        function l(t, e) {\n          h.call(this, t, e), this.nested = void 0, this._nestedArray = null;\n        }\n        function f(t) {\n          return t._nestedArray = null, t;\n        }\n        ((l.prototype = Object.create(h.prototype)).constructor = l).className = \"Namespace\", l.fromJSON = function (t, e) {\n          return new l(t, e.options).addJSON(e.nested);\n        }, l.arrayToJSON = u, l.isReservedId = function (t, e) {\n          if (t) for (var r = 0; r < t.length; ++r) if (\"string\" != typeof t[r] && t[r][0] <= e && t[r][1] >= e) return !0;\n          return !1;\n        }, l.isReservedName = function (t, e) {\n          if (t) for (var r = 0; r < t.length; ++r) if (t[r] === e) return !0;\n          return !1;\n        }, Object.defineProperty(l.prototype, \"nestedArray\", {\n          get: function () {\n            return this._nestedArray || (this._nestedArray = s.toArray(this.nested));\n          }\n        }), l.prototype.toJSON = function (t) {\n          return s.toObject([\"options\", this.options, \"nested\", u(this.nestedArray, t)]);\n        }, l.prototype.addJSON = function (t) {\n          if (t) for (var e, r = Object.keys(t), s = 0; s < r.length; ++s) e = t[r[s]], this.add((void 0 !== e.fields ? o.fromJSON : void 0 !== e.values ? i.fromJSON : void 0 !== e.methods ? a.fromJSON : void 0 !== e.id ? n.fromJSON : l.fromJSON)(r[s], e));\n          return this;\n        }, l.prototype.get = function (t) {\n          return this.nested && this.nested[t] || null;\n        }, l.prototype.getEnum = function (t) {\n          if (this.nested && this.nested[t] instanceof i) return this.nested[t].values;\n          throw Error(\"no such enum: \" + t);\n        }, l.prototype.add = function (t) {\n          if (!(t instanceof n && void 0 !== t.extend || t instanceof o || t instanceof i || t instanceof a || t instanceof l)) throw TypeError(\"object must be a valid nested object\");\n          if (this.nested) {\n            var e = this.get(t.name);\n            if (e) {\n              if (!(e instanceof l && t instanceof l) || e instanceof o || e instanceof a) throw Error(\"duplicate name '\" + t.name + \"' in \" + this);\n              for (var r = e.nestedArray, s = 0; s < r.length; ++s) t.add(r[s]);\n              this.remove(e), this.nested || (this.nested = {}), t.setOptions(e.options, !0);\n            }\n          } else this.nested = {};\n          return this.nested[t.name] = t, t.onAdd(this), f(this);\n        }, l.prototype.remove = function (t) {\n          if (!(t instanceof h)) throw TypeError(\"object must be a ReflectionObject\");\n          if (t.parent !== this) throw Error(t + \" is not a member of \" + this);\n          return delete this.nested[t.name], Object.keys(this.nested).length || (this.nested = void 0), t.onRemove(this), f(this);\n        }, l.prototype.define = function (t, e) {\n          if (s.isString(t)) t = t.split(\".\");else if (!Array.isArray(t)) throw TypeError(\"illegal path\");\n          if (t && t.length && \"\" === t[0]) throw Error(\"path must be relative\");\n          for (var r = this; t.length > 0;) {\n            var i = t.shift();\n            if (r.nested && r.nested[i]) {\n              if (!((r = r.nested[i]) instanceof l)) throw Error(\"path conflicts with non-namespace objects\");\n            } else r.add(r = new l(i));\n          }\n          return e && r.addJSON(e), r;\n        }, l.prototype.resolveAll = function () {\n          for (var t = this.nestedArray, e = 0; e < t.length;) t[e] instanceof l ? t[e++].resolveAll() : t[e++].resolve();\n          return this.resolve();\n        }, l.prototype.lookup = function (t, e, r) {\n          if (\"boolean\" == typeof e ? (r = e, e = void 0) : e && !Array.isArray(e) && (e = [e]), s.isString(t) && t.length) {\n            if (\".\" === t) return this.root;\n            t = t.split(\".\");\n          } else if (!t.length) return this;\n          if (\"\" === t[0]) return this.root.lookup(t.slice(1), e);\n          var i = this.get(t[0]);\n          if (i) {\n            if (1 === t.length) {\n              if (!e || e.indexOf(i.constructor) > -1) return i;\n            } else if (i instanceof l && (i = i.lookup(t.slice(1), e, !0))) return i;\n          } else for (var n = 0; n < this.nestedArray.length; ++n) if (this._nestedArray[n] instanceof l && (i = this._nestedArray[n].lookup(t, e, !0))) return i;\n          return null === this.parent || r ? null : this.parent.lookup(t, e);\n        }, l.prototype.lookupType = function (t) {\n          var e = this.lookup(t, [o]);\n          if (!e) throw Error(\"no such type: \" + t);\n          return e;\n        }, l.prototype.lookupEnum = function (t) {\n          var e = this.lookup(t, [i]);\n          if (!e) throw Error(\"no such Enum '\" + t + \"' in \" + this);\n          return e;\n        }, l.prototype.lookupTypeOrEnum = function (t) {\n          var e = this.lookup(t, [o, i]);\n          if (!e) throw Error(\"no such Type or Enum '\" + t + \"' in \" + this);\n          return e;\n        }, l.prototype.lookupService = function (t) {\n          var e = this.lookup(t, [a]);\n          if (!e) throw Error(\"no such Service '\" + t + \"' in \" + this);\n          return e;\n        }, l._configure = function () {\n          i = r(421), n = r(238), s = r(916), o = r(24), a = r(673);\n        };\n      },\n      719: (t, e, r) => {\n        \"use strict\";\n\n        var i, n;\n        function s(t, e) {\n          if (!i.isString(t)) throw TypeError(\"name must be a string\");\n          if (e && !i.isObject(e)) throw TypeError(\"options must be an object\");\n          this.options = e, this.name = t, this.parent = null, this.resolved = !1, this.comment = null, this.filename = null;\n        }\n        t.exports = s, s.className = \"ReflectionObject\", Object.defineProperties(s.prototype, {\n          root: {\n            get: function () {\n              for (var t = this; null !== t.parent;) t = t.parent;\n              return t;\n            }\n          },\n          fullName: {\n            get: function () {\n              for (var t = [this.name], e = this.parent; e;) t.unshift(e.name), e = e.parent;\n              return t.join(\".\");\n            }\n          }\n        }), s.prototype.toJSON = function () {\n          throw Error();\n        }, s.prototype.onAdd = function (t) {\n          this.parent && this.parent !== t && this.parent.remove(this), this.parent = t, this.resolved = !1;\n          var e = t.root;\n          e instanceof n && e._handleAdd(this);\n        }, s.prototype.onRemove = function (t) {\n          var e = t.root;\n          e instanceof n && e._handleRemove(this), this.parent = null, this.resolved = !1;\n        }, s.prototype.resolve = function () {\n          return this.resolved || this.root instanceof n && (this.resolved = !0), this;\n        }, s.prototype.getOption = function (t) {\n          if (this.options) return this.options[t];\n        }, s.prototype.setOption = function (t, e, r) {\n          return r && this.options && void 0 !== this.options[t] || ((this.options || (this.options = {}))[t] = e), this;\n        }, s.prototype.setOptions = function (t, e) {\n          if (t) for (var r = Object.keys(t), i = 0; i < r.length; ++i) this.setOption(r[i], t[r[i]], e);\n          return this;\n        }, s.prototype.toString = function () {\n          var t = this.constructor.className,\n            e = this.fullName;\n          return e.length ? t + \" \" + e : t;\n        }, s._configure = function (t) {\n          n = r(572), i = r(916);\n        };\n      },\n      803: (t, e, r) => {\n        t.exports = o;\n        var i,\n          n,\n          s = r(719);\n        function o(t, e, r, i) {\n          if (Array.isArray(e) || (r = e, e = void 0), s.call(this, t, r), void 0 !== e && !Array.isArray(e)) throw TypeError(\"fieldNames must be an Array\");\n          this.oneof = e || [], this.fieldsArray = [], this.comment = i;\n        }\n        function a(t) {\n          if (t.parent) for (var e = 0; e < t.fieldsArray.length; ++e) t.fieldsArray[e].parent || t.parent.add(t.fieldsArray[e]);\n        }\n        ((o.prototype = Object.create(s.prototype)).constructor = o).className = \"OneOf\", o.fromJSON = function (t, e) {\n          return new o(t, e.oneof, e.options, e.comment);\n        }, o.prototype.toJSON = function (t) {\n          var e = !!t && Boolean(t.keepComments);\n          return n.toObject([\"options\", this.options, \"oneof\", this.oneof, \"comment\", e ? this.comment : void 0]);\n        }, o.prototype.add = function (t) {\n          if (!(t instanceof i)) throw TypeError(\"field must be a Field\");\n          return t.parent && t.parent !== this.parent && t.parent.remove(t), this.oneof.push(t.name), this.fieldsArray.push(t), t.partOf = this, a(this), this;\n        }, o.prototype.remove = function (t) {\n          if (!(t instanceof i)) throw TypeError(\"field must be a Field\");\n          var e = this.fieldsArray.indexOf(t);\n          if (e < 0) throw Error(t + \" is not a member of \" + this);\n          return this.fieldsArray.splice(e, 1), (e = this.oneof.indexOf(t.name)) > -1 && this.oneof.splice(e, 1), t.partOf = null, this;\n        }, o.prototype.onAdd = function (t) {\n          s.prototype.onAdd.call(this, t);\n          for (var e = 0; e < this.oneof.length; ++e) {\n            var r = t.get(this.oneof[e]);\n            r && !r.partOf && (r.partOf = this, this.fieldsArray.push(r));\n          }\n          a(this);\n        }, o.prototype.onRemove = function (t) {\n          for (var e, r = 0; r < this.fieldsArray.length; ++r) (e = this.fieldsArray[r]).parent && e.parent.remove(e);\n          s.prototype.onRemove.call(this, t);\n        }, o.d = function () {\n          for (var t = new Array(arguments.length), e = 0; e < arguments.length;) t[e] = arguments[e++];\n          return function (e, r) {\n            n.decorateType(e.constructor).add(new o(r, t)), Object.defineProperty(e, r, {\n              get: n.oneOfGetter(t),\n              set: n.oneOfSetter(t)\n            });\n          };\n        }, o._configure = function () {\n          i = r(238), n = r(916);\n        };\n      },\n      121: (t, e, r) => {\n        \"use strict\";\n\n        var i, n, s, o, a, h, u, l, f, c, d;\n        t.exports = A, A.filename = null, A.defaults = {\n          keepCase: !1\n        };\n        var p = /^[1-9][0-9]*$/,\n          y = /^-?[1-9][0-9]*$/,\n          v = /^0[x][0-9a-fA-F]+$/,\n          g = /^-?0[x][0-9a-fA-F]+$/,\n          m = /^0[0-7]+$/,\n          _ = /^-?0[0-7]+$/,\n          w = /^(?![eE])[0-9]*(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?$/,\n          b = /^[a-zA-Z_][a-zA-Z_0-9]*$/,\n          x = /^(?:\\.?[a-zA-Z_][a-zA-Z_0-9]*)+$/,\n          k = /^(?:\\.[a-zA-Z][a-zA-Z_0-9]*)+$/;\n        function A(t, e, r) {\n          e instanceof n || (r = e, e = new n()), r || (r = A.defaults);\n          var S,\n            O,\n            E,\n            T,\n            z,\n            B = i(t, r.alternateCommentMode || !1),\n            I = B.next,\n            N = B.push,\n            F = B.peek,\n            j = B.skip,\n            L = B.cmnt,\n            C = !0,\n            R = !1,\n            D = e,\n            M = r.keepCase ? function (t) {\n              return t;\n            } : d.camelCase;\n          function P(t, e, r) {\n            var i = A.filename;\n            return r || (A.filename = null), Error(\"illegal \" + (e || \"token\") + \" '\" + t + \"' (\" + (i ? i + \", \" : \"\") + \"line \" + B.line + \")\");\n          }\n          function U() {\n            var t,\n              e = [];\n            do {\n              if ('\"' !== (t = I()) && \"'\" !== t) throw P(t);\n              e.push(I()), j(t), t = F();\n            } while ('\"' === t || \"'\" === t);\n            return e.join(\"\");\n          }\n          function Z(t) {\n            var e = I();\n            switch (e) {\n              case \"'\":\n              case '\"':\n                return N(e), U();\n              case \"true\":\n              case \"TRUE\":\n                return !0;\n              case \"false\":\n              case \"FALSE\":\n                return !1;\n            }\n            try {\n              return function (t, e) {\n                var r = 1;\n                switch (\"-\" === t.charAt(0) && (r = -1, t = t.substring(1)), t) {\n                  case \"inf\":\n                  case \"INF\":\n                  case \"Inf\":\n                    return r * (1 / 0);\n                  case \"nan\":\n                  case \"NAN\":\n                  case \"Nan\":\n                  case \"NaN\":\n                    return NaN;\n                  case \"0\":\n                    return 0;\n                }\n                if (p.test(t)) return r * parseInt(t, 10);\n                if (v.test(t)) return r * parseInt(t, 16);\n                if (m.test(t)) return r * parseInt(t, 8);\n                if (w.test(t)) return r * parseFloat(t);\n                throw P(t, \"number\", !0);\n              }(e);\n            } catch (r) {\n              if (t && x.test(e)) return e;\n              throw P(e, \"value\");\n            }\n          }\n          function q(t, e) {\n            var r, i;\n            do {\n              !e || '\"' !== (r = F()) && \"'\" !== r ? t.push([i = J(I()), j(\"to\", !0) ? J(I()) : i]) : t.push(U());\n            } while (j(\",\", !0));\n            j(\";\");\n          }\n          function J(t, e) {\n            switch (t) {\n              case \"max\":\n              case \"MAX\":\n              case \"Max\":\n                return 536870911;\n              case \"0\":\n                return 0;\n            }\n            if (!e && \"-\" === t.charAt(0)) throw P(t, \"id\");\n            if (y.test(t)) return parseInt(t, 10);\n            if (g.test(t)) return parseInt(t, 16);\n            if (_.test(t)) return parseInt(t, 8);\n            throw P(t, \"id\");\n          }\n          function V() {\n            if (void 0 !== S) throw P(\"package\");\n            if (S = I(), !x.test(S)) throw P(S, \"name\");\n            D = D.define(S), j(\";\");\n          }\n          function H() {\n            var t,\n              e = F();\n            switch (e) {\n              case \"weak\":\n                t = E || (E = []), I();\n                break;\n              case \"public\":\n                I();\n              default:\n                t = O || (O = []);\n            }\n            e = U(), j(\";\"), t.push(e);\n          }\n          function $() {\n            if (j(\"=\"), T = U(), !(R = \"proto3\" === T) && \"proto2\" !== T) throw P(T, \"syntax\");\n            j(\";\");\n          }\n          function K(t, e) {\n            switch (e) {\n              case \"option\":\n                return G(t, e), j(\";\"), !0;\n              case \"message\":\n                return function (t, e) {\n                  if (!b.test(e = I())) throw P(e, \"type name\");\n                  var r = new s(e);\n                  X(r, function (t) {\n                    if (!K(r, t)) switch (t) {\n                      case \"map\":\n                        !function (t) {\n                          j(\"<\");\n                          var e = I();\n                          if (void 0 === c.mapKey[e]) throw P(e, \"type\");\n                          j(\",\");\n                          var r = I();\n                          if (!x.test(r)) throw P(r, \"type\");\n                          j(\">\");\n                          var i = I();\n                          if (!b.test(i)) throw P(i, \"name\");\n                          j(\"=\");\n                          var n = new a(M(i), J(I()), e, r);\n                          X(n, function (t) {\n                            if (\"option\" !== t) throw P(t);\n                            G(n, t), j(\";\");\n                          }, function () {\n                            tt(n);\n                          }), t.add(n);\n                        }(r);\n                        break;\n                      case \"required\":\n                      case \"optional\":\n                      case \"repeated\":\n                        Y(r, t);\n                        break;\n                      case \"oneof\":\n                        !function (t, e) {\n                          if (!b.test(e = I())) throw P(e, \"name\");\n                          var r = new h(M(e));\n                          X(r, function (t) {\n                            \"option\" === t ? (G(r, t), j(\";\")) : (N(t), Y(r, \"optional\"));\n                          }), t.add(r);\n                        }(r, t);\n                        break;\n                      case \"extensions\":\n                        q(r.extensions || (r.extensions = []));\n                        break;\n                      case \"reserved\":\n                        q(r.reserved || (r.reserved = []), !0);\n                        break;\n                      default:\n                        if (!R || !x.test(t)) throw P(t);\n                        N(t), Y(r, \"optional\");\n                    }\n                  }), t.add(r);\n                }(t, e), !0;\n              case \"enum\":\n                return function (t, e) {\n                  if (!b.test(e = I())) throw P(e, \"name\");\n                  var r = new u(e);\n                  X(r, function (t) {\n                    switch (t) {\n                      case \"option\":\n                        G(r, t), j(\";\");\n                        break;\n                      case \"reserved\":\n                        q(r.reserved || (r.reserved = []), !0);\n                        break;\n                      default:\n                        !function (t, e) {\n                          if (!b.test(e)) throw P(e, \"name\");\n                          j(\"=\");\n                          var r = J(I(), !0),\n                            i = {};\n                          X(i, function (t) {\n                            if (\"option\" !== t) throw P(t);\n                            G(i, t), j(\";\");\n                          }, function () {\n                            tt(i);\n                          }), t.add(e, r, i.comment);\n                        }(r, t);\n                    }\n                  }), t.add(r);\n                }(t, e), !0;\n              case \"service\":\n                return function (t, e) {\n                  if (!b.test(e = I())) throw P(e, \"service name\");\n                  var r = new l(e);\n                  X(r, function (t) {\n                    if (!K(r, t)) {\n                      if (\"rpc\" !== t) throw P(t);\n                      !function (t, e) {\n                        var r = e;\n                        if (!b.test(e = I())) throw P(e, \"name\");\n                        var i,\n                          n,\n                          s,\n                          o,\n                          a = e;\n                        if (j(\"(\"), j(\"stream\", !0) && (n = !0), !x.test(e = I())) throw P(e);\n                        if (i = e, j(\")\"), j(\"returns\"), j(\"(\"), j(\"stream\", !0) && (o = !0), !x.test(e = I())) throw P(e);\n                        s = e, j(\")\");\n                        var h = new f(a, r, i, s, n, o);\n                        X(h, function (t) {\n                          if (\"option\" !== t) throw P(t);\n                          G(h, t), j(\";\");\n                        }), t.add(h);\n                      }(r, t);\n                    }\n                  }), t.add(r);\n                }(t, e), !0;\n              case \"extend\":\n                return function (t, e) {\n                  if (!x.test(e = I())) throw P(e, \"reference\");\n                  var r = e;\n                  X(null, function (e) {\n                    switch (e) {\n                      case \"required\":\n                      case \"repeated\":\n                      case \"optional\":\n                        Y(t, e, r);\n                        break;\n                      default:\n                        if (!R || !x.test(e)) throw P(e);\n                        N(e), Y(t, \"optional\", r);\n                    }\n                  });\n                }(t, e), !0;\n            }\n            return !1;\n          }\n          function X(t, e, r) {\n            var i = B.line;\n            if (t && (t.comment = L(), t.filename = A.filename), j(\"{\", !0)) {\n              for (var n; \"}\" !== (n = I());) e(n);\n              j(\";\", !0);\n            } else r && r(), j(\";\"), t && \"string\" != typeof t.comment && (t.comment = L(i));\n          }\n          function Y(t, e, r) {\n            var i = I();\n            if (\"group\" !== i) {\n              if (!x.test(i)) throw P(i, \"type\");\n              var n = I();\n              if (!b.test(n)) throw P(n, \"name\");\n              n = M(n), j(\"=\");\n              var a = new o(n, J(I()), i, e, r);\n              X(a, function (t) {\n                if (\"option\" !== t) throw P(t);\n                G(a, t), j(\";\");\n              }, function () {\n                tt(a);\n              }), t.add(a), R || !a.repeated || void 0 === c.packed[i] && void 0 !== c.basic[i] || a.setOption(\"packed\", !1, !0);\n            } else !function (t, e) {\n              var r = I();\n              if (!b.test(r)) throw P(r, \"name\");\n              var i = d.lcFirst(r);\n              r === i && (r = d.ucFirst(r)), j(\"=\");\n              var n = J(I()),\n                a = new s(r);\n              a.group = !0;\n              var h = new o(i, n, r, e);\n              h.filename = A.filename, X(a, function (t) {\n                switch (t) {\n                  case \"option\":\n                    G(a, t), j(\";\");\n                    break;\n                  case \"required\":\n                  case \"optional\":\n                  case \"repeated\":\n                    Y(a, t);\n                    break;\n                  default:\n                    throw P(t);\n                }\n              }), t.add(a).add(h);\n            }(t, e);\n          }\n          function G(t, e) {\n            var r = j(\"(\", !0);\n            if (!x.test(e = I())) throw P(e, \"name\");\n            var i = e;\n            r && (j(\")\"), i = \"(\" + i + \")\", e = F(), k.test(e) && (i += e, I())), j(\"=\"), W(t, i);\n          }\n          function W(t, e) {\n            if (j(\"{\", !0)) do {\n              if (!b.test(z = I())) throw P(z, \"name\");\n              \"{\" === F() ? W(t, e + \".\" + z) : (j(\":\"), \"{\" === F() ? W(t, e + \".\" + z) : Q(t, e + \".\" + z, Z(!0)));\n            } while (!j(\"}\", !0));else Q(t, e, Z(!0));\n          }\n          function Q(t, e, r) {\n            t.setOption && t.setOption(e, r);\n          }\n          function tt(t) {\n            if (j(\"[\", !0)) {\n              do {\n                G(t, \"option\");\n              } while (j(\",\", !0));\n              j(\"]\");\n            }\n            return t;\n          }\n          for (; null !== (z = I());) switch (z) {\n            case \"package\":\n              if (!C) throw P(z);\n              V();\n              break;\n            case \"import\":\n              if (!C) throw P(z);\n              H();\n              break;\n            case \"syntax\":\n              if (!C) throw P(z);\n              $();\n              break;\n            case \"option\":\n              if (!C) throw P(z);\n              G(D, z), j(\";\");\n              break;\n            default:\n              if (K(D, z)) {\n                C = !1;\n                continue;\n              }\n              throw P(z);\n          }\n          return A.filename = null, {\n            package: S,\n            imports: O,\n            weakImports: E,\n            syntax: T,\n            root: e\n          };\n        }\n        A._configure = function () {\n          i = r(941), n = r(572), s = r(24), o = r(238), a = r(718), h = r(803), u = r(421), l = r(673), f = r(493), c = r(471), d = r(916);\n        };\n      },\n      915: t => {\n        var e = t.exports,\n          r = e.isAbsolute = function (t) {\n            return /^(?:\\/|\\w+:)/.test(t);\n          },\n          i = e.normalize = function (t) {\n            var e = (t = t.replace(/\\\\/g, \"/\").replace(/\\/{2,}/g, \"/\")).split(\"/\"),\n              i = r(t),\n              n = \"\";\n            i && (n = e.shift() + \"/\");\n            for (var s = 0; s < e.length;) \"..\" === e[s] ? s > 0 && \"..\" !== e[s - 1] ? e.splice(--s, 2) : i ? e.splice(s, 1) : ++s : \".\" === e[s] ? e.splice(s, 1) : ++s;\n            return n + e.join(\"/\");\n          };\n        e.resolve = function (t, e, n) {\n          return n || (e = i(e)), r(e) ? e : (n || (t = i(t)), (t = t.replace(/(?:\\/|^)[^/]+$/, \"\")).length ? i(t + \"/\" + e) : e);\n        };\n      },\n      266: t => {\n        t.exports = function (t, e, r) {\n          var i = r || 8192,\n            n = i >>> 1,\n            s = null,\n            o = i;\n          return function (r) {\n            if (r < 1 || r > n) return t(r);\n            o + r > i && (s = t(i), o = 0);\n            var a = e.call(s, o, o += r);\n            return 7 & o && (o = 1 + (7 | o)), a;\n          };\n        };\n      },\n      795: (t, e, r) => {\n        t.exports = a;\n        var i,\n          n,\n          s = r(916);\n        function o(t, e) {\n          return RangeError(\"index out of range: \" + t.pos + \" + \" + (e || 1) + \" > \" + t.len);\n        }\n        function a(t) {\n          this.buf = t, this.pos = 0, this.len = t.length;\n        }\n        var h,\n          u = \"undefined\" != typeof Uint8Array ? function (t) {\n            if (t instanceof Uint8Array || Array.isArray(t)) return new a(t);\n            if (\"undefined\" != typeof ArrayBuffer && t instanceof ArrayBuffer) return new a(new Uint8Array(t));\n            throw Error(\"illegal buffer\");\n          } : function (t) {\n            if (Array.isArray(t)) return new a(t);\n            throw Error(\"illegal buffer\");\n          };\n        function l() {\n          var t = new i(0, 0),\n            e = 0;\n          if (!(this.len - this.pos > 4)) {\n            for (; e < 3; ++e) {\n              if (this.pos >= this.len) throw o(this);\n              if (t.lo = (t.lo | (127 & this.buf[this.pos]) << 7 * e) >>> 0, this.buf[this.pos++] < 128) return t;\n            }\n            return t.lo = (t.lo | (127 & this.buf[this.pos++]) << 7 * e) >>> 0, t;\n          }\n          for (; e < 4; ++e) if (t.lo = (t.lo | (127 & this.buf[this.pos]) << 7 * e) >>> 0, this.buf[this.pos++] < 128) return t;\n          if (t.lo = (t.lo | (127 & this.buf[this.pos]) << 28) >>> 0, t.hi = (t.hi | (127 & this.buf[this.pos]) >> 4) >>> 0, this.buf[this.pos++] < 128) return t;\n          if (e = 0, this.len - this.pos > 4) {\n            for (; e < 5; ++e) if (t.hi = (t.hi | (127 & this.buf[this.pos]) << 7 * e + 3) >>> 0, this.buf[this.pos++] < 128) return t;\n          } else for (; e < 5; ++e) {\n            if (this.pos >= this.len) throw o(this);\n            if (t.hi = (t.hi | (127 & this.buf[this.pos]) << 7 * e + 3) >>> 0, this.buf[this.pos++] < 128) return t;\n          }\n          throw Error(\"invalid varint encoding\");\n        }\n        function f(t, e) {\n          return (t[e - 4] | t[e - 3] << 8 | t[e - 2] << 16 | t[e - 1] << 24) >>> 0;\n        }\n        function c() {\n          if (this.pos + 8 > this.len) throw o(this, 8);\n          return new i(f(this.buf, this.pos += 4), f(this.buf, this.pos += 4));\n        }\n        a.create = s.Buffer ? function (t) {\n          return (a.create = function (t) {\n            return s.Buffer.isBuffer(t) ? new (void 0)(t) : u(t);\n          })(t);\n        } : u, a.prototype._slice = s.Array.prototype.subarray || s.Array.prototype.slice, a.prototype.uint32 = (h = 4294967295, function () {\n          if (h = (127 & this.buf[this.pos]) >>> 0, this.buf[this.pos++] < 128) return h;\n          if (h = (h | (127 & this.buf[this.pos]) << 7) >>> 0, this.buf[this.pos++] < 128) return h;\n          if (h = (h | (127 & this.buf[this.pos]) << 14) >>> 0, this.buf[this.pos++] < 128) return h;\n          if (h = (h | (127 & this.buf[this.pos]) << 21) >>> 0, this.buf[this.pos++] < 128) return h;\n          if (h = (h | (15 & this.buf[this.pos]) << 28) >>> 0, this.buf[this.pos++] < 128) return h;\n          if ((this.pos += 5) > this.len) throw this.pos = this.len, o(this, 10);\n          return h;\n        }), a.prototype.int32 = function () {\n          return 0 | this.uint32();\n        }, a.prototype.sint32 = function () {\n          var t = this.uint32();\n          return t >>> 1 ^ -(1 & t);\n        }, a.prototype.bool = function () {\n          return 0 !== this.uint32();\n        }, a.prototype.fixed32 = function () {\n          if (this.pos + 4 > this.len) throw o(this, 4);\n          return f(this.buf, this.pos += 4);\n        }, a.prototype.sfixed32 = function () {\n          if (this.pos + 4 > this.len) throw o(this, 4);\n          return 0 | f(this.buf, this.pos += 4);\n        }, a.prototype.float = function () {\n          if (this.pos + 4 > this.len) throw o(this, 4);\n          var t = s.float.readFloatLE(this.buf, this.pos);\n          return this.pos += 4, t;\n        }, a.prototype.double = function () {\n          if (this.pos + 8 > this.len) throw o(this, 4);\n          var t = s.float.readDoubleLE(this.buf, this.pos);\n          return this.pos += 8, t;\n        }, a.prototype.bytes = function () {\n          var t = this.uint32(),\n            e = this.pos,\n            r = this.pos + t;\n          if (r > this.len) throw o(this, t);\n          return this.pos += t, Array.isArray(this.buf) ? this.buf.slice(e, r) : e === r ? new this.buf.constructor(0) : this._slice.call(this.buf, e, r);\n        }, a.prototype.string = function () {\n          var t = this.bytes();\n          return n.read(t, 0, t.length);\n        }, a.prototype.skip = function (t) {\n          if (\"number\" == typeof t) {\n            if (this.pos + t > this.len) throw o(this, t);\n            this.pos += t;\n          } else do {\n            if (this.pos >= this.len) throw o(this);\n          } while (128 & this.buf[this.pos++]);\n          return this;\n        }, a.prototype.skipType = function (t) {\n          switch (t) {\n            case 0:\n              this.skip();\n              break;\n            case 1:\n              this.skip(8);\n              break;\n            case 2:\n              this.skip(this.uint32());\n              break;\n            case 3:\n              for (; 4 != (t = 7 & this.uint32());) this.skipType(t);\n              break;\n            case 5:\n              this.skip(4);\n              break;\n            default:\n              throw Error(\"invalid wire type \" + t + \" at offset \" + this.pos);\n          }\n          return this;\n        }, a._configure = function () {\n          i = r(218), n = r(187);\n          var t = s.Long ? \"toLong\" : \"toNumber\";\n          s.merge(a.prototype, {\n            int64: function () {\n              return l.call(this)[t](!1);\n            },\n            uint64: function () {\n              return l.call(this)[t](!0);\n            },\n            sint64: function () {\n              return l.call(this).zzDecode()[t](!1);\n            },\n            fixed64: function () {\n              return c.call(this)[t](!0);\n            },\n            sfixed64: function () {\n              return c.call(this)[t](!1);\n            }\n          });\n        };\n      },\n      572: (t, e, r) => {\n        var i = r(535).default;\n        t.exports = c;\n        var n = r(625);\n        ((c.prototype = Object.create(n.prototype)).constructor = c).className = \"Root\";\n        var s,\n          o,\n          a,\n          h = r(238),\n          u = r(421),\n          l = r(803),\n          f = r(916);\n        function c(t) {\n          n.call(this, \"\", t), this.deferred = [], this.files = [], this.names = [];\n        }\n        function d() {}\n        c.fromJSON = function (t, e) {\n          return t = \"string\" == typeof t ? JSON.parse(t) : t, e || (e = new c()), t.options && e.setOptions(t.options), e.addJSON(t.nested);\n        }, c.prototype.resolvePath = f.path.resolve, c.prototype.parseFromPbString = function t(e, r, n) {\n          \"function\" == typeof r && (n = r, r = void 0);\n          var s = this;\n          if (!n) return f.asPromise(t, s, e, r);\n          var h = null;\n          if (\"string\" == typeof e) h = JSON.parse(e);else {\n            if (\"object\" !== i(e)) return void console.log(\"pb格式转化失败\");\n            h = e;\n          }\n          function u(t, e) {\n            if (n) {\n              var r = n;\n              n = null, r(t, e);\n            }\n          }\n          function l(t, e) {\n            try {\n              if (f.isString(e) && \"{\" === e.charAt(0) && (e = JSON.parse(e)), f.isString(e)) {\n                o.filename = t;\n                var i,\n                  n = o(e, s, r),\n                  a = 0;\n                if (n.imports) for (; a < n.imports.length; ++a) c(i = n.imports[a]);\n                if (n.weakImports) {\n                  for (a = 0; a < n.weakImports.length; ++a) i = n.weakImports[a];\n                  c(i);\n                }\n              } else s.setOptions(e.options).addJSON(e.nested);\n            } catch (t) {\n              u(t);\n            }\n            u(null, s);\n          }\n          function c(t) {\n            s.names.indexOf(t) > -1 || (s.names.push(t), t in a && l(t, a[t]));\n          }\n          l(h.name, h.pbJsonStr);\n        }, c.prototype.load = function t(e, r, i) {\n          \"function\" == typeof r && (i = r, r = void 0);\n          var n = this;\n          if (!i) return f.asPromise(t, n, e, r);\n          var s = i === d;\n          function h(t, e) {\n            if (i) {\n              var r = i;\n              if (i = null, s) throw t;\n              r(t, e);\n            }\n          }\n          function u(t, e) {\n            try {\n              if (f.isString(e) && \"{\" === e.charAt(0) && (e = JSON.parse(e)), f.isString(e)) {\n                o.filename = t;\n                var i,\n                  a = o(e, n, r),\n                  u = 0;\n                if (a.imports) for (; u < a.imports.length; ++u) (i = n.resolvePath(t, a.imports[u])) && l(i);\n                if (a.weakImports) for (u = 0; u < a.weakImports.length; ++u) (i = n.resolvePath(t, a.weakImports[u])) && l(i, !0);\n              } else n.setOptions(e.options).addJSON(e.nested);\n            } catch (t) {\n              h(t);\n            }\n            s || c || h(null, n);\n          }\n          function l(t, e) {\n            var r = t.lastIndexOf(\"google/protobuf/\");\n            if (r > -1) {\n              var o = t.substring(r);\n              o in a && (t = o);\n            }\n            if (!(n.files.indexOf(t) > -1)) if (n.files.push(t), t in a) s ? u(t, a[t]) : (++c, setTimeout(function () {\n              --c, u(t, a[t]);\n            }));else if (s) {\n              var l;\n              try {\n                l = f.fs.readFileSync(t).toString(\"utf8\");\n              } catch (t) {\n                return void (e || h(t));\n              }\n              u(t, l);\n            } else ++c, f.fetch(t, function (r, s) {\n              --c, i && (r ? e ? c || h(null, n) : h(r) : u(t, s));\n            });\n          }\n          var c = 0;\n          f.isString(e) && (e = [e]);\n          for (var p, y = 0; y < e.length; ++y) (p = n.resolvePath(\"\", e[y])) && l(p);\n          if (s) return n;\n          c || h(null, n);\n        }, c.prototype.loadSync = function (t, e) {\n          if (!f.isNode) throw Error(\"not supported\");\n          return this.load(t, e, d);\n        }, c.prototype.resolveAll = function () {\n          if (this.deferred.length) throw Error(\"unresolvable extensions: \" + this.deferred.map(function (t) {\n            return \"'extend \" + t.extend + \"' in \" + t.parent.fullName;\n          }).join(\", \"));\n          return n.prototype.resolveAll.call(this);\n        };\n        var p = /^[A-Z]/;\n        function y(t, e) {\n          var r = e.parent.lookup(e.extend);\n          if (r) {\n            var i = new h(e.fullName, e.id, e.type, e.rule, void 0, e.options);\n            return i.declaringField = e, e.extensionField = i, r.add(i), !0;\n          }\n          return !1;\n        }\n        c.prototype._handleAdd = function (t) {\n          if (t instanceof h) void 0 === t.extend || t.extensionField || y(0, t) || this.deferred.push(t);else if (t instanceof u) p.test(t.name) && (t.parent[t.name] = t.values);else if (!(t instanceof l)) {\n            if (t instanceof s) for (var e = 0; e < this.deferred.length;) y(0, this.deferred[e]) ? this.deferred.splice(e, 1) : ++e;\n            for (var r = 0; r < t.nestedArray.length; ++r) this._handleAdd(t._nestedArray[r]);\n            p.test(t.name) && (t.parent[t.name] = t);\n          }\n        }, c.prototype._handleRemove = function (t) {\n          if (t instanceof h) {\n            if (void 0 !== t.extend) if (t.extensionField) t.extensionField.parent.remove(t.extensionField), t.extensionField = null;else {\n              var e = this.deferred.indexOf(t);\n              e > -1 && this.deferred.splice(e, 1);\n            }\n          } else if (t instanceof u) p.test(t.name) && delete t.parent[t.name];else if (t instanceof n) {\n            for (var r = 0; r < t.nestedArray.length; ++r) this._handleRemove(t._nestedArray[r]);\n            p.test(t.name) && delete t.parent[t.name];\n          }\n        }, c._configure = function () {\n          s = r(24), o = r(121), a = r(453), h = r(238), u = r(421), l = r(803), f = r(916);\n        };\n      },\n      587: t => {\n        t.exports = {};\n      },\n      153: (t, e, r) => {\n        \"use strict\";\n\n        t.exports = n;\n        var i = r(916);\n        function n(t, e, r) {\n          if (\"function\" != typeof t) throw TypeError(\"rpcImpl must be a function\");\n          i.EventEmitter.call(this), this.rpcImpl = t, this.requestDelimited = Boolean(e), this.responseDelimited = Boolean(r);\n        }\n        (n.prototype = Object.create(i.EventEmitter.prototype)).constructor = n, n.prototype.rpcCall = function t(e, r, n, s, o) {\n          if (!s) throw TypeError(\"request must be specified\");\n          var a = this;\n          if (!o) return i.asPromise(t, a, e, r, n, s);\n          if (a.rpcImpl) try {\n            return a.rpcImpl(e, r[a.requestDelimited ? \"encodeDelimited\" : \"encode\"](s).finish(), function (t, r) {\n              if (t) return a.emit(\"error\", t, e), o(t);\n              if (null !== r) {\n                if (!(r instanceof n)) try {\n                  r = n[a.responseDelimited ? \"decodeDelimited\" : \"decode\"](r);\n                } catch (t) {\n                  return a.emit(\"error\", t, e), o(t);\n                }\n                return a.emit(\"data\", r, e), o(null, r);\n              }\n              a.end(!0);\n            });\n          } catch (t) {\n            return a.emit(\"error\", t, e), void setTimeout(function () {\n              o(t);\n            }, 0);\n          } else setTimeout(function () {\n            o(Error(\"already ended\"));\n          }, 0);\n        }, n.prototype.end = function (t) {\n          return this.rpcImpl && (t || this.rpcImpl(null, null, null), this.rpcImpl = null, this.emit(\"end\").off()), this;\n        };\n      },\n      673: (t, e, r) => {\n        \"use strict\";\n\n        t.exports = a;\n        var i,\n          n,\n          s,\n          o = r(625);\n        function a(t, e) {\n          o.call(this, t, e), this.methods = {}, this._methodsArray = null;\n        }\n        function h(t) {\n          return t._methodsArray = null, t;\n        }\n        ((a.prototype = Object.create(o.prototype)).constructor = a).className = \"Service\", a.fromJSON = function (t, e) {\n          var r = new a(t, e.options);\n          if (e.methods) for (var n = Object.keys(e.methods), s = 0; s < n.length; ++s) r.add(i.fromJSON(n[s], e.methods[n[s]]));\n          return e.nested && r.addJSON(e.nested), r.comment = e.comment, r;\n        }, a.prototype.toJSON = function (t) {\n          var e = o.prototype.toJSON.call(this, t),\n            r = !!t && Boolean(t.keepComments);\n          return n.toObject([\"options\", e && e.options || void 0, \"methods\", o.arrayToJSON(this.methodsArray, t) || {}, \"nested\", e && e.nested || void 0, \"comment\", r ? this.comment : void 0]);\n        }, Object.defineProperty(a.prototype, \"methodsArray\", {\n          get: function () {\n            return this._methodsArray || (this._methodsArray = n.toArray(this.methods));\n          }\n        }), a.prototype.get = function (t) {\n          return this.methods[t] || o.prototype.get.call(this, t);\n        }, a.prototype.resolveAll = function () {\n          for (var t = this.methodsArray, e = 0; e < t.length; ++e) t[e].resolve();\n          return o.prototype.resolve.call(this);\n        }, a.prototype.add = function (t) {\n          if (this.get(t.name)) throw Error(\"duplicate name '\" + t.name + \"' in \" + this);\n          return t instanceof i ? (this.methods[t.name] = t, t.parent = this, h(this)) : o.prototype.add.call(this, t);\n        }, a.prototype.remove = function (t) {\n          if (t instanceof i) {\n            if (this.methods[t.name] !== t) throw Error(t + \" is not a member of \" + this);\n            return delete this.methods[t.name], t.parent = null, h(this);\n          }\n          return o.prototype.remove.call(this, t);\n        }, a.prototype.create = function (t, e, r) {\n          for (var i, o = new s.Service(t, e, r), a = 0; a < this.methodsArray.length; ++a) {\n            var h = n.lcFirst((i = this._methodsArray[a]).resolve().name).replace(/[^$\\w_]/g, \"\");\n            o[h] = n.codegen([\"r\", \"c\"], n.isReserved(h) ? h + \"_\" : h)(\"return this.rpcCall(m,q,s,r,c)\")({\n              m: i,\n              q: i.resolvedRequestType.ctor,\n              s: i.resolvedResponseType.ctor\n            });\n          }\n          return o;\n        }, a._configure = function () {\n          i = r(493), n = r(916), s = r(153);\n        };\n      },\n      941: t => {\n        t.exports = f;\n        var e = /[\\s{}=;:[\\],'\"()<>]/g,\n          r = /(?:\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\")/g,\n          i = /(?:'([^'\\\\]*(?:\\\\.[^'\\\\]*)*)')/g,\n          n = /^ *[*/]+ */,\n          s = /^\\s*\\*?\\/*/,\n          o = /\\n/g,\n          a = /\\s/,\n          h = /\\\\(.?)/g,\n          u = {\n            0: \"\\0\",\n            r: \"\\r\",\n            n: \"\\n\",\n            t: \"\\t\"\n          };\n        function l(t) {\n          return t.replace(h, function (t, e) {\n            switch (e) {\n              case \"\\\\\":\n              case \"\":\n                return e;\n              default:\n                return u[e] || \"\";\n            }\n          });\n        }\n        function f(t, h) {\n          t = t.toString();\n          var u = 0,\n            f = t.length,\n            c = 1,\n            d = null,\n            p = null,\n            y = 0,\n            v = !1,\n            g = [],\n            m = null;\n          function _(t) {\n            return Error(\"illegal \" + t + \" (line \" + c + \")\");\n          }\n          function w(e) {\n            return t.charAt(e);\n          }\n          function b(e, r) {\n            d = t.charAt(e++), y = c, v = !1;\n            var i,\n              a = e - (h ? 2 : 3);\n            do {\n              if (--a < 0 || \"\\n\" === (i = t.charAt(a))) {\n                v = !0;\n                break;\n              }\n            } while (\" \" === i || \"\\t\" === i);\n            for (var u = t.substring(e, r).split(o), l = 0; l < u.length; ++l) u[l] = u[l].replace(h ? s : n, \"\").trim();\n            p = u.join(\"\\n\").trim();\n          }\n          function x(e) {\n            var r = k(e),\n              i = t.substring(e, r);\n            return /^\\s*\\/{1,2}/.test(i);\n          }\n          function k(t) {\n            for (var e = t; e < f && \"\\n\" !== w(e);) e++;\n            return e;\n          }\n          function A() {\n            if (g.length > 0) return g.shift();\n            if (m) return function () {\n              var e = \"'\" === m ? i : r;\n              e.lastIndex = u - 1;\n              var n = e.exec(t);\n              if (!n) throw _(\"string\");\n              return u = e.lastIndex, S(m), m = null, l(n[1]);\n            }();\n            var n, s, o, d, p;\n            do {\n              if (u === f) return null;\n              for (n = !1; a.test(o = w(u));) if (\"\\n\" === o && ++c, ++u === f) return null;\n              if (\"/\" === w(u)) {\n                if (++u === f) throw _(\"comment\");\n                if (\"/\" === w(u)) {\n                  if (h) {\n                    if (d = u, p = !1, x(u)) {\n                      p = !0;\n                      do {\n                        if ((u = k(u)) === f) break;\n                        u++;\n                      } while (x(u));\n                    } else u = Math.min(f, k(u) + 1);\n                    p && b(d, u), c++, n = !0;\n                  } else {\n                    for (p = \"/\" === w(d = u + 1); \"\\n\" !== w(++u);) if (u === f) return null;\n                    ++u, p && b(d, u - 1), ++c, n = !0;\n                  }\n                } else {\n                  if (\"*\" !== (o = w(u))) return \"/\";\n                  d = u + 1, p = h || \"*\" === w(d);\n                  do {\n                    if (\"\\n\" === o && ++c, ++u === f) throw _(\"comment\");\n                    s = o, o = w(u);\n                  } while (\"*\" !== s || \"/\" !== o);\n                  ++u, p && b(d, u - 2), n = !0;\n                }\n              }\n            } while (n);\n            var y = u;\n            if (e.lastIndex = 0, !e.test(w(y++))) for (; y < f && !e.test(w(y));) ++y;\n            var v = t.substring(u, u = y);\n            return '\"' !== v && \"'\" !== v || (m = v), v;\n          }\n          function S(t) {\n            g.push(t);\n          }\n          function O() {\n            if (!g.length) {\n              var t = A();\n              if (null === t) return null;\n              S(t);\n            }\n            return g[0];\n          }\n          return Object.defineProperty({\n            next: A,\n            peek: O,\n            push: S,\n            skip: function (t, e) {\n              var r = O();\n              if (r === t) return A(), !0;\n              if (!e) throw _(\"token '\" + r + \"', '\" + t + \"' expected\");\n              return !1;\n            },\n            cmnt: function (t) {\n              var e = null;\n              return void 0 === t ? y === c - 1 && (h || \"*\" === d || v) && (e = p) : (y < t && O(), y !== t || v || !h && \"/\" !== d || (e = p)), e;\n            }\n          }, \"line\", {\n            get: function () {\n              return c;\n            }\n          });\n        }\n        f.unescape = l;\n      },\n      24: (t, e, r) => {\n        t.exports = v;\n        var i,\n          n,\n          s,\n          o,\n          a,\n          h,\n          u,\n          l,\n          f,\n          c,\n          d,\n          p,\n          y = r(625);\n        function v(t, e) {\n          y.call(this, t, e), this.fields = {}, this.oneofs = void 0, this.extensions = void 0, this.reserved = void 0, this.group = void 0, this._fieldsById = null, this._fieldsArray = null, this._oneofsArray = null, this._ctor = null;\n        }\n        function g(t) {\n          return t._fieldsById = t._fieldsArray = t._oneofsArray = null, delete t.encode, delete t.decode, delete t.verify, t;\n        }\n        ((v.prototype = Object.create(y.prototype)).constructor = v).className = \"Type\", Object.defineProperties(v.prototype, {\n          fieldsById: {\n            get: function () {\n              if (this._fieldsById) return this._fieldsById;\n              this._fieldsById = {};\n              for (var t = Object.keys(this.fields), e = 0; e < t.length; ++e) {\n                var r = this.fields[t[e]],\n                  i = r.id;\n                if (this._fieldsById[i]) throw Error(\"duplicate id \" + i + \" in \" + this);\n                this._fieldsById[i] = r;\n              }\n              return this._fieldsById;\n            }\n          },\n          fieldsArray: {\n            get: function () {\n              return this._fieldsArray || (this._fieldsArray = h.toArray(this.fields));\n            }\n          },\n          oneofsArray: {\n            get: function () {\n              return this._oneofsArray || (this._oneofsArray = h.toArray(this.oneofs));\n            }\n          },\n          ctor: {\n            get: function () {\n              return this._ctor || (this.ctor = v.generateConstructor(this));\n            },\n            set: function (t) {\n              var e = t.prototype;\n              e instanceof s || ((t.prototype = new s()).constructor = t, h.merge(t.prototype, e)), t.$type = t.prototype.$type = this, h.merge(t, s, !0), h.merge(t.prototype, s, !0), this._ctor = t;\n              for (var r = 0; r < this.fieldsArray.length; ++r) this._fieldsArray[r].resolve();\n              var i = {};\n              for (r = 0; r < this.oneofsArray.length; ++r) {\n                var n = this._oneofsArray[r].resolve().name,\n                  o = function (t) {\n                    for (var e = {}, r = 0; r < t.length; ++r) e[t[r]] = 0;\n                    return {\n                      setter: function (r) {\n                        if (!(t.indexOf(r) < 0)) {\n                          e[r] = 1;\n                          for (var i = 0; i < t.length; ++i) t[i] !== r && delete this[t[i]];\n                        }\n                      },\n                      getter: function () {\n                        for (var t = Object.keys(this), r = t.length - 1; r > -1; --r) if (1 === e[t[r]] && void 0 !== this[t[r]] && null !== this[t[r]]) return t[r];\n                      }\n                    };\n                  }(this._oneofsArray[r].oneof);\n                i[n] = {\n                  get: o.getter,\n                  set: o.setter\n                };\n              }\n              r && Object.defineProperties(t.prototype, i);\n            }\n          }\n        }), v.generateConstructor = function (t) {\n          return function (e) {\n            for (var r, i = 0; i < t.fieldsArray.length; i++) (r = t._fieldsArray[i]).map ? this[r.name] = {} : r.repeated && (this[r.name] = []);\n            if (e) for (var n = Object.keys(e), s = 0; s < n.length; ++s) null != e[n[s]] && (this[n[s]] = e[n[s]]);\n          };\n        }, v.fromJSON = function (t, e) {\n          var r = new v(t, e.options);\n          r.extensions = e.extensions, r.reserved = e.reserved;\n          for (var s = Object.keys(e.fields), a = 0; a < s.length; ++a) r.add((void 0 !== e.fields[s[a]].keyType ? p.fromJSON : n.fromJSON)(s[a], e.fields[s[a]]));\n          if (e.oneofs) for (s = Object.keys(e.oneofs), a = 0; a < s.length; ++a) r.add(o.fromJSON(s[a], e.oneofs[s[a]]));\n          if (e.nested) for (s = Object.keys(e.nested), a = 0; a < s.length; ++a) {\n            var h = e.nested[s[a]];\n            r.add((void 0 !== h.id ? n.fromJSON : void 0 !== h.fields ? v.fromJSON : void 0 !== h.values ? i.fromJSON : void 0 !== h.methods ? f.fromJSON : y.fromJSON)(s[a], h));\n          }\n          return e.extensions && e.extensions.length && (r.extensions = e.extensions), e.reserved && e.reserved.length && (r.reserved = e.reserved), e.group && (r.group = !0), e.comment && (r.comment = e.comment), r;\n        }, v.prototype.toJSON = function (t) {\n          var e = y.prototype.toJSON.call(this, t),\n            r = !!t && Boolean(t.keepComments);\n          return {\n            options: e && e.options || void 0,\n            oneofs: y.arrayToJSON(this.oneofsArray, t),\n            fields: y.arrayToJSON(this.fieldsArray.filter(function (t) {\n              return !t.declaringField;\n            }), t) || {},\n            extensions: this.extensions && this.extensions.length ? this.extensions : void 0,\n            reserved: this.reserved && this.reserved.length ? this.reserved : void 0,\n            group: this.group || void 0,\n            nested: e && e.nested || void 0,\n            comment: r ? this.comment : void 0\n          };\n        }, v.prototype.resolveAll = function () {\n          for (var t = this.fieldsArray, e = 0; e < t.length;) t[e++].resolve();\n          var r = this.oneofsArray;\n          for (e = 0; e < r.length;) r[e++].resolve();\n          return y.prototype.resolveAll.call(this);\n        }, v.prototype.get = function (t) {\n          return this.fields[t] || this.oneofs && this.oneofs[t] || this.nested && this.nested[t] || null;\n        }, v.prototype.add = function (t) {\n          if (this.get(t.name)) throw Error(\"duplicate name '\" + t.name + \"' in \" + this);\n          if (t instanceof n && void 0 === t.extend) {\n            if (this._fieldsById && this._fieldsById[t.id]) throw Error(\"duplicate id \" + t.id + \" in \" + this);\n            if (this.isReservedId(t.id)) throw Error(\"id \" + t.id + \" is reserved in \" + this);\n            if (this.isReservedName(t.name)) throw Error(\"name '\" + t.name + \"' is reserved in \" + this);\n            return t.parent && t.parent.remove(t), this.fields[t.name] = t, t.message = this, t.onAdd(this), g(this);\n          }\n          return t instanceof o ? (this.oneofs || (this.oneofs = {}), this.oneofs[t.name] = t, t.onAdd(this), g(this)) : y.prototype.add.call(this, t);\n        }, v.prototype.remove = function (t) {\n          if (t instanceof n && void 0 === t.extend) {\n            if (!this.fields || this.fields[t.name] !== t) throw Error(t + \" is not a member of \" + this);\n            return delete this.fields[t.name], t.parent = null, t.onRemove(this), g(this);\n          }\n          if (t instanceof o) {\n            if (!this.oneofs || this.oneofs[t.name] !== t) throw Error(t + \" is not a member of \" + this);\n            return delete this.oneofs[t.name], t.parent = null, t.onRemove(this), g(this);\n          }\n          return y.prototype.remove.call(this, t);\n        }, v.prototype.isReservedId = function (t) {\n          return y.isReservedId(this.reserved, t);\n        }, v.prototype.isReservedName = function (t) {\n          return y.isReservedName(this.reserved, t);\n        }, v.prototype.create = function (t) {\n          return new this.ctor(t);\n        }, v.prototype.setup = function () {\n          for (var t = this.fullName, e = [], r = 0; r < this.fieldsArray.length; ++r) e.push(this._fieldsArray[r].resolve().resolvedType);\n          this.decode = l(this)({\n            Reader: a,\n            types: e,\n            util: h\n          }), this.verify = u(this)({\n            types: e,\n            util: h\n          }), this.fromObject = d.fromObject(this)({\n            types: e,\n            util: h\n          }), this.toObject = d.toObject(this)({\n            types: e,\n            util: h\n          });\n          var i = c[t];\n          if (i) {\n            var n = Object.create(this);\n            n.fromObject = this.fromObject, this.fromObject = i.fromObject.bind(n), n.toObject = this.toObject, this.toObject = i.toObject.bind(n);\n          }\n          return this;\n        }, v.prototype.encode = function (t, e) {\n          return this.setup().encode(t, e);\n        }, v.prototype.encodeDelimited = function (t, e) {\n          return this.encode(t, e && e.len ? e.fork() : e).ldelim();\n        }, v.prototype.decode = function (t, e) {\n          return this.setup().decode(t, e);\n        }, v.prototype.decodeDelimited = function (t) {\n          return t instanceof a || (t = a.create(t)), this.decode(t, t.uint32());\n        }, v.prototype.verify = function (t) {\n          return this.setup().verify(t);\n        }, v.prototype.fromObject = function (t) {\n          return this.setup().fromObject(t);\n        }, v.prototype.toObject = function (t, e) {\n          return this.setup().toObject(t, e);\n        }, v.d = function (t) {\n          return function (e) {\n            h.decorateType(e, t);\n          };\n        }, v._configure = function () {\n          i = r(421), n = r(238), s = r(853), o = r(803), r(443), a = r(795), h = r(916), u = r(122), l = r(910), f = r(673), c = r(432), d = r(954), p = r(718);\n        };\n      },\n      471: (t, e, r) => {\n        \"use strict\";\n\n        var i = t.exports,\n          n = r(916),\n          s = [\"double\", \"float\", \"int32\", \"uint32\", \"sint32\", \"fixed32\", \"sfixed32\", \"int64\", \"uint64\", \"sint64\", \"fixed64\", \"sfixed64\", \"bool\", \"string\", \"bytes\"];\n        function o(t, e) {\n          var r = 0,\n            i = {};\n          for (e |= 0; r < t.length;) i[s[r + e]] = t[r++];\n          return i;\n        }\n        i.basic = o([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2, 2]), i.defaults = o([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, !1, \"\", n.emptyArray, null]), i.long = o([0, 0, 0, 1, 1], 7), i.mapKey = o([0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0, 2], 2), i.packed = o([1, 5, 0, 0, 0, 5, 5, 0, 0, 0, 1, 1, 0]), i._configure = function () {\n          n = r(916);\n        };\n      },\n      187: t => {\n        \"use strict\";\n\n        var e = t.exports;\n        e.length = function (t) {\n          for (var e = 0, r = 0, i = 0; i < t.length; ++i) (r = t.charCodeAt(i)) < 128 ? e += 1 : r < 2048 ? e += 2 : 55296 == (64512 & r) && 56320 == (64512 & t.charCodeAt(i + 1)) ? (++i, e += 4) : e += 3;\n          return e;\n        }, e.read = function (t, e, r) {\n          if (r - e < 1) return \"\";\n          for (var i, n = null, s = [], o = 0; e < r;) (i = t[e++]) < 128 ? s[o++] = i : i > 191 && i < 224 ? s[o++] = (31 & i) << 6 | 63 & t[e++] : i > 239 && i < 365 ? (i = ((7 & i) << 18 | (63 & t[e++]) << 12 | (63 & t[e++]) << 6 | 63 & t[e++]) - 65536, s[o++] = 55296 + (i >> 10), s[o++] = 56320 + (1023 & i)) : s[o++] = (15 & i) << 12 | (63 & t[e++]) << 6 | 63 & t[e++], o > 8191 && ((n || (n = [])).push(String.fromCharCode.apply(String, s)), o = 0);\n          return n ? (o && n.push(String.fromCharCode.apply(String, s.slice(0, o))), n.join(\"\")) : String.fromCharCode.apply(String, s.slice(0, o));\n        }, e.write = function (t, e, r) {\n          for (var i, n, s = r, o = 0; o < t.length; ++o) (i = t.charCodeAt(o)) < 128 ? e[r++] = i : i < 2048 ? (e[r++] = i >> 6 | 192, e[r++] = 63 & i | 128) : 55296 == (64512 & i) && 56320 == (64512 & (n = t.charCodeAt(o + 1))) ? (i = 65536 + ((1023 & i) << 10) + (1023 & n), ++o, e[r++] = i >> 18 | 240, e[r++] = i >> 12 & 63 | 128, e[r++] = i >> 6 & 63 | 128, e[r++] = 63 & i | 128) : (e[r++] = i >> 12 | 224, e[r++] = i >> 6 & 63 | 128, e[r++] = 63 & i | 128);\n          return r - s;\n        };\n      },\n      916: (t, e, r) => {\n        var i = r(535).default,\n          n = t.exports,\n          s = r(587);\n        n.LongBits = r(218), n.Long = r(470), n.pool = r(266), n.float = r(620), n.asPromise = r(347), n.EventEmitter = r(770), n.path = r(915), n.base64 = r(203), n.utf8 = r(187), n.compareFieldsById = function (t, e) {\n          return t.id - e.id;\n        }, n.toArray = function (t) {\n          if (t) {\n            for (var e = Object.keys(t), r = new Array(e.length), i = 0; i < e.length;) r[i] = t[e[i++]];\n            return r;\n          }\n          return [];\n        }, n.toObject = function (t) {\n          for (var e = {}, r = 0; r < t.length;) {\n            var i = t[r++],\n              n = t[r++];\n            void 0 !== n && (e[i] = n);\n          }\n          return e;\n        }, n.isString = function (t) {\n          return \"string\" == typeof t || t instanceof String;\n        }, n.isReserved = function (t) {\n          return /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/.test(t);\n        }, n.isObject = function (t) {\n          return t && \"object\" === i(t);\n        }, n.Array = \"undefined\" != typeof Uint8Array ? Uint8Array : Array, n.oneOfGetter = function (t) {\n          for (var e = {}, r = 0; r < t.length; ++r) e[t[r]] = 1;\n          return function () {\n            for (var t = Object.keys(this), r = t.length - 1; r > -1; --r) if (1 === e[t[r]] && void 0 !== this[t[r]] && null !== this[t[r]]) return t[r];\n          };\n        }, n.oneOfSetter = function (t) {\n          return function (e) {\n            for (var r = 0; r < t.length; ++r) t[r] !== e && delete this[t[r]];\n          };\n        }, n.merge = function (t, e, r) {\n          for (var i = Object.keys(e), n = 0; n < i.length; ++n) void 0 !== t[i[n]] && r || (t[i[n]] = e[i[n]]);\n          return t;\n        }, n.decorateType = function (t, e) {\n          if (t.$type) return e && t.$type.name !== e && (n.decorateRoot.remove(t.$type), t.$type.name = e, n.decorateRoot.add(t.$type)), t.$type;\n          Type || (Type = r(24));\n          var i = new Type(e || t.name);\n          return n.decorateRoot.add(i), i.ctor = t, Object.defineProperty(t, \"$type\", {\n            value: i,\n            enumerable: !1\n          }), Object.defineProperty(t.prototype, \"$type\", {\n            value: i,\n            enumerable: !1\n          }), i;\n        }, n.emptyArray = Object.freeze ? Object.freeze([]) : [], n.emptyObject = Object.freeze ? Object.freeze({}) : {}, n.longToHash = function (t) {\n          return t ? n.LongBits.from(t).toHash() : n.LongBits.zeroHash;\n        }, n.copy = function (t) {\n          if (\"object\" != i(t)) return t;\n          var e = {};\n          for (var r in t) e[r] = t[r];\n          return e;\n        }, n.deepCopy = function t(e) {\n          if (\"object\" != i(e)) return e;\n          var r = {};\n          for (var n in e) r[n] = t(e[n]);\n          return r;\n        }, n.ProtocolError = function (t) {\n          function e(t, r) {\n            if (!(this instanceof e)) return new e(t, r);\n            Object.defineProperty(this, \"message\", {\n              get: function () {\n                return t;\n              }\n            }), Error.captureStackTrace ? Error.captureStackTrace(this, e) : Object.defineProperty(this, \"stack\", {\n              value: new Error().stack || \"\"\n            }), r && merge(this, r);\n          }\n          return (e.prototype = Object.create(Error.prototype)).constructor = e, Object.defineProperty(e.prototype, \"name\", {\n            get: function () {\n              return t;\n            }\n          }), e.prototype.toString = function () {\n            return this.name + \": \" + this.message;\n          }, e;\n        }, n.toJSONOptions = {\n          longs: String,\n          enums: String,\n          bytes: String,\n          json: !0\n        }, n.Buffer = null, n.newBuffer = function (t) {\n          return \"number\" == typeof t ? new n.Array(t) : \"undefined\" == typeof Uint8Array ? t : new Uint8Array(t);\n        }, n.stringToBytes = function (t) {\n          var e,\n            r,\n            i = [];\n          e = t.length;\n          for (var n = 0; n < e; n++) (r = t.charCodeAt(n)) >= 65536 && r <= 1114111 ? (i.push(r >> 18 & 7 | 240), i.push(r >> 12 & 63 | 128), i.push(r >> 6 & 63 | 128), i.push(63 & r | 128)) : r >= 2048 && r <= 65535 ? (i.push(r >> 12 & 15 | 224), i.push(r >> 6 & 63 | 128), i.push(63 & r | 128)) : r >= 128 && r <= 2047 ? (i.push(r >> 6 & 31 | 192), i.push(63 & r | 128)) : i.push(255 & r);\n          return i;\n        }, n.byteToString = function (t) {\n          if (\"string\" == typeof t) return t;\n          for (var e = \"\", r = t, i = 0; i < r.length; i++) {\n            var n = r[i].toString(2),\n              s = n.match(/^1+?(?=0)/);\n            if (s && 8 == n.length) {\n              for (var o = s[0].length, a = r[i].toString(2).slice(7 - o), h = 1; h < o; h++) a += r[h + i].toString(2).slice(2);\n              e += String.fromCharCode(parseInt(a, 2)), i += o - 1;\n            } else e += String.fromCharCode(r[i]);\n          }\n          return e;\n        }, n.isInteger = Number.isInteger || function (t) {\n          return \"number\" == typeof t && isFinite(t) && Math.floor(t) === t;\n        }, Object.defineProperty(n, \"decorateRoot\", {\n          get: function () {\n            return s.decorated || (s.decorated = new (r(572))());\n          }\n        });\n      },\n      122: (t, e, r) => {\n        var i,\n          n,\n          s = r(535).default;\n        function o(t, e) {\n          return t.name + \": \" + e + (t.repeated && \"array\" !== e ? \"[]\" : t.map && \"object\" !== e ? \"{k:\" + t.keyType + \"}\" : \"\") + \" expected\";\n        }\n        function a(t, e, r, s) {\n          var a = s.types;\n          if (t.resolvedType) {\n            if (t.resolvedType instanceof i) {\n              if (Object.keys(t.resolvedType.values).indexOf(r) < 0) return o(t, \"enum value\");\n            } else {\n              var h = a[e].verify(r);\n              if (h) return t.name + \".\" + h;\n            }\n          } else switch (t.type) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\":\n              if (!n.isInteger(r)) return o(t, \"integer\");\n              break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\":\n              if (!(n.isInteger(r) || r && n.isInteger(r.low) && n.isInteger(r.high))) return o(t, \"integer|Long\");\n              break;\n            case \"float\":\n            case \"double\":\n              if (\"number\" != typeof r) return o(t, \"number\");\n              break;\n            case \"bool\":\n              if (\"boolean\" != typeof r) return o(t, \"boolean\");\n              break;\n            case \"string\":\n              if (!n.isString(r)) return o(t, \"string\");\n              break;\n            case \"bytes\":\n              if (!(r && \"number\" == typeof r.length || n.isString(r))) return o(t, \"buffer\");\n          }\n        }\n        function h(t, e) {\n          switch (t.keyType) {\n            case \"int32\":\n            case \"uint32\":\n            case \"sint32\":\n            case \"fixed32\":\n            case \"sfixed32\":\n              if (!n.key32Re.test(e)) return o(t, \"integer key\");\n              break;\n            case \"int64\":\n            case \"uint64\":\n            case \"sint64\":\n            case \"fixed64\":\n            case \"sfixed64\":\n              if (!n.key64Re.test(e)) return o(t, \"integer|Long key\");\n              break;\n            case \"bool\":\n              if (!n.key2Re.test(e)) return o(t, \"boolean key\");\n          }\n        }\n        function u(t) {\n          return function (e) {\n            return function (r) {\n              var i;\n              if (\"object\" !== s(r) || null === r) return \"object expected\";\n              var u,\n                l = {};\n              t.oneofsArray.length && (u = {});\n              for (var f = 0; f < t.fieldsArray.length; ++f) {\n                var c,\n                  d = t._fieldsArray[f].resolve(),\n                  p = r[d.name];\n                if (!d.optional || null != p && r.hasOwnProperty(d.name)) if (d.map) {\n                  if (!n.isObject(p)) return o(d, \"object\");\n                  var y = Object.keys(p);\n                  for (c = 0; c < y.length; ++c) {\n                    if (i = h(d, y[c])) return i;\n                    if (i = a(d, f, p[y[c]], e)) return i;\n                  }\n                } else if (d.repeated) {\n                  if (!Array.isArray(p)) return o(d, \"array\");\n                  for (c = 0; c < p.length; ++c) if (i = a(d, f, p[c], e)) return i;\n                } else {\n                  if (d.partOf) {\n                    var v = d.partOf.name;\n                    if (1 === l[d.partOf.name] && 1 === u[v]) return d.partOf.name + \": multiple values\";\n                    u[v] = 1;\n                  }\n                  if (i = a(d, f, p, e)) return i;\n                }\n              }\n            };\n          };\n        }\n        t.exports = u, u._configure = function () {\n          i = r(421), n = r(916);\n        };\n      },\n      432: (t, e, r) => {\n        var i,\n          n = e;\n        n[\".google.protobuf.Any\"] = {\n          fromObject: function (t) {\n            if (t && t[\"@type\"]) {\n              var e = this.lookup(t[\"@type\"]);\n              if (e) {\n                var r = \".\" === t[\"@type\"].charAt(0) ? t[\"@type\"].substr(1) : t[\"@type\"];\n                return this.create({\n                  type_url: \"/\" + r,\n                  value: e.encode(e.fromObject(t)).finish()\n                });\n              }\n            }\n            return this.fromObject(t);\n          },\n          toObject: function (t, e) {\n            if (e && e.json && t.type_url && t.value) {\n              var r = t.type_url.substring(t.type_url.lastIndexOf(\"/\") + 1),\n                n = this.lookup(r);\n              n && (t = n.decode(t.value));\n            }\n            if (!(t instanceof this.ctor) && t instanceof i) {\n              var s = t.$type.toObject(t, e);\n              return s[\"@type\"] = t.$type.fullName, s;\n            }\n            return this.toObject(t, e);\n          }\n        }, n._configure = function () {\n          i = r(853);\n        };\n      },\n      443: (t, e, r) => {\n        t.exports = u;\n        var i,\n          n = r(916),\n          s = r(187);\n        function o(t, e, r) {\n          this.fn = t, this.len = e, this.next = void 0, this.val = r;\n        }\n        function a() {}\n        function h(t) {\n          this.head = t.head, this.tail = t.tail, this.len = t.len, this.next = t.states;\n        }\n        function u() {\n          this.len = 0, this.head = new o(a, 0, 0), this.tail = this.head, this.states = null;\n        }\n        function l(t, e, r) {\n          e[r] = 255 & t;\n        }\n        function f(t, e) {\n          this.len = t, this.next = void 0, this.val = e;\n        }\n        function c(t, e, r) {\n          for (; t.hi;) e[r++] = 127 & t.lo | 128, t.lo = (t.lo >>> 7 | t.hi << 25) >>> 0, t.hi >>>= 7;\n          for (; t.lo > 127;) e[r++] = 127 & t.lo | 128, t.lo = t.lo >>> 7;\n          e[r++] = t.lo;\n        }\n        function d(t, e, r) {\n          e[r] = 255 & t, e[r + 1] = t >>> 8 & 255, e[r + 2] = t >>> 16 & 255, e[r + 3] = t >>> 24;\n        }\n        u.create = n.Buffer ? function () {\n          return (u.create = function () {\n            return new (void 0)();\n          })();\n        } : function () {\n          return new u();\n        }, u.alloc = function (t) {\n          return new n.Array(t);\n        }, n.Array !== Array && (u.alloc = n.pool(u.alloc, n.Array.prototype.subarray)), u.prototype._push = function (t, e, r) {\n          return this.tail = this.tail.next = new o(t, e, r), this.len += e, this;\n        }, f.prototype = Object.create(o.prototype), f.prototype.fn = function (t, e, r) {\n          for (; t > 127;) e[r++] = 127 & t | 128, t >>>= 7;\n          e[r] = t;\n        }, u.prototype.uint32 = function (t) {\n          return this.len += (this.tail = this.tail.next = new f((t >>>= 0) < 128 ? 1 : t < 16384 ? 2 : t < 2097152 ? 3 : t < 268435456 ? 4 : 5, t)).len, this;\n        }, u.prototype.int32 = function (t) {\n          return t < 0 ? this._push(c, 10, i.fromNumber(t)) : this.uint32(t);\n        }, u.prototype.sint32 = function (t) {\n          return this.uint32((t << 1 ^ t >> 31) >>> 0);\n        }, u.prototype.uint64 = function (t) {\n          var e = i.from(t);\n          return this._push(c, e.length(), e);\n        }, u.prototype.int64 = u.prototype.uint64, u.prototype.sint64 = function (t) {\n          var e = i.from(t).zzEncode();\n          return this._push(c, e.length(), e);\n        }, u.prototype.bool = function (t) {\n          return this._push(l, 1, t ? 1 : 0);\n        }, u.prototype.fixed32 = function (t) {\n          return this._push(d, 4, t >>> 0);\n        }, u.prototype.sfixed32 = u.prototype.fixed32, u.prototype.fixed64 = function (t) {\n          var e = i.from(t);\n          return this._push(d, 4, e.lo)._push(d, 4, e.hi);\n        }, u.prototype.sfixed64 = u.prototype.fixed64, u.prototype.float = function (t) {\n          return this._push(n.float.writeFloatLE, 4, t);\n        }, u.prototype.double = function (t) {\n          return this._push(n.float.writeDoubleLE, 8, t);\n        };\n        var p = n.Array.prototype.set ? function (t, e, r) {\n          e.set(t, r);\n        } : function (t, e, r) {\n          for (var i = 0; i < t.length; ++i) e[r + i] = t[i];\n        };\n        u.prototype.bytes = function (t) {\n          var e = t.length >>> 0;\n          if (!e) return this._push(l, 1, 0);\n          if (n.isString(t)) {\n            var r = u.alloc(e = s.length(t));\n            s.write(t, r, 0), t = r;\n          }\n          return this.uint32(e)._push(p, e, t);\n        }, u.prototype.string = function (t) {\n          var e = s.length(t);\n          return e ? this.uint32(e)._push(s.write, e, t) : this._push(l, 1, 0);\n        }, u.prototype.fork = function () {\n          return this.states = new h(this), this.head = this.tail = new o(a, 0, 0), this.len = 0, this;\n        }, u.prototype.reset = function () {\n          return this.states ? (this.head = this.states.head, this.tail = this.states.tail, this.len = this.states.len, this.states = this.states.next) : (this.head = this.tail = new o(a, 0, 0), this.len = 0), this;\n        }, u.prototype.ldelim = function () {\n          var t = this.head,\n            e = this.tail,\n            r = this.len;\n          return this.reset().uint32(r), r && (this.tail.next = t.next, this.tail = e, this.len += r), this;\n        }, u.prototype.finish = function () {\n          for (var t = this.head.next, e = this.constructor.alloc(this.len), r = 0; t;) t.fn(t.val, e, r), r += t.len, t = t.next;\n          return e;\n        }, u._configure = function () {\n          i = r(218), r(203), s = r(187);\n        };\n      },\n      535: t => {\n        function e(r) {\n          return t.exports = e = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n            return typeof t;\n          } : function (t) {\n            return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n          }, t.exports.__esModule = !0, t.exports.default = t.exports, e(r);\n        }\n        t.exports = e, t.exports.__esModule = !0, t.exports.default = t.exports;\n      }\n    },\n    e = {};\n  function r(i) {\n    var n = e[i];\n    if (void 0 !== n) return n.exports;\n    var s = e[i] = {\n      exports: {}\n    };\n    return t[i](s, s.exports, r), s.exports;\n  }\n  r.d = (t, e) => {\n    for (var i in e) r.o(e, i) && !r.o(t, i) && Object.defineProperty(t, i, {\n      enumerable: !0,\n      get: e[i]\n    });\n  }, r.o = (t, e) => Object.prototype.hasOwnProperty.call(t, e), r.r = t => {\n    \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {\n      value: \"Module\"\n    }), Object.defineProperty(t, \"__esModule\", {\n      value: !0\n    });\n  };\n  var i = {};\n  return (() => {\n    \"use strict\";\n\n    function t(e) {\n      return t = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (t) {\n        return typeof t;\n      } : function (t) {\n        return t && \"function\" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? \"symbol\" : typeof t;\n      }, t(e);\n    }\n    function e() {\n      e = function () {\n        return i;\n      };\n      var r,\n        i = {},\n        n = Object.prototype,\n        s = n.hasOwnProperty,\n        o = Object.defineProperty || function (t, e, r) {\n          t[e] = r.value;\n        },\n        a = \"function\" == typeof Symbol ? Symbol : {},\n        h = a.iterator || \"@@iterator\",\n        u = a.asyncIterator || \"@@asyncIterator\",\n        l = a.toStringTag || \"@@toStringTag\";\n      function f(t, e, r) {\n        return Object.defineProperty(t, e, {\n          value: r,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }), t[e];\n      }\n      try {\n        f({}, \"\");\n      } catch (r) {\n        f = function (t, e, r) {\n          return t[e] = r;\n        };\n      }\n      function c(t, e, r, i) {\n        var n = e && e.prototype instanceof _ ? e : _,\n          s = Object.create(n.prototype),\n          a = new N(i || []);\n        return o(s, \"_invoke\", {\n          value: T(t, r, a)\n        }), s;\n      }\n      function d(t, e, r) {\n        try {\n          return {\n            type: \"normal\",\n            arg: t.call(e, r)\n          };\n        } catch (t) {\n          return {\n            type: \"throw\",\n            arg: t\n          };\n        }\n      }\n      i.wrap = c;\n      var p = \"suspendedStart\",\n        y = \"suspendedYield\",\n        v = \"executing\",\n        g = \"completed\",\n        m = {};\n      function _() {}\n      function w() {}\n      function b() {}\n      var x = {};\n      f(x, h, function () {\n        return this;\n      });\n      var k = Object.getPrototypeOf,\n        A = k && k(k(F([])));\n      A && A !== n && s.call(A, h) && (x = A);\n      var S = b.prototype = _.prototype = Object.create(x);\n      function O(t) {\n        [\"next\", \"throw\", \"return\"].forEach(function (e) {\n          f(t, e, function (t) {\n            return this._invoke(e, t);\n          });\n        });\n      }\n      function E(e, r) {\n        function i(n, o, a, h) {\n          var u = d(e[n], e, o);\n          if (\"throw\" !== u.type) {\n            var l = u.arg,\n              f = l.value;\n            return f && \"object\" == t(f) && s.call(f, \"__await\") ? r.resolve(f.__await).then(function (t) {\n              i(\"next\", t, a, h);\n            }, function (t) {\n              i(\"throw\", t, a, h);\n            }) : r.resolve(f).then(function (t) {\n              l.value = t, a(l);\n            }, function (t) {\n              return i(\"throw\", t, a, h);\n            });\n          }\n          h(u.arg);\n        }\n        var n;\n        o(this, \"_invoke\", {\n          value: function (t, e) {\n            function s() {\n              return new r(function (r, n) {\n                i(t, e, r, n);\n              });\n            }\n            return n = n ? n.then(s, s) : s();\n          }\n        });\n      }\n      function T(t, e, i) {\n        var n = p;\n        return function (s, o) {\n          if (n === v) throw Error(\"Generator is already running\");\n          if (n === g) {\n            if (\"throw\" === s) throw o;\n            return {\n              value: r,\n              done: !0\n            };\n          }\n          for (i.method = s, i.arg = o;;) {\n            var a = i.delegate;\n            if (a) {\n              var h = z(a, i);\n              if (h) {\n                if (h === m) continue;\n                return h;\n              }\n            }\n            if (\"next\" === i.method) i.sent = i._sent = i.arg;else if (\"throw\" === i.method) {\n              if (n === p) throw n = g, i.arg;\n              i.dispatchException(i.arg);\n            } else \"return\" === i.method && i.abrupt(\"return\", i.arg);\n            n = v;\n            var u = d(t, e, i);\n            if (\"normal\" === u.type) {\n              if (n = i.done ? g : y, u.arg === m) continue;\n              return {\n                value: u.arg,\n                done: i.done\n              };\n            }\n            \"throw\" === u.type && (n = g, i.method = \"throw\", i.arg = u.arg);\n          }\n        };\n      }\n      function z(t, e) {\n        var i = e.method,\n          n = t.iterator[i];\n        if (n === r) return e.delegate = null, \"throw\" === i && t.iterator.return && (e.method = \"return\", e.arg = r, z(t, e), \"throw\" === e.method) || \"return\" !== i && (e.method = \"throw\", e.arg = new TypeError(\"The iterator does not provide a '\" + i + \"' method\")), m;\n        var s = d(n, t.iterator, e.arg);\n        if (\"throw\" === s.type) return e.method = \"throw\", e.arg = s.arg, e.delegate = null, m;\n        var o = s.arg;\n        return o ? o.done ? (e[t.resultName] = o.value, e.next = t.nextLoc, \"return\" !== e.method && (e.method = \"next\", e.arg = r), e.delegate = null, m) : o : (e.method = \"throw\", e.arg = new TypeError(\"iterator result is not an object\"), e.delegate = null, m);\n      }\n      function B(t) {\n        var e = {\n          tryLoc: t[0]\n        };\n        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n      }\n      function I(t) {\n        var e = t.completion || {};\n        e.type = \"normal\", delete e.arg, t.completion = e;\n      }\n      function N(t) {\n        this.tryEntries = [{\n          tryLoc: \"root\"\n        }], t.forEach(B, this), this.reset(!0);\n      }\n      function F(e) {\n        if (e || \"\" === e) {\n          var i = e[h];\n          if (i) return i.call(e);\n          if (\"function\" == typeof e.next) return e;\n          if (!isNaN(e.length)) {\n            var n = -1,\n              o = function t() {\n                for (; ++n < e.length;) if (s.call(e, n)) return t.value = e[n], t.done = !1, t;\n                return t.value = r, t.done = !0, t;\n              };\n            return o.next = o;\n          }\n        }\n        throw new TypeError(t(e) + \" is not iterable\");\n      }\n      return w.prototype = b, o(S, \"constructor\", {\n        value: b,\n        configurable: !0\n      }), o(b, \"constructor\", {\n        value: w,\n        configurable: !0\n      }), w.displayName = f(b, l, \"GeneratorFunction\"), i.isGeneratorFunction = function (t) {\n        var e = \"function\" == typeof t && t.constructor;\n        return !!e && (e === w || \"GeneratorFunction\" === (e.displayName || e.name));\n      }, i.mark = function (t) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(t, b) : (t.__proto__ = b, f(t, l, \"GeneratorFunction\")), t.prototype = Object.create(S), t;\n      }, i.awrap = function (t) {\n        return {\n          __await: t\n        };\n      }, O(E.prototype), f(E.prototype, u, function () {\n        return this;\n      }), i.AsyncIterator = E, i.async = function (t, e, r, n, s) {\n        void 0 === s && (s = Promise);\n        var o = new E(c(t, e, r, n), s);\n        return i.isGeneratorFunction(e) ? o : o.next().then(function (t) {\n          return t.done ? t.value : o.next();\n        });\n      }, O(S), f(S, l, \"Generator\"), f(S, h, function () {\n        return this;\n      }), f(S, \"toString\", function () {\n        return \"[object Generator]\";\n      }), i.keys = function (t) {\n        var e = Object(t),\n          r = [];\n        for (var i in e) r.push(i);\n        return r.reverse(), function t() {\n          for (; r.length;) {\n            var i = r.pop();\n            if (i in e) return t.value = i, t.done = !1, t;\n          }\n          return t.done = !0, t;\n        };\n      }, i.values = F, N.prototype = {\n        constructor: N,\n        reset: function (t) {\n          if (this.prev = 0, this.next = 0, this.sent = this._sent = r, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = r, this.tryEntries.forEach(I), !t) for (var e in this) \"t\" === e.charAt(0) && s.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = r);\n        },\n        stop: function () {\n          this.done = !0;\n          var t = this.tryEntries[0].completion;\n          if (\"throw\" === t.type) throw t.arg;\n          return this.rval;\n        },\n        dispatchException: function (t) {\n          if (this.done) throw t;\n          var e = this;\n          function i(i, n) {\n            return a.type = \"throw\", a.arg = t, e.next = i, n && (e.method = \"next\", e.arg = r), !!n;\n          }\n          for (var n = this.tryEntries.length - 1; n >= 0; --n) {\n            var o = this.tryEntries[n],\n              a = o.completion;\n            if (\"root\" === o.tryLoc) return i(\"end\");\n            if (o.tryLoc <= this.prev) {\n              var h = s.call(o, \"catchLoc\"),\n                u = s.call(o, \"finallyLoc\");\n              if (h && u) {\n                if (this.prev < o.catchLoc) return i(o.catchLoc, !0);\n                if (this.prev < o.finallyLoc) return i(o.finallyLoc);\n              } else if (h) {\n                if (this.prev < o.catchLoc) return i(o.catchLoc, !0);\n              } else {\n                if (!u) throw Error(\"try statement without catch or finally\");\n                if (this.prev < o.finallyLoc) return i(o.finallyLoc);\n              }\n            }\n          }\n        },\n        abrupt: function (t, e) {\n          for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n            var i = this.tryEntries[r];\n            if (i.tryLoc <= this.prev && s.call(i, \"finallyLoc\") && this.prev < i.finallyLoc) {\n              var n = i;\n              break;\n            }\n          }\n          n && (\"break\" === t || \"continue\" === t) && n.tryLoc <= e && e <= n.finallyLoc && (n = null);\n          var o = n ? n.completion : {};\n          return o.type = t, o.arg = e, n ? (this.method = \"next\", this.next = n.finallyLoc, m) : this.complete(o);\n        },\n        complete: function (t, e) {\n          if (\"throw\" === t.type) throw t.arg;\n          return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), m;\n        },\n        finish: function (t) {\n          for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n            var r = this.tryEntries[e];\n            if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), I(r), m;\n          }\n        },\n        catch: function (t) {\n          for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n            var r = this.tryEntries[e];\n            if (r.tryLoc === t) {\n              var i = r.completion;\n              if (\"throw\" === i.type) {\n                var n = i.arg;\n                I(r);\n              }\n              return n;\n            }\n          }\n          throw Error(\"illegal catch attempt\");\n        },\n        delegateYield: function (t, e, i) {\n          return this.delegate = {\n            iterator: F(t),\n            resultName: e,\n            nextLoc: i\n          }, \"next\" === this.method && (this.arg = r), m;\n        }\n      }, i;\n    }\n    function n(t, e, r, i, n, s, o) {\n      try {\n        var a = t[s](o),\n          h = a.value;\n      } catch (t) {\n        return void r(t);\n      }\n      a.done ? e(h) : Promise.resolve(h).then(i, n);\n    }\n    function s(t) {\n      return function () {\n        var e = this,\n          r = arguments;\n        return new Promise(function (i, s) {\n          var o = t.apply(e, r);\n          function a(t) {\n            n(o, i, s, a, h, \"next\", t);\n          }\n          function h(t) {\n            n(o, i, s, a, h, \"throw\", t);\n          }\n          a(void 0);\n        });\n      };\n    }\n    function o(t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n    function a(e) {\n      var r = function (e, r) {\n        if (\"object\" != t(e) || !e) return e;\n        var i = e[Symbol.toPrimitive];\n        if (void 0 !== i) {\n          var n = i.call(e, \"string\");\n          if (\"object\" != t(n)) return n;\n          throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return String(e);\n      }(e);\n      return \"symbol\" == t(r) ? r : r + \"\";\n    }\n    function h(t, e) {\n      for (var r = 0; r < e.length; r++) {\n        var i = e[r];\n        i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(t, a(i.key), i);\n      }\n    }\n    function u(t, e, r) {\n      return e && h(t.prototype, e), r && h(t, r), Object.defineProperty(t, \"prototype\", {\n        writable: !1\n      }), t;\n    }\n    function l() {\n      if (\"undefined\" != typeof my) return my;\n      if (\"undefined\" != typeof tt) return tt;\n      if (\"undefined\" != typeof wx) return wx;\n      throw new Error(\"暂不支持当前环境\");\n    }\n    function f(t, e, r) {\n      return (e = a(e)) in t ? Object.defineProperty(t, e, {\n        value: r,\n        enumerable: !0,\n        configurable: !0,\n        writable: !0\n      }) : t[e] = r, t;\n    }\n    var c;\n    r.r(i), r.d(i, {\n      default: () => gi\n    });\n    var d = function () {\n      function t() {\n        o(this, t), f(this, \"_dataLength\", void 0), f(this, \"_bufferLength\", void 0), f(this, \"_state\", new Int32Array(4)), f(this, \"_buffer\", new ArrayBuffer(68)), f(this, \"_buffer8\", void 0), f(this, \"_buffer32\", void 0), this._buffer8 = new Uint8Array(this._buffer, 0, 68), this._buffer32 = new Uint32Array(this._buffer, 0, 17), this.start();\n      }\n      return u(t, [{\n        key: \"start\",\n        value: function () {\n          return this._dataLength = 0, this._bufferLength = 0, this._state.set(t.stateIdentity), this;\n        }\n      }, {\n        key: \"appendStr\",\n        value: function (e) {\n          var r,\n            i,\n            n = this._buffer8,\n            s = this._buffer32,\n            o = this._bufferLength;\n          for (i = 0; i < e.length; i += 1) {\n            if ((r = e.charCodeAt(i)) < 128) n[o++] = r;else if (r < 2048) n[o++] = 192 + (r >>> 6), n[o++] = 63 & r | 128;else if (r < 55296 || r > 56319) n[o++] = 224 + (r >>> 12), n[o++] = r >>> 6 & 63 | 128, n[o++] = 63 & r | 128;else {\n              if ((r = 1024 * (r - 55296) + (e.charCodeAt(++i) - 56320) + 65536) > 1114111) throw new Error(\"Unicode standard supports code points up to U+10FFFF\");\n              n[o++] = 240 + (r >>> 18), n[o++] = r >>> 12 & 63 | 128, n[o++] = r >>> 6 & 63 | 128, n[o++] = 63 & r | 128;\n            }\n            o >= 64 && (this._dataLength += 64, t._md5cycle(this._state, s), o -= 64, s[0] = s[16]);\n          }\n          return this._bufferLength = o, this;\n        }\n      }, {\n        key: \"appendAsciiStr\",\n        value: function (e) {\n          for (var r, i = this._buffer8, n = this._buffer32, s = this._bufferLength, o = 0;;) {\n            for (r = Math.min(e.length - o, 64 - s); r--;) i[s++] = e.charCodeAt(o++);\n            if (s < 64) break;\n            this._dataLength += 64, t._md5cycle(this._state, n), s = 0;\n          }\n          return this._bufferLength = s, this;\n        }\n      }, {\n        key: \"appendByteArray\",\n        value: function (e) {\n          for (var r, i = this._buffer8, n = this._buffer32, s = this._bufferLength, o = 0;;) {\n            for (r = Math.min(e.length - o, 64 - s); r--;) i[s++] = e[o++];\n            if (s < 64) break;\n            this._dataLength += 64, t._md5cycle(this._state, n), s = 0;\n          }\n          return this._bufferLength = s, this;\n        }\n      }, {\n        key: \"getState\",\n        value: function () {\n          var t = this,\n            e = t._state;\n          return {\n            buffer: String.fromCharCode.apply(null, t._buffer8),\n            buflen: t._bufferLength,\n            length: t._dataLength,\n            state: [e[0], e[1], e[2], e[3]]\n          };\n        }\n      }, {\n        key: \"setState\",\n        value: function (t) {\n          var e,\n            r = t.buffer,\n            i = t.state,\n            n = this._state;\n          for (this._dataLength = t.length, this._bufferLength = t.buflen, n[0] = i[0], n[1] = i[1], n[2] = i[2], n[3] = i[3], e = 0; e < r.length; e += 1) this._buffer8[e] = r.charCodeAt(e);\n        }\n      }, {\n        key: \"end\",\n        value: function () {\n          var e,\n            r = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],\n            i = this._bufferLength,\n            n = this._buffer8,\n            s = this._buffer32,\n            o = 1 + (i >> 2);\n          if (this._dataLength += i, n[i] = 128, n[i + 1] = n[i + 2] = n[i + 3] = 0, s.set(t.buffer32Identity.subarray(o), o), i > 55 && (t._md5cycle(this._state, s), s.set(t.buffer32Identity)), (e = 8 * this._dataLength) <= 4294967295) s[14] = e;else {\n            var a = e.toString(16).match(/(.*?)(.{0,8})$/);\n            if (null === a) return;\n            var h = parseInt(a[2], 16),\n              u = parseInt(a[1], 16) || 0;\n            s[14] = h, s[15] = u;\n          }\n          return t._md5cycle(this._state, s), r ? this._state : t._hex(this._state);\n        }\n      }], [{\n        key: \"hashStr\",\n        value: function (t) {\n          var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n          return this.onePassHasher.start().appendStr(t).end(e);\n        }\n      }, {\n        key: \"hashAsciiStr\",\n        value: function (t) {\n          var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n          return this.onePassHasher.start().appendAsciiStr(t).end(e);\n        }\n      }, {\n        key: \"_hex\",\n        value: function (e) {\n          var r,\n            i,\n            n,\n            s,\n            o = t.hexChars,\n            a = t.hexOut;\n          for (s = 0; s < 4; s += 1) for (i = 8 * s, r = e[s], n = 0; n < 8; n += 2) a[i + 1 + n] = o.charAt(15 & r), r >>>= 4, a[i + 0 + n] = o.charAt(15 & r), r >>>= 4;\n          return a.join(\"\");\n        }\n      }, {\n        key: \"_md5cycle\",\n        value: function (t, e) {\n          var r = t[0],\n            i = t[1],\n            n = t[2],\n            s = t[3];\n          i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & n | ~i & s) + e[0] - 680876936 | 0) << 7 | r >>> 25) + i | 0) & i | ~r & n) + e[1] - 389564586 | 0) << 12 | s >>> 20) + r | 0) & r | ~s & i) + e[2] + 606105819 | 0) << 17 | n >>> 15) + s | 0) & s | ~n & r) + e[3] - 1044525330 | 0) << 22 | i >>> 10) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & n | ~i & s) + e[4] - 176418897 | 0) << 7 | r >>> 25) + i | 0) & i | ~r & n) + e[5] + 1200080426 | 0) << 12 | s >>> 20) + r | 0) & r | ~s & i) + e[6] - 1473231341 | 0) << 17 | n >>> 15) + s | 0) & s | ~n & r) + e[7] - 45705983 | 0) << 22 | i >>> 10) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & n | ~i & s) + e[8] + 1770035416 | 0) << 7 | r >>> 25) + i | 0) & i | ~r & n) + e[9] - 1958414417 | 0) << 12 | s >>> 20) + r | 0) & r | ~s & i) + e[10] - 42063 | 0) << 17 | n >>> 15) + s | 0) & s | ~n & r) + e[11] - 1990404162 | 0) << 22 | i >>> 10) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & n | ~i & s) + e[12] + 1804603682 | 0) << 7 | r >>> 25) + i | 0) & i | ~r & n) + e[13] - 40341101 | 0) << 12 | s >>> 20) + r | 0) & r | ~s & i) + e[14] - 1502002290 | 0) << 17 | n >>> 15) + s | 0) & s | ~n & r) + e[15] + 1236535329 | 0) << 22 | i >>> 10) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & s | n & ~s) + e[1] - 165796510 | 0) << 5 | r >>> 27) + i | 0) & n | i & ~n) + e[6] - 1069501632 | 0) << 9 | s >>> 23) + r | 0) & i | r & ~i) + e[11] + 643717713 | 0) << 14 | n >>> 18) + s | 0) & r | s & ~r) + e[0] - 373897302 | 0) << 20 | i >>> 12) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & s | n & ~s) + e[5] - 701558691 | 0) << 5 | r >>> 27) + i | 0) & n | i & ~n) + e[10] + 38016083 | 0) << 9 | s >>> 23) + r | 0) & i | r & ~i) + e[15] - 660478335 | 0) << 14 | n >>> 18) + s | 0) & r | s & ~r) + e[4] - 405537848 | 0) << 20 | i >>> 12) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & s | n & ~s) + e[9] + 568446438 | 0) << 5 | r >>> 27) + i | 0) & n | i & ~n) + e[14] - 1019803690 | 0) << 9 | s >>> 23) + r | 0) & i | r & ~i) + e[3] - 187363961 | 0) << 14 | n >>> 18) + s | 0) & r | s & ~r) + e[8] + 1163531501 | 0) << 20 | i >>> 12) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i & s | n & ~s) + e[13] - 1444681467 | 0) << 5 | r >>> 27) + i | 0) & n | i & ~n) + e[2] - 51403784 | 0) << 9 | s >>> 23) + r | 0) & i | r & ~i) + e[7] + 1735328473 | 0) << 14 | n >>> 18) + s | 0) & r | s & ~r) + e[12] - 1926607734 | 0) << 20 | i >>> 12) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i ^ n ^ s) + e[5] - 378558 | 0) << 4 | r >>> 28) + i | 0) ^ i ^ n) + e[8] - 2022574463 | 0) << 11 | s >>> 21) + r | 0) ^ r ^ i) + e[11] + 1839030562 | 0) << 16 | n >>> 16) + s | 0) ^ s ^ r) + e[14] - 35309556 | 0) << 23 | i >>> 9) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i ^ n ^ s) + e[1] - 1530992060 | 0) << 4 | r >>> 28) + i | 0) ^ i ^ n) + e[4] + 1272893353 | 0) << 11 | s >>> 21) + r | 0) ^ r ^ i) + e[7] - 155497632 | 0) << 16 | n >>> 16) + s | 0) ^ s ^ r) + e[10] - 1094730640 | 0) << 23 | i >>> 9) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i ^ n ^ s) + e[13] + 681279174 | 0) << 4 | r >>> 28) + i | 0) ^ i ^ n) + e[0] - 358537222 | 0) << 11 | s >>> 21) + r | 0) ^ r ^ i) + e[3] - 722521979 | 0) << 16 | n >>> 16) + s | 0) ^ s ^ r) + e[6] + 76029189 | 0) << 23 | i >>> 9) + n | 0, i = ((i += ((n = ((n += ((s = ((s += ((r = ((r += (i ^ n ^ s) + e[9] - 640364487 | 0) << 4 | r >>> 28) + i | 0) ^ i ^ n) + e[12] - 421815835 | 0) << 11 | s >>> 21) + r | 0) ^ r ^ i) + e[15] + 530742520 | 0) << 16 | n >>> 16) + s | 0) ^ s ^ r) + e[2] - 995338651 | 0) << 23 | i >>> 9) + n | 0, i = ((i += ((s = ((s += (i ^ ((r = ((r += (n ^ (i | ~s)) + e[0] - 198630844 | 0) << 6 | r >>> 26) + i | 0) | ~n)) + e[7] + 1126891415 | 0) << 10 | s >>> 22) + r | 0) ^ ((n = ((n += (r ^ (s | ~i)) + e[14] - 1416354905 | 0) << 15 | n >>> 17) + s | 0) | ~r)) + e[5] - 57434055 | 0) << 21 | i >>> 11) + n | 0, i = ((i += ((s = ((s += (i ^ ((r = ((r += (n ^ (i | ~s)) + e[12] + 1700485571 | 0) << 6 | r >>> 26) + i | 0) | ~n)) + e[3] - 1894986606 | 0) << 10 | s >>> 22) + r | 0) ^ ((n = ((n += (r ^ (s | ~i)) + e[10] - 1051523 | 0) << 15 | n >>> 17) + s | 0) | ~r)) + e[1] - 2054922799 | 0) << 21 | i >>> 11) + n | 0, i = ((i += ((s = ((s += (i ^ ((r = ((r += (n ^ (i | ~s)) + e[8] + 1873313359 | 0) << 6 | r >>> 26) + i | 0) | ~n)) + e[15] - 30611744 | 0) << 10 | s >>> 22) + r | 0) ^ ((n = ((n += (r ^ (s | ~i)) + e[6] - 1560198380 | 0) << 15 | n >>> 17) + s | 0) | ~r)) + e[13] + 1309151649 | 0) << 21 | i >>> 11) + n | 0, i = ((i += ((s = ((s += (i ^ ((r = ((r += (n ^ (i | ~s)) + e[4] - 145523070 | 0) << 6 | r >>> 26) + i | 0) | ~n)) + e[11] - 1120210379 | 0) << 10 | s >>> 22) + r | 0) ^ ((n = ((n += (r ^ (s | ~i)) + e[2] + 718787259 | 0) << 15 | n >>> 17) + s | 0) | ~r)) + e[9] - 343485551 | 0) << 21 | i >>> 11) + n | 0, t[0] = r + t[0] | 0, t[1] = i + t[1] | 0, t[2] = n + t[2] | 0, t[3] = s + t[3] | 0;\n        }\n      }]);\n    }();\n    c = d, f(d, \"stateIdentity\", new Int32Array([1732584193, -271733879, -1732584194, 271733878])), f(d, \"buffer32Identity\", new Int32Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), f(d, \"hexChars\", \"0123456789abcdef\"), f(d, \"hexOut\", []), f(d, \"onePassHasher\", new c()), \"5d41402abc4b2a76b9719d911017c592\" !== d.hashStr(\"hello\") && console.error(\"Md5 self test failed.\");\n    var p = \"\";\n    function y(t) {\n      for (var e, r = arguments.length, i = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++) i[n - 1] = arguments[n];\n      (e = console).log.apply(e, [\"[svga]\".concat(t)].concat(i));\n    }\n    function v(t) {\n      return d.hashStr(t) || t;\n    }\n    function g(t) {\n      switch (p) {\n        case \"weapp\":\n          return has.arrayBufferToBase64(t);\n        case \"alipay\":\n          return my.arrayBufferToBase64(t);\n        case \"tt\":\n          return has.arrayBufferToBase64(t);\n        case \"h5\":\n          for (var e = \"\", r = t.byteLength, i = 0; i < r; i++) e += String.fromCharCode(t[i]);\n          return window.btoa(e);\n        default:\n          throw new Error(\"暂不支持当前环境\");\n      }\n    }\n    function m(t) {\n      p = t;\n    }\n    function _() {\n      return p;\n    }\n    function w() {\n      var t = l();\n      return \"\".concat(t.env.USER_DATA_PATH, \"/svga_cache\");\n    }\n    var b = u(function t(e, r, i) {\n        o(this, t), this.d = e, this.transform = r, this.styles = i, f(this, \"_d\", void 0), f(this, \"_transform\", void 0), f(this, \"_styles\", void 0), f(this, \"_shape\", void 0), this._d = e, this._transform = r, this._styles = i;\n      }),\n      x = u(function t(e) {\n        o(this, t), f(this, \"alpha\", 0), f(this, \"transform\", {\n          a: 1,\n          b: 0,\n          c: 0,\n          d: 1,\n          tx: 0,\n          ty: 0\n        }), f(this, \"layout\", {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        }), f(this, \"nx\", 0), f(this, \"ny\", 0), f(this, \"maskPath\", void 0), f(this, \"shapes\", []), this.alpha = parseFloat(e.alpha) || 0, e.layout && (this.layout.x = parseFloat(e.layout.x) || 0, this.layout.y = parseFloat(e.layout.y) || 0, this.layout.width = parseFloat(e.layout.width) || 0, this.layout.height = parseFloat(e.layout.height) || 0), e.transform && (this.transform.a = parseFloat(e.transform.a) || 1, this.transform.b = parseFloat(e.transform.b) || 0, this.transform.c = parseFloat(e.transform.c) || 0, this.transform.d = parseFloat(e.transform.d) || 1, this.transform.tx = parseFloat(e.transform.tx) || 0, this.transform.ty = parseFloat(e.transform.ty) || 0), e.clipPath && e.clipPath.length > 0 && (this.maskPath = new b(e.clipPath, void 0, {\n          fill: \"#000000\"\n        })), e.shapes && (e.shapes instanceof Array && e.shapes.forEach(function (t) {\n          switch (t.pathArgs = t.args, t.type) {\n            case 0:\n              t.type = \"shape\", t.pathArgs = t.shape;\n              break;\n            case 1:\n              t.type = \"rect\", t.pathArgs = t.rect;\n              break;\n            case 2:\n              t.type = \"ellipse\", t.pathArgs = t.ellipse;\n              break;\n            case 3:\n              t.type = \"keep\";\n          }\n          if (t.styles) {\n            t.styles.fill && (\"number\" == typeof t.styles.fill.r && (t.styles.fill[0] = t.styles.fill.r), \"number\" == typeof t.styles.fill.g && (t.styles.fill[1] = t.styles.fill.g), \"number\" == typeof t.styles.fill.b && (t.styles.fill[2] = t.styles.fill.b), \"number\" == typeof t.styles.fill.a && (t.styles.fill[3] = t.styles.fill.a)), t.styles.stroke && (\"number\" == typeof t.styles.stroke.r && (t.styles.stroke[0] = t.styles.stroke.r), \"number\" == typeof t.styles.stroke.g && (t.styles.stroke[1] = t.styles.stroke.g), \"number\" == typeof t.styles.stroke.b && (t.styles.stroke[2] = t.styles.stroke.b), \"number\" == typeof t.styles.stroke.a && (t.styles.stroke[3] = t.styles.stroke.a));\n            var e = t.styles.lineDash || [];\n            switch (t.styles.lineDashI > 0 && e.push(t.styles.lineDashI), t.styles.lineDashII > 0 && (e.length < 1 && e.push(0), e.push(t.styles.lineDashII), e.push(0)), t.styles.lineDashIII > 0 && (e.length < 2 && (e.push(0), e.push(0)), e[2] = t.styles.lineDashIII), t.styles.lineDash = e, t.styles.lineJoin) {\n              case 0:\n                t.styles.lineJoin = \"miter\";\n                break;\n              case 1:\n                t.styles.lineJoin = \"round\";\n                break;\n              case 2:\n                t.styles.lineJoin = \"bevel\";\n            }\n            switch (t.styles.lineCap) {\n              case 0:\n                t.styles.lineCap = \"butt\";\n                break;\n              case 1:\n                t.styles.lineCap = \"round\";\n                break;\n              case 2:\n                t.styles.lineCap = \"square\";\n            }\n          }\n        }), e.shapes[0] && \"keep\" === e.shapes[0].type ? this.shapes = t.lastShapes : (this.shapes = e.shapes, t.lastShapes = e.shapes));\n        var r = this.transform.a * this.layout.x + this.transform.c * this.layout.y + this.transform.tx,\n          i = this.transform.a * (this.layout.x + this.layout.width) + this.transform.c * this.layout.y + this.transform.tx,\n          n = this.transform.a * this.layout.x + this.transform.c * (this.layout.y + this.layout.height) + this.transform.tx,\n          s = this.transform.a * (this.layout.x + this.layout.width) + this.transform.c * (this.layout.y + this.layout.height) + this.transform.tx,\n          a = this.transform.b * this.layout.x + this.transform.d * this.layout.y + this.transform.ty,\n          h = this.transform.b * (this.layout.x + this.layout.width) + this.transform.d * this.layout.y + this.transform.ty,\n          u = this.transform.b * this.layout.x + this.transform.d * (this.layout.y + this.layout.height) + this.transform.ty,\n          l = this.transform.b * (this.layout.x + this.layout.width) + this.transform.d * (this.layout.y + this.layout.height) + this.transform.ty;\n        this.nx = Math.min(Math.min(n, s), Math.min(r, i)), this.ny = Math.min(Math.min(u, l), Math.min(a, h));\n      });\n    f(x, \"lastShapes\", void 0);\n    var k = u(function t(e) {\n        var r, i;\n        o(this, t), f(this, \"matteKey\", void 0), f(this, \"imageKey\", void 0), f(this, \"frames\", void 0), this.matteKey = e.matteKey, this.imageKey = e.imageKey, this.frames = null !== (r = null === (i = e.frames) || void 0 === i ? void 0 : i.map(function (t) {\n          return new x(t);\n        })) && void 0 !== r ? r : [];\n      }),\n      A = u(function t(e, r) {\n        var i, n;\n        o(this, t), this.spec = e, f(this, \"version\", \"2.0.0\"), f(this, \"videoSize\", void 0), f(this, \"src\", void 0), f(this, \"FPS\", void 0), f(this, \"frames\", void 0), f(this, \"sprites\", void 0), f(this, \"animateFrames\", []), f(this, \"decodedImages\", {}), this.version = e.ver, this.videoSize = {\n          width: e.params.viewBoxWidth || 0,\n          height: e.params.viewBoxHeight || 0\n        }, this.FPS = e.params.fps || 20, this.frames = e.params.frames || 0, this.sprites = null !== (i = null === (n = e.sprites) || void 0 === n ? void 0 : n.map(function (t) {\n          return new k(t);\n        })) && void 0 !== i ? i : [], this.src = r;\n      });\n    function S(t) {\n      for (var e = t.length; --e >= 0;) t[e] = 0;\n    }\n    var O = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]),\n      E = new Uint8Array([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]),\n      T = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]),\n      z = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),\n      B = new Array(576);\n    S(B);\n    var I = new Array(60);\n    S(I);\n    var N = new Array(512);\n    S(N);\n    var F = new Array(256);\n    S(F);\n    var j = new Array(29);\n    S(j);\n    var L,\n      C,\n      R,\n      D = new Array(30);\n    function M(t, e, r, i, n) {\n      this.static_tree = t, this.extra_bits = e, this.extra_base = r, this.elems = i, this.max_length = n, this.has_stree = t && t.length;\n    }\n    function P(t, e) {\n      this.dyn_tree = t, this.max_code = 0, this.stat_desc = e;\n    }\n    S(D);\n    var U = function (t) {\n        return t < 256 ? N[t] : N[256 + (t >>> 7)];\n      },\n      Z = function (t, e) {\n        t.pending_buf[t.pending++] = 255 & e, t.pending_buf[t.pending++] = e >>> 8 & 255;\n      },\n      q = function (t, e, r) {\n        t.bi_valid > 16 - r ? (t.bi_buf |= e << t.bi_valid & 65535, Z(t, t.bi_buf), t.bi_buf = e >> 16 - t.bi_valid, t.bi_valid += r - 16) : (t.bi_buf |= e << t.bi_valid & 65535, t.bi_valid += r);\n      },\n      J = function (t, e, r) {\n        q(t, r[2 * e], r[2 * e + 1]);\n      },\n      V = function (t, e) {\n        var r = 0;\n        do {\n          r |= 1 & t, t >>>= 1, r <<= 1;\n        } while (--e > 0);\n        return r >>> 1;\n      },\n      H = function (t, e, r) {\n        var i,\n          n,\n          s = new Array(16),\n          o = 0;\n        for (i = 1; i <= 15; i++) o = o + r[i - 1] << 1, s[i] = o;\n        for (n = 0; n <= e; n++) {\n          var a = t[2 * n + 1];\n          0 !== a && (t[2 * n] = V(s[a]++, a));\n        }\n      },\n      $ = function (t) {\n        var e;\n        for (e = 0; e < 286; e++) t.dyn_ltree[2 * e] = 0;\n        for (e = 0; e < 30; e++) t.dyn_dtree[2 * e] = 0;\n        for (e = 0; e < 19; e++) t.bl_tree[2 * e] = 0;\n        t.dyn_ltree[512] = 1, t.opt_len = t.static_len = 0, t.sym_next = t.matches = 0;\n      },\n      K = function (t) {\n        t.bi_valid > 8 ? Z(t, t.bi_buf) : t.bi_valid > 0 && (t.pending_buf[t.pending++] = t.bi_buf), t.bi_buf = 0, t.bi_valid = 0;\n      },\n      X = function (t, e, r, i) {\n        var n = 2 * e,\n          s = 2 * r;\n        return t[n] < t[s] || t[n] === t[s] && i[e] <= i[r];\n      },\n      Y = function (t, e, r) {\n        for (var i = t.heap[r], n = r << 1; n <= t.heap_len && (n < t.heap_len && X(e, t.heap[n + 1], t.heap[n], t.depth) && n++, !X(e, i, t.heap[n], t.depth));) t.heap[r] = t.heap[n], r = n, n <<= 1;\n        t.heap[r] = i;\n      },\n      G = function (t, e, r) {\n        var i,\n          n,\n          s,\n          o,\n          a = 0;\n        if (0 !== t.sym_next) do {\n          i = 255 & t.pending_buf[t.sym_buf + a++], i += (255 & t.pending_buf[t.sym_buf + a++]) << 8, n = t.pending_buf[t.sym_buf + a++], 0 === i ? J(t, n, e) : (s = F[n], J(t, s + 256 + 1, e), 0 !== (o = O[s]) && (n -= j[s], q(t, n, o)), i--, s = U(i), J(t, s, r), 0 !== (o = E[s]) && (i -= D[s], q(t, i, o)));\n        } while (a < t.sym_next);\n        J(t, 256, e);\n      },\n      W = function (t, e) {\n        var r,\n          i,\n          n,\n          s = e.dyn_tree,\n          o = e.stat_desc.static_tree,\n          a = e.stat_desc.has_stree,\n          h = e.stat_desc.elems,\n          u = -1;\n        for (t.heap_len = 0, t.heap_max = 573, r = 0; r < h; r++) 0 !== s[2 * r] ? (t.heap[++t.heap_len] = u = r, t.depth[r] = 0) : s[2 * r + 1] = 0;\n        for (; t.heap_len < 2;) s[2 * (n = t.heap[++t.heap_len] = u < 2 ? ++u : 0)] = 1, t.depth[n] = 0, t.opt_len--, a && (t.static_len -= o[2 * n + 1]);\n        for (e.max_code = u, r = t.heap_len >> 1; r >= 1; r--) Y(t, s, r);\n        n = h;\n        do {\n          r = t.heap[1], t.heap[1] = t.heap[t.heap_len--], Y(t, s, 1), i = t.heap[1], t.heap[--t.heap_max] = r, t.heap[--t.heap_max] = i, s[2 * n] = s[2 * r] + s[2 * i], t.depth[n] = (t.depth[r] >= t.depth[i] ? t.depth[r] : t.depth[i]) + 1, s[2 * r + 1] = s[2 * i + 1] = n, t.heap[1] = n++, Y(t, s, 1);\n        } while (t.heap_len >= 2);\n        t.heap[--t.heap_max] = t.heap[1], function (t, e) {\n          var r,\n            i,\n            n,\n            s,\n            o,\n            a,\n            h = e.dyn_tree,\n            u = e.max_code,\n            l = e.stat_desc.static_tree,\n            f = e.stat_desc.has_stree,\n            c = e.stat_desc.extra_bits,\n            d = e.stat_desc.extra_base,\n            p = e.stat_desc.max_length,\n            y = 0;\n          for (s = 0; s <= 15; s++) t.bl_count[s] = 0;\n          for (h[2 * t.heap[t.heap_max] + 1] = 0, r = t.heap_max + 1; r < 573; r++) (s = h[2 * h[2 * (i = t.heap[r]) + 1] + 1] + 1) > p && (s = p, y++), h[2 * i + 1] = s, i > u || (t.bl_count[s]++, o = 0, i >= d && (o = c[i - d]), a = h[2 * i], t.opt_len += a * (s + o), f && (t.static_len += a * (l[2 * i + 1] + o)));\n          if (0 !== y) {\n            do {\n              for (s = p - 1; 0 === t.bl_count[s];) s--;\n              t.bl_count[s]--, t.bl_count[s + 1] += 2, t.bl_count[p]--, y -= 2;\n            } while (y > 0);\n            for (s = p; 0 !== s; s--) for (i = t.bl_count[s]; 0 !== i;) (n = t.heap[--r]) > u || (h[2 * n + 1] !== s && (t.opt_len += (s - h[2 * n + 1]) * h[2 * n], h[2 * n + 1] = s), i--);\n          }\n        }(t, e), H(s, u, t.bl_count);\n      },\n      Q = function (t, e, r) {\n        var i,\n          n,\n          s = -1,\n          o = e[1],\n          a = 0,\n          h = 7,\n          u = 4;\n        for (0 === o && (h = 138, u = 3), e[2 * (r + 1) + 1] = 65535, i = 0; i <= r; i++) n = o, o = e[2 * (i + 1) + 1], ++a < h && n === o || (a < u ? t.bl_tree[2 * n] += a : 0 !== n ? (n !== s && t.bl_tree[2 * n]++, t.bl_tree[32]++) : a <= 10 ? t.bl_tree[34]++ : t.bl_tree[36]++, a = 0, s = n, 0 === o ? (h = 138, u = 3) : n === o ? (h = 6, u = 3) : (h = 7, u = 4));\n      },\n      et = function (t, e, r) {\n        var i,\n          n,\n          s = -1,\n          o = e[1],\n          a = 0,\n          h = 7,\n          u = 4;\n        for (0 === o && (h = 138, u = 3), i = 0; i <= r; i++) if (n = o, o = e[2 * (i + 1) + 1], !(++a < h && n === o)) {\n          if (a < u) do {\n            J(t, n, t.bl_tree);\n          } while (0 != --a);else 0 !== n ? (n !== s && (J(t, n, t.bl_tree), a--), J(t, 16, t.bl_tree), q(t, a - 3, 2)) : a <= 10 ? (J(t, 17, t.bl_tree), q(t, a - 3, 3)) : (J(t, 18, t.bl_tree), q(t, a - 11, 7));\n          a = 0, s = n, 0 === o ? (h = 138, u = 3) : n === o ? (h = 6, u = 3) : (h = 7, u = 4);\n        }\n      },\n      rt = !1,\n      it = function (t, e, r, i) {\n        q(t, 0 + (i ? 1 : 0), 3), K(t), Z(t, r), Z(t, ~r), r && t.pending_buf.set(t.window.subarray(e, e + r), t.pending), t.pending += r;\n      },\n      nt = function (t) {\n        rt || (function () {\n          var t,\n            e,\n            r,\n            i,\n            n,\n            s = new Array(16);\n          for (r = 0, i = 0; i < 28; i++) for (j[i] = r, t = 0; t < 1 << O[i]; t++) F[r++] = i;\n          for (F[r - 1] = i, n = 0, i = 0; i < 16; i++) for (D[i] = n, t = 0; t < 1 << E[i]; t++) N[n++] = i;\n          for (n >>= 7; i < 30; i++) for (D[i] = n << 7, t = 0; t < 1 << E[i] - 7; t++) N[256 + n++] = i;\n          for (e = 0; e <= 15; e++) s[e] = 0;\n          for (t = 0; t <= 143;) B[2 * t + 1] = 8, t++, s[8]++;\n          for (; t <= 255;) B[2 * t + 1] = 9, t++, s[9]++;\n          for (; t <= 279;) B[2 * t + 1] = 7, t++, s[7]++;\n          for (; t <= 287;) B[2 * t + 1] = 8, t++, s[8]++;\n          for (H(B, 287, s), t = 0; t < 30; t++) I[2 * t + 1] = 5, I[2 * t] = V(t, 5);\n          L = new M(B, O, 257, 286, 15), C = new M(I, E, 0, 30, 15), R = new M(new Array(0), T, 0, 19, 7);\n        }(), rt = !0), t.l_desc = new P(t.dyn_ltree, L), t.d_desc = new P(t.dyn_dtree, C), t.bl_desc = new P(t.bl_tree, R), t.bi_buf = 0, t.bi_valid = 0, $(t);\n      },\n      st = it,\n      ot = function (t, e, r, i) {\n        var n,\n          s,\n          o = 0;\n        t.level > 0 ? (2 === t.strm.data_type && (t.strm.data_type = function (t) {\n          var e,\n            r = 4093624447;\n          for (e = 0; e <= 31; e++, r >>>= 1) if (1 & r && 0 !== t.dyn_ltree[2 * e]) return 0;\n          if (0 !== t.dyn_ltree[18] || 0 !== t.dyn_ltree[20] || 0 !== t.dyn_ltree[26]) return 1;\n          for (e = 32; e < 256; e++) if (0 !== t.dyn_ltree[2 * e]) return 1;\n          return 0;\n        }(t)), W(t, t.l_desc), W(t, t.d_desc), o = function (t) {\n          var e;\n          for (Q(t, t.dyn_ltree, t.l_desc.max_code), Q(t, t.dyn_dtree, t.d_desc.max_code), W(t, t.bl_desc), e = 18; e >= 3 && 0 === t.bl_tree[2 * z[e] + 1]; e--);\n          return t.opt_len += 3 * (e + 1) + 5 + 5 + 4, e;\n        }(t), n = t.opt_len + 3 + 7 >>> 3, (s = t.static_len + 3 + 7 >>> 3) <= n && (n = s)) : n = s = r + 5, r + 4 <= n && -1 !== e ? it(t, e, r, i) : 4 === t.strategy || s === n ? (q(t, 2 + (i ? 1 : 0), 3), G(t, B, I)) : (q(t, 4 + (i ? 1 : 0), 3), function (t, e, r, i) {\n          var n;\n          for (q(t, e - 257, 5), q(t, r - 1, 5), q(t, i - 4, 4), n = 0; n < i; n++) q(t, t.bl_tree[2 * z[n] + 1], 3);\n          et(t, t.dyn_ltree, e - 1), et(t, t.dyn_dtree, r - 1);\n        }(t, t.l_desc.max_code + 1, t.d_desc.max_code + 1, o + 1), G(t, t.dyn_ltree, t.dyn_dtree)), $(t), i && K(t);\n      },\n      at = function (t, e, r) {\n        return t.pending_buf[t.sym_buf + t.sym_next++] = e, t.pending_buf[t.sym_buf + t.sym_next++] = e >> 8, t.pending_buf[t.sym_buf + t.sym_next++] = r, 0 === e ? t.dyn_ltree[2 * r]++ : (t.matches++, e--, t.dyn_ltree[2 * (F[r] + 256 + 1)]++, t.dyn_dtree[2 * U(e)]++), t.sym_next === t.sym_end;\n      },\n      ht = function (t) {\n        q(t, 2, 3), J(t, 256, B), function (t) {\n          16 === t.bi_valid ? (Z(t, t.bi_buf), t.bi_buf = 0, t.bi_valid = 0) : t.bi_valid >= 8 && (t.pending_buf[t.pending++] = 255 & t.bi_buf, t.bi_buf >>= 8, t.bi_valid -= 8);\n        }(t);\n      },\n      ut = function (t, e, r, i) {\n        for (var n = 65535 & t, s = t >>> 16 & 65535, o = 0; 0 !== r;) {\n          r -= o = r > 2e3 ? 2e3 : r;\n          do {\n            s = s + (n = n + e[i++] | 0) | 0;\n          } while (--o);\n          n %= 65521, s %= 65521;\n        }\n        return n | s << 16;\n      },\n      lt = new Uint32Array(function () {\n        for (var t, e = [], r = 0; r < 256; r++) {\n          t = r;\n          for (var i = 0; i < 8; i++) t = 1 & t ? 3988292384 ^ t >>> 1 : t >>> 1;\n          e[r] = t;\n        }\n        return e;\n      }()),\n      ft = function (t, e, r, i) {\n        var n = lt,\n          s = i + r;\n        t ^= -1;\n        for (var o = i; o < s; o++) t = t >>> 8 ^ n[255 & (t ^ e[o])];\n        return ~t;\n      },\n      ct = {\n        2: \"need dictionary\",\n        1: \"stream end\",\n        0: \"\",\n        \"-1\": \"file error\",\n        \"-2\": \"stream error\",\n        \"-3\": \"data error\",\n        \"-4\": \"insufficient memory\",\n        \"-5\": \"buffer error\",\n        \"-6\": \"incompatible version\"\n      },\n      dt = {\n        Z_NO_FLUSH: 0,\n        Z_PARTIAL_FLUSH: 1,\n        Z_SYNC_FLUSH: 2,\n        Z_FULL_FLUSH: 3,\n        Z_FINISH: 4,\n        Z_BLOCK: 5,\n        Z_TREES: 6,\n        Z_OK: 0,\n        Z_STREAM_END: 1,\n        Z_NEED_DICT: 2,\n        Z_ERRNO: -1,\n        Z_STREAM_ERROR: -2,\n        Z_DATA_ERROR: -3,\n        Z_MEM_ERROR: -4,\n        Z_BUF_ERROR: -5,\n        Z_NO_COMPRESSION: 0,\n        Z_BEST_SPEED: 1,\n        Z_BEST_COMPRESSION: 9,\n        Z_DEFAULT_COMPRESSION: -1,\n        Z_FILTERED: 1,\n        Z_HUFFMAN_ONLY: 2,\n        Z_RLE: 3,\n        Z_FIXED: 4,\n        Z_DEFAULT_STRATEGY: 0,\n        Z_BINARY: 0,\n        Z_TEXT: 1,\n        Z_UNKNOWN: 2,\n        Z_DEFLATED: 8\n      },\n      pt = nt,\n      yt = st,\n      vt = ot,\n      gt = at,\n      mt = ht,\n      _t = dt.Z_NO_FLUSH,\n      wt = dt.Z_PARTIAL_FLUSH,\n      bt = dt.Z_FULL_FLUSH,\n      xt = dt.Z_FINISH,\n      kt = dt.Z_BLOCK,\n      At = dt.Z_OK,\n      St = dt.Z_STREAM_END,\n      Ot = dt.Z_STREAM_ERROR,\n      Et = dt.Z_DATA_ERROR,\n      Tt = dt.Z_BUF_ERROR,\n      zt = dt.Z_DEFAULT_COMPRESSION,\n      Bt = dt.Z_FILTERED,\n      It = dt.Z_HUFFMAN_ONLY,\n      Nt = dt.Z_RLE,\n      Ft = dt.Z_FIXED,\n      jt = dt.Z_UNKNOWN,\n      Lt = dt.Z_DEFLATED,\n      Ct = 258,\n      Rt = 262,\n      Dt = 42,\n      Mt = 113,\n      Pt = 666,\n      Ut = function (t, e) {\n        return t.msg = ct[e], e;\n      },\n      Zt = function (t) {\n        return 2 * t - (t > 4 ? 9 : 0);\n      },\n      qt = function (t) {\n        for (var e = t.length; --e >= 0;) t[e] = 0;\n      },\n      Jt = function (t) {\n        var e,\n          r,\n          i,\n          n = t.w_size;\n        i = e = t.hash_size;\n        do {\n          r = t.head[--i], t.head[i] = r >= n ? r - n : 0;\n        } while (--e);\n        i = e = n;\n        do {\n          r = t.prev[--i], t.prev[i] = r >= n ? r - n : 0;\n        } while (--e);\n      },\n      Vt = function (t, e, r) {\n        return (e << t.hash_shift ^ r) & t.hash_mask;\n      },\n      Ht = function (t) {\n        var e = t.state,\n          r = e.pending;\n        r > t.avail_out && (r = t.avail_out), 0 !== r && (t.output.set(e.pending_buf.subarray(e.pending_out, e.pending_out + r), t.next_out), t.next_out += r, e.pending_out += r, t.total_out += r, t.avail_out -= r, e.pending -= r, 0 === e.pending && (e.pending_out = 0));\n      },\n      $t = function (t, e) {\n        vt(t, t.block_start >= 0 ? t.block_start : -1, t.strstart - t.block_start, e), t.block_start = t.strstart, Ht(t.strm);\n      },\n      Kt = function (t, e) {\n        t.pending_buf[t.pending++] = e;\n      },\n      Xt = function (t, e) {\n        t.pending_buf[t.pending++] = e >>> 8 & 255, t.pending_buf[t.pending++] = 255 & e;\n      },\n      Yt = function (t, e, r, i) {\n        var n = t.avail_in;\n        return n > i && (n = i), 0 === n ? 0 : (t.avail_in -= n, e.set(t.input.subarray(t.next_in, t.next_in + n), r), 1 === t.state.wrap ? t.adler = ut(t.adler, e, n, r) : 2 === t.state.wrap && (t.adler = ft(t.adler, e, n, r)), t.next_in += n, t.total_in += n, n);\n      },\n      Gt = function (t, e) {\n        var r,\n          i,\n          n = t.max_chain_length,\n          s = t.strstart,\n          o = t.prev_length,\n          a = t.nice_match,\n          h = t.strstart > t.w_size - Rt ? t.strstart - (t.w_size - Rt) : 0,\n          u = t.window,\n          l = t.w_mask,\n          f = t.prev,\n          c = t.strstart + Ct,\n          d = u[s + o - 1],\n          p = u[s + o];\n        t.prev_length >= t.good_match && (n >>= 2), a > t.lookahead && (a = t.lookahead);\n        do {\n          if (u[(r = e) + o] === p && u[r + o - 1] === d && u[r] === u[s] && u[++r] === u[s + 1]) {\n            s += 2, r++;\n            do {} while (u[++s] === u[++r] && u[++s] === u[++r] && u[++s] === u[++r] && u[++s] === u[++r] && u[++s] === u[++r] && u[++s] === u[++r] && u[++s] === u[++r] && u[++s] === u[++r] && s < c);\n            if (i = Ct - (c - s), s = c - Ct, i > o) {\n              if (t.match_start = e, o = i, i >= a) break;\n              d = u[s + o - 1], p = u[s + o];\n            }\n          }\n        } while ((e = f[e & l]) > h && 0 != --n);\n        return o <= t.lookahead ? o : t.lookahead;\n      },\n      Wt = function (t) {\n        var e,\n          r,\n          i,\n          n = t.w_size;\n        do {\n          if (r = t.window_size - t.lookahead - t.strstart, t.strstart >= n + (n - Rt) && (t.window.set(t.window.subarray(n, n + n - r), 0), t.match_start -= n, t.strstart -= n, t.block_start -= n, t.insert > t.strstart && (t.insert = t.strstart), Jt(t), r += n), 0 === t.strm.avail_in) break;\n          if (e = Yt(t.strm, t.window, t.strstart + t.lookahead, r), t.lookahead += e, t.lookahead + t.insert >= 3) for (i = t.strstart - t.insert, t.ins_h = t.window[i], t.ins_h = Vt(t, t.ins_h, t.window[i + 1]); t.insert && (t.ins_h = Vt(t, t.ins_h, t.window[i + 3 - 1]), t.prev[i & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = i, i++, t.insert--, !(t.lookahead + t.insert < 3)););\n        } while (t.lookahead < Rt && 0 !== t.strm.avail_in);\n      },\n      Qt = function (t, e) {\n        var r,\n          i,\n          n,\n          s = t.pending_buf_size - 5 > t.w_size ? t.w_size : t.pending_buf_size - 5,\n          o = 0,\n          a = t.strm.avail_in;\n        do {\n          if (r = 65535, n = t.bi_valid + 42 >> 3, t.strm.avail_out < n) break;\n          if (n = t.strm.avail_out - n, r > (i = t.strstart - t.block_start) + t.strm.avail_in && (r = i + t.strm.avail_in), r > n && (r = n), r < s && (0 === r && e !== xt || e === _t || r !== i + t.strm.avail_in)) break;\n          o = e === xt && r === i + t.strm.avail_in ? 1 : 0, yt(t, 0, 0, o), t.pending_buf[t.pending - 4] = r, t.pending_buf[t.pending - 3] = r >> 8, t.pending_buf[t.pending - 2] = ~r, t.pending_buf[t.pending - 1] = ~r >> 8, Ht(t.strm), i && (i > r && (i = r), t.strm.output.set(t.window.subarray(t.block_start, t.block_start + i), t.strm.next_out), t.strm.next_out += i, t.strm.avail_out -= i, t.strm.total_out += i, t.block_start += i, r -= i), r && (Yt(t.strm, t.strm.output, t.strm.next_out, r), t.strm.next_out += r, t.strm.avail_out -= r, t.strm.total_out += r);\n        } while (0 === o);\n        return (a -= t.strm.avail_in) && (a >= t.w_size ? (t.matches = 2, t.window.set(t.strm.input.subarray(t.strm.next_in - t.w_size, t.strm.next_in), 0), t.strstart = t.w_size, t.insert = t.strstart) : (t.window_size - t.strstart <= a && (t.strstart -= t.w_size, t.window.set(t.window.subarray(t.w_size, t.w_size + t.strstart), 0), t.matches < 2 && t.matches++, t.insert > t.strstart && (t.insert = t.strstart)), t.window.set(t.strm.input.subarray(t.strm.next_in - a, t.strm.next_in), t.strstart), t.strstart += a, t.insert += a > t.w_size - t.insert ? t.w_size - t.insert : a), t.block_start = t.strstart), t.high_water < t.strstart && (t.high_water = t.strstart), o ? 4 : e !== _t && e !== xt && 0 === t.strm.avail_in && t.strstart === t.block_start ? 2 : (n = t.window_size - t.strstart, t.strm.avail_in > n && t.block_start >= t.w_size && (t.block_start -= t.w_size, t.strstart -= t.w_size, t.window.set(t.window.subarray(t.w_size, t.w_size + t.strstart), 0), t.matches < 2 && t.matches++, n += t.w_size, t.insert > t.strstart && (t.insert = t.strstart)), n > t.strm.avail_in && (n = t.strm.avail_in), n && (Yt(t.strm, t.window, t.strstart, n), t.strstart += n, t.insert += n > t.w_size - t.insert ? t.w_size - t.insert : n), t.high_water < t.strstart && (t.high_water = t.strstart), n = t.bi_valid + 42 >> 3, s = (n = t.pending_buf_size - n > 65535 ? 65535 : t.pending_buf_size - n) > t.w_size ? t.w_size : n, ((i = t.strstart - t.block_start) >= s || (i || e === xt) && e !== _t && 0 === t.strm.avail_in && i <= n) && (r = i > n ? n : i, o = e === xt && 0 === t.strm.avail_in && r === i ? 1 : 0, yt(t, t.block_start, r, o), t.block_start += r, Ht(t.strm)), o ? 3 : 1);\n      },\n      te = function (t, e) {\n        for (var r, i;;) {\n          if (t.lookahead < Rt) {\n            if (Wt(t), t.lookahead < Rt && e === _t) return 1;\n            if (0 === t.lookahead) break;\n          }\n          if (r = 0, t.lookahead >= 3 && (t.ins_h = Vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), 0 !== r && t.strstart - r <= t.w_size - Rt && (t.match_length = Gt(t, r)), t.match_length >= 3) {\n            if (i = gt(t, t.strstart - t.match_start, t.match_length - 3), t.lookahead -= t.match_length, t.match_length <= t.max_lazy_match && t.lookahead >= 3) {\n              t.match_length--;\n              do {\n                t.strstart++, t.ins_h = Vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart;\n              } while (0 != --t.match_length);\n              t.strstart++;\n            } else t.strstart += t.match_length, t.match_length = 0, t.ins_h = t.window[t.strstart], t.ins_h = Vt(t, t.ins_h, t.window[t.strstart + 1]);\n          } else i = gt(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++;\n          if (i && ($t(t, !1), 0 === t.strm.avail_out)) return 1;\n        }\n        return t.insert = t.strstart < 2 ? t.strstart : 2, e === xt ? ($t(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && ($t(t, !1), 0 === t.strm.avail_out) ? 1 : 2;\n      },\n      ee = function (t, e) {\n        for (var r, i, n;;) {\n          if (t.lookahead < Rt) {\n            if (Wt(t), t.lookahead < Rt && e === _t) return 1;\n            if (0 === t.lookahead) break;\n          }\n          if (r = 0, t.lookahead >= 3 && (t.ins_h = Vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart), t.prev_length = t.match_length, t.prev_match = t.match_start, t.match_length = 2, 0 !== r && t.prev_length < t.max_lazy_match && t.strstart - r <= t.w_size - Rt && (t.match_length = Gt(t, r), t.match_length <= 5 && (t.strategy === Bt || 3 === t.match_length && t.strstart - t.match_start > 4096) && (t.match_length = 2)), t.prev_length >= 3 && t.match_length <= t.prev_length) {\n            n = t.strstart + t.lookahead - 3, i = gt(t, t.strstart - 1 - t.prev_match, t.prev_length - 3), t.lookahead -= t.prev_length - 1, t.prev_length -= 2;\n            do {\n              ++t.strstart <= n && (t.ins_h = Vt(t, t.ins_h, t.window[t.strstart + 3 - 1]), r = t.prev[t.strstart & t.w_mask] = t.head[t.ins_h], t.head[t.ins_h] = t.strstart);\n            } while (0 != --t.prev_length);\n            if (t.match_available = 0, t.match_length = 2, t.strstart++, i && ($t(t, !1), 0 === t.strm.avail_out)) return 1;\n          } else if (t.match_available) {\n            if ((i = gt(t, 0, t.window[t.strstart - 1])) && $t(t, !1), t.strstart++, t.lookahead--, 0 === t.strm.avail_out) return 1;\n          } else t.match_available = 1, t.strstart++, t.lookahead--;\n        }\n        return t.match_available && (i = gt(t, 0, t.window[t.strstart - 1]), t.match_available = 0), t.insert = t.strstart < 2 ? t.strstart : 2, e === xt ? ($t(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && ($t(t, !1), 0 === t.strm.avail_out) ? 1 : 2;\n      };\n    function re(t, e, r, i, n) {\n      this.good_length = t, this.max_lazy = e, this.nice_length = r, this.max_chain = i, this.func = n;\n    }\n    var ie = [new re(0, 0, 0, 0, Qt), new re(4, 4, 8, 4, te), new re(4, 5, 16, 8, te), new re(4, 6, 32, 32, te), new re(4, 4, 16, 16, ee), new re(8, 16, 32, 32, ee), new re(8, 16, 128, 128, ee), new re(8, 32, 128, 256, ee), new re(32, 128, 258, 1024, ee), new re(32, 258, 258, 4096, ee)];\n    function ne() {\n      this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = Lt, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new Uint16Array(1146), this.dyn_dtree = new Uint16Array(122), this.bl_tree = new Uint16Array(78), qt(this.dyn_ltree), qt(this.dyn_dtree), qt(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new Uint16Array(16), this.heap = new Uint16Array(573), qt(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new Uint16Array(573), qt(this.depth), this.sym_buf = 0, this.lit_bufsize = 0, this.sym_next = 0, this.sym_end = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;\n    }\n    var se = function (t) {\n        if (!t) return 1;\n        var e = t.state;\n        return !e || e.strm !== t || e.status !== Dt && 57 !== e.status && 69 !== e.status && 73 !== e.status && 91 !== e.status && 103 !== e.status && e.status !== Mt && e.status !== Pt ? 1 : 0;\n      },\n      oe = function (t) {\n        if (se(t)) return Ut(t, Ot);\n        t.total_in = t.total_out = 0, t.data_type = jt;\n        var e = t.state;\n        return e.pending = 0, e.pending_out = 0, e.wrap < 0 && (e.wrap = -e.wrap), e.status = 2 === e.wrap ? 57 : e.wrap ? Dt : Mt, t.adler = 2 === e.wrap ? 0 : 1, e.last_flush = -2, pt(e), At;\n      },\n      ae = function (t) {\n        var e,\n          r = oe(t);\n        return r === At && ((e = t.state).window_size = 2 * e.w_size, qt(e.head), e.max_lazy_match = ie[e.level].max_lazy, e.good_match = ie[e.level].good_length, e.nice_match = ie[e.level].nice_length, e.max_chain_length = ie[e.level].max_chain, e.strstart = 0, e.block_start = 0, e.lookahead = 0, e.insert = 0, e.match_length = e.prev_length = 2, e.match_available = 0, e.ins_h = 0), r;\n      },\n      he = function (t, e, r, i, n, s) {\n        if (!t) return Ot;\n        var o = 1;\n        if (e === zt && (e = 6), i < 0 ? (o = 0, i = -i) : i > 15 && (o = 2, i -= 16), n < 1 || n > 9 || r !== Lt || i < 8 || i > 15 || e < 0 || e > 9 || s < 0 || s > Ft || 8 === i && 1 !== o) return Ut(t, Ot);\n        8 === i && (i = 9);\n        var a = new ne();\n        return t.state = a, a.strm = t, a.status = Dt, a.wrap = o, a.gzhead = null, a.w_bits = i, a.w_size = 1 << a.w_bits, a.w_mask = a.w_size - 1, a.hash_bits = n + 7, a.hash_size = 1 << a.hash_bits, a.hash_mask = a.hash_size - 1, a.hash_shift = ~~((a.hash_bits + 3 - 1) / 3), a.window = new Uint8Array(2 * a.w_size), a.head = new Uint16Array(a.hash_size), a.prev = new Uint16Array(a.w_size), a.lit_bufsize = 1 << n + 6, a.pending_buf_size = 4 * a.lit_bufsize, a.pending_buf = new Uint8Array(a.pending_buf_size), a.sym_buf = a.lit_bufsize, a.sym_end = 3 * (a.lit_bufsize - 1), a.level = e, a.strategy = s, a.method = r, ae(t);\n      },\n      ue = he,\n      le = function (t, e) {\n        return se(t) || 2 !== t.state.wrap ? Ot : (t.state.gzhead = e, At);\n      },\n      fe = function (t, e) {\n        if (se(t) || e > kt || e < 0) return t ? Ut(t, Ot) : Ot;\n        var r = t.state;\n        if (!t.output || 0 !== t.avail_in && !t.input || r.status === Pt && e !== xt) return Ut(t, 0 === t.avail_out ? Tt : Ot);\n        var i = r.last_flush;\n        if (r.last_flush = e, 0 !== r.pending) {\n          if (Ht(t), 0 === t.avail_out) return r.last_flush = -1, At;\n        } else if (0 === t.avail_in && Zt(e) <= Zt(i) && e !== xt) return Ut(t, Tt);\n        if (r.status === Pt && 0 !== t.avail_in) return Ut(t, Tt);\n        if (r.status === Dt && 0 === r.wrap && (r.status = Mt), r.status === Dt) {\n          var n = Lt + (r.w_bits - 8 << 4) << 8;\n          if (n |= (r.strategy >= It || r.level < 2 ? 0 : r.level < 6 ? 1 : 6 === r.level ? 2 : 3) << 6, 0 !== r.strstart && (n |= 32), Xt(r, n += 31 - n % 31), 0 !== r.strstart && (Xt(r, t.adler >>> 16), Xt(r, 65535 & t.adler)), t.adler = 1, r.status = Mt, Ht(t), 0 !== r.pending) return r.last_flush = -1, At;\n        }\n        if (57 === r.status) if (t.adler = 0, Kt(r, 31), Kt(r, 139), Kt(r, 8), r.gzhead) Kt(r, (r.gzhead.text ? 1 : 0) + (r.gzhead.hcrc ? 2 : 0) + (r.gzhead.extra ? 4 : 0) + (r.gzhead.name ? 8 : 0) + (r.gzhead.comment ? 16 : 0)), Kt(r, 255 & r.gzhead.time), Kt(r, r.gzhead.time >> 8 & 255), Kt(r, r.gzhead.time >> 16 & 255), Kt(r, r.gzhead.time >> 24 & 255), Kt(r, 9 === r.level ? 2 : r.strategy >= It || r.level < 2 ? 4 : 0), Kt(r, 255 & r.gzhead.os), r.gzhead.extra && r.gzhead.extra.length && (Kt(r, 255 & r.gzhead.extra.length), Kt(r, r.gzhead.extra.length >> 8 & 255)), r.gzhead.hcrc && (t.adler = ft(t.adler, r.pending_buf, r.pending, 0)), r.gzindex = 0, r.status = 69;else if (Kt(r, 0), Kt(r, 0), Kt(r, 0), Kt(r, 0), Kt(r, 0), Kt(r, 9 === r.level ? 2 : r.strategy >= It || r.level < 2 ? 4 : 0), Kt(r, 3), r.status = Mt, Ht(t), 0 !== r.pending) return r.last_flush = -1, At;\n        if (69 === r.status) {\n          if (r.gzhead.extra) {\n            for (var s = r.pending, o = (65535 & r.gzhead.extra.length) - r.gzindex; r.pending + o > r.pending_buf_size;) {\n              var a = r.pending_buf_size - r.pending;\n              if (r.pending_buf.set(r.gzhead.extra.subarray(r.gzindex, r.gzindex + a), r.pending), r.pending = r.pending_buf_size, r.gzhead.hcrc && r.pending > s && (t.adler = ft(t.adler, r.pending_buf, r.pending - s, s)), r.gzindex += a, Ht(t), 0 !== r.pending) return r.last_flush = -1, At;\n              s = 0, o -= a;\n            }\n            var h = new Uint8Array(r.gzhead.extra);\n            r.pending_buf.set(h.subarray(r.gzindex, r.gzindex + o), r.pending), r.pending += o, r.gzhead.hcrc && r.pending > s && (t.adler = ft(t.adler, r.pending_buf, r.pending - s, s)), r.gzindex = 0;\n          }\n          r.status = 73;\n        }\n        if (73 === r.status) {\n          if (r.gzhead.name) {\n            var u,\n              l = r.pending;\n            do {\n              if (r.pending === r.pending_buf_size) {\n                if (r.gzhead.hcrc && r.pending > l && (t.adler = ft(t.adler, r.pending_buf, r.pending - l, l)), Ht(t), 0 !== r.pending) return r.last_flush = -1, At;\n                l = 0;\n              }\n              u = r.gzindex < r.gzhead.name.length ? 255 & r.gzhead.name.charCodeAt(r.gzindex++) : 0, Kt(r, u);\n            } while (0 !== u);\n            r.gzhead.hcrc && r.pending > l && (t.adler = ft(t.adler, r.pending_buf, r.pending - l, l)), r.gzindex = 0;\n          }\n          r.status = 91;\n        }\n        if (91 === r.status) {\n          if (r.gzhead.comment) {\n            var f,\n              c = r.pending;\n            do {\n              if (r.pending === r.pending_buf_size) {\n                if (r.gzhead.hcrc && r.pending > c && (t.adler = ft(t.adler, r.pending_buf, r.pending - c, c)), Ht(t), 0 !== r.pending) return r.last_flush = -1, At;\n                c = 0;\n              }\n              f = r.gzindex < r.gzhead.comment.length ? 255 & r.gzhead.comment.charCodeAt(r.gzindex++) : 0, Kt(r, f);\n            } while (0 !== f);\n            r.gzhead.hcrc && r.pending > c && (t.adler = ft(t.adler, r.pending_buf, r.pending - c, c));\n          }\n          r.status = 103;\n        }\n        if (103 === r.status) {\n          if (r.gzhead.hcrc) {\n            if (r.pending + 2 > r.pending_buf_size && (Ht(t), 0 !== r.pending)) return r.last_flush = -1, At;\n            Kt(r, 255 & t.adler), Kt(r, t.adler >> 8 & 255), t.adler = 0;\n          }\n          if (r.status = Mt, Ht(t), 0 !== r.pending) return r.last_flush = -1, At;\n        }\n        if (0 !== t.avail_in || 0 !== r.lookahead || e !== _t && r.status !== Pt) {\n          var d = 0 === r.level ? Qt(r, e) : r.strategy === It ? function (t, e) {\n            for (var r;;) {\n              if (0 === t.lookahead && (Wt(t), 0 === t.lookahead)) {\n                if (e === _t) return 1;\n                break;\n              }\n              if (t.match_length = 0, r = gt(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++, r && ($t(t, !1), 0 === t.strm.avail_out)) return 1;\n            }\n            return t.insert = 0, e === xt ? ($t(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && ($t(t, !1), 0 === t.strm.avail_out) ? 1 : 2;\n          }(r, e) : r.strategy === Nt ? function (t, e) {\n            for (var r, i, n, s, o = t.window;;) {\n              if (t.lookahead <= Ct) {\n                if (Wt(t), t.lookahead <= Ct && e === _t) return 1;\n                if (0 === t.lookahead) break;\n              }\n              if (t.match_length = 0, t.lookahead >= 3 && t.strstart > 0 && (i = o[n = t.strstart - 1]) === o[++n] && i === o[++n] && i === o[++n]) {\n                s = t.strstart + Ct;\n                do {} while (i === o[++n] && i === o[++n] && i === o[++n] && i === o[++n] && i === o[++n] && i === o[++n] && i === o[++n] && i === o[++n] && n < s);\n                t.match_length = Ct - (s - n), t.match_length > t.lookahead && (t.match_length = t.lookahead);\n              }\n              if (t.match_length >= 3 ? (r = gt(t, 1, t.match_length - 3), t.lookahead -= t.match_length, t.strstart += t.match_length, t.match_length = 0) : (r = gt(t, 0, t.window[t.strstart]), t.lookahead--, t.strstart++), r && ($t(t, !1), 0 === t.strm.avail_out)) return 1;\n            }\n            return t.insert = 0, e === xt ? ($t(t, !0), 0 === t.strm.avail_out ? 3 : 4) : t.sym_next && ($t(t, !1), 0 === t.strm.avail_out) ? 1 : 2;\n          }(r, e) : ie[r.level].func(r, e);\n          if (3 !== d && 4 !== d || (r.status = Pt), 1 === d || 3 === d) return 0 === t.avail_out && (r.last_flush = -1), At;\n          if (2 === d && (e === wt ? mt(r) : e !== kt && (yt(r, 0, 0, !1), e === bt && (qt(r.head), 0 === r.lookahead && (r.strstart = 0, r.block_start = 0, r.insert = 0))), Ht(t), 0 === t.avail_out)) return r.last_flush = -1, At;\n        }\n        return e !== xt ? At : r.wrap <= 0 ? St : (2 === r.wrap ? (Kt(r, 255 & t.adler), Kt(r, t.adler >> 8 & 255), Kt(r, t.adler >> 16 & 255), Kt(r, t.adler >> 24 & 255), Kt(r, 255 & t.total_in), Kt(r, t.total_in >> 8 & 255), Kt(r, t.total_in >> 16 & 255), Kt(r, t.total_in >> 24 & 255)) : (Xt(r, t.adler >>> 16), Xt(r, 65535 & t.adler)), Ht(t), r.wrap > 0 && (r.wrap = -r.wrap), 0 !== r.pending ? At : St);\n      },\n      ce = function (t) {\n        if (se(t)) return Ot;\n        var e = t.state.status;\n        return t.state = null, e === Mt ? Ut(t, Et) : At;\n      },\n      de = function (t, e) {\n        var r = e.length;\n        if (se(t)) return Ot;\n        var i = t.state,\n          n = i.wrap;\n        if (2 === n || 1 === n && i.status !== Dt || i.lookahead) return Ot;\n        if (1 === n && (t.adler = ut(t.adler, e, r, 0)), i.wrap = 0, r >= i.w_size) {\n          0 === n && (qt(i.head), i.strstart = 0, i.block_start = 0, i.insert = 0);\n          var s = new Uint8Array(i.w_size);\n          s.set(e.subarray(r - i.w_size, r), 0), e = s, r = i.w_size;\n        }\n        var o = t.avail_in,\n          a = t.next_in,\n          h = t.input;\n        for (t.avail_in = r, t.next_in = 0, t.input = e, Wt(i); i.lookahead >= 3;) {\n          var u = i.strstart,\n            l = i.lookahead - 2;\n          do {\n            i.ins_h = Vt(i, i.ins_h, i.window[u + 3 - 1]), i.prev[u & i.w_mask] = i.head[i.ins_h], i.head[i.ins_h] = u, u++;\n          } while (--l);\n          i.strstart = u, i.lookahead = 2, Wt(i);\n        }\n        return i.strstart += i.lookahead, i.block_start = i.strstart, i.insert = i.lookahead, i.lookahead = 0, i.match_length = i.prev_length = 2, i.match_available = 0, t.next_in = a, t.input = h, t.avail_in = o, i.wrap = n, At;\n      },\n      pe = function (t, e) {\n        return Object.prototype.hasOwnProperty.call(t, e);\n      },\n      ye = {\n        assign: function (e) {\n          for (var r = Array.prototype.slice.call(arguments, 1); r.length;) {\n            var i = r.shift();\n            if (i) {\n              if (\"object\" !== t(i)) throw new TypeError(i + \"must be non-object\");\n              for (var n in i) pe(i, n) && (e[n] = i[n]);\n            }\n          }\n          return e;\n        },\n        flattenChunks: function (t) {\n          for (var e = 0, r = 0, i = t.length; r < i; r++) e += t[r].length;\n          for (var n = new Uint8Array(e), s = 0, o = 0, a = t.length; s < a; s++) {\n            var h = t[s];\n            n.set(h, o), o += h.length;\n          }\n          return n;\n        }\n      },\n      ve = !0;\n    try {\n      String.fromCharCode.apply(null, new Uint8Array(1));\n    } catch (t) {\n      ve = !1;\n    }\n    for (var ge = new Uint8Array(256), me = 0; me < 256; me++) ge[me] = me >= 252 ? 6 : me >= 248 ? 5 : me >= 240 ? 4 : me >= 224 ? 3 : me >= 192 ? 2 : 1;\n    ge[254] = ge[254] = 1;\n    var _e = {\n        string2buf: function (t) {\n          if (\"function\" == typeof TextEncoder && TextEncoder.prototype.encode) return new TextEncoder().encode(t);\n          var e,\n            r,\n            i,\n            n,\n            s,\n            o = t.length,\n            a = 0;\n          for (n = 0; n < o; n++) 55296 == (64512 & (r = t.charCodeAt(n))) && n + 1 < o && 56320 == (64512 & (i = t.charCodeAt(n + 1))) && (r = 65536 + (r - 55296 << 10) + (i - 56320), n++), a += r < 128 ? 1 : r < 2048 ? 2 : r < 65536 ? 3 : 4;\n          for (e = new Uint8Array(a), s = 0, n = 0; s < a; n++) 55296 == (64512 & (r = t.charCodeAt(n))) && n + 1 < o && 56320 == (64512 & (i = t.charCodeAt(n + 1))) && (r = 65536 + (r - 55296 << 10) + (i - 56320), n++), r < 128 ? e[s++] = r : r < 2048 ? (e[s++] = 192 | r >>> 6, e[s++] = 128 | 63 & r) : r < 65536 ? (e[s++] = 224 | r >>> 12, e[s++] = 128 | r >>> 6 & 63, e[s++] = 128 | 63 & r) : (e[s++] = 240 | r >>> 18, e[s++] = 128 | r >>> 12 & 63, e[s++] = 128 | r >>> 6 & 63, e[s++] = 128 | 63 & r);\n          return e;\n        },\n        buf2string: function (t, e) {\n          var r,\n            i,\n            n = e || t.length;\n          if (\"function\" == typeof TextDecoder && TextDecoder.prototype.decode) return new TextDecoder().decode(t.subarray(0, e));\n          var s = new Array(2 * n);\n          for (i = 0, r = 0; r < n;) {\n            var o = t[r++];\n            if (o < 128) s[i++] = o;else {\n              var a = ge[o];\n              if (a > 4) s[i++] = 65533, r += a - 1;else {\n                for (o &= 2 === a ? 31 : 3 === a ? 15 : 7; a > 1 && r < n;) o = o << 6 | 63 & t[r++], a--;\n                a > 1 ? s[i++] = 65533 : o < 65536 ? s[i++] = o : (o -= 65536, s[i++] = 55296 | o >> 10 & 1023, s[i++] = 56320 | 1023 & o);\n              }\n            }\n          }\n          return function (t, e) {\n            if (e < 65534 && t.subarray && ve) return String.fromCharCode.apply(null, t.length === e ? t : t.subarray(0, e));\n            for (var r = \"\", i = 0; i < e; i++) r += String.fromCharCode(t[i]);\n            return r;\n          }(s, i);\n        },\n        utf8border: function (t, e) {\n          (e = e || t.length) > t.length && (e = t.length);\n          for (var r = e - 1; r >= 0 && 128 == (192 & t[r]);) r--;\n          return r < 0 || 0 === r ? e : r + ge[t[r]] > e ? r : e;\n        }\n      },\n      we = function () {\n        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = \"\", this.state = null, this.data_type = 2, this.adler = 0;\n      },\n      be = Object.prototype.toString,\n      xe = dt.Z_NO_FLUSH,\n      ke = dt.Z_SYNC_FLUSH,\n      Ae = dt.Z_FULL_FLUSH,\n      Se = dt.Z_FINISH,\n      Oe = dt.Z_OK,\n      Ee = dt.Z_STREAM_END,\n      Te = dt.Z_DEFAULT_COMPRESSION,\n      ze = dt.Z_DEFAULT_STRATEGY,\n      Be = dt.Z_DEFLATED;\n    function Ie(t) {\n      this.options = ye.assign({\n        level: Te,\n        method: Be,\n        chunkSize: 16384,\n        windowBits: 15,\n        memLevel: 8,\n        strategy: ze\n      }, t || {});\n      var e = this.options;\n      e.raw && e.windowBits > 0 ? e.windowBits = -e.windowBits : e.gzip && e.windowBits > 0 && e.windowBits < 16 && (e.windowBits += 16), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new we(), this.strm.avail_out = 0;\n      var r = ue(this.strm, e.level, e.method, e.windowBits, e.memLevel, e.strategy);\n      if (r !== Oe) throw new Error(ct[r]);\n      if (e.header && le(this.strm, e.header), e.dictionary) {\n        var i;\n        if (i = \"string\" == typeof e.dictionary ? _e.string2buf(e.dictionary) : \"[object ArrayBuffer]\" === be.call(e.dictionary) ? new Uint8Array(e.dictionary) : e.dictionary, (r = de(this.strm, i)) !== Oe) throw new Error(ct[r]);\n        this._dict_set = !0;\n      }\n    }\n    Ie.prototype.push = function (t, e) {\n      var r,\n        i,\n        n = this.strm,\n        s = this.options.chunkSize;\n      if (this.ended) return !1;\n      for (i = e === ~~e ? e : !0 === e ? Se : xe, \"string\" == typeof t ? n.input = _e.string2buf(t) : \"[object ArrayBuffer]\" === be.call(t) ? n.input = new Uint8Array(t) : n.input = t, n.next_in = 0, n.avail_in = n.input.length;;) if (0 === n.avail_out && (n.output = new Uint8Array(s), n.next_out = 0, n.avail_out = s), (i === ke || i === Ae) && n.avail_out <= 6) this.onData(n.output.subarray(0, n.next_out)), n.avail_out = 0;else {\n        if ((r = fe(n, i)) === Ee) return n.next_out > 0 && this.onData(n.output.subarray(0, n.next_out)), r = ce(this.strm), this.onEnd(r), this.ended = !0, r === Oe;\n        if (0 !== n.avail_out) {\n          if (i > 0 && n.next_out > 0) this.onData(n.output.subarray(0, n.next_out)), n.avail_out = 0;else if (0 === n.avail_in) break;\n        } else this.onData(n.output);\n      }\n      return !0;\n    }, Ie.prototype.onData = function (t) {\n      this.chunks.push(t);\n    }, Ie.prototype.onEnd = function (t) {\n      t === Oe && (this.result = ye.flattenChunks(this.chunks)), this.chunks = [], this.err = t, this.msg = this.strm.msg;\n    };\n    var Ne = 16209,\n      Fe = function (t, e) {\n        var r,\n          i,\n          n,\n          s,\n          o,\n          a,\n          h,\n          u,\n          l,\n          f,\n          c,\n          d,\n          p,\n          y,\n          v,\n          g,\n          m,\n          _,\n          w,\n          b,\n          x,\n          k,\n          A,\n          S,\n          O = t.state;\n        r = t.next_in, A = t.input, i = r + (t.avail_in - 5), n = t.next_out, S = t.output, s = n - (e - t.avail_out), o = n + (t.avail_out - 257), a = O.dmax, h = O.wsize, u = O.whave, l = O.wnext, f = O.window, c = O.hold, d = O.bits, p = O.lencode, y = O.distcode, v = (1 << O.lenbits) - 1, g = (1 << O.distbits) - 1;\n        t: do {\n          d < 15 && (c += A[r++] << d, d += 8, c += A[r++] << d, d += 8), m = p[c & v];\n          e: for (;;) {\n            if (c >>>= _ = m >>> 24, d -= _, 0 == (_ = m >>> 16 & 255)) S[n++] = 65535 & m;else {\n              if (!(16 & _)) {\n                if (64 & _) {\n                  if (32 & _) {\n                    O.mode = 16191;\n                    break t;\n                  }\n                  t.msg = \"invalid literal/length code\", O.mode = Ne;\n                  break t;\n                }\n                m = p[(65535 & m) + (c & (1 << _) - 1)];\n                continue e;\n              }\n              for (w = 65535 & m, (_ &= 15) && (d < _ && (c += A[r++] << d, d += 8), w += c & (1 << _) - 1, c >>>= _, d -= _), d < 15 && (c += A[r++] << d, d += 8, c += A[r++] << d, d += 8), m = y[c & g];;) {\n                if (c >>>= _ = m >>> 24, d -= _, 16 & (_ = m >>> 16 & 255)) {\n                  if (b = 65535 & m, d < (_ &= 15) && (c += A[r++] << d, (d += 8) < _ && (c += A[r++] << d, d += 8)), (b += c & (1 << _) - 1) > a) {\n                    t.msg = \"invalid distance too far back\", O.mode = Ne;\n                    break t;\n                  }\n                  if (c >>>= _, d -= _, b > (_ = n - s)) {\n                    if ((_ = b - _) > u && O.sane) {\n                      t.msg = \"invalid distance too far back\", O.mode = Ne;\n                      break t;\n                    }\n                    if (x = 0, k = f, 0 === l) {\n                      if (x += h - _, _ < w) {\n                        w -= _;\n                        do {\n                          S[n++] = f[x++];\n                        } while (--_);\n                        x = n - b, k = S;\n                      }\n                    } else if (l < _) {\n                      if (x += h + l - _, (_ -= l) < w) {\n                        w -= _;\n                        do {\n                          S[n++] = f[x++];\n                        } while (--_);\n                        if (x = 0, l < w) {\n                          w -= _ = l;\n                          do {\n                            S[n++] = f[x++];\n                          } while (--_);\n                          x = n - b, k = S;\n                        }\n                      }\n                    } else if (x += l - _, _ < w) {\n                      w -= _;\n                      do {\n                        S[n++] = f[x++];\n                      } while (--_);\n                      x = n - b, k = S;\n                    }\n                    for (; w > 2;) S[n++] = k[x++], S[n++] = k[x++], S[n++] = k[x++], w -= 3;\n                    w && (S[n++] = k[x++], w > 1 && (S[n++] = k[x++]));\n                  } else {\n                    x = n - b;\n                    do {\n                      S[n++] = S[x++], S[n++] = S[x++], S[n++] = S[x++], w -= 3;\n                    } while (w > 2);\n                    w && (S[n++] = S[x++], w > 1 && (S[n++] = S[x++]));\n                  }\n                  break;\n                }\n                if (64 & _) {\n                  t.msg = \"invalid distance code\", O.mode = Ne;\n                  break t;\n                }\n                m = y[(65535 & m) + (c & (1 << _) - 1)];\n              }\n            }\n            break;\n          }\n        } while (r < i && n < o);\n        r -= w = d >> 3, c &= (1 << (d -= w << 3)) - 1, t.next_in = r, t.next_out = n, t.avail_in = r < i ? i - r + 5 : 5 - (r - i), t.avail_out = n < o ? o - n + 257 : 257 - (n - o), O.hold = c, O.bits = d;\n      },\n      je = new Uint16Array([3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0]),\n      Le = new Uint8Array([16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78]),\n      Ce = new Uint16Array([1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0]),\n      Re = new Uint8Array([16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64]),\n      De = function (t, e, r, i, n, s, o, a) {\n        var h,\n          u,\n          l,\n          f,\n          c,\n          d,\n          p,\n          y,\n          v,\n          g = a.bits,\n          m = 0,\n          _ = 0,\n          w = 0,\n          b = 0,\n          x = 0,\n          k = 0,\n          A = 0,\n          S = 0,\n          O = 0,\n          E = 0,\n          T = null,\n          z = new Uint16Array(16),\n          B = new Uint16Array(16),\n          I = null;\n        for (m = 0; m <= 15; m++) z[m] = 0;\n        for (_ = 0; _ < i; _++) z[e[r + _]]++;\n        for (x = g, b = 15; b >= 1 && 0 === z[b]; b--);\n        if (x > b && (x = b), 0 === b) return n[s++] = 20971520, n[s++] = 20971520, a.bits = 1, 0;\n        for (w = 1; w < b && 0 === z[w]; w++);\n        for (x < w && (x = w), S = 1, m = 1; m <= 15; m++) if (S <<= 1, (S -= z[m]) < 0) return -1;\n        if (S > 0 && (0 === t || 1 !== b)) return -1;\n        for (B[1] = 0, m = 1; m < 15; m++) B[m + 1] = B[m] + z[m];\n        for (_ = 0; _ < i; _++) 0 !== e[r + _] && (o[B[e[r + _]]++] = _);\n        if (0 === t ? (T = I = o, d = 20) : 1 === t ? (T = je, I = Le, d = 257) : (T = Ce, I = Re, d = 0), E = 0, _ = 0, m = w, c = s, k = x, A = 0, l = -1, f = (O = 1 << x) - 1, 1 === t && O > 852 || 2 === t && O > 592) return 1;\n        for (;;) {\n          p = m - A, o[_] + 1 < d ? (y = 0, v = o[_]) : o[_] >= d ? (y = I[o[_] - d], v = T[o[_] - d]) : (y = 96, v = 0), h = 1 << m - A, w = u = 1 << k;\n          do {\n            n[c + (E >> A) + (u -= h)] = p << 24 | y << 16 | v;\n          } while (0 !== u);\n          for (h = 1 << m - 1; E & h;) h >>= 1;\n          if (0 !== h ? (E &= h - 1, E += h) : E = 0, _++, 0 == --z[m]) {\n            if (m === b) break;\n            m = e[r + o[_]];\n          }\n          if (m > x && (E & f) !== l) {\n            for (0 === A && (A = x), c += w, S = 1 << (k = m - A); k + A < b && !((S -= z[k + A]) <= 0);) k++, S <<= 1;\n            if (O += 1 << k, 1 === t && O > 852 || 2 === t && O > 592) return 1;\n            n[l = E & f] = x << 24 | k << 16 | c - s;\n          }\n        }\n        return 0 !== E && (n[c + E] = m - A << 24 | 64 << 16), a.bits = x, 0;\n      },\n      Me = dt.Z_FINISH,\n      Pe = dt.Z_BLOCK,\n      Ue = dt.Z_TREES,\n      Ze = dt.Z_OK,\n      qe = dt.Z_STREAM_END,\n      Je = dt.Z_NEED_DICT,\n      Ve = dt.Z_STREAM_ERROR,\n      He = dt.Z_DATA_ERROR,\n      $e = dt.Z_MEM_ERROR,\n      Ke = dt.Z_BUF_ERROR,\n      Xe = dt.Z_DEFLATED,\n      Ye = 16180,\n      Ge = 16190,\n      We = 16191,\n      Qe = 16192,\n      tr = 16194,\n      er = 16199,\n      rr = 16200,\n      ir = 16206,\n      nr = 16209,\n      sr = function (t) {\n        return (t >>> 24 & 255) + (t >>> 8 & 65280) + ((65280 & t) << 8) + ((255 & t) << 24);\n      };\n    function or() {\n      this.strm = null, this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new Uint16Array(320), this.work = new Uint16Array(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;\n    }\n    var ar,\n      hr,\n      ur = function (t) {\n        if (!t) return 1;\n        var e = t.state;\n        return !e || e.strm !== t || e.mode < Ye || e.mode > 16211 ? 1 : 0;\n      },\n      lr = function (t) {\n        if (ur(t)) return Ve;\n        var e = t.state;\n        return t.total_in = t.total_out = e.total = 0, t.msg = \"\", e.wrap && (t.adler = 1 & e.wrap), e.mode = Ye, e.last = 0, e.havedict = 0, e.flags = -1, e.dmax = 32768, e.head = null, e.hold = 0, e.bits = 0, e.lencode = e.lendyn = new Int32Array(852), e.distcode = e.distdyn = new Int32Array(592), e.sane = 1, e.back = -1, Ze;\n      },\n      fr = function (t) {\n        if (ur(t)) return Ve;\n        var e = t.state;\n        return e.wsize = 0, e.whave = 0, e.wnext = 0, lr(t);\n      },\n      cr = function (t, e) {\n        var r;\n        if (ur(t)) return Ve;\n        var i = t.state;\n        return e < 0 ? (r = 0, e = -e) : (r = 5 + (e >> 4), e < 48 && (e &= 15)), e && (e < 8 || e > 15) ? Ve : (null !== i.window && i.wbits !== e && (i.window = null), i.wrap = r, i.wbits = e, fr(t));\n      },\n      dr = function (t, e) {\n        if (!t) return Ve;\n        var r = new or();\n        t.state = r, r.strm = t, r.window = null, r.mode = Ye;\n        var i = cr(t, e);\n        return i !== Ze && (t.state = null), i;\n      },\n      pr = !0,\n      yr = function (t) {\n        if (pr) {\n          ar = new Int32Array(512), hr = new Int32Array(32);\n          for (var e = 0; e < 144;) t.lens[e++] = 8;\n          for (; e < 256;) t.lens[e++] = 9;\n          for (; e < 280;) t.lens[e++] = 7;\n          for (; e < 288;) t.lens[e++] = 8;\n          for (De(1, t.lens, 0, 288, ar, 0, t.work, {\n            bits: 9\n          }), e = 0; e < 32;) t.lens[e++] = 5;\n          De(2, t.lens, 0, 32, hr, 0, t.work, {\n            bits: 5\n          }), pr = !1;\n        }\n        t.lencode = ar, t.lenbits = 9, t.distcode = hr, t.distbits = 5;\n      },\n      vr = function (t, e, r, i) {\n        var n,\n          s = t.state;\n        return null === s.window && (s.wsize = 1 << s.wbits, s.wnext = 0, s.whave = 0, s.window = new Uint8Array(s.wsize)), i >= s.wsize ? (s.window.set(e.subarray(r - s.wsize, r), 0), s.wnext = 0, s.whave = s.wsize) : ((n = s.wsize - s.wnext) > i && (n = i), s.window.set(e.subarray(r - i, r - i + n), s.wnext), (i -= n) ? (s.window.set(e.subarray(r - i, r), 0), s.wnext = i, s.whave = s.wsize) : (s.wnext += n, s.wnext === s.wsize && (s.wnext = 0), s.whave < s.wsize && (s.whave += n))), 0;\n      },\n      gr = {\n        inflateReset: fr,\n        inflateReset2: cr,\n        inflateResetKeep: lr,\n        inflateInit: function (t) {\n          return dr(t, 15);\n        },\n        inflateInit2: dr,\n        inflate: function (t, e) {\n          var r,\n            i,\n            n,\n            s,\n            o,\n            a,\n            h,\n            u,\n            l,\n            f,\n            c,\n            d,\n            p,\n            y,\n            v,\n            g,\n            m,\n            _,\n            w,\n            b,\n            x,\n            k,\n            A,\n            S,\n            O = 0,\n            E = new Uint8Array(4),\n            T = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n          if (ur(t) || !t.output || !t.input && 0 !== t.avail_in) return Ve;\n          (r = t.state).mode === We && (r.mode = Qe), o = t.next_out, n = t.output, h = t.avail_out, s = t.next_in, i = t.input, a = t.avail_in, u = r.hold, l = r.bits, f = a, c = h, k = Ze;\n          t: for (;;) switch (r.mode) {\n            case Ye:\n              if (0 === r.wrap) {\n                r.mode = Qe;\n                break;\n              }\n              for (; l < 16;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              if (2 & r.wrap && 35615 === u) {\n                0 === r.wbits && (r.wbits = 15), r.check = 0, E[0] = 255 & u, E[1] = u >>> 8 & 255, r.check = ft(r.check, E, 2, 0), u = 0, l = 0, r.mode = 16181;\n                break;\n              }\n              if (r.head && (r.head.done = !1), !(1 & r.wrap) || (((255 & u) << 8) + (u >> 8)) % 31) {\n                t.msg = \"incorrect header check\", r.mode = nr;\n                break;\n              }\n              if ((15 & u) !== Xe) {\n                t.msg = \"unknown compression method\", r.mode = nr;\n                break;\n              }\n              if (l -= 4, x = 8 + (15 & (u >>>= 4)), 0 === r.wbits && (r.wbits = x), x > 15 || x > r.wbits) {\n                t.msg = \"invalid window size\", r.mode = nr;\n                break;\n              }\n              r.dmax = 1 << r.wbits, r.flags = 0, t.adler = r.check = 1, r.mode = 512 & u ? 16189 : We, u = 0, l = 0;\n              break;\n            case 16181:\n              for (; l < 16;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              if (r.flags = u, (255 & r.flags) !== Xe) {\n                t.msg = \"unknown compression method\", r.mode = nr;\n                break;\n              }\n              if (57344 & r.flags) {\n                t.msg = \"unknown header flags set\", r.mode = nr;\n                break;\n              }\n              r.head && (r.head.text = u >> 8 & 1), 512 & r.flags && 4 & r.wrap && (E[0] = 255 & u, E[1] = u >>> 8 & 255, r.check = ft(r.check, E, 2, 0)), u = 0, l = 0, r.mode = 16182;\n            case 16182:\n              for (; l < 32;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              r.head && (r.head.time = u), 512 & r.flags && 4 & r.wrap && (E[0] = 255 & u, E[1] = u >>> 8 & 255, E[2] = u >>> 16 & 255, E[3] = u >>> 24 & 255, r.check = ft(r.check, E, 4, 0)), u = 0, l = 0, r.mode = 16183;\n            case 16183:\n              for (; l < 16;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              r.head && (r.head.xflags = 255 & u, r.head.os = u >> 8), 512 & r.flags && 4 & r.wrap && (E[0] = 255 & u, E[1] = u >>> 8 & 255, r.check = ft(r.check, E, 2, 0)), u = 0, l = 0, r.mode = 16184;\n            case 16184:\n              if (1024 & r.flags) {\n                for (; l < 16;) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                r.length = u, r.head && (r.head.extra_len = u), 512 & r.flags && 4 & r.wrap && (E[0] = 255 & u, E[1] = u >>> 8 & 255, r.check = ft(r.check, E, 2, 0)), u = 0, l = 0;\n              } else r.head && (r.head.extra = null);\n              r.mode = 16185;\n            case 16185:\n              if (1024 & r.flags && ((d = r.length) > a && (d = a), d && (r.head && (x = r.head.extra_len - r.length, r.head.extra || (r.head.extra = new Uint8Array(r.head.extra_len)), r.head.extra.set(i.subarray(s, s + d), x)), 512 & r.flags && 4 & r.wrap && (r.check = ft(r.check, i, d, s)), a -= d, s += d, r.length -= d), r.length)) break t;\n              r.length = 0, r.mode = 16186;\n            case 16186:\n              if (2048 & r.flags) {\n                if (0 === a) break t;\n                d = 0;\n                do {\n                  x = i[s + d++], r.head && x && r.length < 65536 && (r.head.name += String.fromCharCode(x));\n                } while (x && d < a);\n                if (512 & r.flags && 4 & r.wrap && (r.check = ft(r.check, i, d, s)), a -= d, s += d, x) break t;\n              } else r.head && (r.head.name = null);\n              r.length = 0, r.mode = 16187;\n            case 16187:\n              if (4096 & r.flags) {\n                if (0 === a) break t;\n                d = 0;\n                do {\n                  x = i[s + d++], r.head && x && r.length < 65536 && (r.head.comment += String.fromCharCode(x));\n                } while (x && d < a);\n                if (512 & r.flags && 4 & r.wrap && (r.check = ft(r.check, i, d, s)), a -= d, s += d, x) break t;\n              } else r.head && (r.head.comment = null);\n              r.mode = 16188;\n            case 16188:\n              if (512 & r.flags) {\n                for (; l < 16;) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                if (4 & r.wrap && u !== (65535 & r.check)) {\n                  t.msg = \"header crc mismatch\", r.mode = nr;\n                  break;\n                }\n                u = 0, l = 0;\n              }\n              r.head && (r.head.hcrc = r.flags >> 9 & 1, r.head.done = !0), t.adler = r.check = 0, r.mode = We;\n              break;\n            case 16189:\n              for (; l < 32;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              t.adler = r.check = sr(u), u = 0, l = 0, r.mode = Ge;\n            case Ge:\n              if (0 === r.havedict) return t.next_out = o, t.avail_out = h, t.next_in = s, t.avail_in = a, r.hold = u, r.bits = l, Je;\n              t.adler = r.check = 1, r.mode = We;\n            case We:\n              if (e === Pe || e === Ue) break t;\n            case Qe:\n              if (r.last) {\n                u >>>= 7 & l, l -= 7 & l, r.mode = ir;\n                break;\n              }\n              for (; l < 3;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              switch (r.last = 1 & u, l -= 1, 3 & (u >>>= 1)) {\n                case 0:\n                  r.mode = 16193;\n                  break;\n                case 1:\n                  if (yr(r), r.mode = er, e === Ue) {\n                    u >>>= 2, l -= 2;\n                    break t;\n                  }\n                  break;\n                case 2:\n                  r.mode = 16196;\n                  break;\n                case 3:\n                  t.msg = \"invalid block type\", r.mode = nr;\n              }\n              u >>>= 2, l -= 2;\n              break;\n            case 16193:\n              for (u >>>= 7 & l, l -= 7 & l; l < 32;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              if ((65535 & u) != (u >>> 16 ^ 65535)) {\n                t.msg = \"invalid stored block lengths\", r.mode = nr;\n                break;\n              }\n              if (r.length = 65535 & u, u = 0, l = 0, r.mode = tr, e === Ue) break t;\n            case tr:\n              r.mode = 16195;\n            case 16195:\n              if (d = r.length) {\n                if (d > a && (d = a), d > h && (d = h), 0 === d) break t;\n                n.set(i.subarray(s, s + d), o), a -= d, s += d, h -= d, o += d, r.length -= d;\n                break;\n              }\n              r.mode = We;\n              break;\n            case 16196:\n              for (; l < 14;) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              if (r.nlen = 257 + (31 & u), u >>>= 5, l -= 5, r.ndist = 1 + (31 & u), u >>>= 5, l -= 5, r.ncode = 4 + (15 & u), u >>>= 4, l -= 4, r.nlen > 286 || r.ndist > 30) {\n                t.msg = \"too many length or distance symbols\", r.mode = nr;\n                break;\n              }\n              r.have = 0, r.mode = 16197;\n            case 16197:\n              for (; r.have < r.ncode;) {\n                for (; l < 3;) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                r.lens[T[r.have++]] = 7 & u, u >>>= 3, l -= 3;\n              }\n              for (; r.have < 19;) r.lens[T[r.have++]] = 0;\n              if (r.lencode = r.lendyn, r.lenbits = 7, A = {\n                bits: r.lenbits\n              }, k = De(0, r.lens, 0, 19, r.lencode, 0, r.work, A), r.lenbits = A.bits, k) {\n                t.msg = \"invalid code lengths set\", r.mode = nr;\n                break;\n              }\n              r.have = 0, r.mode = 16198;\n            case 16198:\n              for (; r.have < r.nlen + r.ndist;) {\n                for (; g = (O = r.lencode[u & (1 << r.lenbits) - 1]) >>> 16 & 255, m = 65535 & O, !((v = O >>> 24) <= l);) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                if (m < 16) u >>>= v, l -= v, r.lens[r.have++] = m;else {\n                  if (16 === m) {\n                    for (S = v + 2; l < S;) {\n                      if (0 === a) break t;\n                      a--, u += i[s++] << l, l += 8;\n                    }\n                    if (u >>>= v, l -= v, 0 === r.have) {\n                      t.msg = \"invalid bit length repeat\", r.mode = nr;\n                      break;\n                    }\n                    x = r.lens[r.have - 1], d = 3 + (3 & u), u >>>= 2, l -= 2;\n                  } else if (17 === m) {\n                    for (S = v + 3; l < S;) {\n                      if (0 === a) break t;\n                      a--, u += i[s++] << l, l += 8;\n                    }\n                    l -= v, x = 0, d = 3 + (7 & (u >>>= v)), u >>>= 3, l -= 3;\n                  } else {\n                    for (S = v + 7; l < S;) {\n                      if (0 === a) break t;\n                      a--, u += i[s++] << l, l += 8;\n                    }\n                    l -= v, x = 0, d = 11 + (127 & (u >>>= v)), u >>>= 7, l -= 7;\n                  }\n                  if (r.have + d > r.nlen + r.ndist) {\n                    t.msg = \"invalid bit length repeat\", r.mode = nr;\n                    break;\n                  }\n                  for (; d--;) r.lens[r.have++] = x;\n                }\n              }\n              if (r.mode === nr) break;\n              if (0 === r.lens[256]) {\n                t.msg = \"invalid code -- missing end-of-block\", r.mode = nr;\n                break;\n              }\n              if (r.lenbits = 9, A = {\n                bits: r.lenbits\n              }, k = De(1, r.lens, 0, r.nlen, r.lencode, 0, r.work, A), r.lenbits = A.bits, k) {\n                t.msg = \"invalid literal/lengths set\", r.mode = nr;\n                break;\n              }\n              if (r.distbits = 6, r.distcode = r.distdyn, A = {\n                bits: r.distbits\n              }, k = De(2, r.lens, r.nlen, r.ndist, r.distcode, 0, r.work, A), r.distbits = A.bits, k) {\n                t.msg = \"invalid distances set\", r.mode = nr;\n                break;\n              }\n              if (r.mode = er, e === Ue) break t;\n            case er:\n              r.mode = rr;\n            case rr:\n              if (a >= 6 && h >= 258) {\n                t.next_out = o, t.avail_out = h, t.next_in = s, t.avail_in = a, r.hold = u, r.bits = l, Fe(t, c), o = t.next_out, n = t.output, h = t.avail_out, s = t.next_in, i = t.input, a = t.avail_in, u = r.hold, l = r.bits, r.mode === We && (r.back = -1);\n                break;\n              }\n              for (r.back = 0; g = (O = r.lencode[u & (1 << r.lenbits) - 1]) >>> 16 & 255, m = 65535 & O, !((v = O >>> 24) <= l);) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              if (g && !(240 & g)) {\n                for (_ = v, w = g, b = m; g = (O = r.lencode[b + ((u & (1 << _ + w) - 1) >> _)]) >>> 16 & 255, m = 65535 & O, !(_ + (v = O >>> 24) <= l);) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                u >>>= _, l -= _, r.back += _;\n              }\n              if (u >>>= v, l -= v, r.back += v, r.length = m, 0 === g) {\n                r.mode = 16205;\n                break;\n              }\n              if (32 & g) {\n                r.back = -1, r.mode = We;\n                break;\n              }\n              if (64 & g) {\n                t.msg = \"invalid literal/length code\", r.mode = nr;\n                break;\n              }\n              r.extra = 15 & g, r.mode = 16201;\n            case 16201:\n              if (r.extra) {\n                for (S = r.extra; l < S;) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                r.length += u & (1 << r.extra) - 1, u >>>= r.extra, l -= r.extra, r.back += r.extra;\n              }\n              r.was = r.length, r.mode = 16202;\n            case 16202:\n              for (; g = (O = r.distcode[u & (1 << r.distbits) - 1]) >>> 16 & 255, m = 65535 & O, !((v = O >>> 24) <= l);) {\n                if (0 === a) break t;\n                a--, u += i[s++] << l, l += 8;\n              }\n              if (!(240 & g)) {\n                for (_ = v, w = g, b = m; g = (O = r.distcode[b + ((u & (1 << _ + w) - 1) >> _)]) >>> 16 & 255, m = 65535 & O, !(_ + (v = O >>> 24) <= l);) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                u >>>= _, l -= _, r.back += _;\n              }\n              if (u >>>= v, l -= v, r.back += v, 64 & g) {\n                t.msg = \"invalid distance code\", r.mode = nr;\n                break;\n              }\n              r.offset = m, r.extra = 15 & g, r.mode = 16203;\n            case 16203:\n              if (r.extra) {\n                for (S = r.extra; l < S;) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                r.offset += u & (1 << r.extra) - 1, u >>>= r.extra, l -= r.extra, r.back += r.extra;\n              }\n              if (r.offset > r.dmax) {\n                t.msg = \"invalid distance too far back\", r.mode = nr;\n                break;\n              }\n              r.mode = 16204;\n            case 16204:\n              if (0 === h) break t;\n              if (d = c - h, r.offset > d) {\n                if ((d = r.offset - d) > r.whave && r.sane) {\n                  t.msg = \"invalid distance too far back\", r.mode = nr;\n                  break;\n                }\n                d > r.wnext ? (d -= r.wnext, p = r.wsize - d) : p = r.wnext - d, d > r.length && (d = r.length), y = r.window;\n              } else y = n, p = o - r.offset, d = r.length;\n              d > h && (d = h), h -= d, r.length -= d;\n              do {\n                n[o++] = y[p++];\n              } while (--d);\n              0 === r.length && (r.mode = rr);\n              break;\n            case 16205:\n              if (0 === h) break t;\n              n[o++] = r.length, h--, r.mode = rr;\n              break;\n            case ir:\n              if (r.wrap) {\n                for (; l < 32;) {\n                  if (0 === a) break t;\n                  a--, u |= i[s++] << l, l += 8;\n                }\n                if (c -= h, t.total_out += c, r.total += c, 4 & r.wrap && c && (t.adler = r.check = r.flags ? ft(r.check, n, c, o - c) : ut(r.check, n, c, o - c)), c = h, 4 & r.wrap && (r.flags ? u : sr(u)) !== r.check) {\n                  t.msg = \"incorrect data check\", r.mode = nr;\n                  break;\n                }\n                u = 0, l = 0;\n              }\n              r.mode = 16207;\n            case 16207:\n              if (r.wrap && r.flags) {\n                for (; l < 32;) {\n                  if (0 === a) break t;\n                  a--, u += i[s++] << l, l += 8;\n                }\n                if (4 & r.wrap && u !== (4294967295 & r.total)) {\n                  t.msg = \"incorrect length check\", r.mode = nr;\n                  break;\n                }\n                u = 0, l = 0;\n              }\n              r.mode = 16208;\n            case 16208:\n              k = qe;\n              break t;\n            case nr:\n              k = He;\n              break t;\n            case 16210:\n              return $e;\n            default:\n              return Ve;\n          }\n          return t.next_out = o, t.avail_out = h, t.next_in = s, t.avail_in = a, r.hold = u, r.bits = l, (r.wsize || c !== t.avail_out && r.mode < nr && (r.mode < ir || e !== Me)) && vr(t, t.output, t.next_out, c - t.avail_out), f -= t.avail_in, c -= t.avail_out, t.total_in += f, t.total_out += c, r.total += c, 4 & r.wrap && c && (t.adler = r.check = r.flags ? ft(r.check, n, c, t.next_out - c) : ut(r.check, n, c, t.next_out - c)), t.data_type = r.bits + (r.last ? 64 : 0) + (r.mode === We ? 128 : 0) + (r.mode === er || r.mode === tr ? 256 : 0), (0 === f && 0 === c || e === Me) && k === Ze && (k = Ke), k;\n        },\n        inflateEnd: function (t) {\n          if (ur(t)) return Ve;\n          var e = t.state;\n          return e.window && (e.window = null), t.state = null, Ze;\n        },\n        inflateGetHeader: function (t, e) {\n          if (ur(t)) return Ve;\n          var r = t.state;\n          return 2 & r.wrap ? (r.head = e, e.done = !1, Ze) : Ve;\n        },\n        inflateSetDictionary: function (t, e) {\n          var r,\n            i = e.length;\n          return ur(t) || 0 !== (r = t.state).wrap && r.mode !== Ge ? Ve : r.mode === Ge && ut(1, e, i, 0) !== r.check ? He : vr(t, e, i, i) ? (r.mode = 16210, $e) : (r.havedict = 1, Ze);\n        },\n        inflateInfo: \"pako inflate (from Nodeca project)\"\n      },\n      mr = function () {\n        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = \"\", this.comment = \"\", this.hcrc = 0, this.done = !1;\n      },\n      _r = Object.prototype.toString,\n      wr = dt.Z_NO_FLUSH,\n      br = dt.Z_FINISH,\n      xr = dt.Z_OK,\n      kr = dt.Z_STREAM_END,\n      Ar = dt.Z_NEED_DICT,\n      Sr = dt.Z_STREAM_ERROR,\n      Or = dt.Z_DATA_ERROR,\n      Er = dt.Z_MEM_ERROR;\n    function Tr(t) {\n      this.options = ye.assign({\n        chunkSize: 65536,\n        windowBits: 15,\n        to: \"\"\n      }, t || {});\n      var e = this.options;\n      e.raw && e.windowBits >= 0 && e.windowBits < 16 && (e.windowBits = -e.windowBits, 0 === e.windowBits && (e.windowBits = -15)), !(e.windowBits >= 0 && e.windowBits < 16) || t && t.windowBits || (e.windowBits += 32), e.windowBits > 15 && e.windowBits < 48 && (15 & e.windowBits || (e.windowBits |= 15)), this.err = 0, this.msg = \"\", this.ended = !1, this.chunks = [], this.strm = new we(), this.strm.avail_out = 0;\n      var r = gr.inflateInit2(this.strm, e.windowBits);\n      if (r !== xr) throw new Error(ct[r]);\n      if (this.header = new mr(), gr.inflateGetHeader(this.strm, this.header), e.dictionary && (\"string\" == typeof e.dictionary ? e.dictionary = _e.string2buf(e.dictionary) : \"[object ArrayBuffer]\" === _r.call(e.dictionary) && (e.dictionary = new Uint8Array(e.dictionary)), e.raw && (r = gr.inflateSetDictionary(this.strm, e.dictionary)) !== xr)) throw new Error(ct[r]);\n    }\n    function zr(t, e) {\n      var r = new Tr(e);\n      if (r.push(t), r.err) throw r.msg || ct[r.err];\n      return r.result;\n    }\n    Tr.prototype.push = function (t, e) {\n      var r,\n        i,\n        n,\n        s = this.strm,\n        o = this.options.chunkSize,\n        a = this.options.dictionary;\n      if (this.ended) return !1;\n      for (i = e === ~~e ? e : !0 === e ? br : wr, \"[object ArrayBuffer]\" === _r.call(t) ? s.input = new Uint8Array(t) : s.input = t, s.next_in = 0, s.avail_in = s.input.length;;) {\n        for (0 === s.avail_out && (s.output = new Uint8Array(o), s.next_out = 0, s.avail_out = o), (r = gr.inflate(s, i)) === Ar && a && ((r = gr.inflateSetDictionary(s, a)) === xr ? r = gr.inflate(s, i) : r === Or && (r = Ar)); s.avail_in > 0 && r === kr && s.state.wrap > 0 && 0 !== t[s.next_in];) gr.inflateReset(s), r = gr.inflate(s, i);\n        switch (r) {\n          case Sr:\n          case Or:\n          case Ar:\n          case Er:\n            return this.onEnd(r), this.ended = !0, !1;\n        }\n        if (n = s.avail_out, s.next_out && (0 === s.avail_out || r === kr)) if (\"string\" === this.options.to) {\n          var h = _e.utf8border(s.output, s.next_out),\n            u = s.next_out - h,\n            l = _e.buf2string(s.output, h);\n          s.next_out = u, s.avail_out = o - u, u && s.output.set(s.output.subarray(h, h + u), 0), this.onData(l);\n        } else this.onData(s.output.length === s.next_out ? s.output : s.output.subarray(0, s.next_out));\n        if (r !== xr || 0 !== n) {\n          if (r === kr) return r = gr.inflateEnd(this.strm), this.onEnd(r), this.ended = !0, !0;\n          if (0 === s.avail_in) break;\n        }\n      }\n      return !0;\n    }, Tr.prototype.onData = function (t) {\n      this.chunks.push(t);\n    }, Tr.prototype.onEnd = function (t) {\n      t === xr && (\"string\" === this.options.to ? this.result = this.chunks.join(\"\") : this.result = ye.flattenChunks(this.chunks)), this.chunks = [], this.err = t, this.msg = this.strm.msg;\n    };\n    var Br = zr,\n      Ir = r(700),\n      Nr = JSON.parse('{\"nested\":{\"com\":{\"nested\":{\"opensource\":{\"nested\":{\"svga\":{\"options\":{\"objc_class_prefix\":\"SVGAProto\",\"java_package\":\"com.opensource.svgaplayer.proto\"},\"nested\":{\"MovieParams\":{\"fields\":{\"viewBoxWidth\":{\"type\":\"float\",\"id\":1},\"viewBoxHeight\":{\"type\":\"float\",\"id\":2},\"fps\":{\"type\":\"int32\",\"id\":3},\"frames\":{\"type\":\"int32\",\"id\":4}}},\"SpriteEntity\":{\"fields\":{\"imageKey\":{\"type\":\"string\",\"id\":1},\"frames\":{\"rule\":\"repeated\",\"type\":\"FrameEntity\",\"id\":2},\"matteKey\":{\"type\":\"string\",\"id\":3}}},\"AudioEntity\":{\"fields\":{\"audioKey\":{\"type\":\"string\",\"id\":1},\"startFrame\":{\"type\":\"int32\",\"id\":2},\"endFrame\":{\"type\":\"int32\",\"id\":3},\"startTime\":{\"type\":\"int32\",\"id\":4},\"totalTime\":{\"type\":\"int32\",\"id\":5}}},\"Layout\":{\"fields\":{\"x\":{\"type\":\"float\",\"id\":1},\"y\":{\"type\":\"float\",\"id\":2},\"width\":{\"type\":\"float\",\"id\":3},\"height\":{\"type\":\"float\",\"id\":4}}},\"Transform\":{\"fields\":{\"a\":{\"type\":\"float\",\"id\":1},\"b\":{\"type\":\"float\",\"id\":2},\"c\":{\"type\":\"float\",\"id\":3},\"d\":{\"type\":\"float\",\"id\":4},\"tx\":{\"type\":\"float\",\"id\":5},\"ty\":{\"type\":\"float\",\"id\":6}}},\"ShapeEntity\":{\"oneofs\":{\"args\":{\"oneof\":[\"shape\",\"rect\",\"ellipse\"]}},\"fields\":{\"type\":{\"type\":\"ShapeType\",\"id\":1},\"shape\":{\"type\":\"ShapeArgs\",\"id\":2},\"rect\":{\"type\":\"RectArgs\",\"id\":3},\"ellipse\":{\"type\":\"EllipseArgs\",\"id\":4},\"styles\":{\"type\":\"ShapeStyle\",\"id\":10},\"transform\":{\"type\":\"Transform\",\"id\":11}},\"nested\":{\"ShapeType\":{\"values\":{\"SHAPE\":0,\"RECT\":1,\"ELLIPSE\":2,\"KEEP\":3}},\"ShapeArgs\":{\"fields\":{\"d\":{\"type\":\"string\",\"id\":1}}},\"RectArgs\":{\"fields\":{\"x\":{\"type\":\"float\",\"id\":1},\"y\":{\"type\":\"float\",\"id\":2},\"width\":{\"type\":\"float\",\"id\":3},\"height\":{\"type\":\"float\",\"id\":4},\"cornerRadius\":{\"type\":\"float\",\"id\":5}}},\"EllipseArgs\":{\"fields\":{\"x\":{\"type\":\"float\",\"id\":1},\"y\":{\"type\":\"float\",\"id\":2},\"radiusX\":{\"type\":\"float\",\"id\":3},\"radiusY\":{\"type\":\"float\",\"id\":4}}},\"ShapeStyle\":{\"fields\":{\"fill\":{\"type\":\"RGBAColor\",\"id\":1},\"stroke\":{\"type\":\"RGBAColor\",\"id\":2},\"strokeWidth\":{\"type\":\"float\",\"id\":3},\"lineCap\":{\"type\":\"LineCap\",\"id\":4},\"lineJoin\":{\"type\":\"LineJoin\",\"id\":5},\"miterLimit\":{\"type\":\"float\",\"id\":6},\"lineDashI\":{\"type\":\"float\",\"id\":7},\"lineDashII\":{\"type\":\"float\",\"id\":8},\"lineDashIII\":{\"type\":\"float\",\"id\":9}},\"nested\":{\"RGBAColor\":{\"fields\":{\"r\":{\"type\":\"float\",\"id\":1},\"g\":{\"type\":\"float\",\"id\":2},\"b\":{\"type\":\"float\",\"id\":3},\"a\":{\"type\":\"float\",\"id\":4}}},\"LineCap\":{\"values\":{\"LineCap_BUTT\":0,\"LineCap_ROUND\":1,\"LineCap_SQUARE\":2}},\"LineJoin\":{\"values\":{\"LineJoin_MITER\":0,\"LineJoin_ROUND\":1,\"LineJoin_BEVEL\":2}}}}}},\"FrameEntity\":{\"fields\":{\"alpha\":{\"type\":\"float\",\"id\":1},\"layout\":{\"type\":\"Layout\",\"id\":2},\"transform\":{\"type\":\"Transform\",\"id\":3},\"clipPath\":{\"type\":\"string\",\"id\":4},\"shapes\":{\"rule\":\"repeated\",\"type\":\"ShapeEntity\",\"id\":5}}},\"MovieEntity\":{\"fields\":{\"version\":{\"type\":\"string\",\"id\":1},\"params\":{\"type\":\"MovieParams\",\"id\":2},\"images\":{\"keyType\":\"string\",\"type\":\"bytes\",\"id\":3},\"sprites\":{\"rule\":\"repeated\",\"type\":\"SpriteEntity\",\"id\":4},\"audios\":{\"rule\":\"repeated\",\"type\":\"AudioEntity\",\"id\":5}}}}}}}}}}}'),\n      Fr = Ir.Root.fromJSON(Nr).lookupType(\"com.opensource.svga.MovieEntity\"),\n      jr = {},\n      Lr = function () {\n        return u(function t() {\n          o(this, t);\n        }, [{\n          key: \"load\",\n          value: (t = s(e().mark(function t(r) {\n            var i;\n            return e().wrap(function (t) {\n              for (;;) switch (t.prev = t.next) {\n                case 0:\n                  if (!jr[r]) {\n                    t.next = 7;\n                    break;\n                  }\n                  return t.next = 3, jr[r];\n                case 3:\n                  if (1 !== (i = t.sent).code) {\n                    t.next = 7;\n                    break;\n                  }\n                  return y(\"预加载命中\", r.substring(r.lastIndexOf(\"/\") + 1)), t.abrupt(\"return\", i.data);\n                case 7:\n                  if (0 !== r.indexOf(\"http://\") && 0 !== r.indexOf(\"https://\")) {\n                    t.next = 9;\n                    break;\n                  }\n                  return t.abrupt(\"return\", this.loadUrl(r));\n                case 9:\n                  return t.abrupt(\"return\", this.loadFile(r));\n                case 10:\n                case \"end\":\n                  return t.stop();\n              }\n            }, t, this);\n          })), function (e) {\n            return t.apply(this, arguments);\n          })\n        }, {\n          key: \"loadUrl\",\n          value: function (t) {\n            return new Promise(function (e, r) {\n              if (\"h5\" === _()) {\n                var i = new XMLHttpRequest();\n                i.open(\"GET\", t, !0), i.responseType = \"arraybuffer\", i.onloadend = function () {\n                  if (void 0 === i.response || 200 !== i.status && 304 !== i.status) r(new Error(\"XMLHttpRequest, \".concat(i.statusText)));else {\n                    var n = Br(i.response),\n                      s = Fr.decode(n);\n                    e(new A(s, t));\n                  }\n                }, i.send();\n              } else l().request({\n                url: t,\n                dataType: \"arraybuffer\",\n                responseType: \"arraybuffer\",\n                success: function (i) {\n                  try {\n                    var n = Br(i.data),\n                      s = Fr.decode(n);\n                    e(new A(s, t));\n                  } catch (t) {\n                    r(t);\n                  }\n                },\n                fail: function (t) {\n                  r(new Error(t.errMsg || \"load url failed\"));\n                }\n              });\n            });\n          }\n        }, {\n          key: \"loadFile\",\n          value: function (t) {\n            return new Promise(function (e, r) {\n              \"h5\" === _() ? r(new Error(\"暂不支持\")) : l().getFileSystemManager().readFile({\n                filePath: t,\n                success: function (i) {\n                  try {\n                    var n = Br(i.data),\n                      s = Fr.decode(n);\n                    e(new A(s, t));\n                  } catch (t) {\n                    r(t);\n                  }\n                },\n                fail: function (t) {\n                  r(new Error(t.errMsg || \"load file failed\"));\n                }\n              });\n            });\n          }\n        }], [{\n          key: \"preload\",\n          value: function (t) {\n            if (!t) return Promise.resolve({\n              code: 0,\n              msg: \"no preload url\"\n            });\n            if (jr[t]) return jr[t];\n            var e = new Promise(function (e) {\n              var r = Date.now(),\n                i = _();\n              \"h5\" === i ? e({\n                code: 0,\n                msg: \"platform unsupported\"\n              }) : l().request({\n                url: t,\n                dataType: \"alipay\" === i ? \"arraybuffer\" : \"其他\",\n                responseType: \"arraybuffer\",\n                success: function (i) {\n                  try {\n                    var n = Br(i.data),\n                      s = Fr.decode(n);\n                    y(\"预加载完成, 耗时: \".concat(Date.now() - r, \"ms\"), t.substring(t.lastIndexOf(\"/\") + 1)), e({\n                      code: 1,\n                      data: new A(s, t)\n                    });\n                  } catch (t) {\n                    y(\"预加载解析失败, 耗时: \".concat(Date.now() - r, \"ms\"), t), e({\n                      code: 0,\n                      msg: \"file parse failed\"\n                    });\n                  }\n                },\n                fail: function (t) {\n                  y(\"预加载失败, 耗时: \".concat(Date.now() - r, \"ms\"), t), e({\n                    code: 0,\n                    msg: \"file read failed\"\n                  });\n                }\n              });\n            });\n            return jr[t] = e, e;\n          }\n        }, {\n          key: \"unload\",\n          value: function (t) {\n            delete jr[t], jr[t] = void 0, y(\"释放预加载\", t.substring(t.lastIndexOf(\"/\") + 1));\n          }\n        }]);\n        var t;\n      }();\n    function Cr(t, e) {\n      var r = Object.keys(t);\n      if (Object.getOwnPropertySymbols) {\n        var i = Object.getOwnPropertySymbols(t);\n        e && (i = i.filter(function (e) {\n          return Object.getOwnPropertyDescriptor(t, e).enumerable;\n        })), r.push.apply(r, i);\n      }\n      return r;\n    }\n    function Rr(t) {\n      for (var e = 1; e < arguments.length; e++) {\n        var r = null != arguments[e] ? arguments[e] : {};\n        e % 2 ? Cr(Object(r), !0).forEach(function (e) {\n          f(t, e, r[e]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : Cr(Object(r)).forEach(function (e) {\n          Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(r, e));\n        });\n      }\n      return t;\n    }\n    function Dr(t) {\n      return Dr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n        return t.__proto__ || Object.getPrototypeOf(t);\n      }, Dr(t);\n    }\n    function Mr() {\n      try {\n        var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      } catch (t) {}\n      return (Mr = function () {\n        return !!t;\n      })();\n    }\n    function Pr(e, r, i) {\n      return r = Dr(r), function (e, r) {\n        if (r && (\"object\" == t(r) || \"function\" == typeof r)) return r;\n        if (void 0 !== r) throw new TypeError(\"Derived constructors may only return object or undefined\");\n        return function (t) {\n          if (void 0 === t) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n          return t;\n        }(e);\n      }(e, Mr() ? Reflect.construct(r, i || [], Dr(e).constructor) : r.apply(e, i));\n    }\n    function Ur(t, e) {\n      return Ur = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n        return t.__proto__ = e, t;\n      }, Ur(t, e);\n    }\n    function Zr(t, e) {\n      if (\"function\" != typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function\");\n      t.prototype = Object.create(e && e.prototype, {\n        constructor: {\n          value: t,\n          writable: !0,\n          configurable: !0\n        }\n      }), Object.defineProperty(t, \"prototype\", {\n        writable: !1\n      }), e && Ur(t, e);\n    }\n    var qr = function (t) {\n        function e(t, r, i, n, s, a) {\n          var h;\n          return o(this, e), f(h = Pr(this, e, [\"\", s, a]), \"_x\", void 0), f(h, \"_y\", void 0), f(h, \"_radiusX\", void 0), f(h, \"_radiusY\", void 0), f(h, \"_transform\", void 0), f(h, \"_styles\", void 0), h._x = t, h._y = r, h._radiusX = i, h._radiusY = n, h._transform = s, h._styles = a, h;\n        }\n        return Zr(e, t), u(e);\n      }(b),\n      Jr = function (t) {\n        function e(t, r, i, n, s, a, h) {\n          var u;\n          return o(this, e), f(u = Pr(this, e, [\"\", a, h]), \"_x\", void 0), f(u, \"_y\", void 0), f(u, \"_width\", void 0), f(u, \"_height\", void 0), f(u, \"_cornerRadius\", void 0), f(u, \"_transform\", void 0), f(u, \"_styles\", void 0), u._x = t, u._y = r, u._width = i, u._height = n, u._cornerRadius = s, u._transform = a, u._styles = h, u;\n        }\n        return Zr(e, t), u(e);\n      }(b),\n      Vr = function (t) {\n        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 6,\n          r = Math.pow(10, e);\n        return ~~(t * r) / r;\n      },\n      Hr = function (t) {\n        return ~~t;\n      },\n      $r = function () {\n        return u(function t(e, r, i) {\n          o(this, t), this.videoItem = e, this.width = r, this.height = i, f(this, \"canvas\", void 0), f(this, \"ctx\", void 0), f(this, \"_transform\", {\n            translateX: 0,\n            translateY: 0,\n            scale: 1\n          }), f(this, \"dpr\", \"h5\" === _() ? window.devicePixelRatio : l().getSystemInfoSync().pixelRatio), f(this, \"globalTransform\", void 0), f(this, \"_dynamicImage\", {}), f(this, \"_dynamicText\", {}), f(this, \"isMatteing\", !1), f(this, \"matteSprites\", {}), this.videoItem = e, this.canvas = function (t) {\n            if (\"undefined\" != typeof my && \"function\" == typeof my.createOffscreenCanvas) return my.createOffscreenCanvas({\n              width: t.width,\n              height: t.height\n            });\n            if (\"undefined\" != typeof tt && \"function\" == typeof has.createOffscreenCanvas) {\n              var e = has.createOffscreenCanvas();\n              return e.width = t.width, e.height = t.height, e;\n            }\n            if (\"undefined\" != typeof wx && \"function\" == typeof has.createOffscreenCanvas) return has.createOffscreenCanvas(t);\n            if (\"OffscreenCanvas\" in window) return new OffscreenCanvas(t.width, t.height);\n            throw new Error(\"暂不支持当前环境\");\n          }({\n            width: r,\n            height: i,\n            type: \"2d\"\n          }), this.ctx = this.canvas.getContext(\"2d\");\n        }, [{\n          key: \"transform\",\n          get: function () {\n            return this._transform;\n          },\n          set: function (t) {\n            this._transform = t;\n          }\n        }, {\n          key: \"clear\",\n          value: function () {\n            var t = this.ctx,\n              e = {\n                x: 0,\n                y: 0,\n                width: this.canvas.width,\n                height: this.canvas.height\n              };\n            t.clearRect(e.x, e.y, e.width, e.height), this.isMatteing = !1, this.matteSprites = {};\n          }\n        }, {\n          key: \"drawFrame\",\n          value: function (t) {\n            for (var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0, 1], r = this.ctx, i = this.isMatteing, n = this.matteSprites, s = this.videoItem.sprites, o = Hr(s.length * e[0]), a = Hr(s.length * e[1]); o < a; o++) {\n              var h,\n                u,\n                l = s[o];\n              if (-1 != (null === (h = s[0].imageKey) || void 0 === h ? void 0 : h.indexOf(\".matte\"))) {\n                if (-1 == (null === (u = l.imageKey) || void 0 === u ? void 0 : u.indexOf(\".matte\"))) {\n                  var f = s[o - 1];\n                  if (i && (!l.matteKey || 0 == l.matteKey.length || l.matteKey != f.matteKey)) {\n                    this.isMatteing = !1;\n                    var c = n[l.matteKey];\n                    r.globalCompositeOperation = \"destination-in\", this.drawSprite(c, t), r.globalCompositeOperation = \"source-over\", r.restore();\n                  }\n                  null == l.matteKey || null != f.matteKey && 0 != f.matteKey.length && f.matteKey == l.matteKey || (this.isMatteing = !0), this.drawSprite(l, t), i && o == s.length - 1 && (c = n.get(l.matteKey), r.globalCompositeOperation = \"destination-in\", this.drawSprite(c, t), r.globalCompositeOperation = \"source-over\", r.restore());\n                } else c[l.imageKey] = l;\n              } else this.drawSprite(l, t);\n            }\n          }\n        }, {\n          key: \"drawSprite\",\n          value: function (t, e) {\n            var r,\n              i,\n              n = this,\n              s = t.frames[e];\n            if (s && !(s.alpha < .05)) {\n              var o = this.ctx;\n              o.save(), this.globalTransform && o.transform(Vr(this.globalTransform.a), Vr(this.globalTransform.b), Vr(this.globalTransform.c), Vr(this.globalTransform.d), ~~this.globalTransform.tx, ~~this.globalTransform.ty), o.globalAlpha = s.alpha, o.transform(Vr(s.transform.a), Vr(s.transform.b), Vr(s.transform.c), Vr(s.transform.d), ~~s.transform.tx, ~~s.transform.ty);\n              var a = null === (r = t.imageKey) || void 0 === r ? void 0 : r.replace(\".matte\", \"\");\n              if (a) {\n                var h = null !== (i = this._dynamicImage[a]) && void 0 !== i ? i : this.videoItem.decodedImages[a];\n                if (void 0 !== s.maskPath && null !== s.maskPath && (s.maskPath._styles = void 0, this.drawBezier(s.maskPath), o.clip()), h) {\n                  var u = s.layout.width * this.transform.scale,\n                    l = s.layout.height * this.transform.scale,\n                    f = this.transform.translateX * this.dpr - (u - s.layout.width) / 2,\n                    c = this.transform.translateY * this.dpr - (l - s.layout.height) / 2;\n                  o.drawImage(h, 0, 0, h.width, h.height, f, c, u, l);\n                }\n                s.shapes && s.shapes.forEach(function (t) {\n                  var e = t.transform;\n                  \"shape\" === t.type && t.pathArgs && t.pathArgs.d && n.drawBezier(new b(t.pathArgs.d, e, t.styles)), \"ellipse\" === t.type && t.pathArgs && n.drawEllipse(new qr(parseFloat(t.pathArgs.x) || 0, parseFloat(t.pathArgs.y) || 0, parseFloat(t.pathArgs.radiusX) || 0, parseFloat(t.pathArgs.radiusY) || 0, e, t.styles)), \"rect\" === t.type && t.pathArgs && n.drawRect(new Jr(parseFloat(t.pathArgs.x) || 0, parseFloat(t.pathArgs.y) || 0, parseFloat(t.pathArgs.width) || 0, parseFloat(t.pathArgs.height) || 0, parseFloat(t.pathArgs.cornerRadius) || 0, e, t.styles));\n                });\n                var d = this._dynamicText[a];\n                if (void 0 !== d) {\n                  var p;\n                  o.font = \"\".concat(d.size, \"px \").concat(null !== (p = d.family) && void 0 !== p ? p : \"Arial\");\n                  var y = o.measureText(d.text).width;\n                  o.fillStyle = d.color;\n                  var v = void 0 !== d.offset && void 0 !== d.offset.x ? isNaN(d.offset.x) ? 0 : d.offset.x : 0,\n                    g = void 0 !== d.offset && void 0 !== d.offset.y ? isNaN(d.offset.y) ? 0 : d.offset.y : 0;\n                  o.fillText(d.text, (s.layout.width - y) / 2 + v, s.layout.height / 2 + g);\n                }\n                o.restore();\n              }\n            }\n          }\n        }, {\n          key: \"resetShapeStyles\",\n          value: function (t) {\n            var e = this.ctx,\n              r = t._styles;\n            r && (r && r.stroke ? e.strokeStyle = \"rgba(\".concat((255 * r.stroke[0]).toFixed(0), \", \").concat((255 * r.stroke[1]).toFixed(0), \", \").concat((255 * r.stroke[2]).toFixed(0), \", \").concat(r.stroke[3], \")\") : e.strokeStyle = \"transparent\", r && (e.lineWidth = r.strokeWidth || void 0, e.lineCap = r.lineCap || void 0, e.lineJoin = r.lineJoin || void 0, e.miterLimit = r.miterLimit || void 0), r && r.fill ? e.fillStyle = \"rgba(\".concat((255 * r.fill[0]).toFixed(0), \", \").concat((255 * r.fill[1]).toFixed(0), \", \").concat((255 * r.fill[2]).toFixed(0), \", \").concat(r.fill[3], \")\") : e.fillStyle = \"transparent\", r && r.lineDash && (e.lineDashOffset = r.lineDash[2], e.setLineDash([r.lineDash[0], r.lineDash[1]])));\n          }\n        }, {\n          key: \"drawBezier\",\n          value: function (t) {\n            var e = this,\n              r = this.ctx;\n            r.save(), this.resetShapeStyles(t), void 0 !== t._transform && null !== t._transform && r.transform(Vr(t._transform.a), Vr(t._transform.b), Vr(t._transform.c), Vr(t._transform.d), ~~t._transform.tx, ~~t._transform.ty);\n            var i = {\n              x: 0,\n              y: 0,\n              x1: 0,\n              y1: 0,\n              x2: 0,\n              y2: 0\n            };\n            r.beginPath(), t._d.replace(/([a-zA-Z])/g, \"|||$1 \").replace(/,/g, \" \").split(\"|||\").forEach(function (t) {\n              if (0 != t.length) {\n                var r = t.substring(0, 1);\n                if (\"MLHVCSQRZmlhvcsqrz\".indexOf(r) >= 0) {\n                  var n = t.substring(1).trim().split(\" \");\n                  e.drawBezierElement(i, r, n);\n                }\n              }\n            }), t._styles && t._styles.fill && r.fill(), t._styles && t._styles.stroke && r.stroke(), r.restore();\n          }\n        }, {\n          key: \"drawBezierElement\",\n          value: function (t, e, r) {\n            var i = this.ctx;\n            switch (e) {\n              case \"M\":\n                t.x = Hr(r[0]), t.y = Hr(r[1]), i.moveTo(t.x, t.y);\n                break;\n              case \"m\":\n                t.x += Hr(r[0]), t.y += Hr(r[1]), i.moveTo(t.x, t.y);\n                break;\n              case \"L\":\n                t.x = Hr(r[0]), t.y = Hr(r[1]), i.lineTo(t.x, t.y);\n                break;\n              case \"l\":\n                t.x += Hr(r[0]), t.y += Hr(r[1]), i.lineTo(t.x, t.y);\n                break;\n              case \"H\":\n                t.x = Hr(r[0]), i.lineTo(t.x, t.y);\n                break;\n              case \"h\":\n                t.x += Hr(r[0]), i.lineTo(t.x, t.y);\n                break;\n              case \"V\":\n                t.y = Hr(r[0]), i.lineTo(t.x, t.y);\n                break;\n              case \"v\":\n                t.y += Hr(r[0]), i.lineTo(t.x, t.y);\n                break;\n              case \"C\":\n                t.x1 = Hr(r[0]), t.y1 = Hr(r[1]), t.x2 = Hr(r[2]), t.y2 = Hr(r[3]), t.x = Hr(r[4]), t.y = Hr(r[5]), i.bezierCurveTo(t.x1, t.y1, t.x2, t.y2, t.x, t.y);\n                break;\n              case \"c\":\n                t.x1 = t.x + Hr(r[0]), t.y1 = t.y + Hr(r[1]), t.x2 = t.x + Hr(r[2]), t.y2 = t.y + Hr(r[3]), t.x += Hr(r[4]), t.y += Hr(r[5]), i.bezierCurveTo(t.x1, t.y1, t.x2, t.y2, t.x, t.y);\n                break;\n              case \"S\":\n                t.x1 && t.y1 && t.x2 && t.y2 ? (t.x1 = t.x - t.x2 + t.x, t.y1 = t.y - t.y2 + t.y, t.x2 = Hr(r[0]), t.y2 = Hr(r[1]), t.x = Hr(r[2]), t.y = Hr(r[3]), i.bezierCurveTo(t.x1, t.y1, t.x2, t.y2, t.x, t.y)) : (t.x1 = Hr(r[0]), t.y1 = Hr(r[1]), t.x = Hr(r[2]), t.y = Hr(r[3]), i.quadraticCurveTo(t.x1, t.y1, t.x, t.y));\n                break;\n              case \"s\":\n                t.x1 && t.y1 && t.x2 && t.y2 ? (t.x1 = t.x - t.x2 + t.x, t.y1 = t.y - t.y2 + t.y, t.x2 = t.x + Hr(r[0]), t.y2 = t.y + Hr(r[1]), t.x += Hr(r[2]), t.y += Hr(r[3]), i.bezierCurveTo(t.x1, t.y1, t.x2, t.y2, t.x, t.y)) : (t.x1 = t.x + Hr(r[0]), t.y1 = t.y + Hr(r[1]), t.x += Hr(r[2]), t.y += Hr(r[3]), i.quadraticCurveTo(t.x1, t.y1, t.x, t.y));\n                break;\n              case \"Q\":\n                t.x1 = Hr(r[0]), t.y1 = Hr(r[1]), t.x = Hr(r[2]), t.y = Hr(r[3]), i.quadraticCurveTo(t.x1, t.y1, t.x, t.y);\n                break;\n              case \"q\":\n                t.x1 = t.x + Hr(r[0]), t.y1 = t.y + Hr(r[1]), t.x += Hr(r[2]), t.y += Hr(r[3]), i.quadraticCurveTo(t.x1, t.y1, t.x, t.y);\n                break;\n              case \"A\":\n              case \"a\":\n              default:\n                break;\n              case \"Z\":\n              case \"z\":\n                i.closePath();\n            }\n          }\n        }, {\n          key: \"drawEllipse\",\n          value: function (t) {\n            var e = this.ctx;\n            e.save(), this.resetShapeStyles(t), void 0 !== t._transform && null !== t._transform && e.transform(Vr(t._transform.a), Vr(t._transform.b), Vr(t._transform.c), Vr(t._transform.d), ~~t._transform.tx, ~~t._transform.ty);\n            var r = t._x - t._radiusX,\n              i = t._y - t._radiusY,\n              n = 2 * t._radiusX,\n              s = 2 * t._radiusY,\n              o = .5522848,\n              a = n / 2 * o,\n              h = s / 2 * o,\n              u = r + n,\n              l = i + s,\n              f = r + n / 2,\n              c = i + s / 2;\n            e.beginPath(), e.moveTo(r, c), e.bezierCurveTo(r, c - h, f - a, i, f, i), e.bezierCurveTo(f + a, i, u, c - h, u, c), e.bezierCurveTo(u, c + h, f + a, l, f, l), e.bezierCurveTo(f - a, l, r, c + h, r, c), t._styles && t._styles.fill && e.fill(), t._styles && t._styles.stroke && e.stroke(), e.restore();\n          }\n        }, {\n          key: \"drawRect\",\n          value: function (t) {\n            var e = this.ctx;\n            e.save(), this.resetShapeStyles(t), void 0 !== t._transform && null !== t._transform && e.transform(Vr(t._transform.a), Vr(t._transform.b), Vr(t._transform.c), Vr(t._transform.d), ~~t._transform.tx, ~~t._transform.ty);\n            var r = t._x,\n              i = t._y,\n              n = t._width,\n              s = t._height,\n              o = t._cornerRadius;\n            n < 2 * o && (o = n / 2), s < 2 * o && (o = s / 2), e.beginPath(), e.moveTo(r + o, i), e.arcTo(r + n, i, r + n, i + s, o), e.arcTo(r + n, i + s, r, i + s, o), e.arcTo(r, i + s, r, i, o), e.arcTo(r, i, r + n, i, o), e.closePath(), t._styles && t._styles.fill && e.fill(), t._styles && t._styles.stroke && e.stroke(), e.restore();\n          }\n        }, {\n          key: \"createImageData\",\n          value: function () {\n            return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n          }\n        }]);\n      }(),\n      Kr = function () {\n        function t() {\n          o(this, t), f(this, \"canvas\", void 0), f(this, \"startValue\", 0), f(this, \"endValue\", 0), f(this, \"duration\", 0), f(this, \"loops\", 1), f(this, \"fillRule\", 0), f(this, \"mRunning\", !1), f(this, \"mStartTime\", 0), f(this, \"mCurrentFrication\", 0), f(this, \"mReverse\", !1), f(this, \"requestId\", void 0), f(this, \"platform\", _()), f(this, \"onStart\", function () {}), f(this, \"onUpdate\", function (t) {}), f(this, \"onEnd\", function () {});\n        }\n        return u(t, [{\n          key: \"start\",\n          value: function (t) {\n            this.doStart(!1, t);\n          }\n        }, {\n          key: \"reverse\",\n          value: function (t) {\n            this.doStart(!0, t);\n          }\n        }, {\n          key: \"stop\",\n          value: function () {\n            this.doStop();\n          }\n        }, {\n          key: \"animatedValue\",\n          value: function () {\n            return (this.endValue - this.startValue) * this.mCurrentFrication + this.startValue;\n          }\n        }, {\n          key: \"doStart\",\n          value: function (e) {\n            var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;\n            this.mReverse = e, this.mRunning = !0, this.mStartTime = t.currentTimeMillSecond(), r && (this.mStartTime -= e ? (1 - r / (this.endValue - this.startValue)) * this.duration : r / (this.endValue - this.startValue) * this.duration), this.mCurrentFrication = 0, this.onStart(), this.doFrame();\n          }\n        }, {\n          key: \"doStop\",\n          value: function () {\n            this.mRunning = !1, this.cancelAnimationFrame();\n          }\n        }, {\n          key: \"requestAnimationFrame\",\n          value: function (t) {\n            var e;\n            return \"h5\" === this.platform ? window.requestAnimationFrame(t) : null === (e = this.canvas) || void 0 === e ? void 0 : e.requestAnimationFrame(t);\n          }\n        }, {\n          key: \"cancelAnimationFrame\",\n          value: function () {\n            var t;\n            if (\"h5\" === this.platform) return window.cancelAnimationFrame(this.requestId);\n            null === (t = this.canvas) || void 0 === t || t.cancelAnimationFrame(this.requestId);\n          }\n        }, {\n          key: \"doFrame\",\n          value: function () {\n            var e = this;\n            this.requestId = this.requestAnimationFrame(function r() {\n              e.mRunning && (e.doDeltaTime(t.currentTimeMillSecond() - e.mStartTime), e.requestId = e.requestAnimationFrame(r));\n            });\n          }\n        }, {\n          key: \"doDeltaTime\",\n          value: function (t) {\n            var e = !1;\n            t >= this.duration * this.loops ? (this.mCurrentFrication = 1 === this.fillRule ? 0 : 1, this.mReverse && (this.mCurrentFrication = 1 - this.mCurrentFrication), this.mRunning = !1, e = !0) : (this.mCurrentFrication = t % this.duration / this.duration, this.mReverse && (this.mCurrentFrication = 1 - this.mCurrentFrication)), this.onUpdate(this.animatedValue()), !1 === this.mRunning && e && this.onEnd();\n          }\n        }]);\n      }();\n    f(Kr, \"currentTimeMillSecond\", function () {\n      return \"undefined\" == typeof performance ? Date.now() : performance.now();\n    });\n    var Xr = 0;\n    function Yr() {\n      if (\"h5\" === _()) return !1;\n      var t = l().getFileSystemManager(),\n        e = w();\n      try {\n        return t.accessSync(e), !0;\n      } catch (r) {\n        try {\n          return t.mkdirSync(e, !0), y(\"创建缓存目录\"), !0;\n        } catch (t) {\n          return y(\"创建缓存目录失败\", t), !1;\n        }\n      }\n    }\n    var Gr = function () {\n        return u(function t() {\n          o(this, t), f(this, \"canvas\", void 0), f(this, \"ctx\", void 0), f(this, \"platform\", _()), f(this, \"loops\", 0), f(this, \"clearsAfterStop\", !0), f(this, \"fillMode\", \"Forward\"), f(this, \"_videoItem\", void 0), f(this, \"_contentMode\", \"AspectFit\"), f(this, \"_renderer\", void 0), f(this, \"_animator\", void 0), f(this, \"_forwardAnimating\", !1), f(this, \"_currentFrame\", 0), f(this, \"_dynamicImage\", {}), f(this, \"_dynamicText\", {}), f(this, \"_onFinished\", void 0), f(this, \"_onFrame\", void 0), f(this, \"_onPercentage\", void 0);\n        }, [{\n          key: \"setCanvas\",\n          value: (i = s(e().mark(function t(r, i) {\n            var n = this;\n            return e().wrap(function (t) {\n              for (;;) switch (t.prev = t.next) {\n                case 0:\n                  return t.abrupt(\"return\", new Promise(function (t, e) {\n                    if (\"h5\" === n.platform) {\n                      var s = document.querySelector(r);\n                      n.canvas = s;\n                      var o = window.devicePixelRatio;\n                      n.canvas.width = s.clientWidth * o, n.canvas.height = s.clientHeight * o, n.ctx = s.getContext(\"2d\"), t(void 0);\n                    } else {\n                      var a = l(),\n                        h = a.createSelectorQuery();\n                      i && (h = h.in(i)), h.select(r).fields({\n                        node: !0,\n                        size: !0\n                      }).exec(function (r) {\n                        var i;\n                        if (n.canvas = null == r || null === (i = r[0]) || void 0 === i ? void 0 : i.node, n.canvas) {\n                          if (n.ctx = n.canvas.getContext(\"2d\"), n.ctx) {\n                            var s = a.getSystemInfoSync().pixelRatio;\n                            n.canvas.width = r[0].width * s, n.canvas.height = r[0].height * s, t(void 0);\n                          } else e(\"canvas context not found.\");\n                        } else e(\"canvas not found.\");\n                      });\n                    }\n                  }));\n                case 1:\n                case \"end\":\n                  return t.stop();\n              }\n            }, t);\n          })), function (t, e) {\n            return i.apply(this, arguments);\n          })\n        }, {\n          key: \"setVideoItem\",\n          value: (r = s(e().mark(function t(r, i) {\n            var n,\n              o,\n              a = this;\n            return e().wrap(function (t) {\n              for (;;) switch (t.prev = t.next) {\n                case 0:\n                  if (this.stopAnimation(!0), this._currentFrame = 0, this._videoItem = r || void 0, !r) {\n                    t.next = 16;\n                    break;\n                  }\n                  return Yr(), t.next = 7, Promise.all(Object.keys(r.spec.images).map(function () {\n                    var t = s(e().mark(function t(n) {\n                      var s;\n                      return e().wrap(function (t) {\n                        for (;;) switch (t.prev = t.next) {\n                          case 0:\n                            return t.prev = 0, t.next = 3, a.loadWXImage(r.spec.images[n], v(\"\".concat(r.src, \"/\").concat(n)), null == i ? void 0 : i.frameMode);\n                          case 3:\n                            return s = t.sent, t.abrupt(\"return\", {\n                              key: n,\n                              value: s\n                            });\n                          case 7:\n                            return t.prev = 7, t.t0 = t.catch(0), t.abrupt(\"return\", {\n                              key: n,\n                              value: void 0\n                            });\n                          case 10:\n                          case \"end\":\n                            return t.stop();\n                        }\n                      }, t, null, [[0, 7]]);\n                    }));\n                    return function (e) {\n                      return t.apply(this, arguments);\n                    };\n                  }()));\n                case 7:\n                  n = t.sent, delete r.spec.images, delete r.spec.sprites, o = {}, n.forEach(function (t) {\n                    o[t.key] = t.value;\n                  }), r.decodedImages = o, this._renderer = new $r(this._videoItem, this.canvas.width, this.canvas.height), t.next = 17;\n                  break;\n                case 16:\n                  this._renderer = void 0;\n                case 17:\n                  this.clear(), this._update();\n                case 19:\n                case \"end\":\n                  return t.stop();\n              }\n            }, t, this);\n          })), function (t, e) {\n            return r.apply(this, arguments);\n          })\n        }, {\n          key: \"loadWXImage\",\n          value: function (t, e, r) {\n            var i = this;\n            if (!this.canvas) throw new Error(\"no canvas\");\n            return new Promise(function (n, s) {\n              if (\"h5\" !== i.platform) {\n                var o = i.canvas.createImage();\n                if (o.onload = function () {\n                  n(o);\n                }, o.onerror = function () {\n                  s(new Error(\"image decoded fail.\"));\n                }, \"string\" != typeof t) switch (r) {\n                  case \"worker\":\n                  case \"wasm\":\n                  case \"base64\":\n                    o.src = \"data:image/png;base64,\".concat(g(t));\n                    break;\n                  default:\n                    var a = function (t) {\n                      t || y(\"frameName未指定\");\n                      var e = w();\n                      return \"\".concat(e, \"/\").concat(t || \"svga_temp_\".concat(++Xr), \".png\");\n                    }(e);\n                    (function (t, e) {\n                      return new Promise(function (r, i) {\n                        l().getFileSystemManager().writeFile({\n                          filePath: t,\n                          data: e,\n                          success: function () {\n                            r();\n                          },\n                          fail: function (t) {\n                            i(t);\n                          }\n                        });\n                      });\n                    })(a, t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength)).then(function () {\n                      o.src = a;\n                    }).catch(function (e) {\n                      y(\"临时文件保存失败, 降级使用base64模式\", e), o.src = \"data:image/png;base64,\".concat(g(t));\n                    });\n                } else o.src = t;\n              } else if (\"string\" == typeof t) s(new Error(\"image decoded fail.\"));else {\n                var h = t.buffer.slice(t.byteOffset, t.byteOffset + t.byteLength);\n                n(createImageBitmap(new Blob([h])));\n              }\n            });\n          }\n        }, {\n          key: \"setContentMode\",\n          value: function (t) {\n            this._contentMode = t, this._update();\n          }\n        }, {\n          key: \"startAnimation\",\n          value: function () {\n            var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n            this.stopAnimation(!1), this._doStart(void 0, t, void 0);\n          }\n        }, {\n          key: \"startAnimationWithRange\",\n          value: function (t) {\n            var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n            this.stopAnimation(!1), this._doStart(t, e, void 0);\n          }\n        }, {\n          key: \"pauseAnimation\",\n          value: function () {\n            this.stopAnimation(!1);\n          }\n        }, {\n          key: \"stopAnimation\",\n          value: function (t) {\n            this._forwardAnimating = !1, void 0 !== this._animator && this._animator.stop(), void 0 === t && (t = this.clearsAfterStop), t && this.clear();\n          }\n        }, {\n          key: \"clear\",\n          value: function () {\n            var t;\n            null === (t = this._renderer) || void 0 === t || t.clear();\n          }\n        }, {\n          key: \"stepToFrame\",\n          value: function (t) {\n            var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n              r = this._videoItem;\n            r && (t >= r.frames || t < 0 || (this.pauseAnimation(), this._currentFrame = t, this._update(), e && this._doStart(void 0, !1, this._currentFrame)));\n          }\n        }, {\n          key: \"stepToPercentage\",\n          value: function (t) {\n            var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n              r = this._videoItem;\n            if (r) {\n              var i = t * r.frames;\n              i >= r.frames && i > 0 && (i = r.frames - 1), this.stepToFrame(i, e);\n            }\n          }\n        }, {\n          key: \"setImage\",\n          value: (t = s(e().mark(function t(r, i) {\n            var n;\n            return e().wrap(function (t) {\n              for (;;) switch (t.prev = t.next) {\n                case 0:\n                  return Yr(), t.next = 3, this.loadWXImage(r, \"dynamic_frame_\".concat(i));\n                case 3:\n                  n = t.sent, this._dynamicImage[i] = n;\n                case 5:\n                case \"end\":\n                  return t.stop();\n              }\n            }, t, this);\n          })), function (e, r) {\n            return t.apply(this, arguments);\n          })\n        }, {\n          key: \"setText\",\n          value: function (t, e) {\n            this._dynamicText[e] = t;\n          }\n        }, {\n          key: \"clearDynamicObjects\",\n          value: function () {\n            this._dynamicImage = {}, this._dynamicText = {};\n          }\n        }, {\n          key: \"onFinished\",\n          value: function (t) {\n            this._onFinished = t;\n          }\n        }, {\n          key: \"onFrame\",\n          value: function (t) {\n            this._onFrame = t;\n          }\n        }, {\n          key: \"onPercentage\",\n          value: function (t) {\n            this._onPercentage = t;\n          }\n        }, {\n          key: \"_doStart\",\n          value: function (t) {\n            var e = this,\n              r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n              i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n              n = this._videoItem;\n            if (n) {\n              this._animator = new Kr(), this._animator.canvas = this.canvas;\n              var s = 1 / n.FPS * 1e3;\n              void 0 !== t ? (this._animator.startValue = Math.max(0, t.location), this._animator.endValue = Math.min(n.frames - 1, t.location + t.length), this._animator.duration = (this._animator.endValue - this._animator.startValue + 1) * s) : (this._animator.startValue = 0, this._animator.endValue = n.frames - 1, this._animator.duration = n.frames * s), this._animator.loops = this.loops <= 0 ? 1 / 0 : this.loops, this._animator.fillRule = \"Backward\" === this.fillMode ? 1 : 0, this._animator.onUpdate = function (t) {\n                e._currentFrame !== Math.floor(t) && (e._currentFrame = Math.floor(t), e._updateFrame(e._currentFrame + 1), e._update(), \"function\" == typeof e._onFrame && e._onFrame(e._currentFrame), \"function\" == typeof e._onPercentage && e._onPercentage((e._currentFrame + 1) / n.frames));\n              }, this._animator.onEnd = function () {\n                e._forwardAnimating = !1, !0 === e.clearsAfterStop && e.clear(), \"function\" == typeof e._onFinished && e._onFinished();\n              }, this._currentFrame = this._animator.startValue, this._updateFrame(this._currentFrame), this._updateFrame(this._currentFrame + 1), this._update(), !0 === r ? (this._animator.reverse(i), this._forwardAnimating = !1) : (this._animator.start(i), this._forwardAnimating = !0);\n            }\n          }\n        }, {\n          key: \"transform\",\n          value: function (t) {\n            if (this._renderer) {\n              var e = {};\n              t.translateToX ? e.translateX = t.translateToX : t.translateByX && (e.translateX = this._renderer.transform.translateX + t.translateByX), t.translateToY ? e.translateY = t.translateToY : t.translateByY && (e.translateY = this._renderer.transform.translateY + t.translateByY), t.scaleTo ? e.scale = Math.min(Math.max(t.scaleTo, .1), 5) : t.scaleBy && (e.scale = Math.min(Math.max(this._renderer.transform.scale + t.scaleBy, .1), 5)), this._renderer.transform = Rr(Rr({}, this._renderer.transform), e);\n            }\n          }\n        }, {\n          key: \"_resize\",\n          value: function () {\n            var t = this.ctx,\n              e = this._videoItem;\n            if (t && e) {\n              var r = 1,\n                i = 1,\n                n = 0,\n                s = 0,\n                o = this.canvas.width,\n                a = this.canvas.height,\n                h = e.videoSize;\n              if (\"Fill\" === this._contentMode) r = o / h.width, i = a / h.height;else if (\"AspectFit\" === this._contentMode || \"AspectFill\" === this._contentMode) {\n                var u = h.width / h.height,\n                  l = o / a;\n                u >= l && \"AspectFit\" === this._contentMode || u <= l && \"AspectFill\" === this._contentMode ? (r = i = o / h.width, s = (a - h.height * i) / 2) : (u < l && \"AspectFit\" === this._contentMode || u > l && \"AspectFill\" === this._contentMode) && (r = i = a / h.height, n = (o - h.width * r) / 2);\n              }\n              this._renderer && (this._renderer.globalTransform = {\n                a: r,\n                b: 0,\n                c: 0,\n                d: i,\n                tx: n,\n                ty: s\n              });\n            }\n          }\n        }, {\n          key: \"_updateFrame\",\n          value: function (t) {\n            this._resize(), this._renderer && (this._renderer.clear(), this._renderer._dynamicImage = this._dynamicImage, this._renderer._dynamicText = this._dynamicText, this._renderer.drawFrame(t < 0 ? 0 : t));\n          }\n        }, {\n          key: \"_update\",\n          value: function () {\n            if (this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this._renderer) {\n              var t,\n                e = this._renderer.createImageData();\n              e && (null === (t = this.ctx) || void 0 === t || t.putImageData(e, 0, 0));\n            }\n          }\n        }]);\n        var t, r, i;\n      }(),\n      Wr = function (t, e) {\n        var r = t,\n          i = ni[e],\n          n = null,\n          s = 0,\n          o = null,\n          a = [],\n          h = {},\n          u = function (t, e) {\n            n = function (t) {\n              for (var e = new Array(t), r = 0; r < t; r += 1) {\n                e[r] = new Array(t);\n                for (var i = 0; i < t; i += 1) e[r][i] = null;\n              }\n              return e;\n            }(s = 4 * r + 17), l(0, 0), l(s - 7, 0), l(0, s - 7), c(), f(), p(t, e), r >= 7 && d(t), null == o && (o = v(r, i, a)), y(o, e);\n          },\n          l = function (t, e) {\n            for (var r = -1; r <= 7; r += 1) if (!(t + r <= -1 || s <= t + r)) for (var i = -1; i <= 7; i += 1) e + i <= -1 || s <= e + i || (n[t + r][e + i] = r >= 0 && r <= 6 && (0 == i || 6 == i) || i >= 0 && i <= 6 && (0 == r || 6 == r) || r >= 2 && r <= 4 && i >= 2 && i <= 4);\n          },\n          f = function () {\n            for (var t = 8; t < s - 8; t += 1) null == n[t][6] && (n[t][6] = t % 2 == 0);\n            for (var e = 8; e < s - 8; e += 1) null == n[6][e] && (n[6][e] = e % 2 == 0);\n          },\n          c = function () {\n            for (var t = si.getPatternPosition(r), e = 0; e < t.length; e += 1) for (var i = 0; i < t.length; i += 1) {\n              var s = t[e],\n                o = t[i];\n              if (null == n[s][o]) for (var a = -2; a <= 2; a += 1) for (var h = -2; h <= 2; h += 1) n[s + a][o + h] = -2 == a || 2 == a || -2 == h || 2 == h || 0 == a && 0 == h;\n            }\n          },\n          d = function (t) {\n            for (var e = si.getBCHTypeNumber(r), i = 0; i < 18; i += 1) {\n              var o = !t && 1 == (e >> i & 1);\n              n[Math.floor(i / 3)][i % 3 + s - 8 - 3] = o;\n            }\n            for (i = 0; i < 18; i += 1) o = !t && 1 == (e >> i & 1), n[i % 3 + s - 8 - 3][Math.floor(i / 3)] = o;\n          },\n          p = function (t, e) {\n            for (var r = i << 3 | e, o = si.getBCHTypeInfo(r), a = 0; a < 15; a += 1) {\n              var h = !t && 1 == (o >> a & 1);\n              a < 6 ? n[a][8] = h : a < 8 ? n[a + 1][8] = h : n[s - 15 + a][8] = h;\n            }\n            for (a = 0; a < 15; a += 1) h = !t && 1 == (o >> a & 1), a < 8 ? n[8][s - a - 1] = h : a < 9 ? n[8][15 - a - 1 + 1] = h : n[8][15 - a - 1] = h;\n            n[s - 8][8] = !t;\n          },\n          y = function (t, e) {\n            for (var r = -1, i = s - 1, o = 7, a = 0, h = si.getMaskFunction(e), u = s - 1; u > 0; u -= 2) for (6 == u && (u -= 1);;) {\n              for (var l = 0; l < 2; l += 1) if (null == n[i][u - l]) {\n                var f = !1;\n                a < t.length && (f = 1 == (t[a] >>> o & 1)), h(i, u - l) && (f = !f), n[i][u - l] = f, -1 == (o -= 1) && (a += 1, o = 7);\n              }\n              if ((i += r) < 0 || s <= i) {\n                i -= r, r = -r;\n                break;\n              }\n            }\n          },\n          v = function (t, e, r) {\n            for (var i = hi.getRSBlocks(t, e), n = ui(), s = 0; s < r.length; s += 1) {\n              var o = r[s];\n              n.put(o.getMode(), 4), n.put(o.getLength(), si.getLengthInBits(o.getMode(), t)), o.write(n);\n            }\n            var a = 0;\n            for (s = 0; s < i.length; s += 1) a += i[s].dataCount;\n            if (n.getLengthInBits() > 8 * a) throw new Error(\"code length overflow. (\" + n.getLengthInBits() + \">\" + 8 * a + \")\");\n            for (n.getLengthInBits() + 4 <= 8 * a && n.put(0, 4); n.getLengthInBits() % 8 != 0;) n.putBit(!1);\n            for (; !(n.getLengthInBits() >= 8 * a || (n.put(236, 8), n.getLengthInBits() >= 8 * a));) n.put(17, 8);\n            return function (t, e) {\n              for (var r = 0, i = 0, n = 0, s = new Array(e.length), o = new Array(e.length), a = 0; a < e.length; a += 1) {\n                var h = e[a].dataCount,\n                  u = e[a].totalCount - h;\n                i = Math.max(i, h), n = Math.max(n, u), s[a] = new Array(h);\n                for (var l = 0; l < s[a].length; l += 1) s[a][l] = 255 & t.getBuffer()[l + r];\n                r += h;\n                var f = si.getErrorCorrectPolynomial(u),\n                  c = ai(s[a], f.getLength() - 1).mod(f);\n                for (o[a] = new Array(f.getLength() - 1), l = 0; l < o[a].length; l += 1) {\n                  var d = l + c.getLength() - o[a].length;\n                  o[a][l] = d >= 0 ? c.getAt(d) : 0;\n                }\n              }\n              var p = 0;\n              for (l = 0; l < e.length; l += 1) p += e[l].totalCount;\n              var y = new Array(p),\n                v = 0;\n              for (l = 0; l < i; l += 1) for (a = 0; a < e.length; a += 1) l < s[a].length && (y[v] = s[a][l], v += 1);\n              for (l = 0; l < n; l += 1) for (a = 0; a < e.length; a += 1) l < o[a].length && (y[v] = o[a][l], v += 1);\n              return y;\n            }(n, i);\n          };\n        return h.addData = function (t) {\n          var e = li(t);\n          a.push(e), o = null;\n        }, h.isDark = function (t, e) {\n          if (t < 0 || s <= t || e < 0 || s <= e) throw new Error(t + \",\" + e);\n          return n[t][e];\n        }, h.getModuleCount = function () {\n          return s;\n        }, h.make = function () {\n          u(!1, function () {\n            for (var t = 0, e = 0, r = 0; r < 8; r += 1) {\n              u(!0, r);\n              var i = si.getLostPoint(h);\n              (0 == r || t > i) && (t = i, e = r);\n            }\n            return e;\n          }());\n        }, h.createTableTag = function (t, e) {\n          t = t || 2;\n          var r = \"\";\n          r += '<table style=\"', r += \" border-width: 0px; border-style: none;\", r += \" border-collapse: collapse;\", r += \" padding: 0px; margin: \" + (e = void 0 === e ? 4 * t : e) + \"px;\", r += '\">', r += \"<tbody>\";\n          for (var i = 0; i < h.getModuleCount(); i += 1) {\n            r += \"<tr>\";\n            for (var n = 0; n < h.getModuleCount(); n += 1) r += '<td style=\"', r += \" border-width: 0px; border-style: none;\", r += \" border-collapse: collapse;\", r += \" padding: 0px; margin: 0px;\", r += \" width: \" + t + \"px;\", r += \" height: \" + t + \"px;\", r += \" background-color: \", r += h.isDark(i, n) ? \"#000000\" : \"#ffffff\", r += \";\", r += '\"/>';\n            r += \"</tr>\";\n          }\n          return (r += \"</tbody>\") + \"</table>\";\n        }, h.createImgTag = function (t, e, r, i, n) {\n          t = t || 2;\n          var s = e = void 0 === e ? 4 * t : e,\n            o = h.getModuleCount() * t + e;\n          return di(r, r, function (e, r) {\n            if (s <= e && e < o && s <= r && r < o) {\n              var i = Math.floor((e - s) / t),\n                n = Math.floor((r - s) / t);\n              return h.isDark(n, i) ? 0 : 1;\n            }\n            return 1;\n          }, i, n);\n        }, h;\n      };\n    Wr.stringToBytes = function (t) {\n      for (var e = [], r = 0; r < t.length; r += 1) {\n        var i = t.charCodeAt(r);\n        e.push(255 & i);\n      }\n      return e;\n    }, Wr.createStringToBytes = function (t, e) {\n      var r = function () {\n          for (var r = ci(t), i = function () {\n              var t = r.read();\n              if (-1 == t) throw new Error();\n              return t;\n            }, n = 0, s = {};;) {\n            var o = r.read();\n            if (-1 == o) break;\n            var a = i(),\n              h = i() << 8 | i();\n            s[String.fromCharCode(o << 8 | a)] = h, n += 1;\n          }\n          if (n != e) throw new Error(n + \" != \" + e);\n          return s;\n        }(),\n        i = \"?\".charCodeAt(0);\n      return function (t) {\n        for (var e = [], n = 0; n < t.length; n += 1) {\n          var s = t.charCodeAt(n);\n          if (s < 128) e.push(s);else {\n            var o = r[t.charAt(n)];\n            \"number\" == typeof o ? (255 & o) == o ? e.push(o) : (e.push(o >>> 8), e.push(255 & o)) : e.push(i);\n          }\n        }\n        return e;\n      };\n    };\n    var Qr,\n      ti,\n      ei,\n      ri,\n      ii,\n      ni = {\n        L: 1,\n        M: 0,\n        Q: 3,\n        H: 2\n      },\n      si = (Qr = [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]], ti = 1335, ei = 7973, ii = function (t) {\n        for (var e = 0; 0 != t;) e += 1, t >>>= 1;\n        return e;\n      }, (ri = {}).getBCHTypeInfo = function (t) {\n        for (var e = t << 10; ii(e) - ii(ti) >= 0;) e ^= ti << ii(e) - ii(ti);\n        return 21522 ^ (t << 10 | e);\n      }, ri.getBCHTypeNumber = function (t) {\n        for (var e = t << 12; ii(e) - ii(ei) >= 0;) e ^= ei << ii(e) - ii(ei);\n        return t << 12 | e;\n      }, ri.getPatternPosition = function (t) {\n        return Qr[t - 1];\n      }, ri.getMaskFunction = function (t) {\n        switch (t) {\n          case 0:\n            return function (t, e) {\n              return (t + e) % 2 == 0;\n            };\n          case 1:\n            return function (t) {\n              return t % 2 == 0;\n            };\n          case 2:\n            return function (t, e) {\n              return e % 3 == 0;\n            };\n          case 3:\n            return function (t, e) {\n              return (t + e) % 3 == 0;\n            };\n          case 4:\n            return function (t, e) {\n              return (Math.floor(t / 2) + Math.floor(e / 3)) % 2 == 0;\n            };\n          case 5:\n            return function (t, e) {\n              return t * e % 2 + t * e % 3 == 0;\n            };\n          case 6:\n            return function (t, e) {\n              return (t * e % 2 + t * e % 3) % 2 == 0;\n            };\n          case 7:\n            return function (t, e) {\n              return (t * e % 3 + (t + e) % 2) % 2 == 0;\n            };\n          default:\n            throw new Error(\"bad maskPattern:\" + t);\n        }\n      }, ri.getErrorCorrectPolynomial = function (t) {\n        for (var e = ai([1], 0), r = 0; r < t; r += 1) e = e.multiply(ai([1, oi.gexp(r)], 0));\n        return e;\n      }, ri.getLengthInBits = function (t, e) {\n        if (e >= 1 && e < 10) switch (t) {\n          case 1:\n            return 10;\n          case 2:\n            return 9;\n          case 4:\n          case 8:\n            return 8;\n          default:\n            throw new Error(\"mode:\" + t);\n        } else if (e < 27) switch (t) {\n          case 1:\n            return 12;\n          case 2:\n            return 11;\n          case 4:\n            return 16;\n          case 8:\n            return 10;\n          default:\n            throw new Error(\"mode:\" + t);\n        } else {\n          if (!(e < 41)) throw new Error(\"type:\" + e);\n          switch (t) {\n            case 1:\n              return 14;\n            case 2:\n              return 13;\n            case 4:\n              return 16;\n            case 8:\n              return 12;\n            default:\n              throw new Error(\"mode:\" + t);\n          }\n        }\n      }, ri.getLostPoint = function (t) {\n        for (var e = t.getModuleCount(), r = 0, i = 0; i < e; i += 1) for (var n = 0; n < e; n += 1) {\n          for (var s = 0, o = t.isDark(i, n), a = -1; a <= 1; a += 1) if (!(i + a < 0 || e <= i + a)) for (var h = -1; h <= 1; h += 1) n + h < 0 || e <= n + h || 0 == a && 0 == h || o == t.isDark(i + a, n + h) && (s += 1);\n          s > 5 && (r += 3 + s - 5);\n        }\n        for (i = 0; i < e - 1; i += 1) for (n = 0; n < e - 1; n += 1) {\n          var u = 0;\n          t.isDark(i, n) && (u += 1), t.isDark(i + 1, n) && (u += 1), t.isDark(i, n + 1) && (u += 1), t.isDark(i + 1, n + 1) && (u += 1), 0 != u && 4 != u || (r += 3);\n        }\n        for (i = 0; i < e; i += 1) for (n = 0; n < e - 6; n += 1) t.isDark(i, n) && !t.isDark(i, n + 1) && t.isDark(i, n + 2) && t.isDark(i, n + 3) && t.isDark(i, n + 4) && !t.isDark(i, n + 5) && t.isDark(i, n + 6) && (r += 40);\n        for (n = 0; n < e; n += 1) for (i = 0; i < e - 6; i += 1) t.isDark(i, n) && !t.isDark(i + 1, n) && t.isDark(i + 2, n) && t.isDark(i + 3, n) && t.isDark(i + 4, n) && !t.isDark(i + 5, n) && t.isDark(i + 6, n) && (r += 40);\n        var l = 0;\n        for (n = 0; n < e; n += 1) for (i = 0; i < e; i += 1) t.isDark(i, n) && (l += 1);\n        return r + Math.abs(100 * l / e / e - 50) / 5 * 10;\n      }, ri),\n      oi = function () {\n        for (var t = new Array(256), e = new Array(256), r = 0; r < 8; r += 1) t[r] = 1 << r;\n        for (r = 8; r < 256; r += 1) t[r] = t[r - 4] ^ t[r - 5] ^ t[r - 6] ^ t[r - 8];\n        for (r = 0; r < 255; r += 1) e[t[r]] = r;\n        return {\n          glog: function (t) {\n            if (t < 1) throw new Error(\"glog(\" + t + \")\");\n            return e[t];\n          },\n          gexp: function (e) {\n            for (; e < 0;) e += 255;\n            for (; e >= 256;) e -= 255;\n            return t[e];\n          }\n        };\n      }();\n    function ai(t, e) {\n      if (void 0 === t.length) throw new Error(t.length + \"/\" + e);\n      var r = function () {\n          for (var r = 0; r < t.length && 0 == t[r];) r += 1;\n          for (var i = new Array(t.length - r + e), n = 0; n < t.length - r; n += 1) i[n] = t[n + r];\n          return i;\n        }(),\n        i = {\n          getAt: function (t) {\n            return r[t];\n          },\n          getLength: function () {\n            return r.length;\n          },\n          multiply: function (t) {\n            for (var e = new Array(i.getLength() + t.getLength() - 1), r = 0; r < i.getLength(); r += 1) for (var n = 0; n < t.getLength(); n += 1) e[r + n] ^= oi.gexp(oi.glog(i.getAt(r)) + oi.glog(t.getAt(n)));\n            return ai(e, 0);\n          },\n          mod: function (t) {\n            if (i.getLength() - t.getLength() < 0) return i;\n            for (var e = oi.glog(i.getAt(0)) - oi.glog(t.getAt(0)), r = new Array(i.getLength()), n = 0; n < i.getLength(); n += 1) r[n] = i.getAt(n);\n            for (n = 0; n < t.getLength(); n += 1) r[n] ^= oi.gexp(oi.glog(t.getAt(n)) + e);\n            return ai(r, 0).mod(t);\n          }\n        };\n      return i;\n    }\n    var hi = function () {\n        var t = [[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9], [1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16], [1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13], [1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9], [1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12], [2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15], [2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14], [2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15], [2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13], [2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16], [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13], [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15], [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12], [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13], [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12], [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16], [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15], [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15], [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14], [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16], [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17], [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13], [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16], [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17], [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16], [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17], [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16], [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16], [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16], [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16], [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16], [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16], [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16], [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17], [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16], [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16], [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16], [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16], [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16], [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]],\n          e = function (t, e) {\n            var r = {};\n            return r.totalCount = t, r.dataCount = e, r;\n          },\n          r = {\n            getRSBlocks: function (r, i) {\n              var n = function (e, r) {\n                switch (r) {\n                  case ni.L:\n                    return t[4 * (e - 1) + 0];\n                  case ni.M:\n                    return t[4 * (e - 1) + 1];\n                  case ni.Q:\n                    return t[4 * (e - 1) + 2];\n                  case ni.H:\n                    return t[4 * (e - 1) + 3];\n                  default:\n                    return;\n                }\n              }(r, i);\n              if (void 0 === n) throw new Error(\"bad rs block @ typeNumber:\" + r + \"/errorCorrectLevel:\" + i);\n              for (var s = n.length / 3, o = [], a = 0; a < s; a += 1) for (var h = n[3 * a + 0], u = n[3 * a + 1], l = n[3 * a + 2], f = 0; f < h; f += 1) o.push(e(u, l));\n              return o;\n            }\n          };\n        return r;\n      }(),\n      ui = function () {\n        var t = [],\n          e = 0,\n          r = {\n            getBuffer: function () {\n              return t;\n            },\n            getAt: function (e) {\n              var r = Math.floor(e / 8);\n              return 1 == (t[r] >>> 7 - e % 8 & 1);\n            },\n            put: function (t, e) {\n              for (var i = 0; i < e; i += 1) r.putBit(1 == (t >>> e - i - 1 & 1));\n            },\n            getLengthInBits: function () {\n              return e;\n            },\n            putBit: function (r) {\n              var i = Math.floor(e / 8);\n              t.length <= i && t.push(0), r && (t[i] |= 128 >>> e % 8), e += 1;\n            }\n          };\n        return r;\n      },\n      li = function (t) {\n        for (var e = t, r = [], i = {}, n = 0, s = e.length; n < s; n++) {\n          var o = [],\n            a = e.charCodeAt(n);\n          a > 65536 ? (o[0] = 240 | (1835008 & a) >>> 18, o[1] = 128 | (258048 & a) >>> 12, o[2] = 128 | (4032 & a) >>> 6, o[3] = 128 | 63 & a) : a > 2048 ? (o[0] = 224 | (61440 & a) >>> 12, o[1] = 128 | (4032 & a) >>> 6, o[2] = 128 | 63 & a) : a > 128 ? (o[0] = 192 | (1984 & a) >>> 6, o[1] = 128 | 63 & a) : o[0] = a, r.push(o);\n        }\n        (r = Array.prototype.concat.apply([], r)).length != e.length && (r.unshift(191), r.unshift(187), r.unshift(239));\n        var h = r;\n        return i.getMode = function () {\n          return 4;\n        }, i.getLength = function () {\n          return h.length;\n        }, i.write = function (t) {\n          for (var e = 0; e < h.length; e += 1) t.put(h[e], 8);\n        }, i;\n      },\n      fi = function () {\n        var t = [],\n          e = {\n            writeByte: function (e) {\n              t.push(255 & e);\n            },\n            writeShort: function (t) {\n              e.writeByte(t), e.writeByte(t >>> 8);\n            },\n            writeBytes: function (t, r, i) {\n              r = r || 0, i = i || t.length;\n              for (var n = 0; n < i; n += 1) e.writeByte(t[n + r]);\n            },\n            writeString: function (t) {\n              for (var r = 0; r < t.length; r += 1) e.writeByte(t.charCodeAt(r));\n            },\n            toByteArray: function () {\n              return t;\n            },\n            toString: function () {\n              var e = \"\";\n              e += \"[\";\n              for (var r = 0; r < t.length; r += 1) r > 0 && (e += \",\"), e += t[r];\n              return e + \"]\";\n            }\n          };\n        return e;\n      },\n      ci = function (t) {\n        var e = t,\n          r = 0,\n          i = 0,\n          n = 0,\n          s = {\n            read: function () {\n              for (; n < 8;) {\n                if (r >= e.length) {\n                  if (0 == n) return -1;\n                  throw new Error(\"unexpected end of file./\" + n);\n                }\n                var t = e.charAt(r);\n                if (r += 1, \"=\" == t) return n = 0, -1;\n                t.match(/^\\s$/) || (i = i << 6 | o(t.charCodeAt(0)), n += 6);\n              }\n              var s = i >>> n - 8 & 255;\n              return n -= 8, s;\n            }\n          },\n          o = function (t) {\n            if (t >= 65 && t <= 90) return t - 65;\n            if (t >= 97 && t <= 122) return t - 97 + 26;\n            if (t >= 48 && t <= 57) return t - 48 + 52;\n            if (43 == t) return 62;\n            if (47 == t) return 63;\n            throw new Error(\"c:\" + t);\n          };\n        return s;\n      },\n      di = function (t, e, r, i, n) {\n        for (var s = function (t, e) {\n            var r = t,\n              i = e,\n              n = new Array(t * e),\n              s = {\n                setPixel: function (t, e, i) {\n                  n[e * r + t] = i;\n                },\n                write: function (t) {\n                  var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"#000000\",\n                    n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"#ffffff\";\n                  t.writeString(\"GIF87a\"), t.writeShort(r), t.writeShort(i), t.writeByte(128), t.writeByte(0), t.writeByte(0);\n                  var s = e.split(\"\");\n                  t.writeByte(parseInt(\"\".concat(s[1]).concat(s[2]), 16)), t.writeByte(parseInt(\"\".concat(s[3]).concat(s[4]), 16)), t.writeByte(parseInt(\"\".concat(s[5]).concat(s[6]), 16));\n                  var a = n.split(\"\");\n                  t.writeByte(parseInt(\"\".concat(a[1]).concat(a[2]), 16)), t.writeByte(parseInt(\"\".concat(a[3]).concat(a[4]), 16)), t.writeByte(parseInt(\"\".concat(a[5]).concat(a[6]), 16)), t.writeString(\",\"), t.writeShort(0), t.writeShort(0), t.writeShort(r), t.writeShort(i), t.writeByte(0);\n                  var h = o(2);\n                  t.writeByte(2);\n                  for (var u = 0; h.length - u > 255;) t.writeByte(255), t.writeBytes(h, u, 255), u += 255;\n                  t.writeByte(h.length - u), t.writeBytes(h, u, h.length - u), t.writeByte(0), t.writeString(\";\");\n                }\n              },\n              o = function (t) {\n                for (var e = 1 << t, r = 1 + (1 << t), i = t + 1, s = a(), o = 0; o < e; o += 1) s.add(String.fromCharCode(o));\n                s.add(String.fromCharCode(e)), s.add(String.fromCharCode(r));\n                var h,\n                  u,\n                  l,\n                  f = fi(),\n                  c = (h = f, u = 0, l = 0, {\n                    write: function (t, e) {\n                      if (t >>> e != 0) throw new Error(\"length over\");\n                      for (; u + e >= 8;) h.writeByte(255 & (t << u | l)), e -= 8 - u, t >>>= 8 - u, l = 0, u = 0;\n                      l |= t << u, u += e;\n                    },\n                    flush: function () {\n                      u > 0 && h.writeByte(l);\n                    }\n                  });\n                c.write(e, i);\n                var d = 0,\n                  p = String.fromCharCode(n[d]);\n                for (d += 1; d < n.length;) {\n                  var y = String.fromCharCode(n[d]);\n                  d += 1, s.contains(p + y) ? p += y : (c.write(s.indexOf(p), i), s.size() < 4095 && (s.size() == 1 << i && (i += 1), s.add(p + y)), p = y);\n                }\n                return c.write(s.indexOf(p), i), c.write(r, i), c.flush(), f.toByteArray();\n              },\n              a = function () {\n                var t = {},\n                  e = 0,\n                  r = {\n                    add: function (i) {\n                      if (r.contains(i)) throw new Error(\"dup key:\" + i);\n                      t[i] = e, e += 1;\n                    },\n                    size: function () {\n                      return e;\n                    },\n                    indexOf: function (e) {\n                      return t[e];\n                    },\n                    contains: function (e) {\n                      return void 0 !== t[e];\n                    }\n                  };\n                return r;\n              };\n            return s;\n          }(t, e), o = 0; o < e; o += 1) for (var a = 0; a < t; a += 1) s.setPixel(a, o, r(a, o));\n        var h = fi();\n        s.write(h, i, n);\n        for (var u = function () {\n            var t = 0,\n              e = 0,\n              r = 0,\n              i = \"\",\n              n = {},\n              s = function (t) {\n                i += String.fromCharCode(o(63 & t));\n              },\n              o = function (t) {\n                if (t < 0) ;else {\n                  if (t < 26) return 65 + t;\n                  if (t < 52) return t - 26 + 97;\n                  if (t < 62) return t - 52 + 48;\n                  if (62 == t) return 43;\n                  if (63 == t) return 47;\n                }\n                throw new Error(\"n:\" + t);\n              };\n            return n.writeByte = function (i) {\n              for (t = t << 8 | 255 & i, e += 8, r += 1; e >= 6;) s(t >>> e - 6), e -= 6;\n            }, n.flush = function () {\n              if (e > 0 && (s(t << 6 - e), t = 0, e = 0), r % 3 != 0) for (var n = 3 - r % 3, o = 0; o < n; o += 1) i += \"=\";\n            }, n.toString = function () {\n              return i;\n            }, n;\n          }(), l = h.toByteArray(), f = 0; f < l.length; f += 1) u.writeByte(l[f]);\n        u.flush();\n        var c = \"\";\n        return (c += \"data:image/gif;base64,\") + u;\n      },\n      pi = 0;\n    function yi(t, e, r) {\n      var i;\n      try {\n        (i = Wr(r, e)).addData(t), i.make();\n      } catch (i) {\n        if (r >= 40) throw new Error(\"Text too long to encode\");\n        return yi(t, e, r + 1);\n      }\n      return i;\n    }\n    var vi = function () {\n      function r(t, e, i) {\n        switch (o(this, r), f(this, \"platform\", void 0), f(this, \"size\", void 0), f(this, \"dpi\", 1), f(this, \"context\", void 0), f(this, \"canvas\", void 0), f(this, \"cachedImages\", {}), this.platform = _(), this.dpi = i || this.dpi, this.size = {\n          width: t || 300,\n          height: e || 300\n        }, this.platform) {\n          case \"weapp\":\n            this.canvas = has.createOffscreenCanvas({\n              type: \"2d\",\n              width: this.size.width * this.dpi,\n              height: this.size.height * this.dpi\n            }), this.context = this.canvas.getContext(\"2d\");\n            break;\n          case \"alipay\":\n            this.canvas = my.createOffscreenCanvas({\n              type: \"2d\",\n              width: this.size.width * this.dpi,\n              height: this.size.height * this.dpi\n            }), this.context = this.canvas.getContext(\"2d\");\n            break;\n          case \"tt\":\n            this.canvas = has.createOffscreenCanvas({\n              type: \"2d\",\n              width: this.size.width * this.dpi,\n              height: this.size.height * this.dpi\n            }), this.context = this.canvas.getContext(\"2d\");\n            break;\n          case \"h5\":\n            this.canvas = new OffscreenCanvas(this.size.width * this.dpi, this.size.height * this.dpi), this.context = this.canvas.getContext(\"2d\");\n            break;\n          default:\n            y(\"[painter]不支持当前平台\", this.platform);\n        }\n      }\n      return u(r, [{\n        key: \"calcBound\",\n        value: function (e) {\n          var r,\n            i,\n            n = this.calcBoundSize(e.width, this.size.width) || 0,\n            s = this.calcBoundSize(e.height, this.size.height) || 0,\n            o = this.calcBoundSize(e.left, this.size.width),\n            a = this.calcBoundSize(e.right, this.size.width),\n            h = this.calcBoundSize(e.top, this.size.height),\n            u = this.calcBoundSize(e.bottom, this.size.height),\n            l = Math.max(0, Math.min(n, s)),\n            f = this.calcBoundSize(\"object\" === t(e.radius) ? e.radius.tl : e.radius, l) || 0;\n          f = Math.min(l / 2, Math.max(f, 0));\n          var c = this.calcBoundSize(\"object\" === t(e.radius) ? e.radius.tr : e.radius, l) || 0;\n          c = Math.min(l / 2, Math.max(c, 0));\n          var d = this.calcBoundSize(\"object\" === t(e.radius) ? e.radius.bl : e.radius, l) || 0;\n          d = Math.min(l / 2, Math.max(d, 0));\n          var p = this.calcBoundSize(\"object\" === t(e.radius) ? e.radius.br : e.radius, l) || 0;\n          return p = Math.min(l / 2, Math.max(p, 0)), r = void 0 !== o ? void 0 !== a ? o + (this.size.width - o - a - n) / 2 : o : void 0 !== a ? this.size.width - a - n : 0, i = void 0 !== h ? void 0 !== u ? h + (this.size.height - h - u - s) / 2 : h : void 0 !== u ? this.size.height - u - s : 0, {\n            x: r * this.dpi,\n            y: i * this.dpi,\n            width: n * this.dpi,\n            height: s * this.dpi,\n            radiusTL: f * this.dpi,\n            radiusTR: c * this.dpi,\n            radiusBL: d * this.dpi,\n            radiusBR: p * this.dpi\n          };\n        }\n      }, {\n        key: \"calcBoundSize\",\n        value: function (t, e) {\n          return \"string\" == typeof t ? /[\\d\\.]+%$/.test(t) ? e * Number(t.substring(0, t.length - 1)) / 100 : 0 : t;\n        }\n      }, {\n        key: \"drawImage\",\n        value: (d = s(e().mark(function t(r, i) {\n          var n, s, o, a, h, u, l, f;\n          return e().wrap(function (t) {\n            for (;;) switch (t.prev = t.next) {\n              case 0:\n                return this.context.save(), t.next = 3, this.loadImage(r);\n              case 3:\n                n = t.sent, s = n.width, o = n.height, a = n.width, h = n.height, u = this.calcBoundSize(i.width, this.size.width), (l = this.calcBoundSize(i.height, this.size.height)) ? u ? (a = u, h = l) : (a = n.width * l / n.height, h = l) : u ? (a = u, h = n.height * u / n.width) : (a = n.width, h = n.height), f = this.calcBound(Rr(Rr({}, i), {}, {\n                  width: a,\n                  height: h\n                })), this.drawRect(f), this.context.clip(), this.context.drawImage(n.data, 0, 0, s, o, f.x, f.y, f.width, f.height), this.context.restore();\n              case 13:\n              case \"end\":\n                return t.stop();\n            }\n          }, t, this);\n        })), function (t, e) {\n          return d.apply(this, arguments);\n        })\n      }, {\n        key: \"drawText\",\n        value: (c = s(e().mark(function t(r, i, n) {\n          var s, o, a, h;\n          return e().wrap(function (t) {\n            for (;;) switch (t.prev = t.next) {\n              case 0:\n                return this.context.save(), s = this.calcBound(i), this.context.fillStyle = (null == n ? void 0 : n.color) || \"#000000\", o = ((null == n ? void 0 : n.fontSize) || 16) * this.dpi, this.context.font = \"\".concat((null == n ? void 0 : n.fontWeight) || \"normal\", \" \").concat(o, \"px \").concat((null == n ? void 0 : n.fontFamily) || \"sans-serif\"), this.context.textBaseline = \"top\", this.context.textAlign = (null == n ? void 0 : n.textAlign) || \"start\", a = this.context.measureText(r), h = a.width, i.width ? this.context.fillText(r, s.x, s.y, s.width) : this.context.fillText(r, s.x, s.y), this.context.restore(), t.abrupt(\"return\", {\n                  width: i.width ? s.width : h,\n                  height: o\n                });\n              case 11:\n              case \"end\":\n                return t.stop();\n            }\n          }, t, this);\n        })), function (t, e, r) {\n          return c.apply(this, arguments);\n        })\n      }, {\n        key: \"drawQrCode\",\n        value: (h = s(e().mark(function t(r, i, n) {\n          var s, o, a, h, u, l, f, c, d, p, y;\n          return e().wrap(function (t) {\n            for (;;) switch (t.prev = t.next) {\n              case 0:\n                for (this.context.save(), s = \"string\" == typeof r ? yi(r, n.level, 4) : r, o = s.getModuleCount(), a = Math.ceil(n.size / o), h = a * o + 2 * n.margin, u = this.calcBound(Rr(Rr({}, i), {}, {\n                  width: h,\n                  height: h\n                })), l = n.margin * this.dpi, f = a * this.dpi, this.context.fillStyle = n.bgColor, this.context.fillRect(u.x, u.y, u.x + u.width, u.y + u.height), c = 0; c < s.getModuleCount(); c++) for (d = 0; d < s.getModuleCount(); d++) this.context.fillStyle = s.isDark(c, d) ? n.fgColor : n.bgColor, p = Math.ceil((d + 1) * f) - Math.floor(d * f), y = Math.ceil((c + 1) * f) - Math.floor(c * f), this.context.fillRect(u.x + Math.round(d * f) + l, u.y + Math.round(c * f) + l, p, y);\n                return this.context.restore(), t.abrupt(\"return\", {\n                  width: u.width,\n                  height: u.height\n                });\n              case 13:\n              case \"end\":\n                return t.stop();\n            }\n          }, t, this);\n        })), function (t, e, r) {\n          return h.apply(this, arguments);\n        })\n      }, {\n        key: \"drawColor\",\n        value: (a = s(e().mark(function t(r, i) {\n          var n;\n          return e().wrap(function (t) {\n            for (;;) switch (t.prev = t.next) {\n              case 0:\n                this.context.save(), n = this.calcBound(Rr(Rr({}, i), {}, {\n                  width: i.width || 100,\n                  height: i.height || 100\n                })), this.drawRect(n), this.context.fillStyle = r, this.context.fill(), this.context.restore();\n              case 6:\n              case \"end\":\n                return t.stop();\n            }\n          }, t, this);\n        })), function (t, e) {\n          return a.apply(this, arguments);\n        })\n      }, {\n        key: \"loadImage\",\n        value: function (t) {\n          var e = this;\n          return new Promise(function (r, i) {\n            if (\"h5\" === e.platform) {\n              var n = document.createElement(\"img\");\n              n.crossOrigin = \"anonymous\", n.onload = function () {\n                r({\n                  width: n.naturalWidth,\n                  height: n.naturalHeight,\n                  data: n\n                });\n              }, n.onerror = function () {\n                i(\"加载失败\");\n              }, n.src = t;\n            } else {\n              var s = e.canvas.createImage();\n              e.cachedImages[t] ? (s.src = t, y(\"[painter]cache image matched\", t), r({\n                width: e.cachedImages[t].width,\n                height: e.cachedImages[t].height,\n                data: s\n              })) : (s.onload = function () {\n                e.cachedImages[t] = s, r({\n                  width: s.width,\n                  height: s.height,\n                  data: s\n                });\n              }, s.onerror = function () {\n                i(\"加载失败\");\n              }, s.src = t.startsWith(\"data:image/\") ? t : t.includes(\"?\") ? \"\".concat(t, \"&t=\").concat(Date.now()) : \"\".concat(t, \"?t=\").concat(Date.now()));\n            }\n          });\n        }\n      }, {\n        key: \"drawRect\",\n        value: function (t) {\n          this.context.beginPath(), this.context.moveTo(t.x + t.radiusTL, t.y), this.context.lineTo(t.x + t.width - t.radiusTR, t.y), this.context.arcTo(t.x + t.width, t.y, t.x + t.width, t.y + t.radiusTR, t.radiusTR), this.context.lineTo(t.x + t.width, t.y + t.height - t.radiusBR), this.context.arcTo(t.x + t.width, t.y + t.height, t.x + t.width - t.radiusBR, t.y + t.height, t.radiusBR), this.context.lineTo(t.x + t.radiusBL, t.y + t.height), this.context.arcTo(t.x, t.y + t.height, t.x, t.y + t.height - t.radiusBL, t.radiusBL), this.context.lineTo(t.x, t.y + t.radiusTL), this.context.arcTo(t.x, t.y, t.x + t.radiusTL, t.y, t.radiusTL), this.context.closePath();\n        }\n      }, {\n        key: \"drawCustom\",\n        value: (n = s(e().mark(function t(r) {\n          return e().wrap(function (t) {\n            for (;;) switch (t.prev = t.next) {\n              case 0:\n                return this.context.save(), t.next = 3, r(this.context);\n              case 3:\n                this.context.restore();\n              case 4:\n              case \"end\":\n                return t.stop();\n            }\n          }, t, this);\n        })), function (t) {\n          return n.apply(this, arguments);\n        })\n      }, {\n        key: \"output\",\n        value: function (t) {\n          var e = this;\n          return new Promise(function (i, n) {\n            switch (e.platform) {\n              case \"h5\":\n                e.canvas.convertToBlob({\n                  type: \"image/png\",\n                  quality: 1\n                }).then(function (t) {\n                  var e = new FileReader();\n                  e.onload = function () {\n                    var t = e.result;\n                    i({\n                      src: t,\n                      hash: \"\"\n                    });\n                  }, e.onerror = n, e.readAsDataURL(t);\n                }).catch(n);\n                break;\n              case \"alipay\":\n                var s = e.context.canvas.toDataURL(\"image/png\");\n                if (\"file\" === t) {\n                  Yr();\n                  var o = l(),\n                    a = o.getFileSystemManager(),\n                    h = \"\".concat(w(), \"/painter_image_\").concat(++pi, \".png\");\n                  o.downloadFile({\n                    url: s,\n                    success: function (t) {\n                      a.saveFile({\n                        filePath: h,\n                        tempFilePath: t.tempFilePath,\n                        success: function () {\n                          r.getHash(h, \"file\").then(function (t) {\n                            i({\n                              src: h,\n                              hash: t\n                            });\n                          }).catch(function (t) {\n                            console.warn(\"[svga/painter]hash failed\", t), i({\n                              src: h,\n                              hash: \"\"\n                            });\n                          });\n                        },\n                        fail: function (t) {\n                          n(new Error(t.errMsg || \"output failed(1)\"));\n                        }\n                      });\n                    },\n                    fail: function (t) {\n                      n(new Error(t.errMsg || \"output failed(0)\"));\n                    }\n                  });\n                } else i({\n                  src: s,\n                  hash: v(s)\n                });\n                break;\n              case \"weapp\":\n              case \"tt\":\n                var u = e.context.canvas.toDataURL(\"image/png\");\n                if (\"file\" === t) {\n                  Yr();\n                  var f = l().getFileSystemManager(),\n                    c = \"\".concat(w(), \"/painter_image_\").concat(++pi, \".png\");\n                  f.writeFile({\n                    filePath: c,\n                    encoding: \"base64\",\n                    data: u.substring(22),\n                    success: function () {\n                      r.getHash(c, \"file\").then(function (t) {\n                        i({\n                          src: c,\n                          hash: t\n                        });\n                      }).catch(function (t) {\n                        console.warn(\"[svga/painter]hash failed\", t), i({\n                          src: c,\n                          hash: \"\"\n                        });\n                      });\n                    },\n                    fail: function (t) {\n                      n(new Error(t.errMsg || \"output failed\"));\n                    }\n                  });\n                } else i({\n                  src: u,\n                  hash: v(u)\n                });\n                break;\n              default:\n                n(new Error(\"暂不支持当前平台\"));\n            }\n          });\n        }\n      }], [{\n        key: \"getHash\",\n        value: function (t, e) {\n          return new Promise(function (r, i) {\n            \"base64\" !== e ? l().getFileSystemManager().getFileInfo({\n              filePath: t,\n              digestAlgorithm: \"md5\",\n              success: function (t) {\n                r(t.digest);\n              },\n              fail: function (t) {\n                i(t.errMsg || \"unknown error\");\n              }\n            }) : r(v(t));\n          });\n        }\n      }, {\n        key: \"qrcode\",\n        value: (i = s(e().mark(function t(i, n) {\n          var s, o, a, h, u, l, f, c, d, p;\n          return e().wrap(function (t) {\n            for (;;) switch (t.prev = t.next) {\n              case 0:\n                return s = (null == n ? void 0 : n.level) || \"M\", o = yi(i, s, 4), a = o.getModuleCount(), h = (null == n ? void 0 : n.size) || 300, u = Math.ceil(h / a), l = u * a, f = \"number\" == typeof (null == n ? void 0 : n.margin) ? n.margin : \"string\" == typeof (null == n ? void 0 : n.margin) && n.margin.endsWith(\"t\") ? u * (Number(n.margin.substring(0, n.margin.length - 1)) || 0) : u, d = new r(c = l + 2 * f, c, 1), t.next = 11, d.drawQrCode(i, {}, {\n                  size: l,\n                  margin: f,\n                  level: s,\n                  bgColor: (null == n ? void 0 : n.bgColor) || \"#ffffff\",\n                  fgColor: (null == n ? void 0 : n.fgColor) || \"#000000\"\n                });\n              case 11:\n                return t.next = 13, d.output();\n              case 13:\n                return p = t.sent, t.abrupt(\"return\", p);\n              case 15:\n              case \"end\":\n                return t.stop();\n            }\n          }, t);\n        })), function (t, e) {\n          return i.apply(this, arguments);\n        })\n      }]);\n      var i, n, a, h, c, d;\n    }();\n    const gi = {\n      init: function (t) {\n        return s(e().mark(function r() {\n          return e().wrap(function (e) {\n            for (;;) switch (e.prev = e.next) {\n              case 0:\n                return m(t), e.next = 3, \"h5\" === _() ? Promise.resolve(!1) : new Promise(function (t) {\n                  var e = l().getFileSystemManager(),\n                    r = w();\n                  e.access({\n                    path: r,\n                    success: function () {\n                      try {\n                        e.rmdirSync(r, !0), t(!0);\n                      } catch (e) {\n                        y(\"info\", \"[svga]清理缓存目录失败\", e), t(!1);\n                      }\n                    },\n                    fail: function () {\n                      t(!0);\n                    }\n                  });\n                });\n              case 3:\n                y(\"inited\", t);\n              case 4:\n              case \"end\":\n                return e.stop();\n            }\n          }, r);\n        }))();\n      },\n      md5: function (t) {\n        return d.hashStr(t);\n      },\n      Player: Gr,\n      Parser: Lr,\n      Painter: vi\n    };\n  })(), i;\n})());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./utils/svga-2dfire.js\n");

/***/ }),

/***/ "./miniprogram_npm/@ungap/url-search-params/cjs/index.js":
/*!***************************************************************!*\
  !*** ./miniprogram_npm/@ungap/url-search-params/cjs/index.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*! (c) Andrea Giammarchi - ISC */\nvar self = {};\ntry {\n  (function (URLSearchParams, plus) {\n    if (new URLSearchParams('q=%2B').get('q') !== plus || new URLSearchParams({\n      q: plus\n    }).get('q') !== plus || new URLSearchParams([['q', plus]]).get('q') !== plus || new URLSearchParams('q=\\n').toString() !== 'q=%0A' || new URLSearchParams({\n      q: ' &'\n    }).toString() !== 'q=+%26' || new URLSearchParams({\n      q: '%zx'\n    }).toString() !== 'q=%25zx') throw URLSearchParams;\n    self.URLSearchParams = URLSearchParams;\n  })(URLSearchParams, '+');\n} catch (URLSearchParams) {\n  (function (Object, String, isArray) {\n    'use strict';\n\n    var create = Object.create;\n    var defineProperty = Object.defineProperty;\n    var find = /[!'\\(\\)~]|%20|%00/g;\n    var findPercentSign = /%(?![0-9a-fA-F]{2})/g;\n    var plus = /\\+/g;\n    var replace = {\n      '!': '%21',\n      \"'\": '%27',\n      '(': '%28',\n      ')': '%29',\n      '~': '%7E',\n      '%20': '+',\n      '%00': '\\x00'\n    };\n    var proto = {\n      append: function (key, value) {\n        appendTo(this._ungap, key, value);\n      },\n      delete: function (key) {\n        delete this._ungap[key];\n      },\n      get: function (key) {\n        return this.has(key) ? this._ungap[key][0] : null;\n      },\n      getAll: function (key) {\n        return this.has(key) ? this._ungap[key].slice(0) : [];\n      },\n      has: function (key) {\n        return key in this._ungap;\n      },\n      set: function (key, value) {\n        this._ungap[key] = [String(value)];\n      },\n      forEach: function (callback, thisArg) {\n        var self = this;\n        for (var key in self._ungap) self._ungap[key].forEach(invoke, key);\n        function invoke(value) {\n          callback.call(thisArg, value, String(key), self);\n        }\n      },\n      toJSON: function () {\n        return {};\n      },\n      toString: function () {\n        var query = [];\n        for (var key in this._ungap) {\n          var encoded = encode(key);\n          for (var i = 0, value = this._ungap[key]; i < value.length; i++) {\n            query.push(encoded + '=' + encode(value[i]));\n          }\n        }\n        return query.join('&');\n      }\n    };\n    for (var key in proto) defineProperty(URLSearchParams.prototype, key, {\n      configurable: true,\n      writable: true,\n      value: proto[key]\n    });\n    self.URLSearchParams = URLSearchParams;\n    function URLSearchParams(query) {\n      var dict = create(null);\n      defineProperty(this, '_ungap', {\n        value: dict\n      });\n      switch (true) {\n        case !query:\n          break;\n        case typeof query === 'string':\n          if (query.charAt(0) === '?') {\n            query = query.slice(1);\n          }\n          for (var pairs = query.split('&'), i = 0, length = pairs.length; i < length; i++) {\n            var value = pairs[i];\n            var index = value.indexOf('=');\n            if (-1 < index) {\n              appendTo(dict, decode(value.slice(0, index)), decode(value.slice(index + 1)));\n            } else if (value.length) {\n              appendTo(dict, decode(value), '');\n            }\n          }\n          break;\n        case isArray(query):\n          for (var i = 0, length = query.length; i < length; i++) {\n            var value = query[i];\n            appendTo(dict, value[0], value[1]);\n          }\n          break;\n        case 'forEach' in query:\n          query.forEach(addEach, dict);\n          break;\n        default:\n          for (var key in query) appendTo(dict, key, query[key]);\n      }\n    }\n    function addEach(value, key) {\n      appendTo(this, key, value);\n    }\n    function appendTo(dict, key, value) {\n      var res = isArray(value) ? value.join(',') : value;\n      if (key in dict) dict[key].push(res);else dict[key] = [res];\n    }\n    function decode(str) {\n      return decodeURIComponent(str.replace(findPercentSign, '%25').replace(plus, ' '));\n    }\n    function encode(str) {\n      return encodeURIComponent(str).replace(find, replacer);\n    }\n    function replacer(match) {\n      return replace[match];\n    }\n  })(Object, String, Array.isArray);\n}\n(function (URLSearchParamsProto) {\n  var iterable = false;\n  try {\n    iterable = !!Symbol.iterator;\n  } catch (o_O) {}\n\n  /* istanbul ignore else */\n  if (!('forEach' in URLSearchParamsProto)) {\n    URLSearchParamsProto.forEach = function forEach(callback, thisArg) {\n      var self = this;\n      var names = Object.create(null);\n      this.toString().replace(/=[\\s\\S]*?(?:&|$)/g, '=').split('=').forEach(function (name) {\n        if (!name.length || name in names) return;\n        (names[name] = self.getAll(name)).forEach(function (value) {\n          callback.call(thisArg, value, name, self);\n        });\n      });\n    };\n  }\n\n  /* istanbul ignore else */\n  if (!('keys' in URLSearchParamsProto)) {\n    URLSearchParamsProto.keys = function keys() {\n      return iterator(this, function (value, key) {\n        this.push(key);\n      });\n    };\n  }\n\n  /* istanbul ignore else */\n  if (!('values' in URLSearchParamsProto)) {\n    URLSearchParamsProto.values = function values() {\n      return iterator(this, function (value, key) {\n        this.push(value);\n      });\n    };\n  }\n\n  /* istanbul ignore else */\n  if (!('entries' in URLSearchParamsProto)) {\n    URLSearchParamsProto.entries = function entries() {\n      return iterator(this, function (value, key) {\n        this.push([key, value]);\n      });\n    };\n  }\n\n  /* istanbul ignore else */\n  if (iterable && !(Symbol.iterator in URLSearchParamsProto)) {\n    URLSearchParamsProto[Symbol.iterator] = URLSearchParamsProto.entries;\n  }\n\n  /* istanbul ignore else */\n  if (!('sort' in URLSearchParamsProto)) {\n    URLSearchParamsProto.sort = function sort() {\n      var entries = this.entries(),\n        entry = entries.next(),\n        done = entry.done,\n        keys = [],\n        values = Object.create(null),\n        i,\n        key,\n        value;\n      while (!done) {\n        value = entry.value;\n        key = value[0];\n        keys.push(key);\n        if (!(key in values)) {\n          values[key] = [];\n        }\n        values[key].push(value[1]);\n        entry = entries.next();\n        done = entry.done;\n      }\n      // not the champion in efficiency\n      // but these two bits just do the job\n      keys.sort();\n      for (i = 0; i < keys.length; i++) {\n        this.delete(keys[i]);\n      }\n      for (i = 0; i < keys.length; i++) {\n        key = keys[i];\n        this.append(key, values[key].shift());\n      }\n    };\n  }\n  function iterator(self, callback) {\n    var items = [];\n    self.forEach(callback, items);\n    /* istanbul ignore next */\n    return iterable ? items[Symbol.iterator]() : {\n      next: function () {\n        var value = items.shift();\n        return {\n          done: value === void 0,\n          value: value\n        };\n      }\n    };\n  }\n\n  /* istanbul ignore next */\n  (function (Object) {\n    var dP = Object.defineProperty,\n      gOPD = Object.getOwnPropertyDescriptor,\n      createSearchParamsPollute = function (search) {\n        function append(name, value) {\n          URLSearchParamsProto.append.call(this, name, value);\n          name = this.toString();\n          search.set.call(this._usp, name ? '?' + name : '');\n        }\n        function del(name) {\n          URLSearchParamsProto.delete.call(this, name);\n          name = this.toString();\n          search.set.call(this._usp, name ? '?' + name : '');\n        }\n        function set(name, value) {\n          URLSearchParamsProto.set.call(this, name, value);\n          name = this.toString();\n          search.set.call(this._usp, name ? '?' + name : '');\n        }\n        return function (sp, value) {\n          sp.append = append;\n          sp.delete = del;\n          sp.set = set;\n          return dP(sp, '_usp', {\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        };\n      },\n      createSearchParamsCreate = function (polluteSearchParams) {\n        return function (obj, sp) {\n          dP(obj, '_searchParams', {\n            configurable: true,\n            writable: true,\n            value: polluteSearchParams(sp, obj)\n          });\n          return sp;\n        };\n      },\n      updateSearchParams = function (sp) {\n        var append = sp.append;\n        sp.append = URLSearchParamsProto.append;\n        URLSearchParams.call(sp, sp._usp.search.slice(1));\n        sp.append = append;\n      },\n      verifySearchParams = function (obj, Class) {\n        if (!(obj instanceof Class)) throw new TypeError(\"'searchParams' accessed on an object that \" + \"does not implement interface \" + Class.name);\n      },\n      upgradeClass = function (Class) {\n        var ClassProto = Class.prototype,\n          searchParams = gOPD(ClassProto, 'searchParams'),\n          href = gOPD(ClassProto, 'href'),\n          search = gOPD(ClassProto, 'search'),\n          createSearchParams;\n        if (!searchParams && search && search.set) {\n          createSearchParams = createSearchParamsCreate(createSearchParamsPollute(search));\n          Object.defineProperties(ClassProto, {\n            href: {\n              get: function () {\n                return href.get.call(this);\n              },\n              set: function (value) {\n                var sp = this._searchParams;\n                href.set.call(this, value);\n                if (sp) updateSearchParams(sp);\n              }\n            },\n            search: {\n              get: function () {\n                return search.get.call(this);\n              },\n              set: function (value) {\n                var sp = this._searchParams;\n                search.set.call(this, value);\n                if (sp) updateSearchParams(sp);\n              }\n            },\n            searchParams: {\n              get: function () {\n                verifySearchParams(this, Class);\n                return this._searchParams || createSearchParams(this, new URLSearchParams(this.search.slice(1)));\n              },\n              set: function (sp) {\n                verifySearchParams(this, Class);\n                createSearchParams(this, sp);\n              }\n            }\n          });\n        }\n      };\n    try {\n      upgradeClass(HTMLAnchorElement);\n      if (/^function|object$/.test(typeof URL) && URL.prototype) upgradeClass(URL);\n    } catch (meh) {}\n  })(Object);\n})(self.URLSearchParams.prototype, Object);\nmodule.exports = self.URLSearchParams;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./miniprogram_npm/@ungap/url-search-params/cjs/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./app.json?package=app");
/******/ 	
/******/ })()
;