import{OctopusPlatform as e,pluginNow as s,installPlugin as o}from"octopus-platform";const t=new class extends e{now;constructor(){super([s],"1.0.2"),this.init()}installPlugin(e){o(this,e)}},a=["%cBENCHMARK","padding: 2px 4px; background: #68B984; color: #FFFFFF; border-radius: 4px;"],n=["%cBENCHMARK","padding: 2px 4px; background: #89CFF0; color: #FFFFFF; border-radius: 4px;"];const l=new class{timeLabels=new Map;markLabels=new Map;start(e){this.timeLabels.set(e,t.now())}stop(e){const s=t.now(),{timeLabels:o}=this;o.has(e)&&(console.log(`${e}: ${s-o.get(e)} ms`),o.delete(e))}mark(e){const s=t.now(),{markLabels:o}=this;o.has(e)&&console.log(`${e}: ${s-o.get(e)} ms`),o.set(e,s)}reset(e){this.markLabels.delete(e)}clear(){this.timeLabels.clear(),this.markLabels.clear()}},r=Object.create(l);r.now=()=>t.now(),r.time=async(e,s)=>{l.start(e);const o=await s();return l.stop(e),o},r.line=(e=40)=>{console.log("-".repeat(e))},r.log=(...e)=>{console.log(...a,...e)},r.info=(...e)=>{console.info(...n,...e)};export{r as benchmark};
//# sourceMappingURL=index.min.js.map
