{"version":3,"file":"index.min.js","sources":["../src/platform.ts","../src/index.ts"],"sourcesContent":["import {\n  OctopusPlatform,\n  type OctopusPlatformPlugins,\n  type OctopusPlatformPluginOptions,\n  pluginNow,\n} from \"octopus-platform\";\nimport { version } from \"../package.json\";\n\nexport type PlatformProperties = \"now\";\n\nclass EnhancedPlatform extends OctopusPlatform<PlatformProperties> {\n  now!: OctopusPlatformPlugins[\"now\"];\n\n  constructor() {\n    super([pluginNow], version);\n\n    this.init();\n  }\n\n  installPlugin(plugin: OctopusPlatformPluginOptions<PlatformProperties>) {\n    const value = plugin.install.call(this);\n\n    Object.defineProperty(this, plugin.name, {\n      get: () => value,\n      enumerable: true,\n      configurable: true,\n    });\n  }\n}\n\nexport const platform = new EnhancedPlatform();\n","import { platform } from \"./platform\";\n\nconst badge = [\n  \"%cBENCHMARK\",\n  \"padding: 2px 4px; background: #68B984; color: #FFFFFF; border-radius: 4px;\",\n];\n\nclass Stopwatch {\n  private readonly timeLabels: Map<string, number> = new Map();\n\n  private readonly markLabels: Map<string, number> = new Map();\n\n  start(label: string) {\n    this.timeLabels.set(label, platform.now());\n  }\n\n  stop(label: string) {\n    const nowTime = platform.now();\n    const { timeLabels } = this;\n\n    if (timeLabels.has(label)) {\n      console.log(`${label}: ${nowTime - timeLabels.get(label)!} ms`);\n      timeLabels.delete(label);\n    }\n  }\n\n  mark(label: string) {\n    const nowTime = platform.now();\n    const { markLabels } = this;\n\n    if (markLabels.has(label)) {\n      console.log(`${label}: ${nowTime - markLabels.get(label)!} ms`);\n    }\n\n    markLabels.set(label, nowTime);\n  }\n\n  reset(label: string) {\n    this.markLabels.delete(label);\n  }\n\n  clear() {\n    this.timeLabels.clear();\n    this.markLabels.clear();\n  }\n}\n\nexport interface Benchmark extends Stopwatch {\n  now: () => number;\n  time: <T extends any = any>(\n    label: string,\n    callback: () => Promise<T> | T\n  ) => Promise<T> | T;\n  line: (size: number) => void;\n  log: (...message: unknown[]) => void;\n}\n\nconst stopwatch = new Stopwatch();\nconst benchmark: Benchmark = Object.create(stopwatch);\n\nbenchmark.now = () => platform.now();\n\nbenchmark.time = async (label, callback) => {\n  stopwatch.start(label);\n  const result = await callback();\n  stopwatch.stop(label);\n\n  return result;\n};\n\nbenchmark.line = (size = 40) => {\n  console.log(\"-\".repeat(size));\n};\n\nbenchmark.log = (...message) => {\n  console.log(...badge, ...message);\n};\n\nexport default benchmark;\n"],"names":["platform","OctopusPlatform","now","constructor","super","pluginNow","this","init","installPlugin","plugin","value","install","call","Object","defineProperty","name","get","enumerable","configurable","badge","stopwatch","timeLabels","Map","markLabels","start","label","set","stop","nowTime","has","console","log","delete","mark","reset","clear","benchmark","create","time","async","callback","result","line","size","repeat","message"],"mappings":"kEA8BO,MAAMA,EAAW,IApBxB,cAA+BC,EAC7BC,IAEA,WAAAC,GACEC,MAAM,CAACC,YAEPC,KAAKC,OAGP,aAAAC,CAAcC,GACZ,MAAMC,EAAQD,EAAOE,QAAQC,KAAKN,MAElCO,OAAOC,eAAeR,KAAMG,EAAOM,KAAM,CACvCC,IAAK,IAAMN,EACXO,YAAY,EACZC,cAAc,MCvBdC,EAAQ,CACZ,cACA,8EAqDF,MAAMC,EAAY,IAlDlB,MACmBC,WAAkC,IAAIC,IAEtCC,WAAkC,IAAID,IAEvD,KAAAE,CAAMC,GACJnB,KAAKe,WAAWK,IAAID,EAAOzB,EAASE,OAGtC,IAAAyB,CAAKF,GACH,MAAMG,EAAU5B,EAASE,OACnBmB,WAAEA,GAAef,KAEnBe,EAAWQ,IAAIJ,KACjBK,QAAQC,IAAI,GAAGN,MAAUG,EAAUP,EAAWL,IAAIS,SAClDJ,EAAWW,OAAOP,IAItB,IAAAQ,CAAKR,GACH,MAAMG,EAAU5B,EAASE,OACnBqB,WAAEA,GAAejB,KAEnBiB,EAAWM,IAAIJ,IACjBK,QAAQC,IAAI,GAAGN,MAAUG,EAAUL,EAAWP,IAAIS,SAGpDF,EAAWG,IAAID,EAAOG,GAGxB,KAAAM,CAAMT,GACJnB,KAAKiB,WAAWS,OAAOP,GAGzB,KAAAU,GACE7B,KAAKe,WAAWc,QAChB7B,KAAKiB,WAAWY,UAedC,EAAuBvB,OAAOwB,OAAOjB,GAE3CgB,EAAUlC,IAAM,IAAMF,EAASE,MAE/BkC,EAAUE,KAAOC,MAAOd,EAAOe,KAC7BpB,EAAUI,MAAMC,GAChB,MAAMgB,QAAeD,IAGrB,OAFApB,EAAUO,KAAKF,GAERgB,CAAM,EAGfL,EAAUM,KAAO,CAACC,EAAO,MACvBb,QAAQC,IAAI,IAAIa,OAAOD,GAAM,EAG/BP,EAAUL,IAAM,IAAIc,KAClBf,QAAQC,OAAOZ,KAAU0B,EAAQ"}