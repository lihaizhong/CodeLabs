const e=()=>{};async function t(e,n=[],s=0){try{return e()}catch(r){if(s>=n.length)throw r;return o=()=>t(e,n,++s),i=n[s],new Promise((e=>setTimeout((()=>e(o())),i)))}var o,i}class n{plugins=[];platformVersion="0.0.1";version="";globals={env:"unknown",br:null,dpr:1,system:"unknown"};noop=e;retry=t;constructor(e,t){this.version=t||"",this.plugins=e,this.globals.env=this.autoEnv()}init(){const{globals:e,plugins:t}=this,n=new Map,s=[],o=new Set;e.br=this.useBridge(),e.dpr=this.usePixelRatio(),e.system=this.useSystem();for(const e of t)s.push(e.name),n.set(e.name,e);this.usePlugins(n,s,o),o.clear()}autoEnv(){if("undefined"!=typeof window)return"h5";if("undefined"!=typeof tt)return"tt";if("undefined"!=typeof my)return"alipay";if("undefined"!=typeof wx)return"weapp";throw new Error("Unsupported app")}useBridge(){switch(this.globals.env){case"h5":return globalThis;case"alipay":return my;case"tt":return tt;case"weapp":return wx}return{}}usePixelRatio(){const{env:e,br:t}=this.globals;return"h5"===e?devicePixelRatio:"getWindowInfo"in t?t.getWindowInfo().pixelRatio:"getSystemInfoSync"in t?t.getSystemInfoSync().pixelRatio:1}useSystem(){const{env:e}=this.globals;let t;switch(e){case"weapp":t=wx.getDeviceInfo().platform;break;case"alipay":t=my.getDeviceBaseInfo().platform;break;case"tt":t=tt.getDeviceInfoSync().platform;break;default:t="unknown"}return t.toLowerCase()}usePlugins(e,t,n){for(const s of t){if(!e.has(s))throw new Error(`Plugin ${s} not found`);if(n.has(s))return;const t=e.get(s);if(Array.isArray(t.dependencies)){for(const n of t.dependencies)if("function"!=typeof e.get(n)?.install)throw new Error(`Plugin ${s} depends on plugin ${n}, but ${n} is not found`);this.usePlugins(e,t.dependencies,n)}this.installPlugin(t),n.add(s)}}switch(e){this.globals.env=e,this.init()}}var s={name:"now",install(){const{env:e,br:t}=this.globals,n="h5"===e||"tt"===e?performance:t.getPerformance();return"function"==typeof n?.now?n.now()-Date.now()>1?()=>n.now()/1e3:()=>n.now():()=>Date.now()}};const o=new class extends n{now;constructor(){super([s],"0.0.1"),this.init()}installPlugin(e){const t=e.install.call(this);Object.defineProperty(this,e.name,{get:()=>t,enumerable:!0,configurable:!0})}},i=["%cBENCHMARK","padding: 2px 4px; background: #68B984; color: #FFFFFF; border-radius: 4px;"];const r=new class{timeLabels=new Map;markLabels=new Map;start(e){this.timeLabels.set(e,o.now())}stop(e){const t=o.now(),{timeLabels:n}=this;n.has(e)&&(console.log(`${e}: ${t-n.get(e)} ms`),n.delete(e))}mark(e){const t=o.now(),{markLabels:n}=this;n.has(e)&&console.log(`${e}: ${t-n.get(e)} ms`),n.set(e,t)}reset(e){this.markLabels.delete(e)}clear(){this.timeLabels.clear(),this.markLabels.clear()}},a=Object.create(r);a.now=()=>o.now(),a.time=async(e,t)=>{r.start(e);const n=await t();return r.stop(e),n},a.line=(e=40)=>{console.log("-".repeat(e))},a.log=(...e)=>{console.log(...i,...e)};export{a as default};
//# sourceMappingURL=index.min.js.map
