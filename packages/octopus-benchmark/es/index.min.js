import{OctopusPlatform as e,pluginNow as t}from"octopus-platform";const s=new class extends e{now;constructor(){super([t],"0.0.1"),this.init()}installPlugin(e){const t=e.install.call(this);Object.defineProperty(this,e.name,{get:()=>t,enumerable:!0,configurable:!0})}},a=["%cBENCHMARK","padding: 2px 4px; background: #68B984; color: #FFFFFF; border-radius: 4px;"];const o=new class{timeLabels=new Map;markLabels=new Map;start(e){this.timeLabels.set(e,s.now())}stop(e){const t=s.now(),{timeLabels:a}=this;a.has(e)&&(console.log(`${e}: ${t-a.get(e)} ms`),a.delete(e))}mark(e){const t=s.now(),{markLabels:a}=this;a.has(e)&&console.log(`${e}: ${t-a.get(e)} ms`),a.set(e,t)}reset(e){this.markLabels.delete(e)}clear(){this.timeLabels.clear(),this.markLabels.clear()}},l=Object.create(o);l.now=()=>s.now(),l.time=async(e,t)=>{o.start(e);const s=await t();return o.stop(e),s},l.line=(e=40)=>{console.log("-".repeat(e))},l.log=(...e)=>{console.log(...a,...e)};export{l as default};
//# sourceMappingURL=index.min.js.map
