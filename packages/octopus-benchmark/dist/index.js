import{Platform as e,pluginNow as s,pluginSystem as t}from"octopus-platform";const o=new class extends e{now;system;constructor(){super([s,t],"0.0.1"),this.init()}installPlugin(e){const s=e.install.call(this);Object.defineProperty(this,e.name,{get:()=>s,enumerable:!0,configurable:!0})}},a=["%cBENCHMARK","padding: 2px 4px; background: #68B984; color: #FFFFFF; border-radius: 4px;"];const l=new class{hasConsoleTime="function"==typeof console.time&&"function"==typeof console.timeEnd;timeLabels=new Map;markLabels=new Map;start(e){this.hasConsoleTime?console.time(e):this.timeLabels.set(e,o.now())}stop(e){if(this.hasConsoleTime)console.timeEnd(e);else{const s=o.now();this.timeLabels.has(e)&&(console.log(`${e}: ${s-this.timeLabels.get(e)} ms`),this.timeLabels.delete(e))}}mark(e){const s=o.now();this.markLabels.has(e)&&console.log(`${e}: ${s-this.markLabels.get(e)} ms`),this.markLabels.set(e,s)}reset(e){this.markLabels.delete(e)}clear(){this.timeLabels.clear(),this.markLabels.clear()}},n=Object.create(l);n.now=()=>o.now(),n.time=async(e,s)=>{l.start(e);const t=await s();return l.stop(e),t},n.line=(e=40)=>{console.log("-".repeat(e))},n.log=(...e)=>{console.log(...a,...e)};export{n as default};
//# sourceMappingURL=index.js.map
