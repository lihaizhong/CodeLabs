{"version":3,"file":"index.js","sources":["../src/platform/index.ts","../src/extensions/resource-manager/index.ts","../src/extensions/svga-decoder/io/float.ts","../src/shared/hash.ts","../src/extensions/svga-decoder/io/preflight.ts","../src/extensions/svga-decoder/io/Reader.ts","../src/extensions/svga-decoder/serialization/Layout.ts","../src/extensions/svga-decoder/serialization/Transform.ts","../src/extensions/svga-decoder/serialization/ShapeArgs.ts","../src/extensions/svga-decoder/serialization/RectArgs.ts","../src/extensions/svga-decoder/serialization/EllipseArgs.ts","../src/extensions/svga-decoder/serialization/RGBAColor.ts","../src/extensions/svga-decoder/serialization/ShapeStyle.ts","../src/extensions/svga-decoder/serialization/ShapeEntity.ts","../src/extensions/svga-decoder/serialization/FrameEntity.ts","../src/extensions/svga-decoder/serialization/SpriteEntity.ts","../src/extensions/svga-decoder/serialization/MovieParams.ts","../src/extensions/svga-decoder/serialization/MovieEntity.ts","../src/extensions/svga-decoder/index.ts","../src/shared/PointPool.ts","../src/extensions/svga-renderer/2d/Renderer2D.ts","../src/extensions/svga-renderer/2d/index.ts","../src/extensions/svga-animator/index.ts","../src/extensions/zlib/index.ts","../src/extensions/png-encoder/crc.ts","../src/extensions/png-encoder/index.ts","../src/extensions/qrcode-encoder/bit-buffer.ts","../src/extensions/qrcode-encoder/constants.ts","../src/extensions/qrcode-encoder/bit-byte.ts","../src/extensions/qrcode-encoder/block.ts","../src/extensions/qrcode-encoder/math.ts","../src/extensions/qrcode-encoder/polynomial.ts","../src/extensions/qrcode-encoder/util.ts","../src/extensions/qrcode-encoder/index.ts","../src/core/parser/index.ts","../src/core/painter/index.ts","../src/core/player/config.ts","../src/core/player/index.ts","../src/core/poster/index.ts","../src/helper/qrcode.ts","../src/helper/png.ts","../src/helper/zlib.ts","../src/helper/VideoManager.ts","../src/helper/VideoEditor.ts"],"sourcesContent":["import {\n  type OctopusPlatformPlugins,\n  type OctopusPlatformPluginOptions,\n  OctopusPlatform,\n  installPlugin,\n  pluginSelector,\n  pluginCanvas,\n  pluginOfsCanvas,\n  pluginDecode,\n  pluginDownload,\n  pluginFsm,\n  pluginImage,\n  pluginNow,\n  pluginPath,\n  pluginRAF,\n} from \"octopus-platform\";\n\nexport type PlatformProperties =\n  | \"now\"\n  | \"path\"\n  | \"remote\"\n  | \"local\"\n  | \"decode\"\n  | \"image\"\n  | \"rAF\"\n  | \"getSelector\"\n  | \"getCanvas\"\n  | \"getOfsCanvas\";\n\nexport class EnhancedPlatform extends OctopusPlatform<PlatformProperties> {\n  now!: OctopusPlatformPlugins[\"now\"];\n\n  path!: OctopusPlatformPlugins[\"path\"];\n\n  remote!: OctopusPlatformPlugins[\"remote\"];\n\n  local!: OctopusPlatformPlugins[\"local\"];\n\n  decode!: OctopusPlatformPlugins[\"decode\"];\n\n  image!: OctopusPlatformPlugins[\"image\"];\n\n  rAF!: OctopusPlatformPlugins[\"rAF\"];\n\n  getSelector!: OctopusPlatformPlugins[\"getSelector\"];\n\n  getCanvas!: OctopusPlatformPlugins[\"getCanvas\"];\n\n  getOfsCanvas!: OctopusPlatformPlugins[\"getOfsCanvas\"];\n\n  constructor() {\n    super(\n      [\n        pluginSelector,\n        pluginCanvas,\n        pluginOfsCanvas,\n        pluginDecode,\n        pluginDownload,\n        pluginFsm,\n        pluginImage,\n        pluginNow,\n        pluginPath,\n        pluginRAF,\n      ],\n      __VERSION__\n    );\n\n    this.init();\n  }\n\n  installPlugin(\n    plugin: OctopusPlatformPluginOptions<PlatformProperties>\n  ) {\n    installPlugin<PlatformProperties>(this, plugin);\n  }\n}\n\nexport const platform = new EnhancedPlatform();\n","import type { RawImage, PlatformImage, Bitmap } from \"octopus-platform\";\nimport { Painter } from \"../../core/painter\";\nimport { platform } from \"../../platform\";\nimport type { RawImages } from \"../../types\";\n\nexport class ResourceManager {\n  /**\n   * 判断是否是 ImageBitmap\n   * @param img\n   * @returns\n   */\n  private static isBitmap(img: any): boolean {\n    return platform.globals.env === \"h5\" && img instanceof ImageBitmap;\n  }\n\n  /**\n   * 释放内存资源（图片）\n   * @param img\n   */\n  private static releaseOne(img: PlatformImage | ImageBitmap) {\n    if (ResourceManager.isBitmap(img)) {\n      (img as ImageBitmap).close();\n    } else if ((img as PlatformImage).src !== \"\") {\n      // 将存在本地的文件删除，防止用户空间被占满\n      if (platform.path.is((img as PlatformImage).src)) {\n        platform.local!.remove((img as PlatformImage).src);\n      }\n\n      platform.image.release(img as PlatformImage);\n    }\n  }\n\n  // FIXME: 微信小程序创建调用太多createImage会导致微信/微信小程序崩溃\n  private caches: Array<PlatformImage | ImageBitmap> = [];\n\n  /**\n   * 动态素材\n   */\n  public readonly dynamicMaterials: Map<string, Bitmap> =\n    new Map();\n\n  /**\n   * 素材\n   */\n  public readonly materials: Map<string, Bitmap> = new Map();\n\n  /**\n   * 已清理Image对象的坐标\n   */\n  private point: number = 0;\n\n  constructor(private readonly painter: Painter) {}\n\n  /**\n   * 创建图片标签\n   * @returns\n   */\n  private createImage(): PlatformImage {\n    let img: PlatformImage | null = null;\n\n    if (this.point > 0) {\n      this.point--;\n      img = this.caches.shift() as PlatformImage;\n    }\n\n    if (!img) {\n      img = platform.image.create(this.painter.F!);\n    }\n\n    this.caches.push(img);\n\n    return img;\n  }\n\n  /**\n   * 将 ImageBitmap 插入到 caches\n   * @param img\n   */\n  private inertBitmapIntoCaches(\n    img: PlatformImage | ImageBitmap\n  ) {\n    if (ResourceManager.isBitmap(img)) {\n      this.caches.push(img);\n    }\n  }\n\n  /**\n   * 加载额外的图片资源\n   * @param source 资源内容/地址\n   * @param filename 文件名称\n   * @returns\n   */\n  public loadExtImage(\n    source: string | Uint8Array,\n    filename: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return platform.image\n      .load(\n        () => this.createImage(),\n        source,\n        platform.path.resolve(filename, \"ext\")\n      )\n      .then((img) => {\n        this.inertBitmapIntoCaches(img);\n\n        return img;\n      });\n  }\n\n  /**\n   * 加载图片集\n   * @param images 图片数据\n   * @param filename 文件名称\n   * @returns\n   */\n  public async loadImagesWithRecord(\n    images: RawImages,\n    filename: string,\n    type: \"normal\" | \"dynamic\" = \"normal\"\n  ): Promise<void> {\n    const imageAwaits: Promise<void>[] = [];\n    const imageFilename = `${filename.replace(/\\.svga$/g, \"\")}.png`;\n\n    Object.entries(images).forEach(([name, image]) => {\n      // 过滤 1px 透明图\n      if (image instanceof Uint8Array && image.byteLength < 70) {\n        return;\n      }\n\n      const p = platform.image\n        .load(\n          () => this.createImage(),\n          image as RawImage,\n          platform.path.resolve(\n            imageFilename,\n            type === \"dynamic\" ? `dyn_${name}` : name\n          )\n        )\n        .then((img) => {\n          this.inertBitmapIntoCaches(img);\n          if (type === \"dynamic\") {\n            this.dynamicMaterials.set(name, img);\n          } else {\n            this.materials.set(name, img);\n          }\n        });\n\n      imageAwaits.push(p);\n    });\n\n    await Promise.all(imageAwaits);\n  }\n\n  /**\n   * 释放图片资源\n   */\n  public release(): void {\n    // FIXME: 小程序 image 对象需要手动释放内存，否则可能导致小程序崩溃\n    for (const img of this.caches) {\n      ResourceManager.releaseOne(img);\n    }\n\n    this.materials.clear();\n    this.dynamicMaterials.clear();\n    // FIXME: 支付宝小程序 image 修改 src 无法触发 onload 事件\n    platform.globals.env === \"alipay\" ? this.cleanup() : this.tidyUp();\n  }\n\n  /**\n   * 整理图片资源，将重复的图片资源移除\n   */\n  private tidyUp() {\n    // 通过 Set 的去重特性，保持 caches 元素的唯一性\n    this.caches = Array.from(new Set(this.caches));\n    this.point = this.caches.length;\n  }\n\n  /**\n   * 清理图片资源\n   */\n  public cleanup(): void {\n    this.caches.length = 0;\n    this.point = 0;\n  }\n}\n","function readFloatLEImpl() {\n  // 使用静态DataView池\n  const DATA_VIEW_POOL_SIZE = 4;\n  const dataViewPool: DataView[] = Array(DATA_VIEW_POOL_SIZE)\n    .fill(0)\n    .map(() => new DataView(new ArrayBuffer(8))); // 使用8字节支持double\n  let currentViewIndex = 0;\n\n  return function readFloatLE(buf: Uint8Array, pos: number): number {\n    if (pos < 0 || pos + 4 > buf.length)\n      throw new RangeError(\"Index out of range\");\n\n    // 轮换使用DataView池中的实例\n    const view = dataViewPool[currentViewIndex];\n    currentViewIndex = (currentViewIndex + 1) % DATA_VIEW_POOL_SIZE;\n\n    // 直接设置字节，避免创建subarray\n    const u8 = new Uint8Array(view.buffer);\n    u8[0] = buf[pos];\n    u8[1] = buf[pos + 1];\n    u8[2] = buf[pos + 2];\n    u8[3] = buf[pos + 3];\n\n    return view.getFloat32(0, true);\n  };\n}\n\nexport const readFloatLE = readFloatLEImpl();\n","/**\n * 简易的hash算法\n * @param buff \n * @param start \n * @param end \n * @param step \n * @returns \n */\nexport function calculateHash(buff: Uint8Array, start: number, end: number, step: number) {\n  // 使用简单的哈希算法\n    let hash = 0;\n\n    for (let i = start; i < end; i += step) {\n      // 简单的哈希算法，类似于字符串哈希\n      hash = (hash << 5) - hash + buff[i];\n      hash = hash & hash; // 转换为32位整数\n    }\n\n    // 添加数据长度作为哈希的一部分，增加唯一性\n    hash = (hash << 5) - hash + end - start;\n    hash = hash & hash;\n    // 转换为字符串\n    return hash.toString(36);\n}\n","import { calculateHash } from \"../../../shared/hash\";\nimport Reader from \"./Reader\";\n\nexport class Preflight {\n  private caches: Map<string, any> = new Map();\n\n  private count: number = 0;\n\n  get size() {\n    return this.caches.size;\n  }\n\n  get hitCount() {\n    return this.count;\n  }\n\n  // get cache() {\n  //   return Object.fromEntries(this.caches);\n  // }\n\n  /**\n   * 计算二进制数据的哈希值\n   * @param reader Reader对象\n   * @param end 结束位置\n   * @returns 哈希值\n   */\n  calculate(reader: Reader, end: number): string {\n    // 保存原始位置\n    const { pos: startPos, buf } = reader;\n    const endPos = Math.min(end, reader.len);\n    // 采样数据以加快计算速度，同时保持足够的唯一性\n    // 对于大数据，每隔几个字节采样一次\n    const step = Math.max(1, Math.floor((endPos - startPos) / 100));\n    \n    return calculateHash(buf, startPos, endPos, step);\n  }\n\n  /**\n   * 检查是否存在缓存数据\n   * @param key 键\n   * @returns 是否存在\n   */\n  has(key: string): boolean {\n    const hit = this.caches.has(key);\n\n    if (hit) {\n      this.count++;\n    }\n\n    return hit;\n\n    // return this.caches.has(key);\n  }\n\n  /**\n   * 获取缓存数据\n   * @param key 键\n   * @returns 缓存数据\n   */\n  get(key: string): any {\n    return this.caches.get(key);\n  }\n\n  /**\n   * 设置缓存数据\n   * @param key 键\n   * @param value 缓存数据\n   */\n  set(key: string, value: any) {\n    this.caches.set(key, value);\n  }\n\n  /**\n   * 清空所有缓存数据\n   */\n  clear() {\n    this.count = 0;\n    this.caches.clear();\n  }\n}\n","import { platform } from \"../../../platform\";\nimport { readFloatLE } from \"./float\";\nimport { Preflight } from \"./preflight\";\n\nexport default class Reader {\n  // 添加静态缓存，用于常用的空数组\n  private static EMPTY_UINT8ARRAY = new Uint8Array(0);\n\n  /**\n   * Read buffer.\n   * @type {Uint8Array}\n   */\n  readonly buf: Uint8Array;\n  /**\n   * Read buffer length.\n   * @type {number}\n   */\n  readonly len: number;\n  /**\n   * Read buffer position.\n   * @type {number}\n   */\n  pos: number;\n\n  preflight = new Preflight();\n\n  /**\n   * Constructs a new reader instance using the specified buffer.\n   * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n   * @constructor\n   * @param {Uint8Array} buffer Buffer to read from\n   */\n  constructor(buffer: Uint8Array) {\n    this.buf = buffer;\n    this.pos = 0;\n    this.len = buffer.length;\n  }\n\n  private indexOutOfRange(reader: Reader, writeLength?: number) {\n    return new RangeError(\n      \"index out of range: \" +\n        reader.pos +\n        \" + \" +\n        (writeLength || 1) +\n        \" > \" +\n        reader.len\n    );\n  }\n\n  /**\n   * 将复杂逻辑分离到单独方法\n   * @returns\n   */\n  private readVarint32Slow() {\n    let byte = this.buf[this.pos++];\n    let value = byte & 0x7f;\n    let shift = 7;\n\n    // 使用do-while循环减少条件判断\n    do {\n      if (this.pos >= this.len) {\n        throw this.indexOutOfRange(this);\n      }\n\n      byte = this.buf[this.pos++];\n      value |= (byte & 0x7f) << shift;\n      shift += 7;\n    } while (byte >= 128 && shift < 32);\n\n    return value >>> 0; // 确保无符号\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @param length \n   * @returns \n   */\n  end(length?: number) {\n    return length === undefined ? this.len : this.pos + length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value.\n   * @function\n   * @returns {number} Value read\n   */\n  uint32() {\n    // 快速路径：大多数情况下是单字节\n    const byte = this.buf[this.pos];\n\n    if (byte < 128) {\n      this.pos++;\n\n      return byte;\n    }\n\n    // 慢速路径：多字节处理\n    return this.readVarint32Slow();\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value.\n   * @returns {number} Value read\n   */\n  int32() {\n    return this.uint32() | 0;\n  }\n\n  /**\n   * Reads a float (32 bit) as a number.\n   * @function\n   * @returns {number} Value read\n   */\n  float() {\n    const pos = this.pos + 4;\n\n    if (pos > this.len) {\n      throw this.indexOutOfRange(this, 4);\n    }\n\n    const value = readFloatLE(this.buf, this.pos);\n    this.pos = pos;\n\n    return value;\n  }\n\n  /**\n   * read bytes range\n   * @returns \n   */\n  private getBytesRange() {\n    const length = this.uint32();\n    const start = this.pos;\n    const end = start + length;\n\n    if (end > this.len) {\n      throw this.indexOutOfRange(this, length);\n    }\n\n    return [start, end, length];\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @returns {Uint8Array} Value read\n   */\n  bytes() {\n    const [start, end, length] = this.getBytesRange();\n\n    this.pos += length;\n\n    if (length === 0) {\n      return Reader.EMPTY_UINT8ARRAY;\n    }\n\n    return this.buf.subarray(start, end);\n  }\n\n  /**\n   * Reads a string preceeded by its byte length as a varint.\n   * @returns {string} Value read\n   */\n  string() {\n    const [start, end] = this.getBytesRange();\n    // 直接在原始buffer上解码，避免创建中间bytes对象\n    const result = platform.decode.utf8(this.buf, start, end);\n    this.pos = end;\n\n    return result;\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint.\n   * @param {number} [length] Length if known, otherwise a varint is assumed\n   * @returns {Reader} `this`\n   */\n  skip(length?: number) {\n    if (typeof length === \"number\") {\n      if (this.pos + length > this.len) {\n        throw this.indexOutOfRange(this, length);\n      }\n\n      this.pos += length;\n\n      return this;\n    }\n    \n    // 变长整数跳过优化 - 使用位运算\n    const { buf, len } = this;\n    let pos = this.pos;\n    \n    // 一次检查多个字节，减少循环次数\n    while (pos < len) {\n      const byte = buf[pos++];\n\n      if ((byte & 0x80) === 0) {\n        this.pos = pos;\n\n        return this;\n      }\n\n      // 快速检查连续的高位字节\n      if (pos < len && (buf[pos] & 0x80) !== 0) {\n        pos++;\n\n        if (pos < len && (buf[pos] & 0x80) !== 0) {\n          pos++;\n\n          if (pos < len && (buf[pos] & 0x80) !== 0) {\n            pos++;\n\n            // 继续检查剩余字节\n            while (pos < len && (buf[pos] & 0x80) !== 0) {\n              pos++;\n\n              if (pos - this.pos >= 10) {\n                throw Error(\"invalid varint encoding\");\n              }\n            }\n\n            if (pos < len) {\n              this.pos = pos + 1;\n\n              return this;\n            }\n          }\n        }\n      }\n    }\n    \n    throw this.indexOutOfRange(this);\n  }\n\n  /**\n   * Skips the next element of the specified wire type.\n   * @param {number} wireType Wire type received\n   * @returns {Reader} `this`\n   */\n  skipType(wireType: number) {\n    switch (wireType) {\n      case 0:\n        this.skip();\n        break;\n      case 1:\n        this.skip(8);\n        break;\n      case 2:\n        this.skip(this.uint32());\n        break;\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType);\n        }\n        break;\n      case 5:\n        this.skip(4);\n        break;\n\n      /* istanbul ignore next */\n      default:\n        throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n\n    return this;\n  }\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Layout {\n  /**\n   * Decodes a Layout message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Layout\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Rect {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new Layout();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, Layout.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: Layout): PlatformVideo.Rect {\n    const { x = 0, y = 0, width = 0, height = 0 } = message;\n\n    return { x, y, width, height };\n  }\n\n  /**\n   * Layout x.\n   * @member {number} x\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * Layout y.\n   * @member {number} y\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * Layout width.\n   * @member {number} width\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * Layout height.\n   * @member {number} height\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  height: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Transform {\n  /**\n   * Decodes a Transform message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Transform\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Transform} Transform\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Transform {\n    const end = reader.end(length);\n    const message = new Transform();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.a = reader.float();\n          break;\n        }\n        case 2: {\n          message.b = reader.float();\n          break;\n        }\n        case 3: {\n          message.c = reader.float();\n          break;\n        }\n        case 4: {\n          message.d = reader.float();\n          break;\n        }\n        case 5: {\n          message.tx = reader.float();\n          break;\n        }\n        case 6: {\n          message.ty = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * Transform a.\n   * @member {number} a\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  a: number = 0;\n  /**\n   * Transform b.\n   * @member {number} b\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * Transform c.\n   * @member {number} c\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  c: number = 0;\n  /**\n   * Transform d.\n   * @member {number} d\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  d: number = 0;\n  /**\n   * Transform tx.\n   * @member {number} tx\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  tx: number = 0;\n  /**\n   * Transform ty.\n   * @member {number} ty\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  ty: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a ShapeArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IShapeArgs\n * @property {string|null} [d] ShapeArgs d\n */\nexport interface ShapeArgsProps {\n  d: string | null;\n}\n\nexport default class ShapeArgs {\n  /**\n   * Decodes a ShapeArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeArgs} ShapeArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.ShapePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.d = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * ShapeArgs d.\n   * @member {string} d\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @instance\n   */\n  d: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RectArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IRectArgs\n * @property {number|null} [x] RectArgs x\n * @property {number|null} [y] RectArgs y\n * @property {number|null} [width] RectArgs width\n * @property {number|null} [height] RectArgs height\n * @property {number|null} [cornerRadius] RectArgs cornerRadius\n */\nexport interface RectArgsProps {\n  x: number | null;\n  y: number | null;\n  width: number | null;\n  height: number | null;\n  cornerRadius: number | null;\n}\n\nexport default class RectArgs {\n  /**\n   * Decodes a RectArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.RectArgs} RectArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RectPath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RectArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        case 5: {\n          message.cornerRadius = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * RectArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * RectArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * RectArgs width.\n   * @member {number} width\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * RectArgs height.\n   * @member {number} height\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  height: number = 0;\n  /**\n   * RectArgs cornerRadius.\n   * @member {number} cornerRadius\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  cornerRadius: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class EllipseArgs {\n  /**\n   * Decodes an EllipseArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.EllipseArgs} EllipseArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.EllipsePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new EllipseArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.radiusX = reader.float();\n          break;\n        }\n        case 4: {\n          message.radiusY = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * EllipseArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * EllipseArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * EllipseArgs radiusX.\n   * @member {number} radiusX\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusX: number = 0;\n  /**\n   * EllipseArgs radiusY.\n   * @member {number} radiusY\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusY: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RGBAColor.\n * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n * @interface IRGBAColor\n * @property {number|null} [r] RGBAColor r\n * @property {number|null} [g] RGBAColor g\n * @property {number|null} [b] RGBAColor b\n * @property {number|null} [a] RGBAColor a\n */\nexport interface RGBAColorProps {\n  r: number | null;\n  g: number | null;\n  b: number | null;\n  a: number | null;\n}\n\nexport default class RGBAColor {\n  /**\n   * Decodes a RGBAColor message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor} RGBAColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RGBA<number, number, number, number> {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RGBAColor();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.r = reader.float();\n          break;\n        }\n        case 2: {\n          message.g = reader.float();\n          break;\n        }\n        case 3: {\n          message.b = reader.float();\n          break;\n        }\n        case 4: {\n          message.a = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, RGBAColor.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(\n    message: RGBAColor\n  ): PlatformVideo.RGBA<number, number, number, number> {\n    const { r, g, b, a } = message;\n\n    return `rgba(${(r * 255) | 0}, ${(g * 255) | 0}, ${(b * 255) | 0}, ${\n      (a * 1) | 0\n    })`;\n  }\n\n  /**\n   * RGBAColor r.\n   * @member {number} r\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  r: number = 0;\n  /**\n   * RGBAColor g.\n   * @member {number} g\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  g: number = 0;\n  /**\n   * RGBAColor b.\n   * @member {number} b\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * RGBAColor a.\n   * @member {number} a\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  a: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport RGBAColor from \"./RGBAColor\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeStyle {\n  /**\n   * Decodes a ShapeStyle message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle} ShapeStyle\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoStyles {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeStyle();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.fill = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 2: {\n          message.stroke = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 3: {\n          message.strokeWidth = reader.float();\n          break;\n        }\n        case 4: {\n          message.lineCap = reader.int32();\n          break;\n        }\n        case 5: {\n          message.lineJoin = reader.int32();\n          break;\n        }\n        case 6: {\n          message.miterLimit = reader.float();\n          break;\n        }\n        case 7: {\n          message.lineDashI = reader.float();\n          break;\n        }\n        case 8: {\n          message.lineDashII = reader.float();\n          break;\n        }\n        case 9: {\n          message.lineDashIII = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, ShapeStyle.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: ShapeStyle): PlatformVideo.VideoStyles {\n    const { fill, stroke, strokeWidth, miterLimit, lineDashI, lineDashII, lineDashIII } = message;\n    const lineDash: number[] = [];\n    let lineCap: CanvasLineCap;\n    let lineJoin: CanvasLineJoin;\n\n    if (lineDashI > 0) {\n      lineDash.push(lineDashI);\n    }\n\n    if (lineDashII > 0) {\n      if (lineDash.length < 1) {\n        lineDash.push(0);\n      }\n\n      lineDash.push(lineDashII);\n    }\n\n    if (lineDashIII > 0) {\n      if (lineDash.length < 2) {\n        lineDash.push(0, 0);\n      }\n\n      lineDash.push(lineDashIII);\n    }\n\n    switch (message.lineCap) {\n      case PlatformVideo.LINE_CAP_CODE.BUTT:\n        lineCap = PlatformVideo.LINE_CAP.BUTT;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.ROUND:\n        lineCap = PlatformVideo.LINE_CAP.ROUND;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.SQUARE:\n        lineCap = PlatformVideo.LINE_CAP.SQUARE;\n        break;\n    }\n\n    switch (message.lineJoin) {\n      case PlatformVideo.LINE_JOIN_CODE.MITER:\n        lineJoin = PlatformVideo.LINE_JOIN.MITER;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.ROUND:\n        lineJoin = PlatformVideo.LINE_JOIN.ROUND;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.BEVEL:\n        lineJoin = PlatformVideo.LINE_JOIN.BEVEL;\n        break;\n    }\n\n    return {\n      lineDash,\n      fill: fill ? fill : null,\n      stroke: stroke ? stroke : null,\n      lineCap,\n      lineJoin,\n      strokeWidth,\n      miterLimit\n    }\n  }\n\n  /**\n   * ShapeStyle fill.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} fill\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  fill: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle stroke.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} stroke\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  stroke: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle strokeWidth.\n   * @member {number} strokeWidth\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  strokeWidth: number = 0;\n  /**\n   * ShapeStyle lineCap.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineCap} lineCap\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineCap: PlatformVideo.LINE_CAP_CODE = 0;\n  /**\n   * ShapeStyle lineJoin.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin} lineJoin\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineJoin: PlatformVideo.LINE_JOIN_CODE = 0;\n  /**\n   * ShapeStyle miterLimit.\n   * @member {number} miterLimit\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  miterLimit: number = 0;\n  /**\n   * ShapeStyle lineDashI.\n   * @member {number} lineDashI\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashI: number = 0;\n  /**\n   * ShapeStyle lineDashII.\n   * @member {number} lineDashII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashII: number = 0;\n  /**\n   * ShapeStyle lineDashIII.\n   * @member {number} lineDashIII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashIII: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport Transform from \"./Transform\";\nimport ShapeArgs from \"./ShapeArgs\";\nimport RectArgs from \"./RectArgs\";\nimport EllipseArgs from \"./EllipseArgs\";\nimport ShapeStyle from \"./ShapeStyle\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeEntity {\n  /**\n   * Decodes a ShapeEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity} ShapeEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrameShape | null {\n    const end = reader.end(length);\n    const message = new ShapeEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.type = reader.int32();\n          break;\n        }\n        case 2: {\n          message.shape = ShapeArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.rect = RectArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.ellipse = EllipseArgs.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 10: {\n          message.styles = ShapeStyle.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 11: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return ShapeEntity.format(message);\n  }\n\n  static format(message: ShapeEntity): PlatformVideo.VideoFrameShape | null {\n    const { type, shape, rect, ellipse, styles, transform } = message;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE_CODE.SHAPE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.SHAPE,\n          path: shape!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.RECT:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.RECT,\n          path: rect!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.ELLIPSE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.ELLIPSE,\n          path: ellipse!,\n          styles: styles!,\n          transform: transform!,\n        };\n      default:\n    }\n\n    return null;\n  }\n\n  /**\n   * ShapeEntity type.\n   * @member {com.opensource.svga.ShapeEntity.ShapeType} type\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  type: PlatformVideo.SHAPE_TYPE_CODE = 0;\n  /**\n   * ShapeEntity shape.\n   * @member {com.opensource.svga.ShapeEntity.IShapeArgs|null|undefined} shape\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  shape: PlatformVideo.ShapePath | null = null;\n  /**\n   * ShapeEntity rect.\n   * @member {com.opensource.svga.ShapeEntity.IRectArgs|null|undefined} rect\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  rect: PlatformVideo.RectPath | null = null;\n  /**\n   * ShapeEntity ellipse.\n   * @member {com.opensource.svga.ShapeEntity.IEllipseArgs|null|undefined} ellipse\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  ellipse: PlatformVideo.EllipsePath | null = null;\n  /**\n   * ShapeEntity styles.\n   * @member {com.opensource.svga.ShapeEntity.IShapeStyle|null|undefined} styles\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  styles: PlatformVideo.VideoStyles | null = null;\n  /**\n   * ShapeEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n}\n","import Reader from \"../io/Reader\";\nimport Layout from \"./Layout\";\nimport Transform from \"./Transform\";\nimport ShapeEntity from \"./ShapeEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class FrameEntity {\n  private static HIDDEN_FRAME: PlatformVideo.HiddenVideoFrame = {\n    alpha: 0,\n  };\n\n  /**\n   * Decodes a FrameEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.FrameEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.FrameEntity} FrameEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    const end = reader.end(length);\n    const message = new FrameEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.alpha = reader.float();\n          break;\n        }\n        case 2: {\n          message.layout = Layout.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.clipPath = reader.string();\n          break;\n        }\n        case 5: {\n          const shape = ShapeEntity.decode(reader, reader.uint32())\n\n          if (shape !== null) {\n            message.shapes.push(shape);\n          }\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (message.shapes.length === 0) {\n      message.shapes = reader.preflight.get(\"latest_shapes\");\n    } else {\n      reader.preflight.set(\"latest_shapes\", message.shapes);\n    }\n\n    return FrameEntity.format(message);\n  }\n\n  private static format(message: FrameEntity): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    // alpha值小于 0.05 将不展示，所以不做解析处理\n    if (message.alpha < 0.05) {\n      return FrameEntity.HIDDEN_FRAME;\n    }\n\n    const { alpha, layout, transform, shapes } = message;\n\n    return {\n      alpha,\n      layout: layout!,\n      transform,\n      shapes,\n    };\n  }\n\n  /**\n   * FrameEntity shapes.\n   * @member {Array.<com.opensource.svga.IShapeEntity>} shapes\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  shapes: PlatformVideo.VideoFrameShape[] = [];\n  /**\n   * FrameEntity alpha.\n   * @member {number} alpha\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  alpha: number = 0;\n  /**\n   * FrameEntity layout.\n   * @member {com.opensource.svga.ILayout|null|undefined} layout\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  layout: PlatformVideo.Rect | null = null;\n  /**\n   * FrameEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n  /**\n   * FrameEntity clipPath.\n   * @member {string} clipPath\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  clipPath: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport FrameEntity from \"./FrameEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class SpriteEntity {\n  /**\n   * Decodes a SpriteEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.SpriteEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.SpriteEntity} SpriteEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoSprite {\n    const end = reader.end(length);\n    const message = new SpriteEntity();\n    let tag: number;\n\n    reader.preflight.set(\"latest_shapes\", []);\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.imageKey = reader.string();\n          break;\n        }\n        case 2: {\n          if (!(message.frames && message.frames.length)) {\n            message.frames = [];\n          }\n\n          message.frames.push(FrameEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        case 3: {\n          message.matteKey = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return SpriteEntity.format(message);\n  }\n\n  static format(message: SpriteEntity): PlatformVideo.VideoSprite {\n    return {\n      imageKey: message.imageKey,\n      frames: message.frames,\n    };\n  }\n\n  /**\n   * SpriteEntity frames.\n   * @member {Array.<com.opensource.svga.IFrameEntity>} frames\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  frames: Array<PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame> = [];\n  /**\n   * SpriteEntity imageKey.\n   * @member {string} imageKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  imageKey: string = \"\";\n  /**\n   * SpriteEntity matteKey.\n   * @member {string} matteKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  matteKey: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieParams {\n  /**\n   * Decodes a MovieParams message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieParams\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieParams} MovieParams\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoParams {\n    const end = reader.end(length);\n    const message = new MovieParams();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.viewBoxWidth = reader.float();\n          break;\n        }\n        case 2: {\n          message.viewBoxHeight = reader.float();\n          break;\n        }\n        case 3: {\n          message.fps = reader.int32();\n          break;\n        }\n        case 4: {\n          message.frames = reader.int32();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * MovieParams viewBoxWidth.\n   * @member {number} viewBoxWidth\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxWidth: number = 0;\n  /**\n   * MovieParams viewBoxHeight.\n   * @member {number} viewBoxHeight\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxHeight: number = 0;\n  /**\n   * MovieParams fps.\n   * @member {number} fps\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  fps: number = 0;\n  /**\n   * MovieParams frames.\n   * @member {number} frames\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  frames: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport SpriteEntity from \"./SpriteEntity\";\nimport MovieParams from \"./MovieParams\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieEntity {\n  static EMPTY_U8 = new Uint8Array(0);\n  /**\n   * Decodes a MovieEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieEntity} MovieEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Video {\n    const end = reader.end(length);\n    const message = new MovieEntity();\n    let key: string;\n    let value: Uint8Array;\n    let end2: number;\n    let tag: number;\n    let tag2: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.version = reader.string();\n          break;\n        }\n        case 2: {\n          message.params = MovieParams.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          end2 = reader.uint32() + reader.pos;\n          key = \"\";\n          value = MovieEntity.EMPTY_U8;\n\n          while (reader.pos < end2) {\n            tag2 = reader.uint32();\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string();\n                break;\n              case 2:\n                value = reader.bytes();\n                break;\n              default:\n                reader.skipType(tag2 & 7);\n                break;\n            }\n          }\n\n          message.images[key] = value;\n          break;\n        }\n        case 4: {\n          message.sprites.push(SpriteEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return MovieEntity.format(message);\n  }\n\n  static format(message: MovieEntity): PlatformVideo.Video {\n    const { version, images, sprites } = message;\n    const { fps, frames, viewBoxWidth, viewBoxHeight } = message.params!;\n\n    return {\n      version,\n      filename: \"\",\n      locked: false,\n      dynamicElements: {},\n      size: {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n      },\n      fps,\n      frames,\n      images,\n      sprites,\n    };\n  }\n\n  /**\n   * MovieEntity version.\n   * @member {string} version\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  version: string = \"\";\n  /**\n   * MovieEntity params.\n   * @member {com.opensource.svga.IMovieParams|null|undefined} params\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  params: MovieParams | null = null;\n  /**\n   * MovieEntity images.\n   * @member {Object.<string,Uint8Array>} images\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  images: Record<string, Uint8Array> = {};\n  /**\n   * MovieEntity sprites.\n   * @member {Array.<com.opensource.svga.ISpriteEntity>} sprites\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  sprites: PlatformVideo.VideoSprite[] = [];\n}\n","// import benchmark from \"octopus-benchmark\";\nimport Reader from \"./io/Reader\";\nimport { MovieEntity } from \"./serialization\";\n\nexport type * from \"./serialization\";\n\nexport function createVideoEntity(data: Uint8Array, filename: string) {\n  if (data instanceof Uint8Array) {\n    const reader = new Reader(data);\n    const video = MovieEntity.decode(reader);\n\n    // benchmark.log('preflight cache size', reader.preflight.size);\n    // benchmark.log('preflight hit count', reader.preflight.hitCount);\n    video.filename = filename;\n    reader.preflight.clear();\n\n    return video;\n  }\n\n  throw new Error(\"Invalid data type\");\n}\n","export interface CurrentPoint {\n  x: number;\n  y: number;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n\n/**\n * CurrentPoint对象池，用于减少对象创建和GC压力\n */\nexport class PointPool {\n  private pool: CurrentPoint[] = [];\n\n  public acquire(): CurrentPoint {\n    const { pool } = this;\n\n    return pool.length > 0\n      ? pool.pop()!\n      : { x: 0, y: 0, x1: 0, y1: 0, x2: 0, y2: 0 };\n  }\n\n  public release(point: CurrentPoint): void {\n    // 重置点的属性\n    point.x = point.y = point.x1 = point.y1 = point.x2 = point.y2 = 0;\n    this.pool.push(point);\n  }\n}\n","import { type Bitmap } from \"octopus-platform\";\nimport { PointPool, CurrentPoint } from \"../../../shared/PointPool\";\nimport {\n  PlatformVideo,\n  type TransformScale,\n  type PlatformRenderingContext2D,\n  type CanvasSize,\n  PLAYER_CONTENT_MODE\n} from \"../../../types\";\n\nexport interface ICommand {\n  command: string;\n  args: string;\n}\n\nexport class Renderer2D {\n  /**\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths\n   * 绘制路径的不同指令：\n   * * 直线命令\n   * - M: moveTo，移动到指定点，不绘制直线。\n   * - L: lineTo，从起始点绘制一条直线到指定点。\n   * - H: horizontal lineTo，从起始点绘制一条水平线到指定点。\n   * - V: vertical lineTo，从起始点绘制一条垂直线到指定点。\n   * - Z: closePath，从起始点绘制一条直线到路径起点，形成一个闭合路径。\n   * * 曲线命令\n   * - C: bezierCurveTo，绘制三次贝塞尔曲线。\n   * - S: smooth curveTo，绘制平滑三次贝塞尔曲线。\n   * - Q: quadraticCurveTo，绘制两次贝塞尔曲线。\n   * - T: smooth quadraticCurveTo，绘制平滑两次贝塞尔曲线。\n   * * 弧线命令\n   * - A: arcTo，从起始点绘制一条弧线到指定点。\n   */\n  private static SVG_PATH = new Set([\n    \"M\",\n    \"L\",\n    \"H\",\n    \"V\",\n    \"Z\",\n    \"C\",\n    \"S\",\n    \"Q\",\n    \"m\",\n    \"l\",\n    \"h\",\n    \"v\",\n    \"z\",\n    \"c\",\n    \"s\",\n    \"q\",\n  ]);\n\n  private static SVG_LETTER_REGEXP = /[a-zA-Z]/;\n\n  // 在Renderer2D类中添加新的解析方法\n  private static parseSVGPath(d: string): ICommand[] {\n    const { SVG_LETTER_REGEXP } = Renderer2D;\n    const result: ICommand[] = [];\n    let currentIndex = 0;\n\n    // 状态：0 - 等待命令，1 - 读取参数\n    let state = 0;\n    let currentCommand = \"\";\n    let currentArgs = \"\";\n\n    while (currentIndex < d.length) {\n      const char = d[currentIndex];\n\n      switch (state) {\n        case 0: // 等待命令\n          if (SVG_LETTER_REGEXP.test(char)) {\n            currentCommand = char;\n            state = 1;\n          }\n          break;\n        case 1: // 读取参数\n          if (SVG_LETTER_REGEXP.test(char)) {\n            // 遇到新命令，保存当前命令和参数\n            result.push({\n              command: currentCommand,\n              args: currentArgs.trim(),\n            });\n            currentCommand = char;\n            currentArgs = \"\";\n          } else {\n            currentArgs += char;\n          }\n          break;\n      }\n\n      currentIndex++;\n    }\n\n    // 处理最后一个命令\n    if (currentCommand && state === 1) {\n      result.push({\n        command: currentCommand,\n        args: currentArgs.trim(),\n      });\n    }\n\n    return result;\n  }\n\n  private static fillOrStroke(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      if (styles.fill) {\n        context.fill();\n      }\n\n      if (styles.stroke) {\n        context.stroke();\n      }\n    }\n  }\n\n  private static resetShapeStyles(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      context.strokeStyle = styles.stroke || \"transparent\";\n\n      if (styles.strokeWidth! > 0) {\n        context.lineWidth = styles.strokeWidth!;\n      }\n\n      if (styles.miterLimit! > 0) {\n        context.miterLimit = styles.miterLimit!;\n      }\n\n      if (styles.lineCap) {\n        context.lineCap = styles.lineCap;\n      }\n\n      if (styles.lineJoin) {\n        context.lineJoin = styles.lineJoin;\n      }\n\n      context.fillStyle = styles.fill || \"transparent\";\n\n      if (styles.lineDash) {\n        context.setLineDash(styles.lineDash);\n      }\n    }\n  }\n\n  /**\n   * 计算缩放比例\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  private static calculateScale(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): TransformScale {\n    const imageRatio = videoSize.width / videoSize.height;\n    const viewRatio = canvasSize.width / canvasSize.height;\n    const isAspectFit = contentMode === PLAYER_CONTENT_MODE.ASPECT_FIT;\n    const shouldUseWidth =\n      (imageRatio >= viewRatio && isAspectFit) ||\n      (imageRatio <= viewRatio && !isAspectFit);\n    const createTransform = (\n      scale: number,\n      translateX: number,\n      translateY: number\n    ) => ({\n      scaleX: scale,\n      scaleY: scale,\n      translateX,\n      translateY,\n    });\n\n    if (shouldUseWidth) {\n      const scale = canvasSize.width / videoSize.width;\n\n      return createTransform(\n        scale,\n        0,\n        (canvasSize.height - videoSize.height * scale) / 2\n      );\n    }\n\n    const scale = canvasSize.height / videoSize.height;\n\n    return createTransform(\n      scale,\n      (canvasSize.width - videoSize.width * scale) / 2,\n      0\n    );\n  }\n\n  private readonly pointPool: PointPool = new PointPool();\n\n  private currentPoint: CurrentPoint;\n\n  private lastResizeKey = \"\";\n\n  private globalTransform?: PlatformVideo.Transform = undefined;\n\n  constructor(private context: PlatformRenderingContext2D | null) {\n    this.currentPoint = this.pointPool.acquire();\n  }\n\n  private setTransform(transform?: PlatformVideo.Transform): void {\n    if (transform && this.context) {\n      this.context!.transform(\n        transform.a,\n        transform.b,\n        transform.c,\n        transform.d,\n        transform.tx,\n        transform.ty\n      );\n    }\n  }\n\n  private drawBezier(\n    d?: string,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context, pointPool } = this;\n    this.currentPoint = pointPool.acquire();\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n    context!.beginPath();\n\n    if (d) {\n      // 使用状态机解析器替代正则表达式\n      const commands = Renderer2D.parseSVGPath(d);\n\n      for (const { command, args } of commands) {\n        if (Renderer2D.SVG_PATH.has(command)) {\n          this.drawBezierElement(\n            this.currentPoint,\n            command,\n            args.split(/[\\s,]+/).filter(Boolean)\n          );\n        }\n      }\n    }\n\n    Renderer2D.fillOrStroke(context!, styles);\n    pointPool.release(this.currentPoint);\n    context!.restore();\n  }\n\n  private drawBezierElement(\n    currentPoint: CurrentPoint,\n    method: string,\n    args: string[]\n  ): void {\n    const { context } = this;\n\n    switch (method) {\n      case \"M\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"m\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"L\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"l\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"H\":\n        currentPoint.x = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"h\":\n        currentPoint.x += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"V\":\n        currentPoint.y = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"v\":\n        currentPoint.y += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"C\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x2 = +args[2];\n        currentPoint.y2 = +args[3];\n        currentPoint.x = +args[4];\n        currentPoint.y = +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"c\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x2 = currentPoint.x + +args[2];\n        currentPoint.y2 = currentPoint.y + +args[3];\n        currentPoint.x += +args[4];\n        currentPoint.y += +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"S\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = +args[0];\n          currentPoint.y2 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = +args[0];\n          currentPoint.y1 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"s\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = currentPoint.x + +args[0];\n          currentPoint.y2 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = currentPoint.x + +args[0];\n          currentPoint.y1 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"Q\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x = +args[2];\n        currentPoint.y = +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"q\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x += +args[2];\n        currentPoint.y += +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        context!.closePath();\n        break;\n    }\n  }\n\n  private drawEllipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    x -= radiusX;\n    y -= radiusY;\n\n    const w = radiusX * 2;\n    const h = radiusY * 2;\n    const kappa = 0.5522848;\n    const ox = (w / 2) * kappa;\n    const oy = (h / 2) * kappa;\n    const xe = x + w;\n    const ye = y + h;\n    const xm = x + w / 2;\n    const ym = y + h / 2;\n\n    context!.beginPath();\n    context!.moveTo(x, ym);\n    context!.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    context!.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    context!.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    context!.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawRect(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    cornerRadius: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    let radius = cornerRadius;\n\n    if (width < 2 * radius) {\n      radius = width / 2;\n    }\n\n    if (height < 2 * radius) {\n      radius = height / 2;\n    }\n\n    context!.beginPath();\n    context!.moveTo(x + radius, y);\n    context!.arcTo(x + width, y, x + width, y + height, radius);\n    context!.arcTo(x + width, y + height, x, y + height, radius);\n    context!.arcTo(x, y + height, x, y, radius);\n    context!.arcTo(x, y, x + width, y, radius);\n    context!.closePath();\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawShape(shape: PlatformVideo.VideoFrameShape): void {\n    const { type, path, transform, styles } = shape;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE.SHAPE:\n        this.drawBezier(path.d, transform, styles);\n        break;\n      case PlatformVideo.SHAPE_TYPE.ELLIPSE:\n        this.drawEllipse(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.radiusX ?? 0,\n          path.radiusY ?? 0,\n          transform,\n          styles\n        );\n        break;\n      case PlatformVideo.SHAPE_TYPE.RECT:\n        this.drawRect(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.width ?? 0,\n          path.height ?? 0,\n          path.cornerRadius ?? 0,\n          transform,\n          styles\n        );\n        break;\n    }\n  }\n\n  private drawSprite(\n    frame: PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame,\n    bitmap?: Bitmap,\n    dynamicElement?: Bitmap\n  ): void {\n    if (frame.alpha === 0) return;\n\n    const { context } = this;\n    const { alpha, transform, layout, shapes } =\n      frame as PlatformVideo.VideoFrame;\n    const { a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0 } = transform ?? {};\n\n    context!.save();\n    this.setTransform(this.globalTransform);\n    context!.globalAlpha = alpha;\n    context!.transform(a, b, c, d, tx, ty);\n\n    if (bitmap) {\n      context!.drawImage(\n        bitmap as CanvasImageSource,\n        0,\n        0,\n        layout.width,\n        layout.height\n      );\n    }\n\n    if (dynamicElement) {\n      context!.drawImage(\n        dynamicElement as CanvasImageSource,\n        (layout.width - dynamicElement.width) / 2,\n        (layout.height - dynamicElement.height) / 2\n      );\n    }\n\n    for (let i = 0; i < shapes.length; i++) {\n      this.drawShape(shapes[i]);\n    }\n\n    context!.restore();\n  }\n\n  /**\n   * 调整画布尺寸\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  public resize(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): void {\n    const { width: canvasWidth, height: canvasHeight } = canvasSize;\n    const { width: videoWidth, height: videoHeight } = videoSize;\n    const resizeKey = `${contentMode}-${videoWidth}-${videoHeight}-${canvasWidth}-${canvasHeight}`;\n    const lastTransform = this.globalTransform;\n\n    if (this.lastResizeKey === resizeKey && lastTransform) {\n      return;\n    }\n\n    let scale: TransformScale = {\n      scaleX: 1,\n      scaleY: 1,\n      translateX: 0,\n      translateY: 0,\n    };\n\n    if (contentMode === PLAYER_CONTENT_MODE.FILL) {\n      scale.scaleX = canvasWidth / videoWidth;\n      scale.scaleY = canvasHeight / videoHeight;\n    } else {\n      scale = Renderer2D.calculateScale(contentMode, videoSize, canvasSize);\n    }\n\n    this.lastResizeKey = resizeKey;\n    this.globalTransform = {\n      a: scale.scaleX,\n      b: 0.0,\n      c: 0.0,\n      d: scale.scaleY,\n      tx: scale.translateX,\n      ty: scale.translateY,\n    };\n  }\n\n  public render(\n    videoEntity: PlatformVideo.Video,\n    materials: Map<string, Bitmap>,\n    dynamicMaterials: Map<string, Bitmap>,\n    currentFrame: number,\n    head: number,\n    tail: number\n  ): void {\n    let sprite: PlatformVideo.VideoSprite;\n    let imageKey: string;\n    let bitmap: Bitmap | undefined;\n    let dynamicElement: Bitmap | undefined;\n\n    for (let i = head; i < tail; i++) {\n      sprite = videoEntity.sprites[i];\n      imageKey = sprite.imageKey;\n      bitmap = materials.get(imageKey);\n      dynamicElement = dynamicMaterials.get(imageKey);\n\n      this.drawSprite(sprite.frames[currentFrame], bitmap, dynamicElement);\n    }\n  }\n\n  public destroy() {\n    this.globalTransform = undefined;\n    this.lastResizeKey = \"\";\n    this.context = null;\n  }\n}\n","import {\n  Bitmap,\n  PlatformCanvas,\n  PlatformOffscreenCanvas,\n} from \"octopus-platform\";\nexport * from \"./Renderer2D\";\n\nexport const Renderer2DExtension = {\n  stick:\n    (\n      context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n      bitmap: Bitmap\n    ) =>\n    () =>\n      context.drawImage(bitmap, 0, 0),\n  clear: (\n    type: \"CL\" | \"RE\",\n    context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n    canvas: PlatformCanvas | PlatformOffscreenCanvas,\n    width: number,\n    height: number\n  ) => {\n    if (type === \"CL\") {\n      return () => {\n        // FIXME:【支付宝小程序】无法通过改变尺寸来清理画布，无论是Canvas还是OffscreenCanvas\n        context!.clearRect(0, 0, width, height);\n      };\n    }\n\n    return () => {\n      canvas!.width = width;\n      canvas!.height = height;\n    };\n  },\n};\n","import { platform } from \"../../platform\";\n\n/**\n * 动画控制器\n */\nexport class Animator {\n  /**\n   * 动画是否执行\n   */\n  private isRunning = false;\n  /**\n   * 动画开始时间\n   */\n  private startTime = 0;\n  /**\n   * 动画持续时间\n   */\n  private duration: number = 0;\n  /**\n   * 循环播放开始帧与动画开始帧之间的时间偏差\n   */\n  private loopStart: number = 0;\n  /**\n   * 动画暂停时的时间偏差\n   */\n  private pauseTime: number = 0;\n  /**\n   * 循环持续时间\n   */\n  private loopDuration: number = 0;\n\n  public onAnimate: (callback: () => void) => number = platform.noop<number>;\n\n  /* ---- 事件钩子 ---- */\n  public onStart: () => void = platform.noop;\n  public onUpdate: (timePercent: number) => void = platform.noop;\n  public onEnd: () => void = platform.noop;\n\n  /**\n   * 设置动画的必要参数\n   * @param duration\n   * @param loopStart\n   * @param loop\n   * @param fillValue\n   */\n  public setConfig(\n    duration: number,\n    loopStart: number,\n    loop: number,\n    fillValue: number\n  ) {\n    this.duration = duration;\n    this.loopStart = loopStart;\n    this.loopDuration = duration * loop + fillValue - loopStart;\n  }\n\n  public start(): void {\n    this.isRunning = true;\n    this.startTime = platform.now();\n    this.pauseTime = 0;\n    this.onStart();\n    this.doFrame();\n  }\n\n  public resume(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = true;\n    this.doFrame();\n    return true;\n  }\n\n  public pause(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = false;\n    // 设置暂停的位置\n    this.pauseTime =\n      (platform.now() - this.startTime) % this.duration;\n    return true;\n  }\n\n  public stop(): void {\n    this.isRunning = false;\n    this.startTime = 0;\n  }\n\n  private doFrame(): void {\n    if (this.isRunning) {\n      this.doDeltaTime(platform.now() - this.startTime);\n      if (this.isRunning) {\n        this.onAnimate(() => this.doFrame());\n      }\n    }\n  }\n\n  private doDeltaTime(deltaTime: number): void {\n    const { duration, loopStart, pauseTime, loopDuration } = this;\n    // 本轮动画已消耗的时间比例（Percentage of speed time）\n    let percent: number;\n    let ended = false;\n\n    // 运行时间 大于等于 循环持续时间\n    if (deltaTime >= loopDuration) {\n      // 动画已结束\n      percent = 1.0;\n      ended = true;\n      this.stop();\n    } else {\n      // 本轮动画已消耗的时间比例 = 本轮动画已消耗的时间 / 动画持续时间\n      percent = ((deltaTime + loopStart + pauseTime) % duration) / duration;\n    }\n\n    this.onUpdate(percent);\n    if (!this.isRunning && ended) {\n      this.onEnd();\n    }\n  }\n}\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\n\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n\n// fixed length extra bits\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n\n// fixed distance extra bits\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n\n// code length index map\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n// get base, reverse index map from extra bits\nconst freb = (eb: Uint8Array, start: number) => {\n  const b = new u16(31);\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  }\n  // numbers here are at max 18 bits\n  const r = new i32(b[30]);\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = ((j - b[i]) << 5) | i;\n    }\n  }\n  return { b, r };\n}\n\nconst { b: fl, r: revfl } = freb(fleb, 2);\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nconst { b: fd, r: revfd } = freb(fdeb, 0);\n\n// map of value to reverse (assuming 16 bits)\nconst rev = new u16(32768);\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n  x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n  x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n  rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nconst hMap = ((cd: Uint8Array, mb: number, r: 0 | 1) => {\n  const s = cd.length;\n  // index\n  let i = 0;\n  // u16 \"map\": index -> # of codes with bit length = index\n  const l = new u16(mb);\n  // length of cd must be 288 (total # of codes)\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  }\n  // u16 \"map\": index -> minimum code for bit length = index\n  const le = new u16(mb);\n  for (i = 1; i < mb; ++i) {\n    le[i] = (le[i - 1] + l[i - 1]) << 1;\n  }\n  let co: Uint16Array;\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb);\n    // bits to remove for reverser\n    const rvb = 15 - mb;\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = (i << 4) | cd[i];\n        // free bits\n        const r = mb - cd[i];\n        // start value\n        let v = le[cd[i] - 1]++ << r;\n        // m is end value\n        for (const m = v | ((1 << r) - 1); v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n      }\n    }\n  }\n  return co;\n});\n\n// fixed length tree\nconst flt = new u8(288);\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\nfor (let i = 280; i < 288; ++i) flt[i] = 8;\n// fixed distance tree\nconst fdt = new u8(32);\nfor (let i = 0; i < 32; ++i) fdt[i] = 5;\n// fixed length map\nconst flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nconst fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n\n// find max of array\nconst max = (a: Uint8Array | number[]) => {\n  let m = a[0];\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n  return m;\n};\n\n// read d, starting at bit p and mask with m\nconst bits = (d: Uint8Array, p: number, m: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n}\n\n// read d, starting at bit p continuing for at least 16 bits\nconst bits16 = (d: Uint8Array, p: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n}\n\n// get end of byte\nconst shft = (p: number) => ((p + 7) / 8) | 0;\n\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nconst slc = (v: Uint8Array, s: number, e?: number) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length;\n  // can't use .constructor in case user-supplied\n  return new u8(v.subarray(s, e));\n}\n\n// inflate state\ntype InflateState = {\n  // lmap\n  l?: Uint16Array;\n  // dmap\n  d?: Uint16Array;\n  // lbits\n  m?: number;\n  // dbits\n  n?: number;\n  // final\n  f?: number;\n  // pos\n  p?: number;\n  // byte\n  b?: number;\n  // lstchk\n  i: number;\n};\n\n// error codes\nconst ec = [\n  'unexpected EOF',\n  'invalid block type',\n  'invalid length/literal',\n  'invalid distance',\n  'stream finished',\n  'no stream handler',\n  , // determined by compression function\n  'no callback',\n  'invalid UTF-8 data',\n  'extra field too long',\n  'date not in range 1980-2099',\n  'filename too long',\n  'stream finishing',\n  'invalid zip data'\n  // determined by unknown compression method\n];\n\n/**\n * An error generated within this library\n */\nexport interface FlateError extends Error {\n  /**\n   * The code associated with this error\n   */\n  code: number;\n};\n\nconst err = (ind: number, msg?: string | 0, nt?: 1) => {\n  const e: Partial<FlateError> = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e as FlateError;\n}\n\n// expands raw DEFLATE data\nconst inflt = (dat: Uint8Array, st: InflateState, buf?: Uint8Array, dict?: Uint8Array) => {\n  // source length       dict length\n  const sl = dat.length, dl = dict ? dict.length : 0;\n  if (!sl || st.f && !st.l) return buf || new u8(0);\n  const noBuf = !buf;\n  // have to estimate size\n  const resize = noBuf || st.i != 2;\n  // no state\n  const noSt = st.i;\n  // Assumes roughly 33% compression ratio average\n  if (noBuf) buf = new u8(sl * 3);\n  // ensure buffer can fit at least l elements\n  const cbuf = (l: number) => {\n    let bl = buf!.length;\n    // need to increase size to fit\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf!);\n      buf = nbuf;\n    }\n  };\n  //  last chunk         bitpos           bytes\n  let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n  // total bits\n  const tbts = sl * 8;\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1);\n      // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        }\n        // ensure size\n        if (resize) cbuf(bt + l);\n        // Copy over uncompressed data\n        buf!.set(dat.subarray(s, t), bt);\n        // Get new bitpos, update byte count\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      }\n      else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n      else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14;\n        // length+distance tree\n        const ldt = new u8(tl);\n        // code length tree\n        const clt = new u8(19);\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n        pos += hcLen * 3;\n        // code lengths bits\n        const clb = max(clt), clbmsk = (1 << clb) - 1;\n        // code lengths map\n        const clm = hMap(clt, clb, 1);\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)];\n          // bits read\n          pos += r & 15;\n          // symbol\n          const s = r >> 4;\n          // code length to copy\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0, n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n            else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;\n            else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n            while (n--) ldt[i++] = c;\n          }\n        }\n        //    length tree                 distance tree\n        const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n        // max length bits\n        lbt = max(lt)\n        // max dist bits\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    }\n    // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17\n    if (resize) cbuf(bt + 131072);\n    const lms = (1 << lbt!) - 1, dms = (1 << dbt!) - 1;\n    let lpos = pos;\n    for (;; lpos = pos) {\n      // bits read, code\n      const c = lm![bits16(dat, pos) & lms], sym = c >> 4;\n      pos += c & 15;\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n      if (!c) err(2);\n      if (sym < 256) buf![bt++] = sym;\n      else if (sym == 256) {\n        lpos = pos, lm = undefined;\n        break;\n      } else {\n        let add = sym - 254;\n        // no extra bits needed if less\n        if (sym > 264) {\n          // index\n          const i = sym - 257, b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        }\n        // dist\n        const d = dm![bits16(dat, pos) & dms], dsym = d >> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        let dt = fd[dsym];\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n        if (resize) cbuf(bt + 131072);\n        const end = bt + add;\n        if (bt < dt) {\n          const shift = dl - dt, dend = Math.min(dt, end);\n          if (shift + bt < 0) err(3);\n          for (; bt < dend; ++bt) buf![bt] = dict![shift + bt];\n        }\n        for (; bt < end; ++bt) buf![bt] = buf![bt - dt];\n      }\n    }\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final)\n  // don't reallocate for streams or user buffers\n  return bt != buf!.length && noBuf ? slc(buf!, 0, bt) : buf!.subarray(0, bt);\n}\n\n// starting at p, write the minimum number of bits that can hold v to d\nconst wbits = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n}\n\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nconst wbits16 = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n  d[o + 2] |= v >> 16;\n}\n\ntype HuffNode = {\n  // symbol\n  s: number;\n  // frequency\n  f: number;\n  // left child\n  l?: HuffNode;\n  // right child\n  r?: HuffNode;\n};\n\n// creates code lengths from a frequency table\nconst hTree = (d: Uint16Array, mb: number) => {\n  // Need extra info to make a tree\n  const t: HuffNode[] = [];\n  for (let i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({ s: i, f: d[i] });\n  }\n  const s = t.length;\n  const t2 = t.slice();\n  if (!s) return { t: et, l: 0 };\n  if (s == 1) {\n    const v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return { t: v, l: 1 };\n  }\n  t.sort((a, b) => a.f - b.f);\n  // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n  t.push({ s: -1, f: 25001 });\n  let l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n  t[0] = { s: -1, f: l.f + r.f, l, r };\n  // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = { s: -1, f: l.f + r.f, l, r };\n  }\n  let maxSym = t2[0].s;\n  for (let i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  }\n  // code lengths\n  const tr = new u16(maxSym + 1);\n  // max bits in tree\n  let mbt = ln(t[i1 - 1], tr, 0);\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    let i = 0, dt = 0;\n    //    left            cost\n    const lft = mbt - mb, cst = 1 << lft;\n    t2.sort((a, b) => tr[b.s] - tr[a.s] || a.f - b.f);\n    for (; i < s; ++i) {\n      const i2 = t2[i].s;\n      if (tr[i2] > mb) {\n        dt += cst - (1 << (mbt - tr[i2]));\n        tr[i2] = mb;\n      } else break;\n    }\n    dt >>= lft;\n    while (dt > 0) {\n      const i2 = t2[i].s;\n      if (tr[i2] < mb) dt -= 1 << (mb - tr[i2]++ - 1);\n      else ++i;\n    }\n    for (; i >= 0 && dt; --i) {\n      const i2 = t2[i].s;\n      if (tr[i2] == mb) {\n        --tr[i2];\n        ++dt;\n      }\n    }\n    mbt = mb;\n  }\n  return { t: new u8(tr), l: mbt };\n}\n// get the max length and assign length codes\nconst ln = (n: HuffNode, l: Uint16Array, d: number): number => {\n  return n.s == -1\n    ? Math.max(ln(n.l!, l, d + 1), ln(n.r!, l, d + 1))\n    : (l[n.s] = d);\n}\n\n// length codes generation\nconst lc = (c: Uint8Array) => {\n  let s = c.length;\n  // Note that the semicolon was intentional\n  while (s && !c[--s]);\n  const cl = new u16(++s);\n  //  ind      num         streak\n  let cli = 0, cln = c[0], cls = 1;\n  const w = (v: number) => { cl[cli++] = v; }\n  for (let i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s)\n      ++cls;\n    else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n        if (cls > 2) {\n          w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n        for (; cls > 6; cls -= 6) w(8304);\n        if (cls > 2) w(((cls - 3) << 5) | 8208), cls = 0;\n      }\n      while (cls--) w(cln);\n      cls = 1;\n      cln = c[i];\n    }\n  }\n  return { c: cl.subarray(0, cli), n: s };\n}\n\n// calculate the length of output from tree, code lengths\nconst clen = (cf: Uint16Array, cl: Uint8Array) => {\n  let l = 0;\n  for (let i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n  return l;\n}\n\n// writes a fixed block\n// returns the new bit pos\nconst wfblk = (out: Uint8Array, pos: number, dat: Uint8Array) => {\n  // no need to write 00 as type: TypedArray defaults to 0\n  const s = dat.length;\n  const o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n  for (let i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n  return (o + 4 + s) * 8;\n}\n\n// writes a block\nconst wblk = (dat: Uint8Array, out: Uint8Array, final: number, syms: Int32Array, lf: Uint16Array, df: Uint16Array, eb: number, li: number, bs: number, bl: number, p: number) => {\n  wbits(out, p++, final);\n  ++lf[256];\n  const { t: dlt, l: mlb } = hTree(lf, 15);\n  const { t: ddt, l: mdb } = hTree(df, 15);\n  const { c: lclt, n: nlc } = lc(dlt);\n  const { c: lcdt, n: ndc } = lc(ddt);\n  const lcfreq = new u16(19);\n  for (let i = 0; i < lclt.length; ++i) ++lcfreq[lclt[i] & 31];\n  for (let i = 0; i < lcdt.length; ++i) ++lcfreq[lcdt[i] & 31];\n  const { t: lct, l: mlcb } = hTree(lcfreq, 7);\n  let nlcc = 19;\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n  const flen = (bl + 5) << 3;\n  const ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  const dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n  if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  let lm: Uint16Array, ll: Uint8Array, dm: Uint16Array, dl: Uint8Array;\n  wbits(out, p, 1 + (dtlen < ftlen as unknown as number)), p += 2;\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    const llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n    for (let i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n    p += 3 * nlcc;\n    const lcts = [lclt, lcdt];\n    for (let it = 0; it < 2; ++it) {\n      const clct = lcts[it];\n      for (let i = 0; i < clct.length; ++i) {\n        const len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n  for (let i = 0; i < li; ++i) {\n    const sym = syms[i];\n    if (sym > 255) {\n      const len = (sym >> 18) & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n      const dst = sym & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[sym]), p += ll[sym];\n    }\n  }\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n}\n\n// deflate options (nice << 13) | chain\nconst deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n\n// empty\nconst et = /*#__PURE__*/new u8(0);\n\ntype DeflateState = {\n  // head\n  h?: Uint16Array;\n  // prev\n  p?: Uint16Array;\n  // index\n  i?: number;\n  // end index\n  z?: number;\n  // wait index\n  w?: number;\n  // remainder byte info\n  r?: number;\n  // last chunk\n  l: number;\n};\n\n// compresses data into a raw DEFLATE buffer\nconst dflt = (dat: Uint8Array, lvl: number, plvl: number, pre: number, post: number, st: DeflateState) => {\n  const s = st.z || dat.length;\n  const o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n  // writing to this writes to the output buffer\n  const w = o.subarray(pre, o.length - post);\n  const lst = st.l;\n  let pos = (st.r || 0) & 7;\n  if (lvl) {\n    if (pos) w[0] = st.r! >> 3;\n    const opt = deo[lvl - 1];\n    const n = opt >> 13, c = opt & 8191;\n    const msk = (1 << plvl) - 1;\n    //    prev 2-byte val map    curr 2-byte val map\n    const prev = st.p || new u16(32768), head = st.h || new u16(msk + 1);\n    const bs1 = Math.ceil(plvl / 3), bs2 = 2 * bs1;\n    const hsh = (i: number) => (dat[i] ^ (dat[i + 1] << bs1) ^ (dat[i + 2] << bs2)) & msk;\n    // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n    const syms = new i32(25000);\n    // length/literal freq   distance freq\n    const lf = new u16(288), df = new u16(32);\n    //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n    let lc = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n    for (; i + 2 < s; ++i) {\n      // hash value\n      const hv = hsh(i);\n      // index mod 32768    previous index mod\n      let imod = i & 32767, pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod;\n      // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n      if (wi <= i) {\n        // bytes remaining\n        const rem = s - i;\n        if ((lc > 7000 || li > 24576) && (rem > 423 || !lst)) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc = eb = 0, bs = i;\n          for (let j = 0; j < 286; ++j) lf[j] = 0;\n          for (let j = 0; j < 30; ++j) df[j] = 0;\n        }\n        //  len    dist   chain\n        let l = 2, d = 0, ch = c, dif = imod - pimod & 32767;\n        if (rem > 2 && hv == hsh(i - dif)) {\n          const maxn = Math.min(n, rem) - 1;\n          const maxd = Math.min(32767, i);\n          // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n          const ml = Math.min(258, rem);\n          while (dif <= maxd && --ch && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              let nl = 0;\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n              if (nl > l) {\n                l = nl, d = dif;\n                // break out early when we reach \"nice\" (we are satisfied enough)\n                if (nl > maxn) break;\n                // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n                const mmd = Math.min(dif, nl - 2);\n                let md = 0;\n                for (let j = 0; j < mmd; ++j) {\n                  const ti = i - dif + j & 32767;\n                  const pti = prev[ti];\n                  const cd = ti - pti & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            }\n            // check the previous match\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod & 32767;\n          }\n        }\n        // d will be nonzero only when a match was found\n        if (d) {\n          // store both dist and len data in one int32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n          const lin = revfl[l] & 31, din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n    for (i = Math.max(i, wi); i < s; ++i) {\n      syms[li++] = dat[i];\n      ++lf[dat[i]];\n    }\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n    if (!lst) {\n      st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n      // shft(pos) now 1 less if pos & 7 != 0\n      pos -= 7;\n      st.h = head, st.p = prev, st.i = i, st.w = wi;\n    }\n  } else {\n    for (let i = st.w || 0; i < s + lst; i += 65535) {\n      // end\n      let e = i + 65535;\n      if (e >= s) {\n        // write final block\n        w[(pos / 8) | 0] = lst;\n        e = s;\n      }\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n    st.i = s;\n  }\n  return slc(o, 0, pre + shft(pos) + post);\n}\n\n// crc check\ntype CRCV = {\n  p(d: Uint8Array): void;\n  d(): number;\n};\n\n// Adler32\nconst adler = (): CRCV => {\n  let a = 1, b = 0;\n  return {\n    p(d) {\n      // closures have awful performance\n      let n = a, m = b;\n      const l = d.length | 0;\n      for (let i = 0; i != l;) {\n        const e = Math.min(i + 2655, l);\n        for (; i < e; ++i) m += n += d[i];\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n      a = n, b = m;\n    },\n    d() {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n    }\n  }\n}\n\n/**\n * Options for compressing data into a DEFLATE format\n */\nexport interface DeflateOptions {\n  /**\n   * The level of compression to use, ranging from 0-9.\n   * \n   * 0 will store the data without compression.\n   * 1 is fastest but compresses the worst, 9 is slowest but compresses the best.\n   * The default level is 6.\n   * \n   * Typically, binary data benefits much more from higher values than text data.\n   * In both cases, higher values usually take disproportionately longer than the reduction in final size that results.\n   * \n   * For example, a 1 MB text file could:\n   * - become 1.01 MB with level 0 in 1ms\n   * - become 400 kB with level 1 in 10ms\n   * - become 320 kB with level 9 in 100ms\n   */\n  level?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;\n  /**\n   * The memory level to use, ranging from 0-12. Increasing this increases speed and compression ratio at the cost of memory.\n   * \n   * Note that this is exponential: while level 0 uses 4 kB, level 4 uses 64 kB, level 8 uses 1 MB, and level 12 uses 16 MB.\n   * It is recommended not to lower the value below 4, since that tends to hurt performance.\n   * In addition, values above 8 tend to help very little on most data and can even hurt performance.\n   * \n   * The default value is automatically determined based on the size of the input data.\n   */\n  mem?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n  /**\n   * A buffer containing common byte sequences in the input data that can be used to significantly improve compression ratios.\n   * \n   * Dictionaries should be 32kB or smaller and include strings or byte sequences likely to appear in the input.\n   * The decompressor must supply the same dictionary as the compressor to extract the original data.\n   * \n   * Dictionaries only improve aggregate compression ratio when reused across multiple small inputs. They should typically not be used otherwise.\n   * \n   * Avoid using dictionaries with GZIP and ZIP to maximize software compatibility.\n   */\n  dictionary?: Uint8Array;\n};\n\n/**\n * Options for compressing data into a Zlib format\n */\nexport interface ZlibOptions extends DeflateOptions {}\n\n/**\n * Options for decompressing DEFLATE data\n */\nexport interface InflateOptions {\n  /**\n   * The dictionary used to compress the original data. If no dictionary was used during compression, this option has no effect.\n   * \n   * Supplying the wrong dictionary during decompression usually yields corrupt output or causes an invalid distance error.\n   */\n  dictionary?: Uint8Array;\n  /**\n   * The buffer into which to write the decompressed data. Saves memory if you know the decompressed size in advance.\n   * \n   * Note that if the decompression result is larger than the size of this buffer, it will be truncated to fit.\n   */\n  out?: Uint8Array;\n}\n\n/**\n * Options for decompressing Zlib data\n */\nexport interface UnzlibOptions extends InflateOptions {}\n\n// deflate with opts\nconst dopt = (dat: Uint8Array, opt: DeflateOptions, pre: number, post: number, st?: DeflateState) => {\n  if (!st) {\n    st = { l: 1 };\n    if (opt.dictionary) {\n      const dict = opt.dictionary.subarray(-32768);\n      const newDat = new u8(dict.length + dat.length);\n      newDat.set(dict);\n      newDat.set(dat, dict.length);\n      dat = newDat;\n      st.w = dict.length;\n    }\n  }\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n}\n\n// write bytes\nconst wbytes = (d: Uint8Array, b: number, v: number) => {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n}\n\n// zlib header\nconst zlh = (c: Uint8Array, o: ZlibOptions) => {\n  const lv = o.level ?? 0, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = (fl << 6) | ((o.dictionary ?? 0) && 32);\n  c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n  if (o.dictionary) {\n    const h = adler();\n    h.p(o.dictionary);\n    wbytes(c, 2, h.d());\n  }\n}\n\n// zlib start\nconst zls = (d: Uint8Array, dict?: unknown) => {\n  if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31)) err(6, 'invalid zlib data');\n  if ((d[1] >> 5 & 1) == +!dict) err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n  return (d[1] >> 3 & 4) + 2;\n}\n\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data: Uint8Array, opts: ZlibOptions = {}) {\n  const a = adler();\n  a.p(data);\n  const d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data: Uint8Array, opts: UnzlibOptions = {}) {\n  return inflt(data.subarray(zls(data, opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n","import { platform } from \"../../platform\";\n\nexport class CRC32 {\n  // CRC32 Table 初始化\n  private static table = Uint32Array.from(Array(256), (_, i) => {\n    let c = i;\n\n    for (let j = 0; j < 8; j++) {\n      c = (c & 1) ? (0xedb88320 ^ (c >>> 1)) : (c >>> 1);\n    }\n\n    return c >>> 0;\n  });\n\n  private static WHITE_COLOR: number = 0xffffffff;\n\n  private readonly caches = new Map<string, number>();\n\n  calculate(buff: Uint8Array): number {\n    if (!(buff instanceof Uint8Array)) {\n      throw new TypeError('Input must be a Uint8Array');\n    }\n\n    const { caches } = this;\n    const key = platform.decode.bytesToString(buff);\n  \n    if (caches.has(key)) {\n      return caches.get(key)!;\n    }\n\n    let crc = CRC32.WHITE_COLOR;\n    // 使用位运算优化\n    for (let i = 0; i < buff.length; i++) {\n      crc = (crc >>> 8) ^ CRC32.table[(crc ^ buff[i]) & 0xff];\n    }\n\n    caches.set(key, (crc ^ CRC32.WHITE_COLOR) >>> 0);\n\n    return caches.get(key) as number;\n  }\n\n  clear(){\n    this.caches.clear();\n  }\n}","// import { zlibSync } from \"fflate\";\nimport { zlibSync } from \"../zlib\";\nimport { CRC32 } from \"./crc\";\n\nexport class PNGEncoder {\n  private readonly view: DataView;\n\n  private crc32 = new CRC32();\n\n  constructor(private readonly width: number, private readonly height: number) {\n    this.view = new DataView(new ArrayBuffer(4 * width * height));\n  }\n\n  private createChunk(type: string, data: Uint8Array): Uint8Array {\n    // 长度（4字节，大端序）\n    const length = new Uint8Array(4);\n    new DataView(length.buffer).setUint32(0, data.length, false);\n\n    // 块类型（4字节， ASCII）\n    const chunkType = Uint8Array.from(type, c => c.charCodeAt(0));\n\n    // 计算 CRC32 校验（类型 + 数据）\n    const partialChunk = new Uint8Array(chunkType.length + data.length);\n    partialChunk.set(chunkType);\n    partialChunk.set(data, chunkType.length);\n    \n    const crc = new Uint8Array(4);\n    new DataView(crc.buffer).setUint32(0, this.crc32.calculate(partialChunk) >>> 0, false);\n\n    // 汇总成完整的chunk数据\n    const result = new Uint8Array(length.length + partialChunk.length + crc.length);\n    result.set(length);\n    result.set(partialChunk, length.length);\n    result.set(crc, length.length + partialChunk.length);\n\n    return result;\n  }\n\n  private createIHDRChunk(): Uint8Array {\n    const ihdrData = new Uint8Array(13);\n    const view = new DataView(ihdrData.buffer);\n\n    // 宽度\n    view.setUint32(0, this.width, false);\n    // 高度\n    view.setUint32(4, this.height, false);\n    // 位深度\n    view.setUint8(8, 8);\n    // 颜色类型\n    view.setUint8(9, 6);\n    // 压缩方法\n    view.setUint8(10, 0);\n    // 过滤器方法\n    view.setUint8(11, 0);\n    // 交错方法\n    view.setUint8(12, 0);\n\n    return this.createChunk(\"IHDR\", ihdrData);\n  }\n\n  private createIDATChunk(): Uint8Array {\n    const { width, height } = this;\n    const validRowSize = width * 4;\n    // 每行开头添加一位过滤头数据\n    const rowSize = validRowSize + 1;\n    const data = new Uint8Array(rowSize * height);\n    // 将Uint32数据转换为Uint8数据\n    const pixelsData = new Uint8Array(this.view.buffer);\n    let startIdx: number;\n    let srcStart: number;\n\n    for (let y = 0; y < height; y++) {\n      startIdx = y * rowSize;\n      data[startIdx] = 0x00; // 过滤头\n      // ✅ 复制预先转换好的 RGBA 数据\n      srcStart = y * validRowSize; // Uint32 => 每个元素占 4 字节\n      data.set(pixelsData.subarray(srcStart, srcStart + validRowSize), startIdx + 1);\n    }\n\n    // 使用 zlib 进行压缩, 平衡压缩率有利于提升文件生成速度\n    return this.createChunk(\"IDAT\", zlibSync(data));\n  }\n\n  public setPixel(x: number, y: number, pixel: number): void {\n    this.view.setUint32((y * this.width + x) * 4, pixel, false);\n  }\n\n  public write(pixels: Uint8Array | Uint8ClampedArray): this {\n    const { width, height } = this;\n    let pos: number;\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    let pixel: number;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        pos = (y * width + x) * 4;\n        r = pixels[pos];\n        g = pixels[pos + 1];\n        b = pixels[pos + 2];\n        a = pixels[pos + 3];\n        pixel = ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n        this.setPixel(x, y, pixel);\n      }\n    }\n\n    return this;\n  }\n\n  public flush(): Uint8Array {\n    // 预先创建所有块\n    const iHDRChunk = this.createIHDRChunk();\n    const iDATChunk = this.createIDATChunk();\n    const iENDChunk = this.createChunk(\"IEND\", new Uint8Array(0));\n    \n    // 一次性分配内存（直接计算总大小）\n    const pngData = new Uint8Array(8 + iHDRChunk.length + iDATChunk.length + iENDChunk.length);\n    \n    /* ------ 按顺序写入数据 ------ */\n\n    // 1. 写入文件头（固定 8 字节）\n    let offset = 0;\n    pngData.set(new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]), offset);\n    // 2. 写入IHDR块\n    offset += 8;\n    pngData.set(iHDRChunk, offset);\n    // 3. 写入IDAT块\n    offset += iHDRChunk.length;\n    pngData.set(iDATChunk, offset);\n    // 4. 写入IEND块\n    offset += iDATChunk.length;\n    pngData.set(iENDChunk, offset);\n    \n    /* ------ 清空 CRC32 缓存 ------ */\n    this.crc32.clear();\n\n    return pngData;\n  }\n}\n","// ---------------------------------------------------------------------\n// qrBitBuffer\n// ---------------------------------------------------------------------\n\nexport class BitBuffer {\n  public buffer: number[] = [];\n\n  public lengthInBits = 0;\n\n  public getAt(i: number): boolean {\n    const bufIndex = ~~(i / 8);\n\n    return ((this.buffer[bufIndex] >>> (7 - (i % 8))) & 1) === 1;\n  }\n\n  public put(num: number, length: number): void {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  public putBit(bit: boolean): void {\n    const { lengthInBits: len, buffer } = this;\n    const bufIndex = ~~(len / 8);\n\n    if (buffer.length <= bufIndex) {\n      buffer.push(0);\n    }\n\n    if (bit) {\n      buffer[bufIndex] |= 0x80 >>> len % 8;\n    }\n\n    this.lengthInBits += 1;\n  }\n}\n","// ---------------------------------------------------------------------\n// QRMode\n// ---------------------------------------------------------------------\n\nexport const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n}\n\n// ---------------------------------------------------------------------\n// QRErrorCorrectLevel\n// ---------------------------------------------------------------------\n\nexport const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n}\n\n// ---------------------------------------------------------------------\n// QRMaskPattern\n// ---------------------------------------------------------------------\n\nexport const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n}\n","// ---------------------------------------------------------------------\n// qr8BitByte\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { QRMode } from \"./constants\";\n\nexport class BitByte {\n  private readonly bytes: number[];\n\n  constructor(data: string) {\n    let parsedData: number[][] = [];\n\n    // Added to support UTF-8 Characters\n    for (let i = 0; i < data.length; i++) {\n      const byteArray: number[] = [];\n      const code = data.charCodeAt(i);\n\n      if (code > 0x10000) {\n        byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n        byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n        byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[3] = 0x80 | (code & 0x3f);\n      } else if (code > 0x800) {\n        byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n        byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[2] = 0x80 | (code & 0x3f);\n      } else if (code > 0x80) {\n        byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n        byteArray[1] = 0x80 | (code & 0x3f);\n      } else {\n        byteArray[0] = code;\n      }\n\n      // Fix Unicode corruption bug\n      parsedData.push(byteArray);\n    }\n\n    this.bytes = parsedData.flat(1);\n\n    const { bytes } = this;\n    if (bytes.length !== data.length) {\n      bytes.unshift(191);\n      bytes.unshift(187);\n      bytes.unshift(239);\n    }\n  }\n\n  public get mode(): number {\n    return QRMode.MODE_8BIT_BYTE;\n  }\n\n  public get length(): number {\n    return this.bytes.length;\n  }\n\n  public write(buff: BitBuffer): void {\n    const { bytes } = this;\n\n    for (let i = 0; i < bytes.length; i++) {\n      buff.put(bytes[i], 8);\n    }\n  }\n}\n","// ---------------------------------------------------------------------\n// QRRSBlock\n// ---------------------------------------------------------------------\n\nimport { QRErrorCorrectLevel } from \"./constants\";\n\nexport interface RSBlockCount {\n  totalCount: number;\n  dataCount: number;\n}\n\nconst RS_BLOCK_TABLE = [\n  [1, 26, 19],\n  [1, 26, 16],\n  [1, 26, 13],\n  [1, 26, 9],\n  [1, 44, 34],\n  [1, 44, 28],\n  [1, 44, 22],\n  [1, 44, 16],\n  [1, 70, 55],\n  [1, 70, 44],\n  [2, 35, 17],\n  [2, 35, 13],\n  [1, 100, 80],\n  [2, 50, 32],\n  [2, 50, 24],\n  [4, 25, 9],\n  [1, 134, 108],\n  [2, 67, 43],\n  [2, 33, 15, 2, 34, 16],\n  [2, 33, 11, 2, 34, 12],\n  [2, 86, 68],\n  [4, 43, 27],\n  [4, 43, 19],\n  [4, 43, 15],\n  [2, 98, 78],\n  [4, 49, 31],\n  [2, 32, 14, 4, 33, 15],\n  [4, 39, 13, 1, 40, 14],\n  [2, 121, 97],\n  [2, 60, 38, 2, 61, 39],\n  [4, 40, 18, 2, 41, 19],\n  [4, 40, 14, 2, 41, 15],\n  [2, 146, 116],\n  [3, 58, 36, 2, 59, 37],\n  [4, 36, 16, 4, 37, 17],\n  [4, 36, 12, 4, 37, 13],\n  [2, 86, 68, 2, 87, 69],\n  [4, 69, 43, 1, 70, 44],\n  [6, 43, 19, 2, 44, 20],\n  [6, 43, 15, 2, 44, 16],\n  [4, 101, 81],\n  [1, 80, 50, 4, 81, 51],\n  [4, 50, 22, 4, 51, 23],\n  [3, 36, 12, 8, 37, 13],\n  [2, 116, 92, 2, 117, 93],\n  [6, 58, 36, 2, 59, 37],\n  [4, 46, 20, 6, 47, 21],\n  [7, 42, 14, 4, 43, 15],\n  [4, 133, 107],\n  [8, 59, 37, 1, 60, 38],\n  [8, 44, 20, 4, 45, 21],\n  [12, 33, 11, 4, 34, 12],\n  [3, 145, 115, 1, 146, 116],\n  [4, 64, 40, 5, 65, 41],\n  [11, 36, 16, 5, 37, 17],\n  [11, 36, 12, 5, 37, 13],\n  [5, 109, 87, 1, 110, 88],\n  [5, 65, 41, 5, 66, 42],\n  [5, 54, 24, 7, 55, 25],\n  [11, 36, 12],\n  [5, 122, 98, 1, 123, 99],\n  [7, 73, 45, 3, 74, 46],\n  [15, 43, 19, 2, 44, 20],\n  [3, 45, 15, 13, 46, 16],\n  [1, 135, 107, 5, 136, 108],\n  [10, 74, 46, 1, 75, 47],\n  [1, 50, 22, 15, 51, 23],\n  [2, 42, 14, 17, 43, 15],\n  [5, 150, 120, 1, 151, 121],\n  [9, 69, 43, 4, 70, 44],\n  [17, 50, 22, 1, 51, 23],\n  [2, 42, 14, 19, 43, 15],\n  [3, 141, 113, 4, 142, 114],\n  [3, 70, 44, 11, 71, 45],\n  [17, 47, 21, 4, 48, 22],\n  [9, 39, 13, 16, 40, 14],\n  [3, 135, 107, 5, 136, 108],\n  [3, 67, 41, 13, 68, 42],\n  [15, 54, 24, 5, 55, 25],\n  [15, 43, 15, 10, 44, 16],\n  [4, 144, 116, 4, 145, 117],\n  [17, 68, 42],\n  [17, 50, 22, 6, 51, 23],\n  [19, 46, 16, 6, 47, 17],\n  [2, 139, 111, 7, 140, 112],\n  [17, 74, 46],\n  [7, 54, 24, 16, 55, 25],\n  [34, 37, 13],\n  [4, 151, 121, 5, 152, 122],\n  [4, 75, 47, 14, 76, 48],\n  [11, 54, 24, 14, 55, 25],\n  [16, 45, 15, 14, 46, 16],\n  [6, 147, 117, 4, 148, 118],\n  [6, 73, 45, 14, 74, 46],\n  [11, 54, 24, 16, 55, 25],\n  [30, 46, 16, 2, 47, 17],\n  [8, 132, 106, 4, 133, 107],\n  [8, 75, 47, 13, 76, 48],\n  [7, 54, 24, 22, 55, 25],\n  [22, 45, 15, 13, 46, 16],\n  [10, 142, 114, 2, 143, 115],\n  [19, 74, 46, 4, 75, 47],\n  [28, 50, 22, 6, 51, 23],\n  [33, 46, 16, 4, 47, 17],\n  [8, 152, 122, 4, 153, 123],\n  [22, 73, 45, 3, 74, 46],\n  [8, 53, 23, 26, 54, 24],\n  [12, 45, 15, 28, 46, 16],\n  [3, 147, 117, 10, 148, 118],\n  [3, 73, 45, 23, 74, 46],\n  [4, 54, 24, 31, 55, 25],\n  [11, 45, 15, 31, 46, 16],\n  [7, 146, 116, 7, 147, 117],\n  [21, 73, 45, 7, 74, 46],\n  [1, 53, 23, 37, 54, 24],\n  [19, 45, 15, 26, 46, 16],\n  [5, 145, 115, 10, 146, 116],\n  [19, 75, 47, 10, 76, 48],\n  [15, 54, 24, 25, 55, 25],\n  [23, 45, 15, 25, 46, 16],\n  [13, 145, 115, 3, 146, 116],\n  [2, 74, 46, 29, 75, 47],\n  [42, 54, 24, 1, 55, 25],\n  [23, 45, 15, 28, 46, 16],\n  [17, 145, 115],\n  [10, 74, 46, 23, 75, 47],\n  [10, 54, 24, 35, 55, 25],\n  [19, 45, 15, 35, 46, 16],\n  [17, 145, 115, 1, 146, 116],\n  [14, 74, 46, 21, 75, 47],\n  [29, 54, 24, 19, 55, 25],\n  [11, 45, 15, 46, 46, 16],\n  [13, 145, 115, 6, 146, 116],\n  [14, 74, 46, 23, 75, 47],\n  [44, 54, 24, 7, 55, 25],\n  [59, 46, 16, 1, 47, 17],\n  [12, 151, 121, 7, 152, 122],\n  [12, 75, 47, 26, 76, 48],\n  [39, 54, 24, 14, 55, 25],\n  [22, 45, 15, 41, 46, 16],\n  [6, 151, 121, 14, 152, 122],\n  [6, 75, 47, 34, 76, 48],\n  [46, 54, 24, 10, 55, 25],\n  [2, 45, 15, 64, 46, 16],\n  [17, 152, 122, 4, 153, 123],\n  [29, 74, 46, 14, 75, 47],\n  [49, 54, 24, 10, 55, 25],\n  [24, 45, 15, 46, 46, 16],\n  [4, 152, 122, 18, 153, 123],\n  [13, 74, 46, 32, 75, 47],\n  [48, 54, 24, 14, 55, 25],\n  [42, 45, 15, 32, 46, 16],\n  [20, 147, 117, 4, 148, 118],\n  [40, 75, 47, 7, 76, 48],\n  [43, 54, 24, 22, 55, 25],\n  [10, 45, 15, 67, 46, 16],\n  [19, 148, 118, 6, 149, 119],\n  [18, 75, 47, 31, 76, 48],\n  [34, 54, 24, 34, 55, 25],\n  [20, 45, 15, 61, 46, 16],\n];\n\nexport class RSBlock {\n  private getRSBlockTable(typeNumber: number, errorCorrectLevel: number): number[] {\n    const { L, M, Q, H } = QRErrorCorrectLevel;\n    const pos = (typeNumber - 1) * 4;\n\n    switch (errorCorrectLevel) {\n      case L:\n        return RS_BLOCK_TABLE[pos + 0];\n      case M:\n        return RS_BLOCK_TABLE[pos + 1];\n      case Q:\n        return RS_BLOCK_TABLE[pos + 2];\n      case H:\n        return RS_BLOCK_TABLE[pos + 3];\n      default:\n        throw new Error(`bad rs block @ typeNumber:${typeNumber}/errorCorrectLevel: ${errorCorrectLevel}`);\n    }\n  }\n\n  public getRSBlocks(typeNumber: number, errorCorrectLevel: number): RSBlockCount[] {\n    const rsBlock = this.getRSBlockTable(typeNumber, errorCorrectLevel);\n    const length = rsBlock.length / 3;\n    const list: RSBlockCount[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n\n      for (let j = 0; j < count; j++) {\n        list.push({ totalCount, dataCount });\n      }\n    }\n\n    return list;\n  }\n}\n","// ---------------------------------------------------------------------\n// QRMath\n// ---------------------------------------------------------------------\n\nconst EXP_TABLE = new Array(256);\nconst LOG_TABLE = new Array(256);\n\n// initialize tables\nfor (let i = 0; i < 8; i++) {\n  EXP_TABLE[i] = 1 << i;\n}\n\nfor (let i = 8; i < 256; i++) {\n  EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n}\n\nfor (let i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nexport const QRMath = {\n  glog(n: number): number {\n    if (n < 1) {\n      throw new Error(`glog(${n})`);\n    }\n\n    return LOG_TABLE[n];\n  },\n\n  gexp(n: number): number {\n    if (n < 0) {\n      n = 255 + (n % 255);\n    } else if (n > 255) {\n      n %= 255;\n    }\n\n    return EXP_TABLE[n];\n  }\n}\n","// ---------------------------------------------------------------------\n// Polynomial\n// ---------------------------------------------------------------------\n\nimport { QRMath } from \"./math\";\n\nexport class Polynomial {\n  private readonly num: number[];\n\n  constructor(num: number[], shift: number) {\n    const { length } = num;\n\n    if (length === undefined) {\n      throw new Error(`${length}/${shift}`);\n    }\n\n    let offset = 0;\n    while (offset < length && num[offset] === 0) {\n      offset++;\n    }\n    \n    const len = length - offset;\n    this.num = new Array(len + shift);\n    for (let i = 0; i < len; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  public get length(): number {\n    return this.num.length;\n  }\n\n  public getAt(i: number): number {\n    return this.num[i];\n  }\n\n  public multiply(e: Polynomial): Polynomial {\n    const { glog, gexp } = QRMath;\n    const num: number[] = [];\n\n    for (let i = 0; i < this.length; i++) {\n      for (let j = 0; j < e.length; j++) {\n        num[i + j] ^= gexp(glog(this.getAt(i)) + glog(e.getAt(j)));\n      }\n    }\n\n    return new Polynomial(num, 0);\n  }\n\n  public mod(e: Polynomial): Polynomial {\n    if (this.length - e.length < 0) {\n      return this;\n    }\n\n    const { glog, gexp } = QRMath;\n    const ratio = glog(this.getAt(0)) - glog(e.getAt(0));\n    const num: number[] = [];\n\n    for (var i = 0; i < this.length; i++) {\n      const n = this.getAt(i);\n\n      num[i] = i < e.length ? n ^ gexp(glog(e.getAt(i)) + ratio) : n;\n    }\n\n    // recursive call\n    return new Polynomial(num, 0).mod(e);\n  }\n}\n","import { QRCode } from \".\";\nimport { Polynomial } from \"./polynomial\";\nimport { QRMaskPattern, QRMode } from \"./constants\";\nimport { QRMath } from \"./math\";\n\nconst PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\nconst G15 =\n  (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nconst G18 =\n  (1 << 12) |\n  (1 << 11) |\n  (1 << 10) |\n  (1 << 9) |\n  (1 << 8) |\n  (1 << 5) |\n  (1 << 2) |\n  (1 << 0);\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nconst genBCHDigit = (data: number) => data === 0 ? 0 : Math.log2(data);\nconst BCH_G15 = genBCHDigit(G15);\nconst BCH_G18 = genBCHDigit(G18);\n\n// ---------------------------------------------------------------------\n// QRUtil\n// ---------------------------------------------------------------------\n\nexport const Util = {\n  getBCHTypeInfo(data: number): number {\n    let d = data << 10;\n\n    while (genBCHDigit(d) - BCH_G15 >= 0) {\n      d ^= G15 << (genBCHDigit(d) - BCH_G15);\n    }\n\n    return ((data << 10) | d) ^ G15_MASK;\n  },\n\n  getBCHTypeNumber(data: number): number {\n    let d = data << 12;\n\n    while (genBCHDigit(d) - BCH_G18 >= 0) {\n      d ^= G18 << (genBCHDigit(d) - BCH_G18);\n    }\n\n    return (data << 12) | d;\n  },\n\n  getPatternPosition(typeNumber: number): number[] {\n    return PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n\n  getMaskFunction(maskPattern: number): (i: number, j: number) => boolean {\n    const {\n      PATTERN000,\n      PATTERN001,\n      PATTERN010,\n      PATTERN011,\n      PATTERN100,\n      PATTERN101,\n      PATTERN110,\n      PATTERN111,\n    } = QRMaskPattern;\n\n    switch (maskPattern) {\n      case PATTERN000:\n        return (i: number, j: number) => (i + j) % 2 === 0;\n      case PATTERN001:\n        return (i: number) => i % 2 === 0;\n      case PATTERN010:\n        return (_i: number, j: number) => j % 3 === 0;\n      case PATTERN011:\n        return (i: number, j: number) => (i + j) % 3 === 0;\n      case PATTERN100:\n        return (i: number, j: number) => (~~(i / 2) + ~~(j / 3)) % 2 === 0;\n      case PATTERN101:\n        return (i: number, j: number) => ((i * j) % 2) + ((i * j) % 3) === 0;\n      case PATTERN110:\n        return (i: number, j: number) =>\n          (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n      case PATTERN111:\n        return (i: number, j: number) =>\n          (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n      default:\n        throw new Error(`bad maskPattern: ${maskPattern}`);\n    }\n  },\n\n  getErrorCorrectPolynomial(errorCorrectLength: number): Polynomial {\n    let a = new Polynomial([1], 0);\n\n    for (let i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, QRMath.gexp(i)], 0));\n    }\n\n    return a;\n  },\n\n  getLengthInBits(mode: number, type: number): number {\n    const { MODE_NUMBER, MODE_ALPHA_NUM, MODE_8BIT_BYTE, MODE_KANJI } = QRMode;\n\n    if (type < 1 || type > 40) {\n      throw new Error(`type: ${type}`);\n    }\n\n    if (type >= 1 && type < 10) {\n      // 1 - 9\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 10;\n        case MODE_ALPHA_NUM:\n          return 9;\n        case MODE_8BIT_BYTE:\n          return 8;\n        case MODE_KANJI:\n          return 8;\n        default:\n      }\n    }\n\n    if (type < 27) {\n      // 10 - 26\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 12;\n        case MODE_ALPHA_NUM:\n          return 11;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 10;\n        default:\n      }\n    }\n\n    if (type <= 40) {\n      // 27 - 40\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 14;\n        case MODE_ALPHA_NUM:\n          return 13;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 12;\n        default:\n      }\n    }\n\n    throw new Error(`mode: ${mode}`);\n  },\n\n  getLostPoint(qr: QRCode): number {\n    const moduleCount = qr.getModuleCount();\n    let lostPoint = 0;\n\n    // LEVEL1\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount; col++) {\n        const dark = qr.isDark(row, col);\n        let sameCount = 0;\n\n        for (let r = -1; r <= 1; r++) {\n          const nRow = row + r;\n          if (nRow < 0 || moduleCount <= nRow) continue;\n\n          for (let c = -1; c <= 1; c++) {\n            const nCol = col + c;\n            if (nCol < 0 || moduleCount <= nCol) continue;\n            if (r === 0 && c === 0) continue;\n            if (dark === qr.isDark(nRow, nCol)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += sameCount + 3 - 5;\n        }\n      }\n    }\n\n    // LEVEL2\n\n    for (let row = 0; row < moduleCount - 1; row++) {\n      for (let col = 0; col < moduleCount - 1; col++) {\n        let count = 0;\n\n        if (qr.isDark(row, col)) count++;\n        if (qr.isDark(row + 1, col)) count++;\n        if (qr.isDark(row, col + 1)) count++;\n        if (qr.isDark(row + 1, col + 1)) count++;\n        if (count === 0 || count === 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n\n    // LEVEL3\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount - 6; col++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row, col + 1) &&\n          qr.isDark(row, col + 2) &&\n          qr.isDark(row, col + 3) &&\n          qr.isDark(row, col + 4) &&\n          !qr.isDark(row, col + 5) &&\n          qr.isDark(row, col + 6)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount - 6; row++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row + 1, col) &&\n          qr.isDark(row + 2, col) &&\n          qr.isDark(row + 3, col) &&\n          qr.isDark(row + 4, col) &&\n          !qr.isDark(row + 5, col) &&\n          qr.isDark(row + 6, col)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    // LEVEL4\n\n    let darkCount = 0;\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount; row++) {\n        if (qr.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    const ratio =\n      Math.abs((100 * darkCount) / Math.pow(moduleCount, 2) - 50) / 5;\n\n    return lostPoint + ratio * 10;\n  },\n};\n","// ---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2025 LiHZSky\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n// http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { BitByte } from \"./bit-byte\";\nimport { RSBlock, RSBlockCount } from \"./block\";\nimport { QRErrorCorrectLevel } from \"./constants\";\nimport { Polynomial } from \"./polynomial\";\nimport { Util } from \"./util\";\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\n/**\n * QRCode实现\n * https://www.cnblogs.com/leestar54/p/15782929.html\n * @param typeNumber 1 to 40\n * @param errorCorrectLevel 'L','M','Q','H'\n */\nexport class QRCode {\n  private readonly errorCorrectLevel: number;\n\n  private modules: boolean[][] = [];\n\n  private moduleCount = 0;\n\n  private dataCache: number[] | null = null;\n\n  private dataList: BitByte[] = [];\n\n  constructor(\n    private readonly typeNumber: number,\n    errorCorrectLevel: \"L\" | \"M\" | \"Q\" | \"H\"\n  ) {\n    this.errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];\n  }\n\n  private makeImpl(test: boolean, maskPattern: number): void {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = ((moduleCount: number) => {\n      const modules: boolean[][] = [];\n\n      // 预设一个 moduleCount * moduleCount 的空白矩阵\n      for (let row = 0; row < moduleCount; row++) {\n        modules[row] = [];\n\n        for (let col = 0; col < moduleCount; col++) {\n          modules[row][col] = null as unknown as boolean;\n        }\n      }\n\n      return modules;\n    })(this.moduleCount);;\n\n    const count = this.moduleCount - 7;\n\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(count, 0);\n    this.setupPositionProbePattern(0, count);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n\n    if (this.dataCache === null) {\n      this.dataCache = this.createData(\n        this.typeNumber,\n        this.errorCorrectLevel,\n        this.dataList\n      );\n    }\n\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  private setupPositionProbePattern(row: number, col: number): void {\n    const { modules, moduleCount } = this;\n\n    for (let r = -1; r <= 7; r++) {\n      const nr = row + r;\n      if (nr <= -1 || moduleCount <= nr) continue;\n\n      for (let c = -1; c <= 7; c++) {\n        const nc = col + c;\n        if (nc <= -1 || moduleCount <= nc) continue;\n\n        modules[nr][nc] =\n          (r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4);\n      }\n    }\n  }\n\n  private setupPositionAdjustPattern(): void {\n    const { typeNumber, modules } = this;\n    const pos = Util.getPatternPosition(typeNumber);\n    const { length } = pos;\n\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n\n        if (modules[row][col] != null) continue;\n\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            modules[row + r][col + c] =\n              r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0);\n          }\n        }\n      }\n    }\n  }\n\n  private setupTimingPattern(): void {\n    const { moduleCount, modules } = this;\n    const count = moduleCount - 8;\n\n    for (let r = 8; r < count; r++) {\n      if (modules[r][6] != null) continue;\n\n      modules[r][6] = r % 2 === 0;\n    }\n\n    for (let c = 8; c < count; c++) {\n      if (modules[6][c] != null) continue;\n\n      modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  private setupTypeInfo(test: boolean, maskPattern: number): void {\n    const { errorCorrectLevel, modules, moduleCount } = this;\n    const data = (errorCorrectLevel << 3) | maskPattern;\n    const bits = Util.getBCHTypeInfo(data);\n\n    // vertical\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 6) {\n        modules[i][8] = mod;\n      } else if (i < 8) {\n        modules[i + 1][8] = mod;\n      } else {\n        modules[moduleCount - 15 + i][8] = mod;\n      }\n    }\n\n    // horizontal\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 8) {\n        modules[8][moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        modules[8][15 - i] = mod;\n      } else {\n        modules[8][15 - i - 1] = mod;\n      }\n    }\n\n    // fixed module\n    modules[moduleCount - 8][8] = !test;\n  }\n\n  private getBestMaskPattern(): number {\n    let minLostPoint = 0;\n    let pattern = 0;\n\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n\n      const lostPoint = Util.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n\n    return pattern;\n  }\n\n  private setupTypeNumber(test: boolean): void {\n    const { typeNumber, modules, moduleCount } = this;\n    const bits = Util.getBCHTypeNumber(typeNumber);\n\n    for (let i = 0; i < 18; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      modules[~~(i / 3)][(i % 3) + moduleCount - 8 - 3] = mod;\n      modules[(i % 3) + moduleCount - 8 - 3][~~(i / 3)] = mod;\n    }\n  }\n\n  private createData(\n    typeNumber: number,\n    errorCorrectLevel: number,\n    dataList: BitByte[]\n  ): number[] {\n    const rsBlocks = new RSBlock().getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new BitBuffer();\n\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n\n      buffer.put(data.mode, 4);\n      buffer.put(data.length, Util.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n\n    // calc num max data.\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n\n    const totalCount = totalDataCount * 8;\n    if (buffer.lengthInBits > totalCount) {\n      throw new Error(\n        `code length overflow. (${buffer.lengthInBits} > ${totalCount})`\n      );\n    }\n\n    // end code\n    if (buffer.lengthInBits + 4 <= totalCount) {\n      buffer.put(0, 4);\n    }\n\n    // padding\n    while (buffer.lengthInBits % 8 !== 0) {\n      buffer.putBit(false);\n    }\n\n    // padding\n    while (true) {\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  private mapData(data: number[], maskPattern: number): void {\n    const { modules, moduleCount } = this;\n    const maskFunc = Util.getMaskFunction(maskPattern);\n    let inc = -1;\n    let row = moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n\n    for (let col = row; col > 0; col -= 2) {\n      if (col === 6) col -= 1;\n\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (modules[row][col - c] == null) {\n            let dark = false;\n\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n\n            if (maskFunc(row, col - c)) {\n              dark = !dark;\n            }\n\n            modules[row][col - c] = dark;\n            bitIndex--;\n\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n\n        row += inc;\n\n        if (row < 0 || moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  private createBytes(\n    bitBuffer: BitBuffer,\n    rsBlocks: RSBlockCount[]\n  ): number[] {\n    const dcdata: number[][] = [];\n    const ecdata: number[][] = [];\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n\n      dcdata[r] = [];\n\n      for (let i = 0; i < dcCount; i++) {\n        dcdata[r][i] = 0xff & bitBuffer.buffer[i + offset];\n      }\n\n      offset += dcCount;\n\n      const rsPoly = Util.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new Polynomial(dcdata[r], rsPoly.length - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n\n      ecdata[r] = new Array(rsPoly.length - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.length - ecdata[r].length;\n\n        ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n      }\n    }\n\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n\n    const data = new Array(totalCodeCount);\n    let index = 0;\n\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n\n    return data;\n  }\n\n  public isDark(row: number, col: number): boolean {\n    const { moduleCount } = this;\n\n    if (row < 0 || moduleCount <= row || col < 0 || moduleCount <= col) {\n      throw new Error(`${row}, ${col}`);\n    }\n\n    return this.modules[row][col];\n  }\n\n  public addData(data: string): void {\n    this.dataList.push(new BitByte(data));\n    this.dataCache = null;\n  }\n\n  public getModuleCount(): number {\n    return this.moduleCount;\n  }\n\n  public make(): void {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n}\n","// import { unzlibSync } from \"fflate\";\nimport { unzlibSync, createVideoEntity } from \"../../extensions\";\nimport { platform } from \"../../platform\";\nimport type { PlatformVideo } from \"../../types\";\n\n/**\n * SVGA 下载解析器\n */\nexport class Parser {\n  /**\n   * 解压视频源文件\n   * @param data\n   * @returns\n   */\n  static decompress(data: ArrayBufferLike): ArrayBufferLike {\n    return unzlibSync(new Uint8Array(data)).buffer;\n  }\n\n  /**\n   * 解析视频实体\n   * @param data 视频二进制数据\n   * @param url 视频地址\n   * @param needDecompress 是否解压\n   * @returns\n   */\n  static parseVideo(\n    data: ArrayBufferLike,\n    url: string,\n    needDecompress: boolean = true\n  ): PlatformVideo.Video {\n    return createVideoEntity(\n      new Uint8Array(needDecompress ? this.decompress(data) : data),\n      platform.path.filename(url)\n    );\n  }\n\n  /**\n   * 读取文件资源\n   * @param url 文件资源地址\n   * @returns\n   */\n  static async download(url: string): Promise<ArrayBuffer> {\n    const { globals, remote, path, local } = platform;\n    const { env } = globals;\n    const supportLocal = env !== \"h5\" && env !== \"tt\";\n    const filepath = path.is(url)\n        ? url\n        : path.resolve(path.filename(url));\n\n    // 本地读取\n    if (supportLocal) {\n      if (await local!.exists(filepath)) {\n        return local!.read(filepath);\n      }\n    }\n\n    // 远程读取\n    const buff = await remote.fetch(url);\n\n    // 本地缓存\n    if (supportLocal) {\n      try {\n        await local!.write(buff, filepath);\n      } catch (ex) {\n        // eslint-disable-next-line no-console\n        console.error(ex);\n      }\n    }\n\n    return buff;\n  }\n\n  /**\n   * 通过 url 下载并解析 SVGA 文件\n   * @param url SVGA 文件的下载链接\n   * @returns Promise<SVGA 数据源\n   */\n  static async load(url: string): Promise<PlatformVideo.Video> {\n    return Parser.parseVideo((await Parser.download(url))!, url);\n  }\n}\n","import type {\n  Bitmap,\n  PlatformCanvas,\n  PlatformOffscreenCanvas,\n} from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport type {\n  PainterActionModel,\n  PainterMode,\n  PlatformVideo,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\nimport { Renderer2D, Renderer2DExtension } from \"src/extensions\";\n\nconst { noop } = platform;\n\nexport class Painter {\n  /**\n   * 主屏的 Canvas 元素\n   * Front Screen\n   */\n  public F: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n\n  /**\n   * 主屏的 Context 对象\n   * Front Context\n   */\n  public FC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n\n  /**\n   * 副屏的 Canvas 元素\n   * Background Screen\n   */\n  public B: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n\n  /**\n   * 副屏的 Context 对象\n   * Background Context\n   */\n  public BC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n\n  /**\n   * 画布的宽度\n   */\n  public W: number;\n\n  /**\n   * 画布的高度\n   */\n  public H: number;\n\n  /**\n   * 粉刷模式\n   */\n  private model: PainterActionModel = {} as PainterActionModel;\n\n  /**\n   * 渲染器实例\n   */\n  private renderer: Renderer2D | null = null;\n\n  /**\n   *\n   * @param mode\n   * @param W 海报模式必须传入\n   * @param H 海报模式必须传入\n   */\n  constructor(\n    private readonly mode: PainterMode = \"dual\",\n    width = 0,\n    height = 0\n  ) {\n    const { dpr } = platform.globals;\n\n    this.W = width * dpr;\n    this.H = height * dpr;\n  }\n\n  /**\n   * 设置 Canvas 的处理模式\n   * - C：代表 Canvas\n   * - O：代表 OffscreenCanvas\n   */\n  private setActionModel(type: \"C\" | \"O\"): void {\n    const { model } = this;\n    const { env } = platform.globals;\n\n    // set type\n    model.type = type;\n\n    // set clear\n    if ((type === \"O\" && env === \"tt\") || env === \"alipay\") {\n      model.clear = \"CL\";\n    } else {\n      model.clear = \"RE\";\n    }\n  }\n\n  /**\n   * 注册画笔，根据环境判断生成最优的绘制方式\n   * @param selector\n   * @param ofsSelector\n   * @param component\n   */\n  public async register(\n    selector: string,\n    ofsSelector?: string,\n    component?: any\n  ) {\n    const { model, mode } = this;\n    const { getCanvas, getOfsCanvas } = platform;\n    const { env } = platform.globals;\n    // #region set main screen implement\n    // -------- 创建主屏 ---------\n    if (\n      mode === \"single\" &&\n      (env !== \"h5\" || \"OffscreenCanvas\" in globalThis)\n    ) {\n      const { W, H } = this;\n      const { canvas, context } = getOfsCanvas({ width: W, height: H });\n      // 添加主屏\n      this.F = canvas;\n      this.FC = context;\n      this.setActionModel(\"O\");\n    } else {\n      const { canvas, context } = await getCanvas(selector, component);\n      // 添加主屏\n      this.F = canvas;\n      this.FC = context;\n      this.setActionModel(\"C\");\n\n      if (mode === \"single\") {\n        canvas.width = this.W;\n        canvas.height = this.H;\n      } else {\n        this.W = canvas.width;\n        this.H = canvas.height;\n      }\n    }\n    // #endregion set main screen implement\n\n    const { FC, F, W, H } = this;\n    const clearType = model.clear;\n\n    this.clearContainer = Renderer2DExtension.clear(clearType, FC!, F!, W, H);\n\n    if (mode === \"single\") {\n      this.B = F;\n      this.BC = FC;\n      this.clearSecondary = this.clearContainer;\n      this.stick = noop;\n    } else {\n      // #region set secondary screen implement\n      // ------- 创建副屏 ---------\n      let ofsResult;\n      if (typeof ofsSelector === \"string\" && ofsSelector !== \"\") {\n        ofsResult = await getCanvas(ofsSelector, component);\n        ofsResult.canvas.width = W;\n        ofsResult.canvas.height = H;\n        this.setActionModel(\"C\");\n      } else {\n        ofsResult = getOfsCanvas({ width: W, height: H });\n        this.setActionModel(\"O\");\n      }\n\n      this.B = ofsResult.canvas;\n      this.BC = ofsResult.context;\n      // #endregion set secondary screen implement\n\n      const { BC, B } = this;\n\n      this.clearSecondary = Renderer2DExtension.clear(clearType, BC!, B!, W, H);\n      this.stick = Renderer2DExtension.stick(FC!, B!);\n    }\n\n    // #region other methods implement\n    // ------- 生成其他方法 --------\n    const { B, BC } = this;\n    const renderer = (this.renderer = new Renderer2D(BC));\n\n    this.resize = (\n      contentMode: PLAYER_CONTENT_MODE,\n      videoSize: PlatformVideo.VideoSize\n    ) => renderer!.resize(contentMode, videoSize, B!);\n    this.draw = (\n      videoEntity: PlatformVideo.Video,\n      materials: Map<string, Bitmap>,\n      dynamicMaterials: Map<string, Bitmap>,\n      currentFrame: number,\n      head: number,\n      tail: number\n    ) =>\n      renderer!.render(\n        videoEntity,\n        materials,\n        dynamicMaterials,\n        currentFrame,\n        head,\n        tail\n      );\n    // #endregion other methods implement\n  }\n\n  public clearContainer: () => void = noop;\n\n  public clearSecondary: () => void = noop;\n\n  public resize: (\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize\n  ) => void = noop;\n\n  public draw: (\n    videoEntity: PlatformVideo.Video,\n    materials: Map<string, Bitmap>,\n    dynamicMaterials: Map<string, Bitmap>,\n    currentFrame: number,\n    head: number,\n    tail: number\n  ) => void = noop;\n\n  public stick: () => void = noop;\n\n  /**\n   * 销毁画笔\n   */\n  public destroy() {\n    this.clearContainer();\n    this.clearSecondary();\n    this.F = this.FC = this.B = this.BC = null;\n    this.clearContainer = this.clearSecondary = this.stick = noop;\n    this.renderer?.destroy();\n  }\n}\n","import {\n  type PlatformVideo,\n  type PlayerConfig,\n  PLAYER_FILL_MODE,\n  PLAYER_PLAY_MODE,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Config {\n  /**\n   * 最后停留的目标模式，类似于 animation-fill-mode，默认值 forwards。\n   */\n  public fillMode = PLAYER_FILL_MODE.BACKWARDS;\n  /**\n   * 播放模式，默认值 forwards\n   */\n  public playMode = PLAYER_PLAY_MODE.FORWARDS;\n  /**\n   * 填充模式，类似于 content-mode。\n   */\n  public contentMode = PLAYER_CONTENT_MODE.FILL;\n  /**\n   * 开始播放的帧，默认值 0\n   */\n  public startFrame = 0;\n  /**\n   * 结束播放的帧，默认值 0\n   */\n  public endFrame = 0;\n  /**\n   * 循环播放的开始帧，默认值 0\n   */\n  public loopStartFrame = 0;\n  /**\n   * 循环次数，默认值 0（无限循环）\n   */\n  public loop = 0;\n\n  public register(config: Partial<PlayerConfig>) {\n    if (typeof config.loop === \"number\" && config.loop >= 0) {\n      this.loop = config.loop;\n    }\n\n    if (\n      config.fillMode &&\n      [\n        PLAYER_FILL_MODE.FORWARDS,\n        PLAYER_FILL_MODE.BACKWARDS,\n        PLAYER_FILL_MODE.NONE,\n      ].includes(config.fillMode)\n    ) {\n      this.fillMode = config.fillMode;\n    }\n\n    if (\n      config.playMode &&\n      [PLAYER_PLAY_MODE.FORWARDS, PLAYER_PLAY_MODE.FALLBACKS].includes(\n        config.playMode\n      )\n    ) {\n      this.playMode = config.playMode;\n    }\n\n    if (typeof config.startFrame === \"number\" && config.startFrame >= 0) {\n      this.startFrame = config.startFrame;\n    }\n\n    if (typeof config.endFrame === \"number\" && config.endFrame >= 0) {\n      this.endFrame = config.endFrame;\n    }\n\n    if (\n      typeof config.loopStartFrame === \"number\" &&\n      config.loopStartFrame >= 0\n    ) {\n      this.loopStartFrame = config.loopStartFrame;\n    }\n\n    if (typeof config.contentMode === \"string\") {\n      this.contentMode = config.contentMode;\n    }\n  }\n\n  public setItem<T extends keyof PlayerConfig>(key: T, value: PlayerConfig[T]) {\n    this.register({ [key]: value });\n  }\n\n  public getConfig(entity: PlatformVideo.Video) {\n    const { playMode, loopStartFrame, startFrame, endFrame, fillMode, loop } =\n      this;\n    const { fps, sprites } = entity;\n    let { frames } = entity;\n    const spriteCount = sprites.length;\n    const start = startFrame > 0 ? startFrame : 0;\n    const end = endFrame > 0 && endFrame < frames ? endFrame : frames;\n    // 每帧持续的时间\n    const frameDuration = 1000 / fps;\n\n    if (start > end) {\n      throw new Error(\"StartFrame should greater than EndFrame\");\n    }\n\n    // 更新活动帧总数\n    if (end < frames) {\n      frames = end - start;\n    } else if (start > 0) {\n      frames -= start;\n    }\n\n    const duration = Math.floor(frames * frameDuration * 10 ** 6) / 10 ** 6;\n    let currFrame = 0;\n    let extFrame = 0;\n    let loopStart: number;\n\n    // 顺序播放/倒叙播放\n    if (playMode === PLAYER_PLAY_MODE.FORWARDS) {\n      // 重置为开始帧\n      currFrame = Math.max(loopStartFrame, startFrame);\n      if (fillMode === PLAYER_FILL_MODE.FORWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame > start ? (loopStartFrame - start) * frameDuration : 0;\n    } else {\n      // 重置为开始帧\n      currFrame = Math.min(loopStartFrame, end - 1);\n      if (fillMode === PLAYER_FILL_MODE.BACKWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame < end ? (end - loopStartFrame) * frameDuration : 0;\n    }\n\n    return {\n      currFrame,\n      startFrame: start,\n      endFrame: end,\n      totalFrame: frames,\n      spriteCount,\n      aniConfig: {\n        // 单个周期的运行时长\n        duration,\n        // 第一个周期开始时间偏移量\n        loopStart,\n        // 循环次数\n        loop: loop === 0 ? Infinity : loop,\n        // 最后一帧不在周期内，需要单独计算\n        fillValue: extFrame * frameDuration,\n      },\n    };\n  }\n}\n","import type { PlatformCanvas } from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport { Painter } from \"../painter\";\nimport { Config } from \"./config\";\nimport { Animator, ResourceManager } from \"../../extensions\";\nimport {\n  type PlatformVideo,\n  type PlayerConfigOptions,\n  type PlayerConfig,\n  type PlayerEventCallback,\n  type PlayerProcessEventCallback,\n  PLAYER_PLAY_MODE,\n  PLAYER_FILL_MODE,\n} from \"../../types\";\n\n/**\n * SVGA 播放器\n */\nexport class Player {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 当前配置项\n   */\n  private readonly config = new Config();\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter = new Painter();\n\n  /**\n   * 动画实例\n   */\n  private readonly animator: Animator = new Animator();\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   * @property container 主屏，播放动画的 Canvas 元素\n   * @property secondary 副屏，播放动画的 Canvas 元素\n   * @property loop 循环次数，默认值 0（无限循环）\n   * @property fillMode 最后停留的目标模式，类似于 animation-fill-mode，接受值 forwards 和 fallbacks，默认值 forwards。\n   * @property playMode 播放模式，接受值 forwards 和 fallbacks ，默认值 forwards。\n   * @property startFrame 单个循环周期内开始播放的帧数，默认值 0\n   * @property endFrame 单个循环周期内结束播放的帧数，默认值 0\n   * @property loopStartFrame 循环播放的开始帧，仅影响第一个周期的开始帧，默认值 0\n   * @property enableInObserver 是否启用 IntersectionObserver 监听容器是否处于浏览器视窗内，默认值 false\n   */\n  public async setConfig(\n    options: string | PlayerConfigOptions,\n    component?: any\n  ): Promise<void> {\n    const config: PlayerConfigOptions =\n      typeof options === \"string\" ? { container: options } : options;\n    const { container, secondary } = config;\n\n    this.config.register(config);\n    // 监听容器是否处于浏览器视窗内\n    // this.setIntersectionObserver()\n    await this.painter.register(container, secondary, component);\n    this.resource = new ResourceManager(this.painter);\n    this.animator.onAnimate = platform.rAF.bind(\n      null,\n      this.painter.F as PlatformCanvas\n    );\n  }\n\n  /**\n   * 更新配置\n   * @param key\n   * @param value\n   */\n  public setItem<T extends keyof PlayerConfig>(\n    key: T,\n    value: PlayerConfig[T]\n  ): void {\n    this.config.setItem<T>(key, value);\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @returns Promise<void>\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) throw new Error(\"videoEntity undefined\");\n\n    const { images, filename } = videoEntity;\n\n    this.animator!.stop();\n    this.painter.clearSecondary();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 开始播放事件回调\n   * @param frame\n   */\n  public onStart?: PlayerEventCallback;\n  /**\n   * 重新播放事件回调\n   * @param frame\n   */\n  public onResume?: PlayerEventCallback;\n  /**\n   * 暂停播放事件回调\n   * @param frame\n   */\n  public onPause?: PlayerEventCallback;\n  /**\n   * 停止播放事件回调\n   * @param frame\n   */\n  public onStop?: PlayerEventCallback;\n  /**\n   * 播放中事件回调\n   * @param percent\n   * @param frame\n   * @param frames\n   */\n  public onProcess?: PlayerProcessEventCallback;\n  /**\n   * 结束播放事件回调\n   * @param frame\n   */\n  public onEnd?: PlayerEventCallback;\n\n  /**\n   * 开始播放\n   */\n  public start(): void {\n    this.startAnimation();\n    this.onStart?.();\n  }\n\n  /**\n   * 重新播放\n   */\n  public resume(): void {\n    if (this.animator.resume()) {\n      this.onResume?.();\n    }\n  }\n\n  /**\n   * 暂停播放\n   */\n  public pause(): void {\n    if (this.animator.pause()) {\n      this.onPause?.();\n    }\n  }\n\n  /**\n   * 停止播放\n   */\n  public stop(): void {\n    this.animator.stop();\n    this.painter.clearContainer();\n    this.painter.clearSecondary();\n    this.onStop?.();\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.animator.stop();\n    this.painter.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n\n  /**\n   * 跳转到指定帧\n   * @param frame 目标帧\n   * @param andPlay 是否立即播放\n   */\n  public stepToFrame(frame: number, andPlay = false) {\n    if (!this.entity || frame < 0 || frame >= this.entity.frames) return;\n\n    this.pause();\n    this.config.loopStartFrame = frame;\n    if (andPlay) {\n      this.start();\n    }\n  }\n\n  /**\n   * 跳转到指定百分比\n   * @param percent 目标百分比\n   * @param andPlay 是否立即播放\n   */\n  public stepToPercentage(percent: number, andPlay: boolean = false) {\n    if (!this.entity) return;\n\n    const { frames } = this.entity;\n    let frame = percent < 0 ? 0 : Math.round(percent * frames);\n\n    if (frame >= frames) {\n      frame = frames - 1;\n    }\n\n    debugger;\n    this.stepToFrame(frame, andPlay);\n  }\n\n  /**\n   * 开始绘制动画\n   */\n  private startAnimation(): void {\n    const { entity, config, animator, painter, resource } = this;\n    const { W, H } = painter;\n    const { materials, dynamicMaterials } = resource!;\n    const { fillMode, playMode, contentMode } = config;\n    const {\n      currFrame,\n      startFrame,\n      endFrame,\n      totalFrame,\n      spriteCount,\n      aniConfig,\n    } = config.getConfig(entity!);\n    const { duration, loopStart, loop, fillValue } = aniConfig;\n    const isReverseMode = playMode === PLAYER_PLAY_MODE.FALLBACKS;\n\n    // 当前帧\n    let currentFrame = currFrame;\n    // 片段绘制结束位置\n    let tail = 0;\n    let nextTail: number;\n    // 上一帧\n    let latestFrame: number;\n    // 下一帧\n    let nextFrame: number;\n    // 精确帧\n    let exactFrame: number;\n    // 当前已完成的百分比\n    let percent: number;\n    // 是否还有剩余时间\n    let hasRemained: boolean;\n\n    // 更新动画基础信息\n    animator.setConfig(duration, loopStart, loop, fillValue);\n    painter.resize(contentMode, entity!.size);\n\n    // 分段渲染函数\n    const MAX_DRAW_TIME_PER_FRAME = 8;\n    const MAX_ACCELERATE_DRAW_TIME_PER_FRAME = 3;\n    const MAX_DYNAMIC_CHUNK_SIZE = 34;\n    const MIN_DYNAMIC_CHUNK_SIZE = 1;\n    const render = (head: number, tail: number) =>\n      painter.draw(\n        entity!,\n        materials,\n        dynamicMaterials,\n        currentFrame,\n        head,\n        tail\n      );\n    // 动态调整每次绘制的块大小\n    let dynamicChunkSize = 4; // 初始块大小\n    let startTime: number;\n    let chunk: number;\n    let elapsed: number;\n    // 使用`指数退避算法`平衡渲染速度和流畅度\n    const patchDraw = (before: () => void) => {\n      startTime = platform.now();\n      before();\n\n      while (tail < spriteCount) {\n        // 根据当前块大小计算nextTail\n        chunk = Math.min(dynamicChunkSize, spriteCount - tail);\n        nextTail = (tail + chunk) | 0;\n        render(tail, nextTail);\n        tail = nextTail;\n        // 动态调整块大小\n        elapsed = platform.now() - startTime;\n\n        if (elapsed < MAX_ACCELERATE_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.min(\n            dynamicChunkSize * 2,\n            MAX_DYNAMIC_CHUNK_SIZE\n          ); // 加快绘制\n        } else if (elapsed > MAX_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.max(\n            dynamicChunkSize / 2,\n            MIN_DYNAMIC_CHUNK_SIZE\n          ); // 减慢绘制\n          break;\n        }\n      }\n    };\n\n    // 动画绘制过程\n    animator.onUpdate = (timePercent: number) => {\n      patchDraw(() => {\n        percent = isReverseMode ? 1 - timePercent : timePercent;\n        exactFrame = percent * totalFrame;\n\n        if (isReverseMode) {\n          nextFrame =\n            (timePercent === 0 ? endFrame : Math.ceil(exactFrame)) - 1;\n          // FIXME: 倒序会有一帧的偏差，需要校准当前帧\n          percent = currentFrame / totalFrame;\n        } else {\n          nextFrame = timePercent === 1 ? startFrame : Math.floor(exactFrame);\n        }\n\n        hasRemained = currentFrame === nextFrame;\n      });\n\n      if (hasRemained) return;\n      if (tail < spriteCount) {\n        render(tail, spriteCount);\n      }\n\n      painter.clearContainer();\n      painter.stick();\n      painter.clearSecondary();\n      latestFrame = currentFrame;\n      currentFrame = nextFrame;\n      tail = 0;\n      this.onProcess?.(~~(percent * 100) / 100, latestFrame);\n    };\n    animator.onStart = () => {\n      entity!.locked = true;\n    };\n    animator.onEnd = () => {\n      entity!.locked = false;\n      // 如果不保留最后一帧渲染，则清空画布\n      if (fillMode === PLAYER_FILL_MODE.NONE) {\n        painter.clearContainer();\n      }\n\n      this.onEnd?.();\n    };\n    animator.start();\n  }\n}\n","import { ResourceManager } from \"../../extensions\";\nimport { Painter } from \"../painter\";\nimport {\n  type PlatformVideo,\n  type PosterConfig,\n  type PosterConfigOptions,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Poster {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 海报配置项\n   */\n  private readonly config: PosterConfig = {\n    /**\n     * 主屏，绘制海报的 Canvas 元素\n     */\n    container: \"\",\n    /**\n     * 填充模式，类似于 content-mode。\n     */\n    contentMode: PLAYER_CONTENT_MODE.FILL,\n    /**\n     * 绘制成海报的帧，默认是0。\n     */\n    frame: 0,\n  };\n\n  /**\n   * 是否配置完成\n   */\n  private isConfigured = false;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter: Painter;\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  constructor(width: number, height: number) {\n    this.painter = new Painter(\"single\", width, height);\n  }\n\n  /**\n   * 注册 SVGA 海报\n   * @param selector 容器选择器\n   * @param component 组件\n   */\n  private async register(\n    selector: string = \"\",\n    component?: any\n  ): Promise<void> {\n    await this.painter.register(selector, \"\", component);\n    this.resource = new ResourceManager(this.painter);\n  }\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   */\n  public async setConfig(\n    options: string | PosterConfigOptions = {},\n    component?: any\n  ): Promise<void> {\n    if (typeof options === \"string\") {\n      this.config.container = options;\n    } else {\n      Object.assign(this.config, options);\n    }\n\n    this.isConfigured = true;\n    await this.register(this.config.container, component);\n  }\n\n  /**\n   * 修改内容模式\n   * @param contentMode\n   */\n  public setContentMode(contentMode: PLAYER_CONTENT_MODE): void {\n    this.config.contentMode = contentMode;\n  }\n\n  /**\n   * 设置当前帧\n   * @param frame\n   */\n  public setFrame(frame: number): void {\n    this.config.frame = frame;\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @param currFrame\n   * @returns\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) {\n      throw new Error(\"videoEntity undefined\");\n    }\n\n    if (!this.isConfigured) {\n      await this.register();\n      this.isConfigured = true;\n    }\n\n    const { images, filename } = videoEntity;\n\n    this.painter.clearContainer();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 绘制海报\n   */\n  public draw(): void {\n    if (!this.entity) return;\n\n    const { painter, resource, entity, config } = this;\n\n    painter.resize(config.contentMode, entity!.size);\n    painter.draw(\n      entity!,\n      resource!.materials,\n      resource!.dynamicMaterials,\n      config.frame,\n      0,\n      entity!.sprites.length\n    );\n  }\n\n  /**\n   * 获取海报的 ImageData 数据\n   */\n  public toImageData(): ImageData {\n    const { FC, W: width, H: height } = this.painter;\n\n    return FC!.getImageData(0, 0, width, height);\n  }\n\n  /**\n   * 销毁海报\n   */\n  public destroy(): void {\n    this.painter.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder, QRCode } from \"../extensions\";\n\nexport interface IQrCodeImgOptions {\n  /**\n   * 二维码内容\n   */\n  code: string;\n  /**\n   * 二维码的大小\n   */\n  size: number;\n  /**\n   * 二维码的码元 二维码横向有多少个小点（1 - 40）\n   */\n  typeNumber?: number;\n  /**\n   * 二维码的纠错等级\n   * L: 7%（错误字码在 7% 以内可被修正, 容错率较低不建议使用）\n   * M: 15%（错误字码在 15% 以内可被修正, 容错率较低不建议使用）\n   * Q: 25%（错误字码在 25% 以内可被修正）\n   * H: 30%（错误字码在 30% 以内可被修正）\n   */\n  correctLevel?: \"L\" | \"M\" | \"Q\" | \"H\";\n  /**\n   * 二维码颜色，仅支持 六位的十六进制颜色值，暂不支持透明色 (仅对二维码生效)\n   */\n  codeColor?: string;\n  /**\n   * 二维码背景颜色，仅支持 六位的十六进制 颜色值。暂不支持透明色 (仅对二维码生效)\n   */\n  backgroundColor?: string;\n}\n\nfunction parseOptions(options: IQrCodeImgOptions) {\n  const typeNumber = options.typeNumber ?? 4;\n  const correctLevel = options.correctLevel ?? \"H\";\n  const codeColor = options.codeColor ?? \"#000000\";\n  const backgroundColor = options.backgroundColor ?? \"#FFFFFF\";\n\n  return {\n    code: options.code,\n    size: options.size,\n    typeNumber,\n    correctLevel,\n    codeColor,\n    backgroundColor,\n  };\n}\n\nconst calcCellSizeAndPadding = (moduleCount: number, size: number) => {\n  const cellSize = ~~(size / moduleCount);\n\n  return {\n    padding: ~~((size - moduleCount * cellSize) / 2),\n    cellSize: cellSize || 2,\n  };\n};\n\nexport function generateImageBufferFromCode(options: IQrCodeImgOptions) {\n  const { code, typeNumber, correctLevel, size, codeColor, backgroundColor } =\n    parseOptions(options);\n  let qr: QRCode;\n\n  try {\n    qr = new QRCode(typeNumber, correctLevel);\n    qr.addData(code);\n    qr.make();\n  } catch (e) {\n    if (typeNumber >= 40) {\n      throw new Error(\"Text too long to encode\");\n    }\n\n    return arguments.callee({\n      code,\n      size,\n      correctLevel,\n      typeNumber: typeNumber + 1,\n      codeColor,\n      backgroundColor,\n    });\n  }\n\n  // calc cellsize and margin\n  const moduleCount = qr.getModuleCount();\n  const { padding, cellSize } = calcCellSizeAndPadding(moduleCount, size);\n  const max = moduleCount * cellSize + padding;\n  const CODE_COLOR = +`${codeColor.replace(\"#\", \"0x\")}FF`;\n  const BACKGROUND_COLOR = +`${backgroundColor.replace(\"#\", \"0x\")}FF`;\n  const png = new PNGEncoder(size, size);\n\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      if (padding <= x && x < max && padding <= y && y < max) {\n        const c = ~~((x - padding) / cellSize);\n        const r = ~~((y - padding) / cellSize);\n\n        png.setPixel(x, y, qr.isDark(r, c) ? CODE_COLOR : BACKGROUND_COLOR);\n      } else {\n        png.setPixel(x, y, BACKGROUND_COLOR);\n      }\n    }\n  }\n\n  return png.flush();\n}\n\nexport function generateImageFromCode(options: IQrCodeImgOptions) {\n  const buff = generateImageBufferFromCode(options);\n\n  return platform.decode.toDataURL(buff);\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder } from \"../extensions\";\n\n/**\n * 将 ImageData 转换为 PNG 格式的 Buffer\n * @param imageData\n * @returns PNG 格式的 Buffer\n */\nexport function createBufferOfImageData(imageData: ImageData) {\n  const { width, height, data } = imageData;\n\n  return new PNGEncoder(width, height).write(data).flush();\n}\n\n/**\n * @deprecated 请使用 createBufferOfImageData 代替，此方法可能在后续版本中移除\n */\nexport const getBufferFromImageData = createBufferOfImageData;\n\n/**\n * 将 ImageData 转换为 PNG 格式的 Base64 字符串\n * @param imageData\n * @returns PNG 格式的 Base64 字符串\n */\nexport function createImageDataUrl(imageData: ImageData) {\n  return platform.decode.toDataURL(createBufferOfImageData(imageData));\n}\n\n/**\n * @deprecated 请使用 createImageDataUrl 代替，此方法可能在后续版本中移除\n */\nexport const getDataURLFromImageData = createImageDataUrl;\n","/**\n * 检查数据是否为zlib压缩格式\n * @param data 待检查的二进制数据\n * @returns 是否为zlib压缩格式\n */\nexport function isZlibCompressed(data: Uint8Array): boolean {\n  // 检查数据长度是否足够（至少需要2字节头部和4字节ADLER-32校验和）\n  if (data.length < 6) {\n    return false;\n  }\n\n  // 获取CMF和FLG字节\n  const cmf = data[0];\n  const flg = data[1];\n\n  // 检查CMF的压缩方法（低4位为8表示DEFLATE）\n  if ((cmf & 0x0f) !== 8) {\n    return false;\n  }\n\n  // 检查窗口大小（高4位通常为7，但不是严格要求）\n  // - 这里不强制检查，因为理论上可以是其他值\n\n  // 验证头部校验（CMF * 256 + FLG必须是31的倍数）\n  if ((cmf * 256 + flg) % 31 !== 0) {\n    return false;\n  }\n\n  // 检查字典标志位（如果设置了字典，需要额外验证，但这种情况很少见）\n  const fdict = (flg & 0x20) !== 0;\n  if (fdict) {\n    // 标准zlib压缩通常不使用预定义字典\n    // 这里假设不使用字典，若检测到字典标志则认为不是标准zlib格式\n    return false;\n  }\n\n  // 尝试提取ADLER-32校验和并验证其格式\n  // 虽然无法验证校验和值（需要解压后计算），但可以检查其是否为合理的数值\n  const adler32Bytes = data.slice(-4);\n\n  if (adler32Bytes.length !== 4) {\n    return false;\n  }\n\n  const adler32 =\n    (adler32Bytes[0] << 24) |\n    (adler32Bytes[1] << 16) |\n    (adler32Bytes[2] << 8) |\n    adler32Bytes[3];\n\n  // 有效的ADLER-32值应大于0（除非是空数据）\n  if (data.length > 2 && adler32 === 0) {\n    return false;\n  }\n\n  // 所有检查都通过，数据可能是zlib压缩格式\n  return true;\n}\n","import { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport type { PlatformVideo } from \"../types/video\";\n\nexport interface Bucket {\n  // 远程地址\n  origin: string;\n  // 本地地址\n  local: string;\n  // 实例\n  entity: PlatformVideo.Video | null;\n  // 下载实例中\n  promise: Promise<ArrayBufferLike> | null;\n}\n\nexport interface NeedUpdatePoint {\n  action: \"remove\" | \"add\";\n  start: number;\n  end: number;\n}\n\nexport type LoadMode = \"fast\" | \"whole\";\n\nexport interface VideoManagerOptions {\n  preprocess: (bucket: Bucket) => Promise<ArrayBufferLike>;\n  postprocess: (\n    bucket: Bucket,\n    buff: ArrayBufferLike\n  ) => Promise<PlatformVideo.Video> | PlatformVideo.Video;\n  cleanup: (buckets: Bucket[]) => Promise<void> | void;\n}\n\nexport class VideoManager {\n  /**\n   * 视频池的当前指针位置\n   */\n  private point: number = 0;\n  /**\n   * 视频的最大留存数量，其他视频将放在磁盘上缓存\n   */\n  private maxRemain: number = 3;\n  /**\n   * 留存视频的开始指针位置\n   */\n  private remainStart: number = 0;\n  /**\n   * 留存视频的结束指针位置\n   */\n  private remainEnd: number = 0;\n  /**\n   * 视频加载模式\n   * - 快速加载模式：可保证当前视频加载完成后，尽快播放；其他请求将使用Promise的方式保存在bucket中，以供后续使用\n   * - 完整加载模式：可保证所有视频加载完成，确保播放切换的流畅性\n   */\n  private loadMode: LoadMode = \"fast\";\n  /**\n   * 视频池的所有数据\n   */\n  private buckets: Bucket[] = [];\n\n  private readonly options: VideoManagerOptions = {\n    /**\n     * 预处理动效数据\n     * @param url\n     * @returns\n     */\n    preprocess: (bucket: Bucket) => Parser.download(bucket.origin),\n    /**\n     * 后处理动效数据\n     * @param bucket\n     * @param data\n     * @returns\n     */\n    postprocess: (bucket: Bucket, data: ArrayBufferLike) =>\n      Parser.parseVideo(data, bucket.origin, true),\n    /**\n     * 清理数据\n     * @param buckets\n     * @returns\n     */\n    cleanup: (buckets: Bucket[]) => {\n      const { local, path } = platform;\n\n      buckets.forEach((bucket: Bucket) => {\n        if (path.is(bucket.local)) {\n          local!.remove(bucket.local);\n        }\n      });\n    },\n  };\n\n  /**\n   * 获取视频池大小\n   */\n  get size(): number {\n    return this.buckets.length;\n  }\n\n  constructor(loadMode: LoadMode, options?: Partial<VideoManagerOptions>) {\n    if (typeof loadMode === \"string\") {\n      this.loadMode = loadMode;\n    }\n\n    Object.assign(this.options, options);\n  }\n\n  /**\n   * 更新留存指针位置\n   */\n  private updateRemainRange(\n    point: number,\n    maxRemain: number,\n    totalCount: number\n  ): void {\n    if (point < 0) {\n      this.point = 0;\n    } else if (point >= totalCount) {\n      this.point = totalCount - 1;\n    } else {\n      this.point = point;\n    }\n\n    if (this.loadMode === \"whole\") {\n      this.remainStart = 0;\n      this.remainEnd = totalCount;\n    } else {\n      if (maxRemain < 1) {\n        this.maxRemain = 1;\n      } else if (maxRemain > totalCount) {\n        this.maxRemain = totalCount;\n      } else {\n        this.maxRemain = maxRemain;\n      }\n\n      this.remainStart = this.point - Math.floor(this.maxRemain / 2);\n      if (this.remainStart < 0) {\n        this.remainStart = totalCount + this.remainStart;\n      }\n\n      this.remainEnd = this.remainStart + this.maxRemain;\n      if (this.remainEnd > totalCount) {\n        this.remainEnd = this.remainEnd % totalCount;\n      }\n    }\n  }\n\n  /**\n   * 指针是否在留存空间内\n   * @param point\n   * @returns\n   */\n  private includeRemainRange(point: number): boolean {\n    if (this.remainStart < this.remainEnd) {\n      return point >= this.remainStart && point < this.remainEnd;\n    }\n\n    if (this.remainStart > this.remainEnd) {\n      return point >= this.remainStart || point < this.remainEnd;\n    }\n\n    return true;\n  }\n\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse?: false\n  ): Promise<ArrayBuffer>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: true\n  ): Promise<PlatformVideo.Video>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: boolean = false\n  ) {\n    const { options } = this;\n    const data = await options.preprocess(bucket);\n\n    if (needParse) {\n      return options.postprocess(bucket, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * 创建bucket\n   * @param url 远程地址\n   * @param point 指针位置\n   * @param needDownloadAndParse 是否需要下载并解析\n   * @returns\n   */\n  private async createBucket(\n    url: string,\n    point: number,\n    needDownloadAndParse: boolean\n  ): Promise<Bucket> {\n    const { path } = platform;\n    const bucket: Bucket = {\n      origin: url,\n      local: path.resolve(path.filename(url)),\n      entity: null,\n      promise: null,\n    };\n\n    this.buckets[point] = bucket;\n    if (needDownloadAndParse) {\n      bucket.entity = await this.downloadAndParseVideo(bucket, true);\n    } else if (this.includeRemainRange(point)) {\n      bucket.promise = this.downloadAndParseVideo(bucket);\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 预加载视频到本地磁盘中\n   * @param urls 视频远程地址\n   * @param point 当前指针位置\n   * @param maxRemain 最大留存数量\n   */\n  async prepare(\n    urls: string[],\n    point: number = 0,\n    maxRemain: number = 3\n  ): Promise<void> {\n    this.updateRemainRange(point, maxRemain, urls.length);\n\n    const { loadMode, point: currentPoint } = this;\n    const needDownloadAndParse = loadMode === \"whole\";\n    // 优先加载当前动效\n    const preloadBucket: Bucket = await this.createBucket(\n      urls[currentPoint],\n      currentPoint,\n      needDownloadAndParse\n    );\n\n    await Promise.all(\n      urls.map((url: string, index: number) =>\n        index === currentPoint\n          ? preloadBucket\n          : this.createBucket(url, index, needDownloadAndParse)\n      )\n    );\n  }\n\n  /**\n   * 获取当前帧的bucket\n   * @returns\n   */\n  async get(): Promise<Bucket> {\n    const bucket = this.buckets[this.point];\n\n    if (!bucket.entity) {\n      if (!bucket.promise) {\n        bucket.promise = this.downloadAndParseVideo(bucket);\n      }\n\n      bucket.entity = await bucket.promise.then((data: ArrayBufferLike) =>\n        this.options.postprocess(bucket, data)\n      );\n      bucket.promise = null;\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 获取当前的指针位置\n   * @returns\n   */\n  getPoint(): number {\n    return this.point;\n  }\n\n  /**\n   * 获取指定位置的bucket\n   * @param pos\n   * @returns\n   */\n  async go(point: number): Promise<Bucket> {\n    const { size, buckets, loadMode } = this;\n\n    if (point < 0 || point >= size) {\n      return buckets[this.point];\n    }\n\n    this.updateRemainRange(point, this.maxRemain, buckets.length);\n    if (loadMode === \"fast\" && this.maxRemain !== buckets.length) {\n      buckets.forEach((bucket: Bucket, index: number) => {\n        if (this.includeRemainRange(index)) {\n          if (bucket.entity === null && bucket.promise === null) {\n            bucket.promise = this.downloadAndParseVideo(bucket);\n          }\n        } else {\n          bucket.entity = null;\n          bucket.promise = null;\n        }\n      });\n    }\n\n    return this.get();\n  }\n\n  /**\n   * 清理所有的bucket\n   * @returns\n   */\n  async clear(needRemoveFiles: boolean = true): Promise<void> {\n    const { buckets } = this;\n\n    this.point = 0;\n    this.remainStart = 0;\n    this.remainEnd = 0;\n    this.maxRemain = 3;\n    this.buckets = [];\n\n    if (needRemoveFiles) {\n      await this.options.cleanup(buckets);\n    }\n  }\n}\n","import type { RawImage, PlatformImage } from \"octopus-platform\";\nimport { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport { generateImageBufferFromCode, IQrCodeImgOptions } from \"./qrcode\";\nimport { createBufferOfImageData } from \"./png\";\nimport type { ResourceManager } from \"../extensions\";\nimport type { Painter } from \"../core/painter\";\nimport type { PlatformVideo, PlatformRenderingContext2D } from \"../types\";\n\ninterface VideoEditorOptions {\n  // 模式: R 替换, A 追加\n  mode?: \"R\" | \"A\";\n}\n\nexport class VideoEditor {\n  constructor(\n    private readonly painter: Painter,\n    private readonly resource: ResourceManager,\n    private readonly entity: PlatformVideo.Video\n  ) {}\n\n  private async set(\n    key: string,\n    value: RawImage,\n    mode: VideoEditorOptions[\"mode\"] = \"R\"\n  ) {\n    const { entity, resource } = this;\n\n    if (mode === \"A\") {\n      await resource.loadImagesWithRecord(\n        { [key]: value },\n        entity.filename,\n        \"dynamic\"\n      );\n    } else {\n      entity.images[key] = value;\n    }\n  }\n\n  /**\n   * 获取自定义编辑器\n   * @returns\n   */\n  getContext() {\n    return this.painter.BC;\n  }\n\n  /**\n   * 是否是有效的Key\n   * @param key\n   * @returns\n   */\n  hasValidKey(key: string): boolean {\n    const { images } = this.entity;\n\n    if (typeof Object.hasOwn === \"function\") {\n      return Object.hasOwn(images, key);\n    }\n\n    return Object.prototype.hasOwnProperty.call(images, key);\n  }\n\n  /**\n   * 加载并缓存图片\n   * @param source\n   * @param url\n   * @returns\n   */\n  loadImage(\n    source: Uint8Array | string,\n    url: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return this.resource.loadExtImage(source, platform.path.filename(url));\n  }\n\n  /**\n   * 创建画布图片\n   * @param key\n   * @param context\n   * @param options\n   * @returns\n   */\n  async setCanvas(\n    key: string,\n    context: PlatformRenderingContext2D,\n    options?: VideoEditorOptions & { width?: number; height?: number }\n  ) {\n    if (this.entity.locked) return;\n\n    const { canvas } = context;\n    const width = options?.width ?? canvas.width;\n    const height = options?.height ?? canvas.height;\n    const imageData = context.getImageData(0, 0, width, height);\n\n    this.painter.clearSecondary();\n    await this.set(\n      key,\n      new Uint8Array(createBufferOfImageData(imageData)),\n      options?.mode\n    );\n  }\n\n  /**\n   * 创建二进制图片\n   * @param key\n   * @param buff\n   * @param options\n   * @returns\n   */\n  async setImage(key: string, url: string, options?: VideoEditorOptions) {\n    if (this.entity.locked) return;\n\n    if (url.startsWith(\"data:image\")) {\n      await this.set(key, url, options?.mode);\n    } else {\n      await this.set(\n        key,\n        new Uint8Array(await Parser.download(url)),\n        options?.mode\n      );\n    }\n  }\n\n  /**\n   * 创建二维码图片\n   * @param key\n   * @param code\n   * @param options\n   * @returns\n   */\n  async setQRCode(\n    key: string,\n    code: string,\n    options: VideoEditorOptions & Omit<IQrCodeImgOptions, \"code\">\n  ) {\n    if (this.entity.locked) return;\n\n    await this.set(\n      key,\n      new Uint8Array(generateImageBufferFromCode({ ...options, code })),\n      options?.mode\n    );\n  }\n}\n"],"names":[],"mappings":"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CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,IAAA,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;IACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;IACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AACtB,IAAA,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,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AC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACxB,IAAA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IACd,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACvB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IA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"}