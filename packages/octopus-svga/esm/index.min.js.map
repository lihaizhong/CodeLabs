{"version":3,"file":"index.min.js","sources":["../src/platform/index.ts","../src/extensions/svga-decoder/io/float.ts","../src/extensions/svga-decoder/io/preflight.ts","../src/shared/hash.ts","../src/extensions/svga-decoder/io/Reader.ts","../src/extensions/svga-decoder/serialization/Layout.ts","../src/extensions/svga-decoder/serialization/Transform.ts","../src/extensions/svga-decoder/serialization/ShapeArgs.ts","../src/extensions/svga-decoder/serialization/RectArgs.ts","../src/extensions/svga-decoder/serialization/EllipseArgs.ts","../src/extensions/svga-decoder/serialization/RGBAColor.ts","../src/extensions/svga-decoder/serialization/ShapeStyle.ts","../src/extensions/svga-decoder/serialization/ShapeEntity.ts","../src/extensions/svga-decoder/serialization/FrameEntity.ts","../src/extensions/svga-decoder/serialization/SpriteEntity.ts","../src/extensions/svga-decoder/serialization/MovieParams.ts","../src/extensions/svga-decoder/serialization/MovieEntity.ts","../src/shared/PointPool.ts","../src/extensions/svga-renderer/2d/index.ts","../src/extensions/svga-animator/index.ts","../src/extensions/zlib/index.ts","../src/extensions/png-encoder/crc.ts","../src/extensions/png-encoder/index.ts","../src/extensions/qrcode-encoder/bit-buffer.ts","../src/extensions/qrcode-encoder/constants.ts","../src/extensions/qrcode-encoder/bit-byte.ts","../src/extensions/qrcode-encoder/block.ts","../src/extensions/qrcode-encoder/math.ts","../src/extensions/qrcode-encoder/polynomial.ts","../src/extensions/qrcode-encoder/util.ts","../src/extensions/qrcode-encoder/index.ts","../src/core/parser/index.ts","../src/extensions/svga-decoder/index.ts","../src/core/painter/index.ts","../src/core/player/config.ts","../src/helper/qrcode.ts","../src/helper/png.ts","../src/helper/zlib.ts","../src/helper/VideoManager.ts","../src/helper/VideoEditor.ts","../src/helper/ResourceManager.ts","../src/core/player/index.ts","../src/core/poster/index.ts"],"sourcesContent":["import {\n  type OctopusPlatformPlugins,\n  type OctopusPlatformPluginOptions,\n  OctopusPlatform,\n  installPlugin,\n  pluginSelector,\n  pluginCanvas,\n  pluginOfsCanvas,\n  pluginDecode,\n  pluginDownload,\n  pluginFsm,\n  pluginImage,\n  pluginNow,\n  pluginPath,\n  pluginRAF,\n} from \"octopus-platform\";\n\nexport type PlatformProperties =\n  | \"now\"\n  | \"path\"\n  | \"remote\"\n  | \"local\"\n  | \"decode\"\n  | \"image\"\n  | \"rAF\"\n  | \"getSelector\"\n  | \"getCanvas\"\n  | \"getOfsCanvas\";\n\nclass EnhancedPlatform extends OctopusPlatform<PlatformProperties> {\n  now!: OctopusPlatformPlugins[\"now\"];\n\n  path!: OctopusPlatformPlugins[\"path\"];\n\n  remote!: OctopusPlatformPlugins[\"remote\"];\n\n  local!: OctopusPlatformPlugins[\"local\"];\n\n  decode!: OctopusPlatformPlugins[\"decode\"];\n\n  image!: OctopusPlatformPlugins[\"image\"];\n\n  rAF!: OctopusPlatformPlugins[\"rAF\"];\n\n  getSelector!: OctopusPlatformPlugins[\"getSelector\"];\n\n  getCanvas!: OctopusPlatformPlugins[\"getCanvas\"];\n\n  getOfsCanvas!: OctopusPlatformPlugins[\"getOfsCanvas\"];\n\n  constructor() {\n    super(\n      [\n        pluginSelector,\n        pluginCanvas,\n        pluginOfsCanvas,\n        pluginDecode,\n        pluginDownload,\n        pluginFsm,\n        pluginImage,\n        pluginNow,\n        pluginPath,\n        pluginRAF,\n      ],\n      __VERSION__\n    );\n\n    this.init();\n  }\n\n  installPlugin(\n    plugin: OctopusPlatformPluginOptions<PlatformProperties>\n  ) {\n    installPlugin<PlatformProperties>(this, plugin);\n  }\n}\n\nexport const platform = new EnhancedPlatform();\n","function readFloatLEImpl() {\n  // 使用静态DataView池\n  const DATA_VIEW_POOL_SIZE = 4;\n  const dataViewPool: DataView[] = Array(DATA_VIEW_POOL_SIZE)\n    .fill(0)\n    .map(() => new DataView(new ArrayBuffer(8))); // 使用8字节支持double\n  let currentViewIndex = 0;\n\n  return function readFloatLE(buf: Uint8Array, pos: number): number {\n    if (pos < 0 || pos + 4 > buf.length)\n      throw new RangeError(\"Index out of range\");\n\n    // 轮换使用DataView池中的实例\n    const view = dataViewPool[currentViewIndex];\n    currentViewIndex = (currentViewIndex + 1) % DATA_VIEW_POOL_SIZE;\n\n    // 直接设置字节，避免创建subarray\n    const u8 = new Uint8Array(view.buffer);\n    u8[0] = buf[pos];\n    u8[1] = buf[pos + 1];\n    u8[2] = buf[pos + 2];\n    u8[3] = buf[pos + 3];\n\n    return view.getFloat32(0, true);\n  };\n}\n\nexport const readFloatLE = readFloatLEImpl();\n","import { calculateHash } from \"../../../shared/hash\";\nimport Reader from \"./Reader\";\n\nexport class Preflight {\n  private caches: Map<string, any> = new Map();\n\n  private count: number = 0;\n\n  get size() {\n    return this.caches.size;\n  }\n\n  get hitCount() {\n    return this.count;\n  }\n\n  // get cache() {\n  //   return Object.fromEntries(this.caches);\n  // }\n\n  /**\n   * 计算二进制数据的哈希值\n   * @param reader Reader对象\n   * @param end 结束位置\n   * @returns 哈希值\n   */\n  calculate(reader: Reader, end: number): string {\n    // 保存原始位置\n    const { pos: startPos, buf } = reader;\n    const endPos = Math.min(end, reader.len);\n    // 采样数据以加快计算速度，同时保持足够的唯一性\n    // 对于大数据，每隔几个字节采样一次\n    const step = Math.max(1, Math.floor((endPos - startPos) / 100));\n    \n    return calculateHash(buf, startPos, endPos, step);\n  }\n\n  /**\n   * 检查是否存在缓存数据\n   * @param key 键\n   * @returns 是否存在\n   */\n  has(key: string): boolean {\n    const hit = this.caches.has(key);\n\n    if (hit) {\n      this.count++;\n    }\n\n    return hit;\n\n    // return this.caches.has(key);\n  }\n\n  /**\n   * 获取缓存数据\n   * @param key 键\n   * @returns 缓存数据\n   */\n  get(key: string): any {\n    return this.caches.get(key);\n  }\n\n  /**\n   * 设置缓存数据\n   * @param key 键\n   * @param value 缓存数据\n   */\n  set(key: string, value: any) {\n    this.caches.set(key, value);\n  }\n\n  /**\n   * 清空所有缓存数据\n   */\n  clear() {\n    this.count = 0;\n    this.caches.clear();\n  }\n}\n","/**\n * 简易的hash算法\n * @param buff \n * @param start \n * @param end \n * @param step \n * @returns \n */\nexport function calculateHash(buff: Uint8Array, start: number, end: number, step: number) {\n  // 使用简单的哈希算法\n    let hash = 0;\n\n    for (let i = start; i < end; i += step) {\n      // 简单的哈希算法，类似于字符串哈希\n      hash = (hash << 5) - hash + buff[i];\n      hash = hash & hash; // 转换为32位整数\n    }\n\n    // 添加数据长度作为哈希的一部分，增加唯一性\n    hash = (hash << 5) - hash + end - start;\n    hash = hash & hash;\n    // 转换为字符串\n    return hash.toString(36);\n}\n","import { platform } from \"../../../platform\";\nimport { readFloatLE } from \"./float\";\nimport { Preflight } from \"./preflight\";\n\nexport default class Reader {\n  // 添加静态缓存，用于常用的空数组\n  private static EMPTY_UINT8ARRAY = new Uint8Array(0);\n\n  /**\n   * Read buffer.\n   * @type {Uint8Array}\n   */\n  readonly buf: Uint8Array;\n  /**\n   * Read buffer length.\n   * @type {number}\n   */\n  readonly len: number;\n  /**\n   * Read buffer position.\n   * @type {number}\n   */\n  pos: number;\n\n  preflight = new Preflight();\n\n  /**\n   * Constructs a new reader instance using the specified buffer.\n   * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n   * @constructor\n   * @param {Uint8Array} buffer Buffer to read from\n   */\n  constructor(buffer: Uint8Array) {\n    this.buf = buffer;\n    this.pos = 0;\n    this.len = buffer.length;\n  }\n\n  private indexOutOfRange(reader: Reader, writeLength?: number) {\n    return new RangeError(\n      \"index out of range: \" +\n        reader.pos +\n        \" + \" +\n        (writeLength || 1) +\n        \" > \" +\n        reader.len\n    );\n  }\n\n  /**\n   * 将复杂逻辑分离到单独方法\n   * @returns\n   */\n  private readVarint32Slow() {\n    let byte = this.buf[this.pos++];\n    let value = byte & 0x7f;\n    let shift = 7;\n\n    // 使用do-while循环减少条件判断\n    do {\n      if (this.pos >= this.len) {\n        throw this.indexOutOfRange(this);\n      }\n\n      byte = this.buf[this.pos++];\n      value |= (byte & 0x7f) << shift;\n      shift += 7;\n    } while (byte >= 128 && shift < 32);\n\n    return value >>> 0; // 确保无符号\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @param length \n   * @returns \n   */\n  end(length?: number) {\n    return length === undefined ? this.len : this.pos + length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value.\n   * @function\n   * @returns {number} Value read\n   */\n  uint32() {\n    // 快速路径：大多数情况下是单字节\n    const byte = this.buf[this.pos];\n\n    if (byte < 128) {\n      this.pos++;\n\n      return byte;\n    }\n\n    // 慢速路径：多字节处理\n    return this.readVarint32Slow();\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value.\n   * @returns {number} Value read\n   */\n  int32() {\n    return this.uint32() | 0;\n  }\n\n  /**\n   * Reads a float (32 bit) as a number.\n   * @function\n   * @returns {number} Value read\n   */\n  float() {\n    const pos = this.pos + 4;\n\n    if (pos > this.len) {\n      throw this.indexOutOfRange(this, 4);\n    }\n\n    const value = readFloatLE(this.buf, this.pos);\n    this.pos = pos;\n\n    return value;\n  }\n\n  /**\n   * read bytes range\n   * @returns \n   */\n  private getBytesRange() {\n    const length = this.uint32();\n    const start = this.pos;\n    const end = start + length;\n\n    if (end > this.len) {\n      throw this.indexOutOfRange(this, length);\n    }\n\n    return [start, end, length];\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @returns {Uint8Array} Value read\n   */\n  bytes() {\n    const [start, end, length] = this.getBytesRange();\n\n    this.pos += length;\n\n    if (length === 0) {\n      return Reader.EMPTY_UINT8ARRAY;\n    }\n\n    return this.buf.subarray(start, end);\n  }\n\n  /**\n   * Reads a string preceeded by its byte length as a varint.\n   * @returns {string} Value read\n   */\n  string() {\n    const [start, end] = this.getBytesRange();\n    // 直接在原始buffer上解码，避免创建中间bytes对象\n    const result = platform.decode.utf8(this.buf, start, end);\n    this.pos = end;\n\n    return result;\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint.\n   * @param {number} [length] Length if known, otherwise a varint is assumed\n   * @returns {Reader} `this`\n   */\n  skip(length?: number) {\n    if (typeof length === \"number\") {\n      if (this.pos + length > this.len) {\n        throw this.indexOutOfRange(this, length);\n      }\n\n      this.pos += length;\n\n      return this;\n    }\n    \n    // 变长整数跳过优化 - 使用位运算\n    const { buf, len } = this;\n    let pos = this.pos;\n    \n    // 一次检查多个字节，减少循环次数\n    while (pos < len) {\n      const byte = buf[pos++];\n\n      if ((byte & 0x80) === 0) {\n        this.pos = pos;\n\n        return this;\n      }\n\n      // 快速检查连续的高位字节\n      if (pos < len && (buf[pos] & 0x80) !== 0) {\n        pos++;\n\n        if (pos < len && (buf[pos] & 0x80) !== 0) {\n          pos++;\n\n          if (pos < len && (buf[pos] & 0x80) !== 0) {\n            pos++;\n\n            // 继续检查剩余字节\n            while (pos < len && (buf[pos] & 0x80) !== 0) {\n              pos++;\n\n              if (pos - this.pos >= 10) {\n                throw Error(\"invalid varint encoding\");\n              }\n            }\n\n            if (pos < len) {\n              this.pos = pos + 1;\n\n              return this;\n            }\n          }\n        }\n      }\n    }\n    \n    throw this.indexOutOfRange(this);\n  }\n\n  /**\n   * Skips the next element of the specified wire type.\n   * @param {number} wireType Wire type received\n   * @returns {Reader} `this`\n   */\n  skipType(wireType: number) {\n    switch (wireType) {\n      case 0:\n        this.skip();\n        break;\n      case 1:\n        this.skip(8);\n        break;\n      case 2:\n        this.skip(this.uint32());\n        break;\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType);\n        }\n        break;\n      case 5:\n        this.skip(4);\n        break;\n\n      /* istanbul ignore next */\n      default:\n        throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n\n    return this;\n  }\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Layout {\n  /**\n   * Decodes a Layout message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Layout\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Rect {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new Layout();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, Layout.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: Layout): PlatformVideo.Rect {\n    const { x = 0, y = 0, width = 0, height = 0 } = message;\n\n    return { x, y, width, height };\n  }\n\n  /**\n   * Layout x.\n   * @member {number} x\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * Layout y.\n   * @member {number} y\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * Layout width.\n   * @member {number} width\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * Layout height.\n   * @member {number} height\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  height: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Transform {\n  /**\n   * Decodes a Transform message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Transform\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Transform} Transform\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Transform {\n    const end = reader.end(length);\n    const message = new Transform();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.a = reader.float();\n          break;\n        }\n        case 2: {\n          message.b = reader.float();\n          break;\n        }\n        case 3: {\n          message.c = reader.float();\n          break;\n        }\n        case 4: {\n          message.d = reader.float();\n          break;\n        }\n        case 5: {\n          message.tx = reader.float();\n          break;\n        }\n        case 6: {\n          message.ty = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * Transform a.\n   * @member {number} a\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  a: number = 0;\n  /**\n   * Transform b.\n   * @member {number} b\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * Transform c.\n   * @member {number} c\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  c: number = 0;\n  /**\n   * Transform d.\n   * @member {number} d\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  d: number = 0;\n  /**\n   * Transform tx.\n   * @member {number} tx\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  tx: number = 0;\n  /**\n   * Transform ty.\n   * @member {number} ty\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  ty: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a ShapeArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IShapeArgs\n * @property {string|null} [d] ShapeArgs d\n */\nexport interface ShapeArgsProps {\n  d: string | null;\n}\n\nexport default class ShapeArgs {\n  /**\n   * Decodes a ShapeArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeArgs} ShapeArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.ShapePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.d = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * ShapeArgs d.\n   * @member {string} d\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @instance\n   */\n  d: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RectArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IRectArgs\n * @property {number|null} [x] RectArgs x\n * @property {number|null} [y] RectArgs y\n * @property {number|null} [width] RectArgs width\n * @property {number|null} [height] RectArgs height\n * @property {number|null} [cornerRadius] RectArgs cornerRadius\n */\nexport interface RectArgsProps {\n  x: number | null;\n  y: number | null;\n  width: number | null;\n  height: number | null;\n  cornerRadius: number | null;\n}\n\nexport default class RectArgs {\n  /**\n   * Decodes a RectArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.RectArgs} RectArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RectPath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RectArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        case 5: {\n          message.cornerRadius = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * RectArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * RectArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * RectArgs width.\n   * @member {number} width\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * RectArgs height.\n   * @member {number} height\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  height: number = 0;\n  /**\n   * RectArgs cornerRadius.\n   * @member {number} cornerRadius\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  cornerRadius: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class EllipseArgs {\n  /**\n   * Decodes an EllipseArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.EllipseArgs} EllipseArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.EllipsePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new EllipseArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.radiusX = reader.float();\n          break;\n        }\n        case 4: {\n          message.radiusY = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * EllipseArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * EllipseArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * EllipseArgs radiusX.\n   * @member {number} radiusX\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusX: number = 0;\n  /**\n   * EllipseArgs radiusY.\n   * @member {number} radiusY\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusY: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RGBAColor.\n * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n * @interface IRGBAColor\n * @property {number|null} [r] RGBAColor r\n * @property {number|null} [g] RGBAColor g\n * @property {number|null} [b] RGBAColor b\n * @property {number|null} [a] RGBAColor a\n */\nexport interface RGBAColorProps {\n  r: number | null;\n  g: number | null;\n  b: number | null;\n  a: number | null;\n}\n\nexport default class RGBAColor {\n  /**\n   * Decodes a RGBAColor message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor} RGBAColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RGBA<number, number, number, number> {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RGBAColor();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.r = reader.float();\n          break;\n        }\n        case 2: {\n          message.g = reader.float();\n          break;\n        }\n        case 3: {\n          message.b = reader.float();\n          break;\n        }\n        case 4: {\n          message.a = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, RGBAColor.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(\n    message: RGBAColor\n  ): PlatformVideo.RGBA<number, number, number, number> {\n    const { r, g, b, a } = message;\n\n    return `rgba(${(r * 255) | 0}, ${(g * 255) | 0}, ${(b * 255) | 0}, ${\n      (a * 1) | 0\n    })`;\n  }\n\n  /**\n   * RGBAColor r.\n   * @member {number} r\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  r: number = 0;\n  /**\n   * RGBAColor g.\n   * @member {number} g\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  g: number = 0;\n  /**\n   * RGBAColor b.\n   * @member {number} b\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * RGBAColor a.\n   * @member {number} a\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  a: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport RGBAColor from \"./RGBAColor\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeStyle {\n  /**\n   * Decodes a ShapeStyle message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle} ShapeStyle\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoStyles {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeStyle();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.fill = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 2: {\n          message.stroke = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 3: {\n          message.strokeWidth = reader.float();\n          break;\n        }\n        case 4: {\n          message.lineCap = reader.int32();\n          break;\n        }\n        case 5: {\n          message.lineJoin = reader.int32();\n          break;\n        }\n        case 6: {\n          message.miterLimit = reader.float();\n          break;\n        }\n        case 7: {\n          message.lineDashI = reader.float();\n          break;\n        }\n        case 8: {\n          message.lineDashII = reader.float();\n          break;\n        }\n        case 9: {\n          message.lineDashIII = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, ShapeStyle.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: ShapeStyle): PlatformVideo.VideoStyles {\n    const { fill, stroke, strokeWidth, miterLimit, lineDashI, lineDashII, lineDashIII } = message;\n    const lineDash: number[] = [];\n    let lineCap: CanvasLineCap;\n    let lineJoin: CanvasLineJoin;\n\n    if (lineDashI > 0) {\n      lineDash.push(lineDashI);\n    }\n\n    if (lineDashII > 0) {\n      if (lineDash.length < 1) {\n        lineDash.push(0);\n      }\n\n      lineDash.push(lineDashII);\n    }\n\n    if (lineDashIII > 0) {\n      if (lineDash.length < 2) {\n        lineDash.push(0, 0);\n      }\n\n      lineDash.push(lineDashIII);\n    }\n\n    switch (message.lineCap) {\n      case PlatformVideo.LINE_CAP_CODE.BUTT:\n        lineCap = PlatformVideo.LINE_CAP.BUTT;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.ROUND:\n        lineCap = PlatformVideo.LINE_CAP.ROUND;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.SQUARE:\n        lineCap = PlatformVideo.LINE_CAP.SQUARE;\n        break;\n    }\n\n    switch (message.lineJoin) {\n      case PlatformVideo.LINE_JOIN_CODE.MITER:\n        lineJoin = PlatformVideo.LINE_JOIN.MITER;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.ROUND:\n        lineJoin = PlatformVideo.LINE_JOIN.ROUND;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.BEVEL:\n        lineJoin = PlatformVideo.LINE_JOIN.BEVEL;\n        break;\n    }\n\n    return {\n      lineDash,\n      fill: fill ? fill : null,\n      stroke: stroke ? stroke : null,\n      lineCap,\n      lineJoin,\n      strokeWidth,\n      miterLimit\n    }\n  }\n\n  /**\n   * ShapeStyle fill.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} fill\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  fill: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle stroke.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} stroke\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  stroke: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle strokeWidth.\n   * @member {number} strokeWidth\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  strokeWidth: number = 0;\n  /**\n   * ShapeStyle lineCap.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineCap} lineCap\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineCap: PlatformVideo.LINE_CAP_CODE = 0;\n  /**\n   * ShapeStyle lineJoin.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin} lineJoin\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineJoin: PlatformVideo.LINE_JOIN_CODE = 0;\n  /**\n   * ShapeStyle miterLimit.\n   * @member {number} miterLimit\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  miterLimit: number = 0;\n  /**\n   * ShapeStyle lineDashI.\n   * @member {number} lineDashI\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashI: number = 0;\n  /**\n   * ShapeStyle lineDashII.\n   * @member {number} lineDashII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashII: number = 0;\n  /**\n   * ShapeStyle lineDashIII.\n   * @member {number} lineDashIII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashIII: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport Transform from \"./Transform\";\nimport ShapeArgs from \"./ShapeArgs\";\nimport RectArgs from \"./RectArgs\";\nimport EllipseArgs from \"./EllipseArgs\";\nimport ShapeStyle from \"./ShapeStyle\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeEntity {\n  /**\n   * Decodes a ShapeEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity} ShapeEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrameShape | null {\n    const end = reader.end(length);\n    const message = new ShapeEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.type = reader.int32();\n          break;\n        }\n        case 2: {\n          message.shape = ShapeArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.rect = RectArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.ellipse = EllipseArgs.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 10: {\n          message.styles = ShapeStyle.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 11: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return ShapeEntity.format(message);\n  }\n\n  static format(message: ShapeEntity): PlatformVideo.VideoFrameShape | null {\n    const { type, shape, rect, ellipse, styles, transform } = message;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE_CODE.SHAPE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.SHAPE,\n          path: shape!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.RECT:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.RECT,\n          path: rect!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.ELLIPSE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.ELLIPSE,\n          path: ellipse!,\n          styles: styles!,\n          transform: transform!,\n        };\n      default:\n    }\n\n    return null;\n  }\n\n  /**\n   * ShapeEntity type.\n   * @member {com.opensource.svga.ShapeEntity.ShapeType} type\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  type: PlatformVideo.SHAPE_TYPE_CODE = 0;\n  /**\n   * ShapeEntity shape.\n   * @member {com.opensource.svga.ShapeEntity.IShapeArgs|null|undefined} shape\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  shape: PlatformVideo.ShapePath | null = null;\n  /**\n   * ShapeEntity rect.\n   * @member {com.opensource.svga.ShapeEntity.IRectArgs|null|undefined} rect\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  rect: PlatformVideo.RectPath | null = null;\n  /**\n   * ShapeEntity ellipse.\n   * @member {com.opensource.svga.ShapeEntity.IEllipseArgs|null|undefined} ellipse\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  ellipse: PlatformVideo.EllipsePath | null = null;\n  /**\n   * ShapeEntity styles.\n   * @member {com.opensource.svga.ShapeEntity.IShapeStyle|null|undefined} styles\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  styles: PlatformVideo.VideoStyles | null = null;\n  /**\n   * ShapeEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n}\n","import Reader from \"../io/Reader\";\nimport Layout from \"./Layout\";\nimport Transform from \"./Transform\";\nimport ShapeEntity from \"./ShapeEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class FrameEntity {\n  private static HIDDEN_FRAME: PlatformVideo.HiddenVideoFrame = {\n    alpha: 0,\n  };\n\n  /**\n   * Decodes a FrameEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.FrameEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.FrameEntity} FrameEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    const end = reader.end(length);\n    const message = new FrameEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.alpha = reader.float();\n          break;\n        }\n        case 2: {\n          message.layout = Layout.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.clipPath = reader.string();\n          break;\n        }\n        case 5: {\n          const shape = ShapeEntity.decode(reader, reader.uint32())\n\n          if (shape !== null) {\n            message.shapes.push(shape);\n          }\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (message.shapes.length === 0) {\n      message.shapes = reader.preflight.get(\"latest_shapes\");\n    } else {\n      reader.preflight.set(\"latest_shapes\", message.shapes);\n    }\n\n    return FrameEntity.format(message);\n  }\n\n  private static format(message: FrameEntity): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    // alpha值小于 0.05 将不展示，所以不做解析处理\n    if (message.alpha < 0.05) {\n      return FrameEntity.HIDDEN_FRAME;\n    }\n\n    const { alpha, layout, transform, shapes } = message;\n\n    return {\n      alpha,\n      layout: layout!,\n      transform,\n      shapes,\n    };\n  }\n\n  /**\n   * FrameEntity shapes.\n   * @member {Array.<com.opensource.svga.IShapeEntity>} shapes\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  shapes: PlatformVideo.VideoFrameShape[] = [];\n  /**\n   * FrameEntity alpha.\n   * @member {number} alpha\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  alpha: number = 0;\n  /**\n   * FrameEntity layout.\n   * @member {com.opensource.svga.ILayout|null|undefined} layout\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  layout: PlatformVideo.Rect | null = null;\n  /**\n   * FrameEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n  /**\n   * FrameEntity clipPath.\n   * @member {string} clipPath\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  clipPath: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport FrameEntity from \"./FrameEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class SpriteEntity {\n  /**\n   * Decodes a SpriteEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.SpriteEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.SpriteEntity} SpriteEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoSprite {\n    const end = reader.end(length);\n    const message = new SpriteEntity();\n    let tag: number;\n\n    reader.preflight.set(\"latest_shapes\", []);\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.imageKey = reader.string();\n          break;\n        }\n        case 2: {\n          if (!(message.frames && message.frames.length)) {\n            message.frames = [];\n          }\n\n          message.frames.push(FrameEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        case 3: {\n          message.matteKey = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return SpriteEntity.format(message);\n  }\n\n  static format(message: SpriteEntity): PlatformVideo.VideoSprite {\n    return {\n      imageKey: message.imageKey,\n      frames: message.frames,\n    };\n  }\n\n  /**\n   * SpriteEntity frames.\n   * @member {Array.<com.opensource.svga.IFrameEntity>} frames\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  frames: Array<PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame> = [];\n  /**\n   * SpriteEntity imageKey.\n   * @member {string} imageKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  imageKey: string = \"\";\n  /**\n   * SpriteEntity matteKey.\n   * @member {string} matteKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  matteKey: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieParams {\n  /**\n   * Decodes a MovieParams message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieParams\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieParams} MovieParams\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoParams {\n    const end = reader.end(length);\n    const message = new MovieParams();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.viewBoxWidth = reader.float();\n          break;\n        }\n        case 2: {\n          message.viewBoxHeight = reader.float();\n          break;\n        }\n        case 3: {\n          message.fps = reader.int32();\n          break;\n        }\n        case 4: {\n          message.frames = reader.int32();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * MovieParams viewBoxWidth.\n   * @member {number} viewBoxWidth\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxWidth: number = 0;\n  /**\n   * MovieParams viewBoxHeight.\n   * @member {number} viewBoxHeight\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxHeight: number = 0;\n  /**\n   * MovieParams fps.\n   * @member {number} fps\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  fps: number = 0;\n  /**\n   * MovieParams frames.\n   * @member {number} frames\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  frames: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport SpriteEntity from \"./SpriteEntity\";\nimport MovieParams from \"./MovieParams\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieEntity {\n  static EMPTY_U8 = new Uint8Array(0);\n  /**\n   * Decodes a MovieEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieEntity} MovieEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Video {\n    const end = reader.end(length);\n    const message = new MovieEntity();\n    let key: string;\n    let value: Uint8Array;\n    let end2: number;\n    let tag: number;\n    let tag2: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.version = reader.string();\n          break;\n        }\n        case 2: {\n          message.params = MovieParams.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          end2 = reader.uint32() + reader.pos;\n          key = \"\";\n          value = MovieEntity.EMPTY_U8;\n\n          while (reader.pos < end2) {\n            tag2 = reader.uint32();\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string();\n                break;\n              case 2:\n                value = reader.bytes();\n                break;\n              default:\n                reader.skipType(tag2 & 7);\n                break;\n            }\n          }\n\n          message.images[key] = value;\n          break;\n        }\n        case 4: {\n          message.sprites.push(SpriteEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return MovieEntity.format(message);\n  }\n\n  static format(message: MovieEntity): PlatformVideo.Video {\n    const { version, images, sprites } = message;\n    const { fps, frames, viewBoxWidth, viewBoxHeight } = message.params!;\n\n    return {\n      version,\n      filename: \"\",\n      locked: false,\n      dynamicElements: {},\n      size: {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n      },\n      fps,\n      frames,\n      images,\n      sprites,\n    };\n  }\n\n  /**\n   * MovieEntity version.\n   * @member {string} version\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  version: string = \"\";\n  /**\n   * MovieEntity params.\n   * @member {com.opensource.svga.IMovieParams|null|undefined} params\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  params: MovieParams | null = null;\n  /**\n   * MovieEntity images.\n   * @member {Object.<string,Uint8Array>} images\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  images: Record<string, Uint8Array> = {};\n  /**\n   * MovieEntity sprites.\n   * @member {Array.<com.opensource.svga.ISpriteEntity>} sprites\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  sprites: PlatformVideo.VideoSprite[] = [];\n}\n","export interface CurrentPoint {\n  x: number;\n  y: number;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n\n/**\n * CurrentPoint对象池，用于减少对象创建和GC压力\n */\nexport class PointPool {\n  private pool: CurrentPoint[] = [];\n\n  public acquire(): CurrentPoint {\n    const { pool } = this;\n\n    return pool.length > 0\n      ? pool.pop()!\n      : { x: 0, y: 0, x1: 0, y1: 0, x2: 0, y2: 0 };\n  }\n\n  public release(point: CurrentPoint): void {\n    // 重置点的属性\n    point.x = point.y = point.x1 = point.y1 = point.x2 = point.y2 = 0;\n    this.pool.push(point);\n  }\n}\n","import { type Bitmap } from \"octopus-platform\";\nimport { PointPool, CurrentPoint } from \"../../../shared/PointPool\";\nimport {\n  PlatformVideo,\n  type TransformScale,\n  type PlatformRenderingContext2D,\n  type CanvasSize,\n  PLAYER_CONTENT_MODE\n} from \"../../../types\";\n\nexport interface ICommand {\n  command: string;\n  args: string;\n}\n\nexport class Renderer2D {\n  /**\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths\n   * 绘制路径的不同指令：\n   * * 直线命令\n   * - M: moveTo，移动到指定点，不绘制直线。\n   * - L: lineTo，从起始点绘制一条直线到指定点。\n   * - H: horizontal lineTo，从起始点绘制一条水平线到指定点。\n   * - V: vertical lineTo，从起始点绘制一条垂直线到指定点。\n   * - Z: closePath，从起始点绘制一条直线到路径起点，形成一个闭合路径。\n   * * 曲线命令\n   * - C: bezierCurveTo，绘制三次贝塞尔曲线。\n   * - S: smooth curveTo，绘制平滑三次贝塞尔曲线。\n   * - Q: quadraticCurveTo，绘制两次贝塞尔曲线。\n   * - T: smooth quadraticCurveTo，绘制平滑两次贝塞尔曲线。\n   * * 弧线命令\n   * - A: arcTo，从起始点绘制一条弧线到指定点。\n   */\n  private static SVG_PATH = new Set([\n    \"M\",\n    \"L\",\n    \"H\",\n    \"V\",\n    \"Z\",\n    \"C\",\n    \"S\",\n    \"Q\",\n    \"m\",\n    \"l\",\n    \"h\",\n    \"v\",\n    \"z\",\n    \"c\",\n    \"s\",\n    \"q\",\n  ]);\n\n  private static SVG_LETTER_REGEXP = /[a-zA-Z]/;\n\n  // 在Renderer2D类中添加新的解析方法\n  private static parseSVGPath(d: string): ICommand[] {\n    const { SVG_LETTER_REGEXP } = Renderer2D;\n    const result: ICommand[] = [];\n    let currentIndex = 0;\n\n    // 状态：0 - 等待命令，1 - 读取参数\n    let state = 0;\n    let currentCommand = \"\";\n    let currentArgs = \"\";\n\n    while (currentIndex < d.length) {\n      const char = d[currentIndex];\n\n      switch (state) {\n        case 0: // 等待命令\n          if (SVG_LETTER_REGEXP.test(char)) {\n            currentCommand = char;\n            state = 1;\n          }\n          break;\n        case 1: // 读取参数\n          if (SVG_LETTER_REGEXP.test(char)) {\n            // 遇到新命令，保存当前命令和参数\n            result.push({\n              command: currentCommand,\n              args: currentArgs.trim(),\n            });\n            currentCommand = char;\n            currentArgs = \"\";\n          } else {\n            currentArgs += char;\n          }\n          break;\n      }\n\n      currentIndex++;\n    }\n\n    // 处理最后一个命令\n    if (currentCommand && state === 1) {\n      result.push({\n        command: currentCommand,\n        args: currentArgs.trim(),\n      });\n    }\n\n    return result;\n  }\n\n  private static fillOrStroke(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      if (styles.fill) {\n        context.fill();\n      }\n\n      if (styles.stroke) {\n        context.stroke();\n      }\n    }\n  }\n\n  private static resetShapeStyles(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      context.strokeStyle = styles.stroke || \"transparent\";\n\n      if (styles.strokeWidth! > 0) {\n        context.lineWidth = styles.strokeWidth!;\n      }\n\n      if (styles.miterLimit! > 0) {\n        context.miterLimit = styles.miterLimit!;\n      }\n\n      if (styles.lineCap) {\n        context.lineCap = styles.lineCap;\n      }\n\n      if (styles.lineJoin) {\n        context.lineJoin = styles.lineJoin;\n      }\n\n      context.fillStyle = styles.fill || \"transparent\";\n\n      if (styles.lineDash) {\n        context.setLineDash(styles.lineDash);\n      }\n    }\n  }\n\n  /**\n   * 计算缩放比例\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  private static calculateScale(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): TransformScale {\n    const imageRatio = videoSize.width / videoSize.height;\n    const viewRatio = canvasSize.width / canvasSize.height;\n    const isAspectFit = contentMode === PLAYER_CONTENT_MODE.ASPECT_FIT;\n    const shouldUseWidth =\n      (imageRatio >= viewRatio && isAspectFit) ||\n      (imageRatio <= viewRatio && !isAspectFit);\n    const createTransform = (\n      scale: number,\n      translateX: number,\n      translateY: number\n    ) => ({\n      scaleX: scale,\n      scaleY: scale,\n      translateX,\n      translateY,\n    });\n\n    if (shouldUseWidth) {\n      const scale = canvasSize.width / videoSize.width;\n\n      return createTransform(\n        scale,\n        0,\n        (canvasSize.height - videoSize.height * scale) / 2\n      );\n    }\n\n    const scale = canvasSize.height / videoSize.height;\n\n    return createTransform(\n      scale,\n      (canvasSize.width - videoSize.width * scale) / 2,\n      0\n    );\n  }\n\n  private readonly pointPool: PointPool = new PointPool();\n\n  private currentPoint: CurrentPoint;\n\n  private lastResizeKey = \"\";\n\n  private globalTransform?: PlatformVideo.Transform = undefined;\n\n  constructor(private context: PlatformRenderingContext2D | null) {\n    this.currentPoint = this.pointPool.acquire();\n  }\n\n  private setTransform(transform?: PlatformVideo.Transform): void {\n    if (transform && this.context) {\n      this.context!.transform(\n        transform.a,\n        transform.b,\n        transform.c,\n        transform.d,\n        transform.tx,\n        transform.ty\n      );\n    }\n  }\n\n  private drawBezier(\n    d?: string,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context, pointPool } = this;\n    this.currentPoint = pointPool.acquire();\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n    context!.beginPath();\n\n    if (d) {\n      // 使用状态机解析器替代正则表达式\n      const commands = Renderer2D.parseSVGPath(d);\n\n      for (const { command, args } of commands) {\n        if (Renderer2D.SVG_PATH.has(command)) {\n          this.drawBezierElement(\n            this.currentPoint,\n            command,\n            args.split(/[\\s,]+/).filter(Boolean)\n          );\n        }\n      }\n    }\n\n    Renderer2D.fillOrStroke(context!, styles);\n    pointPool.release(this.currentPoint);\n    context!.restore();\n  }\n\n  private drawBezierElement(\n    currentPoint: CurrentPoint,\n    method: string,\n    args: string[]\n  ): void {\n    const { context } = this;\n\n    switch (method) {\n      case \"M\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"m\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"L\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"l\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"H\":\n        currentPoint.x = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"h\":\n        currentPoint.x += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"V\":\n        currentPoint.y = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"v\":\n        currentPoint.y += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"C\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x2 = +args[2];\n        currentPoint.y2 = +args[3];\n        currentPoint.x = +args[4];\n        currentPoint.y = +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"c\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x2 = currentPoint.x + +args[2];\n        currentPoint.y2 = currentPoint.y + +args[3];\n        currentPoint.x += +args[4];\n        currentPoint.y += +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"S\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = +args[0];\n          currentPoint.y2 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = +args[0];\n          currentPoint.y1 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"s\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = currentPoint.x + +args[0];\n          currentPoint.y2 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = currentPoint.x + +args[0];\n          currentPoint.y1 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"Q\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x = +args[2];\n        currentPoint.y = +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"q\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x += +args[2];\n        currentPoint.y += +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        context!.closePath();\n        break;\n    }\n  }\n\n  private drawEllipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    x -= radiusX;\n    y -= radiusY;\n\n    const w = radiusX * 2;\n    const h = radiusY * 2;\n    const kappa = 0.5522848;\n    const ox = (w / 2) * kappa;\n    const oy = (h / 2) * kappa;\n    const xe = x + w;\n    const ye = y + h;\n    const xm = x + w / 2;\n    const ym = y + h / 2;\n\n    context!.beginPath();\n    context!.moveTo(x, ym);\n    context!.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    context!.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    context!.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    context!.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawRect(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    cornerRadius: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    let radius = cornerRadius;\n\n    if (width < 2 * radius) {\n      radius = width / 2;\n    }\n\n    if (height < 2 * radius) {\n      radius = height / 2;\n    }\n\n    context!.beginPath();\n    context!.moveTo(x + radius, y);\n    context!.arcTo(x + width, y, x + width, y + height, radius);\n    context!.arcTo(x + width, y + height, x, y + height, radius);\n    context!.arcTo(x, y + height, x, y, radius);\n    context!.arcTo(x, y, x + width, y, radius);\n    context!.closePath();\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawShape(shape: PlatformVideo.VideoFrameShape): void {\n    const { type, path, transform, styles } = shape;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE.SHAPE:\n        this.drawBezier(path.d, transform, styles);\n        break;\n      case PlatformVideo.SHAPE_TYPE.ELLIPSE:\n        this.drawEllipse(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.radiusX ?? 0,\n          path.radiusY ?? 0,\n          transform,\n          styles\n        );\n        break;\n      case PlatformVideo.SHAPE_TYPE.RECT:\n        this.drawRect(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.width ?? 0,\n          path.height ?? 0,\n          path.cornerRadius ?? 0,\n          transform,\n          styles\n        );\n        break;\n    }\n  }\n\n  private drawSprite(\n    frame: PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame,\n    bitmap?: Bitmap,\n    dynamicElement?: Bitmap\n  ): void {\n    if (frame.alpha === 0) return;\n\n    const { context } = this;\n    const { alpha, transform, layout, shapes } =\n      frame as PlatformVideo.VideoFrame;\n    const { a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0 } = transform ?? {};\n\n    context!.save();\n    this.setTransform(this.globalTransform);\n    context!.globalAlpha = alpha;\n    context!.transform(a, b, c, d, tx, ty);\n\n    if (bitmap) {\n      context!.drawImage(\n        bitmap as CanvasImageSource,\n        0,\n        0,\n        layout.width,\n        layout.height\n      );\n    }\n\n    if (dynamicElement) {\n      context!.drawImage(\n        dynamicElement as CanvasImageSource,\n        (layout.width - dynamicElement.width) / 2,\n        (layout.height - dynamicElement.height) / 2\n      );\n    }\n\n    for (let i = 0; i < shapes.length; i++) {\n      this.drawShape(shapes[i]);\n    }\n\n    context!.restore();\n  }\n\n  /**\n   * 调整画布尺寸\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  public resize(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): void {\n    const { width: canvasWidth, height: canvasHeight } = canvasSize;\n    const { width: videoWidth, height: videoHeight } = videoSize;\n    const resizeKey = `${contentMode}-${videoWidth}-${videoHeight}-${canvasWidth}-${canvasHeight}`;\n    const lastTransform = this.globalTransform;\n\n    if (this.lastResizeKey === resizeKey && lastTransform) {\n      return;\n    }\n\n    let scale: TransformScale = {\n      scaleX: 1,\n      scaleY: 1,\n      translateX: 0,\n      translateY: 0,\n    };\n\n    if (contentMode === PLAYER_CONTENT_MODE.FILL) {\n      scale.scaleX = canvasWidth / videoWidth;\n      scale.scaleY = canvasHeight / videoHeight;\n    } else {\n      scale = Renderer2D.calculateScale(contentMode, videoSize, canvasSize);\n    }\n\n    this.lastResizeKey = resizeKey;\n    this.globalTransform = {\n      a: scale.scaleX,\n      b: 0.0,\n      c: 0.0,\n      d: scale.scaleY,\n      tx: scale.translateX,\n      ty: scale.translateY,\n    };\n  }\n\n  public render(\n    videoEntity: PlatformVideo.Video,\n    materials: Map<string, Bitmap>,\n    dynamicMaterials: Map<string, Bitmap>,\n    currentFrame: number,\n    head: number,\n    tail: number\n  ): void {\n    let sprite: PlatformVideo.VideoSprite;\n    let imageKey: string;\n    let bitmap: Bitmap | undefined;\n    let dynamicElement: Bitmap | undefined;\n\n    for (let i = head; i < tail; i++) {\n      sprite = videoEntity.sprites[i];\n      imageKey = sprite.imageKey;\n      bitmap = materials.get(imageKey);\n      dynamicElement = dynamicMaterials.get(imageKey);\n\n      this.drawSprite(sprite.frames[currentFrame], bitmap, dynamicElement);\n    }\n  }\n\n  public destroy() {\n    this.globalTransform = undefined;\n    this.lastResizeKey = \"\";\n    this.context = null;\n  }\n}\n","import { platform } from \"../../platform\";\n\n/**\n * 动画控制器\n */\nexport class Animator {\n  /**\n   * 动画是否执行\n   */\n  private isRunning = false;\n  /**\n   * 动画开始时间\n   */\n  private startTime = 0;\n  /**\n   * 动画持续时间\n   */\n  private duration: number = 0;\n  /**\n   * 循环播放开始帧与动画开始帧之间的时间偏差\n   */\n  private loopStart: number = 0;\n  /**\n   * 动画暂停时的时间偏差\n   */\n  private pauseTime: number = 0;\n  /**\n   * 循环持续时间\n   */\n  private loopDuration: number = 0;\n\n  public onAnimate: (callback: () => void) => number = platform.noop<number>;\n\n  /* ---- 事件钩子 ---- */\n  public onStart: () => void = platform.noop;\n  public onUpdate: (timePercent: number) => void = platform.noop;\n  public onEnd: () => void = platform.noop;\n\n  /**\n   * 设置动画的必要参数\n   * @param duration\n   * @param loopStart\n   * @param loop\n   * @param fillValue\n   */\n  public setConfig(\n    duration: number,\n    loopStart: number,\n    loop: number,\n    fillValue: number\n  ) {\n    this.duration = duration;\n    this.loopStart = loopStart;\n    this.loopDuration = duration * loop + fillValue - loopStart;\n  }\n\n  public start(): void {\n    this.isRunning = true;\n    this.startTime = platform.now();\n    this.pauseTime = 0;\n    this.onStart();\n    this.doFrame();\n  }\n\n  public resume(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = true;\n    this.doFrame();\n    return true;\n  }\n\n  public pause(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = false;\n    // 设置暂停的位置\n    this.pauseTime =\n      (platform.now() - this.startTime) % this.duration;\n    return true;\n  }\n\n  public stop(): void {\n    this.isRunning = false;\n    this.startTime = 0;\n  }\n\n  private doFrame(): void {\n    if (this.isRunning) {\n      this.doDeltaTime(platform.now() - this.startTime);\n      if (this.isRunning) {\n        this.onAnimate(() => this.doFrame());\n      }\n    }\n  }\n\n  private doDeltaTime(deltaTime: number): void {\n    const { duration, loopStart, pauseTime, loopDuration } = this;\n    // 本轮动画已消耗的时间比例（Percentage of speed time）\n    let percent: number;\n    let ended = false;\n\n    // 运行时间 大于等于 循环持续时间\n    if (deltaTime >= loopDuration) {\n      // 动画已结束\n      percent = 1.0;\n      ended = true;\n      this.stop();\n    } else {\n      // 本轮动画已消耗的时间比例 = 本轮动画已消耗的时间 / 动画持续时间\n      percent = ((deltaTime + loopStart + pauseTime) % duration) / duration;\n    }\n\n    this.onUpdate(percent);\n    if (!this.isRunning && ended) {\n      this.onEnd();\n    }\n  }\n}\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\n\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n\n// fixed length extra bits\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n\n// fixed distance extra bits\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n\n// code length index map\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n// get base, reverse index map from extra bits\nconst freb = (eb: Uint8Array, start: number) => {\n  const b = new u16(31);\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  }\n  // numbers here are at max 18 bits\n  const r = new i32(b[30]);\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = ((j - b[i]) << 5) | i;\n    }\n  }\n  return { b, r };\n}\n\nconst { b: fl, r: revfl } = freb(fleb, 2);\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nconst { b: fd, r: revfd } = freb(fdeb, 0);\n\n// map of value to reverse (assuming 16 bits)\nconst rev = new u16(32768);\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n  x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n  x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n  rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nconst hMap = ((cd: Uint8Array, mb: number, r: 0 | 1) => {\n  const s = cd.length;\n  // index\n  let i = 0;\n  // u16 \"map\": index -> # of codes with bit length = index\n  const l = new u16(mb);\n  // length of cd must be 288 (total # of codes)\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  }\n  // u16 \"map\": index -> minimum code for bit length = index\n  const le = new u16(mb);\n  for (i = 1; i < mb; ++i) {\n    le[i] = (le[i - 1] + l[i - 1]) << 1;\n  }\n  let co: Uint16Array;\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb);\n    // bits to remove for reverser\n    const rvb = 15 - mb;\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = (i << 4) | cd[i];\n        // free bits\n        const r = mb - cd[i];\n        // start value\n        let v = le[cd[i] - 1]++ << r;\n        // m is end value\n        for (const m = v | ((1 << r) - 1); v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n      }\n    }\n  }\n  return co;\n});\n\n// fixed length tree\nconst flt = new u8(288);\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\nfor (let i = 280; i < 288; ++i) flt[i] = 8;\n// fixed distance tree\nconst fdt = new u8(32);\nfor (let i = 0; i < 32; ++i) fdt[i] = 5;\n// fixed length map\nconst flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nconst fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n\n// find max of array\nconst max = (a: Uint8Array | number[]) => {\n  let m = a[0];\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n  return m;\n};\n\n// read d, starting at bit p and mask with m\nconst bits = (d: Uint8Array, p: number, m: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n}\n\n// read d, starting at bit p continuing for at least 16 bits\nconst bits16 = (d: Uint8Array, p: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n}\n\n// get end of byte\nconst shft = (p: number) => ((p + 7) / 8) | 0;\n\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nconst slc = (v: Uint8Array, s: number, e?: number) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length;\n  // can't use .constructor in case user-supplied\n  return new u8(v.subarray(s, e));\n}\n\n// inflate state\ntype InflateState = {\n  // lmap\n  l?: Uint16Array;\n  // dmap\n  d?: Uint16Array;\n  // lbits\n  m?: number;\n  // dbits\n  n?: number;\n  // final\n  f?: number;\n  // pos\n  p?: number;\n  // byte\n  b?: number;\n  // lstchk\n  i: number;\n};\n\n// error codes\nconst ec = [\n  'unexpected EOF',\n  'invalid block type',\n  'invalid length/literal',\n  'invalid distance',\n  'stream finished',\n  'no stream handler',\n  , // determined by compression function\n  'no callback',\n  'invalid UTF-8 data',\n  'extra field too long',\n  'date not in range 1980-2099',\n  'filename too long',\n  'stream finishing',\n  'invalid zip data'\n  // determined by unknown compression method\n];\n\n/**\n * An error generated within this library\n */\nexport interface FlateError extends Error {\n  /**\n   * The code associated with this error\n   */\n  code: number;\n};\n\nconst err = (ind: number, msg?: string | 0, nt?: 1) => {\n  const e: Partial<FlateError> = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e as FlateError;\n}\n\n// expands raw DEFLATE data\nconst inflt = (dat: Uint8Array, st: InflateState, buf?: Uint8Array, dict?: Uint8Array) => {\n  // source length       dict length\n  const sl = dat.length, dl = dict ? dict.length : 0;\n  if (!sl || st.f && !st.l) return buf || new u8(0);\n  const noBuf = !buf;\n  // have to estimate size\n  const resize = noBuf || st.i != 2;\n  // no state\n  const noSt = st.i;\n  // Assumes roughly 33% compression ratio average\n  if (noBuf) buf = new u8(sl * 3);\n  // ensure buffer can fit at least l elements\n  const cbuf = (l: number) => {\n    let bl = buf!.length;\n    // need to increase size to fit\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf!);\n      buf = nbuf;\n    }\n  };\n  //  last chunk         bitpos           bytes\n  let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n  // total bits\n  const tbts = sl * 8;\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1);\n      // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        }\n        // ensure size\n        if (resize) cbuf(bt + l);\n        // Copy over uncompressed data\n        buf!.set(dat.subarray(s, t), bt);\n        // Get new bitpos, update byte count\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      }\n      else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n      else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14;\n        // length+distance tree\n        const ldt = new u8(tl);\n        // code length tree\n        const clt = new u8(19);\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n        pos += hcLen * 3;\n        // code lengths bits\n        const clb = max(clt), clbmsk = (1 << clb) - 1;\n        // code lengths map\n        const clm = hMap(clt, clb, 1);\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)];\n          // bits read\n          pos += r & 15;\n          // symbol\n          const s = r >> 4;\n          // code length to copy\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0, n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n            else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;\n            else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n            while (n--) ldt[i++] = c;\n          }\n        }\n        //    length tree                 distance tree\n        const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n        // max length bits\n        lbt = max(lt)\n        // max dist bits\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    }\n    // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17\n    if (resize) cbuf(bt + 131072);\n    const lms = (1 << lbt!) - 1, dms = (1 << dbt!) - 1;\n    let lpos = pos;\n    for (;; lpos = pos) {\n      // bits read, code\n      const c = lm![bits16(dat, pos) & lms], sym = c >> 4;\n      pos += c & 15;\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n      if (!c) err(2);\n      if (sym < 256) buf![bt++] = sym;\n      else if (sym == 256) {\n        lpos = pos, lm = undefined;\n        break;\n      } else {\n        let add = sym - 254;\n        // no extra bits needed if less\n        if (sym > 264) {\n          // index\n          const i = sym - 257, b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        }\n        // dist\n        const d = dm![bits16(dat, pos) & dms], dsym = d >> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        let dt = fd[dsym];\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n        if (resize) cbuf(bt + 131072);\n        const end = bt + add;\n        if (bt < dt) {\n          const shift = dl - dt, dend = Math.min(dt, end);\n          if (shift + bt < 0) err(3);\n          for (; bt < dend; ++bt) buf![bt] = dict![shift + bt];\n        }\n        for (; bt < end; ++bt) buf![bt] = buf![bt - dt];\n      }\n    }\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final)\n  // don't reallocate for streams or user buffers\n  return bt != buf!.length && noBuf ? slc(buf!, 0, bt) : buf!.subarray(0, bt);\n}\n\n// starting at p, write the minimum number of bits that can hold v to d\nconst wbits = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n}\n\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nconst wbits16 = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n  d[o + 2] |= v >> 16;\n}\n\ntype HuffNode = {\n  // symbol\n  s: number;\n  // frequency\n  f: number;\n  // left child\n  l?: HuffNode;\n  // right child\n  r?: HuffNode;\n};\n\n// creates code lengths from a frequency table\nconst hTree = (d: Uint16Array, mb: number) => {\n  // Need extra info to make a tree\n  const t: HuffNode[] = [];\n  for (let i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({ s: i, f: d[i] });\n  }\n  const s = t.length;\n  const t2 = t.slice();\n  if (!s) return { t: et, l: 0 };\n  if (s == 1) {\n    const v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return { t: v, l: 1 };\n  }\n  t.sort((a, b) => a.f - b.f);\n  // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n  t.push({ s: -1, f: 25001 });\n  let l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n  t[0] = { s: -1, f: l.f + r.f, l, r };\n  // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = { s: -1, f: l.f + r.f, l, r };\n  }\n  let maxSym = t2[0].s;\n  for (let i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  }\n  // code lengths\n  const tr = new u16(maxSym + 1);\n  // max bits in tree\n  let mbt = ln(t[i1 - 1], tr, 0);\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    let i = 0, dt = 0;\n    //    left            cost\n    const lft = mbt - mb, cst = 1 << lft;\n    t2.sort((a, b) => tr[b.s] - tr[a.s] || a.f - b.f);\n    for (; i < s; ++i) {\n      const i2 = t2[i].s;\n      if (tr[i2] > mb) {\n        dt += cst - (1 << (mbt - tr[i2]));\n        tr[i2] = mb;\n      } else break;\n    }\n    dt >>= lft;\n    while (dt > 0) {\n      const i2 = t2[i].s;\n      if (tr[i2] < mb) dt -= 1 << (mb - tr[i2]++ - 1);\n      else ++i;\n    }\n    for (; i >= 0 && dt; --i) {\n      const i2 = t2[i].s;\n      if (tr[i2] == mb) {\n        --tr[i2];\n        ++dt;\n      }\n    }\n    mbt = mb;\n  }\n  return { t: new u8(tr), l: mbt };\n}\n// get the max length and assign length codes\nconst ln = (n: HuffNode, l: Uint16Array, d: number): number => {\n  return n.s == -1\n    ? Math.max(ln(n.l!, l, d + 1), ln(n.r!, l, d + 1))\n    : (l[n.s] = d);\n}\n\n// length codes generation\nconst lc = (c: Uint8Array) => {\n  let s = c.length;\n  // Note that the semicolon was intentional\n  while (s && !c[--s]);\n  const cl = new u16(++s);\n  //  ind      num         streak\n  let cli = 0, cln = c[0], cls = 1;\n  const w = (v: number) => { cl[cli++] = v; }\n  for (let i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s)\n      ++cls;\n    else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n        if (cls > 2) {\n          w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n        for (; cls > 6; cls -= 6) w(8304);\n        if (cls > 2) w(((cls - 3) << 5) | 8208), cls = 0;\n      }\n      while (cls--) w(cln);\n      cls = 1;\n      cln = c[i];\n    }\n  }\n  return { c: cl.subarray(0, cli), n: s };\n}\n\n// calculate the length of output from tree, code lengths\nconst clen = (cf: Uint16Array, cl: Uint8Array) => {\n  let l = 0;\n  for (let i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n  return l;\n}\n\n// writes a fixed block\n// returns the new bit pos\nconst wfblk = (out: Uint8Array, pos: number, dat: Uint8Array) => {\n  // no need to write 00 as type: TypedArray defaults to 0\n  const s = dat.length;\n  const o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n  for (let i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n  return (o + 4 + s) * 8;\n}\n\n// writes a block\nconst wblk = (dat: Uint8Array, out: Uint8Array, final: number, syms: Int32Array, lf: Uint16Array, df: Uint16Array, eb: number, li: number, bs: number, bl: number, p: number) => {\n  wbits(out, p++, final);\n  ++lf[256];\n  const { t: dlt, l: mlb } = hTree(lf, 15);\n  const { t: ddt, l: mdb } = hTree(df, 15);\n  const { c: lclt, n: nlc } = lc(dlt);\n  const { c: lcdt, n: ndc } = lc(ddt);\n  const lcfreq = new u16(19);\n  for (let i = 0; i < lclt.length; ++i) ++lcfreq[lclt[i] & 31];\n  for (let i = 0; i < lcdt.length; ++i) ++lcfreq[lcdt[i] & 31];\n  const { t: lct, l: mlcb } = hTree(lcfreq, 7);\n  let nlcc = 19;\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n  const flen = (bl + 5) << 3;\n  const ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  const dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n  if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  let lm: Uint16Array, ll: Uint8Array, dm: Uint16Array, dl: Uint8Array;\n  wbits(out, p, 1 + (dtlen < ftlen as unknown as number)), p += 2;\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    const llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n    for (let i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n    p += 3 * nlcc;\n    const lcts = [lclt, lcdt];\n    for (let it = 0; it < 2; ++it) {\n      const clct = lcts[it];\n      for (let i = 0; i < clct.length; ++i) {\n        const len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n  for (let i = 0; i < li; ++i) {\n    const sym = syms[i];\n    if (sym > 255) {\n      const len = (sym >> 18) & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n      const dst = sym & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[sym]), p += ll[sym];\n    }\n  }\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n}\n\n// deflate options (nice << 13) | chain\nconst deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n\n// empty\nconst et = /*#__PURE__*/new u8(0);\n\ntype DeflateState = {\n  // head\n  h?: Uint16Array;\n  // prev\n  p?: Uint16Array;\n  // index\n  i?: number;\n  // end index\n  z?: number;\n  // wait index\n  w?: number;\n  // remainder byte info\n  r?: number;\n  // last chunk\n  l: number;\n};\n\n// compresses data into a raw DEFLATE buffer\nconst dflt = (dat: Uint8Array, lvl: number, plvl: number, pre: number, post: number, st: DeflateState) => {\n  const s = st.z || dat.length;\n  const o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n  // writing to this writes to the output buffer\n  const w = o.subarray(pre, o.length - post);\n  const lst = st.l;\n  let pos = (st.r || 0) & 7;\n  if (lvl) {\n    if (pos) w[0] = st.r! >> 3;\n    const opt = deo[lvl - 1];\n    const n = opt >> 13, c = opt & 8191;\n    const msk = (1 << plvl) - 1;\n    //    prev 2-byte val map    curr 2-byte val map\n    const prev = st.p || new u16(32768), head = st.h || new u16(msk + 1);\n    const bs1 = Math.ceil(plvl / 3), bs2 = 2 * bs1;\n    const hsh = (i: number) => (dat[i] ^ (dat[i + 1] << bs1) ^ (dat[i + 2] << bs2)) & msk;\n    // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n    const syms = new i32(25000);\n    // length/literal freq   distance freq\n    const lf = new u16(288), df = new u16(32);\n    //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n    let lc = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n    for (; i + 2 < s; ++i) {\n      // hash value\n      const hv = hsh(i);\n      // index mod 32768    previous index mod\n      let imod = i & 32767, pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod;\n      // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n      if (wi <= i) {\n        // bytes remaining\n        const rem = s - i;\n        if ((lc > 7000 || li > 24576) && (rem > 423 || !lst)) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc = eb = 0, bs = i;\n          for (let j = 0; j < 286; ++j) lf[j] = 0;\n          for (let j = 0; j < 30; ++j) df[j] = 0;\n        }\n        //  len    dist   chain\n        let l = 2, d = 0, ch = c, dif = imod - pimod & 32767;\n        if (rem > 2 && hv == hsh(i - dif)) {\n          const maxn = Math.min(n, rem) - 1;\n          const maxd = Math.min(32767, i);\n          // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n          const ml = Math.min(258, rem);\n          while (dif <= maxd && --ch && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              let nl = 0;\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n              if (nl > l) {\n                l = nl, d = dif;\n                // break out early when we reach \"nice\" (we are satisfied enough)\n                if (nl > maxn) break;\n                // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n                const mmd = Math.min(dif, nl - 2);\n                let md = 0;\n                for (let j = 0; j < mmd; ++j) {\n                  const ti = i - dif + j & 32767;\n                  const pti = prev[ti];\n                  const cd = ti - pti & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            }\n            // check the previous match\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod & 32767;\n          }\n        }\n        // d will be nonzero only when a match was found\n        if (d) {\n          // store both dist and len data in one int32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n          const lin = revfl[l] & 31, din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n    for (i = Math.max(i, wi); i < s; ++i) {\n      syms[li++] = dat[i];\n      ++lf[dat[i]];\n    }\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n    if (!lst) {\n      st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n      // shft(pos) now 1 less if pos & 7 != 0\n      pos -= 7;\n      st.h = head, st.p = prev, st.i = i, st.w = wi;\n    }\n  } else {\n    for (let i = st.w || 0; i < s + lst; i += 65535) {\n      // end\n      let e = i + 65535;\n      if (e >= s) {\n        // write final block\n        w[(pos / 8) | 0] = lst;\n        e = s;\n      }\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n    st.i = s;\n  }\n  return slc(o, 0, pre + shft(pos) + post);\n}\n\n// crc check\ntype CRCV = {\n  p(d: Uint8Array): void;\n  d(): number;\n};\n\n// Adler32\nconst adler = (): CRCV => {\n  let a = 1, b = 0;\n  return {\n    p(d) {\n      // closures have awful performance\n      let n = a, m = b;\n      const l = d.length | 0;\n      for (let i = 0; i != l;) {\n        const e = Math.min(i + 2655, l);\n        for (; i < e; ++i) m += n += d[i];\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n      a = n, b = m;\n    },\n    d() {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n    }\n  }\n}\n\n/**\n * Options for compressing data into a DEFLATE format\n */\nexport interface DeflateOptions {\n  /**\n   * The level of compression to use, ranging from 0-9.\n   * \n   * 0 will store the data without compression.\n   * 1 is fastest but compresses the worst, 9 is slowest but compresses the best.\n   * The default level is 6.\n   * \n   * Typically, binary data benefits much more from higher values than text data.\n   * In both cases, higher values usually take disproportionately longer than the reduction in final size that results.\n   * \n   * For example, a 1 MB text file could:\n   * - become 1.01 MB with level 0 in 1ms\n   * - become 400 kB with level 1 in 10ms\n   * - become 320 kB with level 9 in 100ms\n   */\n  level?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;\n  /**\n   * The memory level to use, ranging from 0-12. Increasing this increases speed and compression ratio at the cost of memory.\n   * \n   * Note that this is exponential: while level 0 uses 4 kB, level 4 uses 64 kB, level 8 uses 1 MB, and level 12 uses 16 MB.\n   * It is recommended not to lower the value below 4, since that tends to hurt performance.\n   * In addition, values above 8 tend to help very little on most data and can even hurt performance.\n   * \n   * The default value is automatically determined based on the size of the input data.\n   */\n  mem?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n  /**\n   * A buffer containing common byte sequences in the input data that can be used to significantly improve compression ratios.\n   * \n   * Dictionaries should be 32kB or smaller and include strings or byte sequences likely to appear in the input.\n   * The decompressor must supply the same dictionary as the compressor to extract the original data.\n   * \n   * Dictionaries only improve aggregate compression ratio when reused across multiple small inputs. They should typically not be used otherwise.\n   * \n   * Avoid using dictionaries with GZIP and ZIP to maximize software compatibility.\n   */\n  dictionary?: Uint8Array;\n};\n\n/**\n * Options for compressing data into a Zlib format\n */\nexport interface ZlibOptions extends DeflateOptions {}\n\n/**\n * Options for decompressing DEFLATE data\n */\nexport interface InflateOptions {\n  /**\n   * The dictionary used to compress the original data. If no dictionary was used during compression, this option has no effect.\n   * \n   * Supplying the wrong dictionary during decompression usually yields corrupt output or causes an invalid distance error.\n   */\n  dictionary?: Uint8Array;\n  /**\n   * The buffer into which to write the decompressed data. Saves memory if you know the decompressed size in advance.\n   * \n   * Note that if the decompression result is larger than the size of this buffer, it will be truncated to fit.\n   */\n  out?: Uint8Array;\n}\n\n/**\n * Options for decompressing Zlib data\n */\nexport interface UnzlibOptions extends InflateOptions {}\n\n// deflate with opts\nconst dopt = (dat: Uint8Array, opt: DeflateOptions, pre: number, post: number, st?: DeflateState) => {\n  if (!st) {\n    st = { l: 1 };\n    if (opt.dictionary) {\n      const dict = opt.dictionary.subarray(-32768);\n      const newDat = new u8(dict.length + dat.length);\n      newDat.set(dict);\n      newDat.set(dat, dict.length);\n      dat = newDat;\n      st.w = dict.length;\n    }\n  }\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n}\n\n// write bytes\nconst wbytes = (d: Uint8Array, b: number, v: number) => {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n}\n\n// zlib header\nconst zlh = (c: Uint8Array, o: ZlibOptions) => {\n  const lv = o.level ?? 0, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = (fl << 6) | ((o.dictionary ?? 0) && 32);\n  c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n  if (o.dictionary) {\n    const h = adler();\n    h.p(o.dictionary);\n    wbytes(c, 2, h.d());\n  }\n}\n\n// zlib start\nconst zls = (d: Uint8Array, dict?: unknown) => {\n  if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31)) err(6, 'invalid zlib data');\n  if ((d[1] >> 5 & 1) == +!dict) err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n  return (d[1] >> 3 & 4) + 2;\n}\n\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data: Uint8Array, opts: ZlibOptions = {}) {\n  const a = adler();\n  a.p(data);\n  const d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data: Uint8Array, opts: UnzlibOptions = {}) {\n  return inflt(data.subarray(zls(data, opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n","import { platform } from \"../../platform\";\n\nexport class CRC32 {\n  // CRC32 Table 初始化\n  private static table = Uint32Array.from(Array(256), (_, i) => {\n    let c = i;\n\n    for (let j = 0; j < 8; j++) {\n      c = (c & 1) ? (0xedb88320 ^ (c >>> 1)) : (c >>> 1);\n    }\n\n    return c >>> 0;\n  });\n\n  private static WHITE_COLOR: number = 0xffffffff;\n\n  private readonly caches = new Map<string, number>();\n\n  calculate(buff: Uint8Array): number {\n    if (!(buff instanceof Uint8Array)) {\n      throw new TypeError('Input must be a Uint8Array');\n    }\n\n    const { caches } = this;\n    const key = platform.decode.bytesToString(buff);\n  \n    if (caches.has(key)) {\n      return caches.get(key)!;\n    }\n\n    let crc = CRC32.WHITE_COLOR;\n    // 使用位运算优化\n    for (let i = 0; i < buff.length; i++) {\n      crc = (crc >>> 8) ^ CRC32.table[(crc ^ buff[i]) & 0xff];\n    }\n\n    caches.set(key, (crc ^ CRC32.WHITE_COLOR) >>> 0);\n\n    return caches.get(key) as number;\n  }\n\n  clear(){\n    this.caches.clear();\n  }\n}","// import { zlibSync } from \"fflate\";\nimport { zlibSync } from \"../zlib\";\nimport { CRC32 } from \"./crc\";\n\nexport class PNGEncoder {\n  private readonly view: DataView;\n\n  private crc32 = new CRC32();\n\n  constructor(private readonly width: number, private readonly height: number) {\n    this.view = new DataView(new ArrayBuffer(4 * width * height));\n  }\n\n  private createChunk(type: string, data: Uint8Array): Uint8Array {\n    // 长度（4字节，大端序）\n    const length = new Uint8Array(4);\n    new DataView(length.buffer).setUint32(0, data.length, false);\n\n    // 块类型（4字节， ASCII）\n    const chunkType = Uint8Array.from(type, c => c.charCodeAt(0));\n\n    // 计算 CRC32 校验（类型 + 数据）\n    const partialChunk = new Uint8Array(chunkType.length + data.length);\n    partialChunk.set(chunkType);\n    partialChunk.set(data, chunkType.length);\n    \n    const crc = new Uint8Array(4);\n    new DataView(crc.buffer).setUint32(0, this.crc32.calculate(partialChunk) >>> 0, false);\n\n    // 汇总成完整的chunk数据\n    const result = new Uint8Array(length.length + partialChunk.length + crc.length);\n    result.set(length);\n    result.set(partialChunk, length.length);\n    result.set(crc, length.length + partialChunk.length);\n\n    return result;\n  }\n\n  private createIHDRChunk(): Uint8Array {\n    const ihdrData = new Uint8Array(13);\n    const view = new DataView(ihdrData.buffer);\n\n    // 宽度\n    view.setUint32(0, this.width, false);\n    // 高度\n    view.setUint32(4, this.height, false);\n    // 位深度\n    view.setUint8(8, 8);\n    // 颜色类型\n    view.setUint8(9, 6);\n    // 压缩方法\n    view.setUint8(10, 0);\n    // 过滤器方法\n    view.setUint8(11, 0);\n    // 交错方法\n    view.setUint8(12, 0);\n\n    return this.createChunk(\"IHDR\", ihdrData);\n  }\n\n  private createIDATChunk(): Uint8Array {\n    const { width, height } = this;\n    const validRowSize = width * 4;\n    // 每行开头添加一位过滤头数据\n    const rowSize = validRowSize + 1;\n    const data = new Uint8Array(rowSize * height);\n    // 将Uint32数据转换为Uint8数据\n    const pixelsData = new Uint8Array(this.view.buffer);\n    let startIdx: number;\n    let srcStart: number;\n\n    for (let y = 0; y < height; y++) {\n      startIdx = y * rowSize;\n      data[startIdx] = 0x00; // 过滤头\n      // ✅ 复制预先转换好的 RGBA 数据\n      srcStart = y * validRowSize; // Uint32 => 每个元素占 4 字节\n      data.set(pixelsData.subarray(srcStart, srcStart + validRowSize), startIdx + 1);\n    }\n\n    // 使用 zlib 进行压缩, 平衡压缩率有利于提升文件生成速度\n    return this.createChunk(\"IDAT\", zlibSync(data));\n  }\n\n  public setPixel(x: number, y: number, pixel: number): void {\n    this.view.setUint32((y * this.width + x) * 4, pixel, false);\n  }\n\n  public write(pixels: Uint8Array | Uint8ClampedArray): this {\n    const { width, height } = this;\n    let pos: number;\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    let pixel: number;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        pos = (y * width + x) * 4;\n        r = pixels[pos];\n        g = pixels[pos + 1];\n        b = pixels[pos + 2];\n        a = pixels[pos + 3];\n        pixel = ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n        this.setPixel(x, y, pixel);\n      }\n    }\n\n    return this;\n  }\n\n  public flush(): Uint8Array {\n    // 预先创建所有块\n    const iHDRChunk = this.createIHDRChunk();\n    const iDATChunk = this.createIDATChunk();\n    const iENDChunk = this.createChunk(\"IEND\", new Uint8Array(0));\n    \n    // 一次性分配内存（直接计算总大小）\n    const pngData = new Uint8Array(8 + iHDRChunk.length + iDATChunk.length + iENDChunk.length);\n    \n    /* ------ 按顺序写入数据 ------ */\n\n    // 1. 写入文件头（固定 8 字节）\n    let offset = 0;\n    pngData.set(new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]), offset);\n    // 2. 写入IHDR块\n    offset += 8;\n    pngData.set(iHDRChunk, offset);\n    // 3. 写入IDAT块\n    offset += iHDRChunk.length;\n    pngData.set(iDATChunk, offset);\n    // 4. 写入IEND块\n    offset += iDATChunk.length;\n    pngData.set(iENDChunk, offset);\n    \n    /* ------ 清空 CRC32 缓存 ------ */\n    this.crc32.clear();\n\n    return pngData;\n  }\n}\n","// ---------------------------------------------------------------------\n// qrBitBuffer\n// ---------------------------------------------------------------------\n\nexport class BitBuffer {\n  public buffer: number[] = [];\n\n  public lengthInBits = 0;\n\n  public getAt(i: number): boolean {\n    const bufIndex = ~~(i / 8);\n\n    return ((this.buffer[bufIndex] >>> (7 - (i % 8))) & 1) === 1;\n  }\n\n  public put(num: number, length: number): void {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  public putBit(bit: boolean): void {\n    const { lengthInBits: len, buffer } = this;\n    const bufIndex = ~~(len / 8);\n\n    if (buffer.length <= bufIndex) {\n      buffer.push(0);\n    }\n\n    if (bit) {\n      buffer[bufIndex] |= 0x80 >>> len % 8;\n    }\n\n    this.lengthInBits += 1;\n  }\n}\n","// ---------------------------------------------------------------------\n// QRMode\n// ---------------------------------------------------------------------\n\nexport const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n}\n\n// ---------------------------------------------------------------------\n// QRErrorCorrectLevel\n// ---------------------------------------------------------------------\n\nexport const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n}\n\n// ---------------------------------------------------------------------\n// QRMaskPattern\n// ---------------------------------------------------------------------\n\nexport const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n}\n","// ---------------------------------------------------------------------\n// qr8BitByte\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { QRMode } from \"./constants\";\n\nexport class BitByte {\n  private readonly bytes: number[];\n\n  constructor(data: string) {\n    let parsedData: number[][] = [];\n\n    // Added to support UTF-8 Characters\n    for (let i = 0; i < data.length; i++) {\n      const byteArray: number[] = [];\n      const code = data.charCodeAt(i);\n\n      if (code > 0x10000) {\n        byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n        byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n        byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[3] = 0x80 | (code & 0x3f);\n      } else if (code > 0x800) {\n        byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n        byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[2] = 0x80 | (code & 0x3f);\n      } else if (code > 0x80) {\n        byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n        byteArray[1] = 0x80 | (code & 0x3f);\n      } else {\n        byteArray[0] = code;\n      }\n\n      // Fix Unicode corruption bug\n      parsedData.push(byteArray);\n    }\n\n    this.bytes = parsedData.flat(1);\n\n    const { bytes } = this;\n    if (bytes.length !== data.length) {\n      bytes.unshift(191);\n      bytes.unshift(187);\n      bytes.unshift(239);\n    }\n  }\n\n  public get mode(): number {\n    return QRMode.MODE_8BIT_BYTE;\n  }\n\n  public get length(): number {\n    return this.bytes.length;\n  }\n\n  public write(buff: BitBuffer): void {\n    const { bytes } = this;\n\n    for (let i = 0; i < bytes.length; i++) {\n      buff.put(bytes[i], 8);\n    }\n  }\n}\n","// ---------------------------------------------------------------------\n// QRRSBlock\n// ---------------------------------------------------------------------\n\nimport { QRErrorCorrectLevel } from \"./constants\";\n\nexport interface RSBlockCount {\n  totalCount: number;\n  dataCount: number;\n}\n\nconst RS_BLOCK_TABLE = [\n  [1, 26, 19],\n  [1, 26, 16],\n  [1, 26, 13],\n  [1, 26, 9],\n  [1, 44, 34],\n  [1, 44, 28],\n  [1, 44, 22],\n  [1, 44, 16],\n  [1, 70, 55],\n  [1, 70, 44],\n  [2, 35, 17],\n  [2, 35, 13],\n  [1, 100, 80],\n  [2, 50, 32],\n  [2, 50, 24],\n  [4, 25, 9],\n  [1, 134, 108],\n  [2, 67, 43],\n  [2, 33, 15, 2, 34, 16],\n  [2, 33, 11, 2, 34, 12],\n  [2, 86, 68],\n  [4, 43, 27],\n  [4, 43, 19],\n  [4, 43, 15],\n  [2, 98, 78],\n  [4, 49, 31],\n  [2, 32, 14, 4, 33, 15],\n  [4, 39, 13, 1, 40, 14],\n  [2, 121, 97],\n  [2, 60, 38, 2, 61, 39],\n  [4, 40, 18, 2, 41, 19],\n  [4, 40, 14, 2, 41, 15],\n  [2, 146, 116],\n  [3, 58, 36, 2, 59, 37],\n  [4, 36, 16, 4, 37, 17],\n  [4, 36, 12, 4, 37, 13],\n  [2, 86, 68, 2, 87, 69],\n  [4, 69, 43, 1, 70, 44],\n  [6, 43, 19, 2, 44, 20],\n  [6, 43, 15, 2, 44, 16],\n  [4, 101, 81],\n  [1, 80, 50, 4, 81, 51],\n  [4, 50, 22, 4, 51, 23],\n  [3, 36, 12, 8, 37, 13],\n  [2, 116, 92, 2, 117, 93],\n  [6, 58, 36, 2, 59, 37],\n  [4, 46, 20, 6, 47, 21],\n  [7, 42, 14, 4, 43, 15],\n  [4, 133, 107],\n  [8, 59, 37, 1, 60, 38],\n  [8, 44, 20, 4, 45, 21],\n  [12, 33, 11, 4, 34, 12],\n  [3, 145, 115, 1, 146, 116],\n  [4, 64, 40, 5, 65, 41],\n  [11, 36, 16, 5, 37, 17],\n  [11, 36, 12, 5, 37, 13],\n  [5, 109, 87, 1, 110, 88],\n  [5, 65, 41, 5, 66, 42],\n  [5, 54, 24, 7, 55, 25],\n  [11, 36, 12],\n  [5, 122, 98, 1, 123, 99],\n  [7, 73, 45, 3, 74, 46],\n  [15, 43, 19, 2, 44, 20],\n  [3, 45, 15, 13, 46, 16],\n  [1, 135, 107, 5, 136, 108],\n  [10, 74, 46, 1, 75, 47],\n  [1, 50, 22, 15, 51, 23],\n  [2, 42, 14, 17, 43, 15],\n  [5, 150, 120, 1, 151, 121],\n  [9, 69, 43, 4, 70, 44],\n  [17, 50, 22, 1, 51, 23],\n  [2, 42, 14, 19, 43, 15],\n  [3, 141, 113, 4, 142, 114],\n  [3, 70, 44, 11, 71, 45],\n  [17, 47, 21, 4, 48, 22],\n  [9, 39, 13, 16, 40, 14],\n  [3, 135, 107, 5, 136, 108],\n  [3, 67, 41, 13, 68, 42],\n  [15, 54, 24, 5, 55, 25],\n  [15, 43, 15, 10, 44, 16],\n  [4, 144, 116, 4, 145, 117],\n  [17, 68, 42],\n  [17, 50, 22, 6, 51, 23],\n  [19, 46, 16, 6, 47, 17],\n  [2, 139, 111, 7, 140, 112],\n  [17, 74, 46],\n  [7, 54, 24, 16, 55, 25],\n  [34, 37, 13],\n  [4, 151, 121, 5, 152, 122],\n  [4, 75, 47, 14, 76, 48],\n  [11, 54, 24, 14, 55, 25],\n  [16, 45, 15, 14, 46, 16],\n  [6, 147, 117, 4, 148, 118],\n  [6, 73, 45, 14, 74, 46],\n  [11, 54, 24, 16, 55, 25],\n  [30, 46, 16, 2, 47, 17],\n  [8, 132, 106, 4, 133, 107],\n  [8, 75, 47, 13, 76, 48],\n  [7, 54, 24, 22, 55, 25],\n  [22, 45, 15, 13, 46, 16],\n  [10, 142, 114, 2, 143, 115],\n  [19, 74, 46, 4, 75, 47],\n  [28, 50, 22, 6, 51, 23],\n  [33, 46, 16, 4, 47, 17],\n  [8, 152, 122, 4, 153, 123],\n  [22, 73, 45, 3, 74, 46],\n  [8, 53, 23, 26, 54, 24],\n  [12, 45, 15, 28, 46, 16],\n  [3, 147, 117, 10, 148, 118],\n  [3, 73, 45, 23, 74, 46],\n  [4, 54, 24, 31, 55, 25],\n  [11, 45, 15, 31, 46, 16],\n  [7, 146, 116, 7, 147, 117],\n  [21, 73, 45, 7, 74, 46],\n  [1, 53, 23, 37, 54, 24],\n  [19, 45, 15, 26, 46, 16],\n  [5, 145, 115, 10, 146, 116],\n  [19, 75, 47, 10, 76, 48],\n  [15, 54, 24, 25, 55, 25],\n  [23, 45, 15, 25, 46, 16],\n  [13, 145, 115, 3, 146, 116],\n  [2, 74, 46, 29, 75, 47],\n  [42, 54, 24, 1, 55, 25],\n  [23, 45, 15, 28, 46, 16],\n  [17, 145, 115],\n  [10, 74, 46, 23, 75, 47],\n  [10, 54, 24, 35, 55, 25],\n  [19, 45, 15, 35, 46, 16],\n  [17, 145, 115, 1, 146, 116],\n  [14, 74, 46, 21, 75, 47],\n  [29, 54, 24, 19, 55, 25],\n  [11, 45, 15, 46, 46, 16],\n  [13, 145, 115, 6, 146, 116],\n  [14, 74, 46, 23, 75, 47],\n  [44, 54, 24, 7, 55, 25],\n  [59, 46, 16, 1, 47, 17],\n  [12, 151, 121, 7, 152, 122],\n  [12, 75, 47, 26, 76, 48],\n  [39, 54, 24, 14, 55, 25],\n  [22, 45, 15, 41, 46, 16],\n  [6, 151, 121, 14, 152, 122],\n  [6, 75, 47, 34, 76, 48],\n  [46, 54, 24, 10, 55, 25],\n  [2, 45, 15, 64, 46, 16],\n  [17, 152, 122, 4, 153, 123],\n  [29, 74, 46, 14, 75, 47],\n  [49, 54, 24, 10, 55, 25],\n  [24, 45, 15, 46, 46, 16],\n  [4, 152, 122, 18, 153, 123],\n  [13, 74, 46, 32, 75, 47],\n  [48, 54, 24, 14, 55, 25],\n  [42, 45, 15, 32, 46, 16],\n  [20, 147, 117, 4, 148, 118],\n  [40, 75, 47, 7, 76, 48],\n  [43, 54, 24, 22, 55, 25],\n  [10, 45, 15, 67, 46, 16],\n  [19, 148, 118, 6, 149, 119],\n  [18, 75, 47, 31, 76, 48],\n  [34, 54, 24, 34, 55, 25],\n  [20, 45, 15, 61, 46, 16],\n];\n\nexport class RSBlock {\n  private getRSBlockTable(typeNumber: number, errorCorrectLevel: number): number[] {\n    const { L, M, Q, H } = QRErrorCorrectLevel;\n    const pos = (typeNumber - 1) * 4;\n\n    switch (errorCorrectLevel) {\n      case L:\n        return RS_BLOCK_TABLE[pos + 0];\n      case M:\n        return RS_BLOCK_TABLE[pos + 1];\n      case Q:\n        return RS_BLOCK_TABLE[pos + 2];\n      case H:\n        return RS_BLOCK_TABLE[pos + 3];\n      default:\n        throw new Error(`bad rs block @ typeNumber:${typeNumber}/errorCorrectLevel: ${errorCorrectLevel}`);\n    }\n  }\n\n  public getRSBlocks(typeNumber: number, errorCorrectLevel: number): RSBlockCount[] {\n    const rsBlock = this.getRSBlockTable(typeNumber, errorCorrectLevel);\n    const length = rsBlock.length / 3;\n    const list: RSBlockCount[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n\n      for (let j = 0; j < count; j++) {\n        list.push({ totalCount, dataCount });\n      }\n    }\n\n    return list;\n  }\n}\n","// ---------------------------------------------------------------------\n// QRMath\n// ---------------------------------------------------------------------\n\nconst EXP_TABLE = new Array(256);\nconst LOG_TABLE = new Array(256);\n\n// initialize tables\nfor (let i = 0; i < 8; i++) {\n  EXP_TABLE[i] = 1 << i;\n}\n\nfor (let i = 8; i < 256; i++) {\n  EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n}\n\nfor (let i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nexport const QRMath = {\n  glog(n: number): number {\n    if (n < 1) {\n      throw new Error(`glog(${n})`);\n    }\n\n    return LOG_TABLE[n];\n  },\n\n  gexp(n: number): number {\n    if (n < 0) {\n      n = 255 + (n % 255);\n    } else if (n > 255) {\n      n %= 255;\n    }\n\n    return EXP_TABLE[n];\n  }\n}\n","// ---------------------------------------------------------------------\n// Polynomial\n// ---------------------------------------------------------------------\n\nimport { QRMath } from \"./math\";\n\nexport class Polynomial {\n  private readonly num: number[];\n\n  constructor(num: number[], shift: number) {\n    const { length } = num;\n\n    if (length === undefined) {\n      throw new Error(`${length}/${shift}`);\n    }\n\n    let offset = 0;\n    while (offset < length && num[offset] === 0) {\n      offset++;\n    }\n    \n    const len = length - offset;\n    this.num = new Array(len + shift);\n    for (let i = 0; i < len; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  public get length(): number {\n    return this.num.length;\n  }\n\n  public getAt(i: number): number {\n    return this.num[i];\n  }\n\n  public multiply(e: Polynomial): Polynomial {\n    const { glog, gexp } = QRMath;\n    const num: number[] = [];\n\n    for (let i = 0; i < this.length; i++) {\n      for (let j = 0; j < e.length; j++) {\n        num[i + j] ^= gexp(glog(this.getAt(i)) + glog(e.getAt(j)));\n      }\n    }\n\n    return new Polynomial(num, 0);\n  }\n\n  public mod(e: Polynomial): Polynomial {\n    if (this.length - e.length < 0) {\n      return this;\n    }\n\n    const { glog, gexp } = QRMath;\n    const ratio = glog(this.getAt(0)) - glog(e.getAt(0));\n    const num: number[] = [];\n\n    for (var i = 0; i < this.length; i++) {\n      const n = this.getAt(i);\n\n      num[i] = i < e.length ? n ^ gexp(glog(e.getAt(i)) + ratio) : n;\n    }\n\n    // recursive call\n    return new Polynomial(num, 0).mod(e);\n  }\n}\n","import { QRCode } from \".\";\nimport { Polynomial } from \"./polynomial\";\nimport { QRMaskPattern, QRMode } from \"./constants\";\nimport { QRMath } from \"./math\";\n\nconst PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\nconst G15 =\n  (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nconst G18 =\n  (1 << 12) |\n  (1 << 11) |\n  (1 << 10) |\n  (1 << 9) |\n  (1 << 8) |\n  (1 << 5) |\n  (1 << 2) |\n  (1 << 0);\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nconst genBCHDigit = (data: number) => data === 0 ? 0 : Math.log2(data);\nconst BCH_G15 = genBCHDigit(G15);\nconst BCH_G18 = genBCHDigit(G18);\n\n// ---------------------------------------------------------------------\n// QRUtil\n// ---------------------------------------------------------------------\n\nexport const Util = {\n  getBCHTypeInfo(data: number): number {\n    let d = data << 10;\n\n    while (genBCHDigit(d) - BCH_G15 >= 0) {\n      d ^= G15 << (genBCHDigit(d) - BCH_G15);\n    }\n\n    return ((data << 10) | d) ^ G15_MASK;\n  },\n\n  getBCHTypeNumber(data: number): number {\n    let d = data << 12;\n\n    while (genBCHDigit(d) - BCH_G18 >= 0) {\n      d ^= G18 << (genBCHDigit(d) - BCH_G18);\n    }\n\n    return (data << 12) | d;\n  },\n\n  getPatternPosition(typeNumber: number): number[] {\n    return PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n\n  getMaskFunction(maskPattern: number): (i: number, j: number) => boolean {\n    const {\n      PATTERN000,\n      PATTERN001,\n      PATTERN010,\n      PATTERN011,\n      PATTERN100,\n      PATTERN101,\n      PATTERN110,\n      PATTERN111,\n    } = QRMaskPattern;\n\n    switch (maskPattern) {\n      case PATTERN000:\n        return (i: number, j: number) => (i + j) % 2 === 0;\n      case PATTERN001:\n        return (i: number) => i % 2 === 0;\n      case PATTERN010:\n        return (_i: number, j: number) => j % 3 === 0;\n      case PATTERN011:\n        return (i: number, j: number) => (i + j) % 3 === 0;\n      case PATTERN100:\n        return (i: number, j: number) => (~~(i / 2) + ~~(j / 3)) % 2 === 0;\n      case PATTERN101:\n        return (i: number, j: number) => ((i * j) % 2) + ((i * j) % 3) === 0;\n      case PATTERN110:\n        return (i: number, j: number) =>\n          (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n      case PATTERN111:\n        return (i: number, j: number) =>\n          (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n      default:\n        throw new Error(`bad maskPattern: ${maskPattern}`);\n    }\n  },\n\n  getErrorCorrectPolynomial(errorCorrectLength: number): Polynomial {\n    let a = new Polynomial([1], 0);\n\n    for (let i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, QRMath.gexp(i)], 0));\n    }\n\n    return a;\n  },\n\n  getLengthInBits(mode: number, type: number): number {\n    const { MODE_NUMBER, MODE_ALPHA_NUM, MODE_8BIT_BYTE, MODE_KANJI } = QRMode;\n\n    if (type < 1 || type > 40) {\n      throw new Error(`type: ${type}`);\n    }\n\n    if (type >= 1 && type < 10) {\n      // 1 - 9\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 10;\n        case MODE_ALPHA_NUM:\n          return 9;\n        case MODE_8BIT_BYTE:\n          return 8;\n        case MODE_KANJI:\n          return 8;\n        default:\n      }\n    }\n\n    if (type < 27) {\n      // 10 - 26\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 12;\n        case MODE_ALPHA_NUM:\n          return 11;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 10;\n        default:\n      }\n    }\n\n    if (type <= 40) {\n      // 27 - 40\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 14;\n        case MODE_ALPHA_NUM:\n          return 13;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 12;\n        default:\n      }\n    }\n\n    throw new Error(`mode: ${mode}`);\n  },\n\n  getLostPoint(qr: QRCode): number {\n    const moduleCount = qr.getModuleCount();\n    let lostPoint = 0;\n\n    // LEVEL1\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount; col++) {\n        const dark = qr.isDark(row, col);\n        let sameCount = 0;\n\n        for (let r = -1; r <= 1; r++) {\n          const nRow = row + r;\n          if (nRow < 0 || moduleCount <= nRow) continue;\n\n          for (let c = -1; c <= 1; c++) {\n            const nCol = col + c;\n            if (nCol < 0 || moduleCount <= nCol) continue;\n            if (r === 0 && c === 0) continue;\n            if (dark === qr.isDark(nRow, nCol)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += sameCount + 3 - 5;\n        }\n      }\n    }\n\n    // LEVEL2\n\n    for (let row = 0; row < moduleCount - 1; row++) {\n      for (let col = 0; col < moduleCount - 1; col++) {\n        let count = 0;\n\n        if (qr.isDark(row, col)) count++;\n        if (qr.isDark(row + 1, col)) count++;\n        if (qr.isDark(row, col + 1)) count++;\n        if (qr.isDark(row + 1, col + 1)) count++;\n        if (count === 0 || count === 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n\n    // LEVEL3\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount - 6; col++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row, col + 1) &&\n          qr.isDark(row, col + 2) &&\n          qr.isDark(row, col + 3) &&\n          qr.isDark(row, col + 4) &&\n          !qr.isDark(row, col + 5) &&\n          qr.isDark(row, col + 6)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount - 6; row++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row + 1, col) &&\n          qr.isDark(row + 2, col) &&\n          qr.isDark(row + 3, col) &&\n          qr.isDark(row + 4, col) &&\n          !qr.isDark(row + 5, col) &&\n          qr.isDark(row + 6, col)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    // LEVEL4\n\n    let darkCount = 0;\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount; row++) {\n        if (qr.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    const ratio =\n      Math.abs((100 * darkCount) / Math.pow(moduleCount, 2) - 50) / 5;\n\n    return lostPoint + ratio * 10;\n  },\n};\n","// ---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2025 LiHZSky\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n// http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { BitByte } from \"./bit-byte\";\nimport { RSBlock, RSBlockCount } from \"./block\";\nimport { QRErrorCorrectLevel } from \"./constants\";\nimport { Polynomial } from \"./polynomial\";\nimport { Util } from \"./util\";\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\n/**\n * QRCode实现\n * https://www.cnblogs.com/leestar54/p/15782929.html\n * @param typeNumber 1 to 40\n * @param errorCorrectLevel 'L','M','Q','H'\n */\nexport class QRCode {\n  private readonly errorCorrectLevel: number;\n\n  private modules: boolean[][] = [];\n\n  private moduleCount = 0;\n\n  private dataCache: number[] | null = null;\n\n  private dataList: BitByte[] = [];\n\n  constructor(\n    private readonly typeNumber: number,\n    errorCorrectLevel: \"L\" | \"M\" | \"Q\" | \"H\"\n  ) {\n    this.errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];\n  }\n\n  private makeImpl(test: boolean, maskPattern: number): void {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = ((moduleCount: number) => {\n      const modules: boolean[][] = [];\n\n      // 预设一个 moduleCount * moduleCount 的空白矩阵\n      for (let row = 0; row < moduleCount; row++) {\n        modules[row] = [];\n\n        for (let col = 0; col < moduleCount; col++) {\n          modules[row][col] = null as unknown as boolean;\n        }\n      }\n\n      return modules;\n    })(this.moduleCount);;\n\n    const count = this.moduleCount - 7;\n\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(count, 0);\n    this.setupPositionProbePattern(0, count);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n\n    if (this.dataCache === null) {\n      this.dataCache = this.createData(\n        this.typeNumber,\n        this.errorCorrectLevel,\n        this.dataList\n      );\n    }\n\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  private setupPositionProbePattern(row: number, col: number): void {\n    const { modules, moduleCount } = this;\n\n    for (let r = -1; r <= 7; r++) {\n      const nr = row + r;\n      if (nr <= -1 || moduleCount <= nr) continue;\n\n      for (let c = -1; c <= 7; c++) {\n        const nc = col + c;\n        if (nc <= -1 || moduleCount <= nc) continue;\n\n        modules[nr][nc] =\n          (r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4);\n      }\n    }\n  }\n\n  private setupPositionAdjustPattern(): void {\n    const { typeNumber, modules } = this;\n    const pos = Util.getPatternPosition(typeNumber);\n    const { length } = pos;\n\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n\n        if (modules[row][col] != null) continue;\n\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            modules[row + r][col + c] =\n              r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0);\n          }\n        }\n      }\n    }\n  }\n\n  private setupTimingPattern(): void {\n    const { moduleCount, modules } = this;\n    const count = moduleCount - 8;\n\n    for (let r = 8; r < count; r++) {\n      if (modules[r][6] != null) continue;\n\n      modules[r][6] = r % 2 === 0;\n    }\n\n    for (let c = 8; c < count; c++) {\n      if (modules[6][c] != null) continue;\n\n      modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  private setupTypeInfo(test: boolean, maskPattern: number): void {\n    const { errorCorrectLevel, modules, moduleCount } = this;\n    const data = (errorCorrectLevel << 3) | maskPattern;\n    const bits = Util.getBCHTypeInfo(data);\n\n    // vertical\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 6) {\n        modules[i][8] = mod;\n      } else if (i < 8) {\n        modules[i + 1][8] = mod;\n      } else {\n        modules[moduleCount - 15 + i][8] = mod;\n      }\n    }\n\n    // horizontal\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 8) {\n        modules[8][moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        modules[8][15 - i] = mod;\n      } else {\n        modules[8][15 - i - 1] = mod;\n      }\n    }\n\n    // fixed module\n    modules[moduleCount - 8][8] = !test;\n  }\n\n  private getBestMaskPattern(): number {\n    let minLostPoint = 0;\n    let pattern = 0;\n\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n\n      const lostPoint = Util.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n\n    return pattern;\n  }\n\n  private setupTypeNumber(test: boolean): void {\n    const { typeNumber, modules, moduleCount } = this;\n    const bits = Util.getBCHTypeNumber(typeNumber);\n\n    for (let i = 0; i < 18; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      modules[~~(i / 3)][(i % 3) + moduleCount - 8 - 3] = mod;\n      modules[(i % 3) + moduleCount - 8 - 3][~~(i / 3)] = mod;\n    }\n  }\n\n  private createData(\n    typeNumber: number,\n    errorCorrectLevel: number,\n    dataList: BitByte[]\n  ): number[] {\n    const rsBlocks = new RSBlock().getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new BitBuffer();\n\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n\n      buffer.put(data.mode, 4);\n      buffer.put(data.length, Util.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n\n    // calc num max data.\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n\n    const totalCount = totalDataCount * 8;\n    if (buffer.lengthInBits > totalCount) {\n      throw new Error(\n        `code length overflow. (${buffer.lengthInBits} > ${totalCount})`\n      );\n    }\n\n    // end code\n    if (buffer.lengthInBits + 4 <= totalCount) {\n      buffer.put(0, 4);\n    }\n\n    // padding\n    while (buffer.lengthInBits % 8 !== 0) {\n      buffer.putBit(false);\n    }\n\n    // padding\n    while (true) {\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  private mapData(data: number[], maskPattern: number): void {\n    const { modules, moduleCount } = this;\n    const maskFunc = Util.getMaskFunction(maskPattern);\n    let inc = -1;\n    let row = moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n\n    for (let col = row; col > 0; col -= 2) {\n      if (col === 6) col -= 1;\n\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (modules[row][col - c] == null) {\n            let dark = false;\n\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n\n            if (maskFunc(row, col - c)) {\n              dark = !dark;\n            }\n\n            modules[row][col - c] = dark;\n            bitIndex--;\n\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n\n        row += inc;\n\n        if (row < 0 || moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  private createBytes(\n    bitBuffer: BitBuffer,\n    rsBlocks: RSBlockCount[]\n  ): number[] {\n    const dcdata: number[][] = [];\n    const ecdata: number[][] = [];\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n\n      dcdata[r] = [];\n\n      for (let i = 0; i < dcCount; i++) {\n        dcdata[r][i] = 0xff & bitBuffer.buffer[i + offset];\n      }\n\n      offset += dcCount;\n\n      const rsPoly = Util.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new Polynomial(dcdata[r], rsPoly.length - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n\n      ecdata[r] = new Array(rsPoly.length - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.length - ecdata[r].length;\n\n        ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n      }\n    }\n\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n\n    const data = new Array(totalCodeCount);\n    let index = 0;\n\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n\n    return data;\n  }\n\n  public isDark(row: number, col: number): boolean {\n    const { moduleCount } = this;\n\n    if (row < 0 || moduleCount <= row || col < 0 || moduleCount <= col) {\n      throw new Error(`${row}, ${col}`);\n    }\n\n    return this.modules[row][col];\n  }\n\n  public addData(data: string): void {\n    this.dataList.push(new BitByte(data));\n    this.dataCache = null;\n  }\n\n  public getModuleCount(): number {\n    return this.moduleCount;\n  }\n\n  public make(): void {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n}\n","// import { unzlibSync } from \"fflate\";\nimport { unzlibSync, createVideoEntity } from \"../../extensions\";\nimport { platform } from \"../../platform\";\nimport type { PlatformVideo } from \"../../types\";\n\n/**\n * SVGA 下载解析器\n */\nexport class Parser {\n  /**\n   * 解压视频源文件\n   * @param data\n   * @returns\n   */\n  static decompress(data: ArrayBufferLike): ArrayBufferLike {\n    return unzlibSync(new Uint8Array(data)).buffer;\n  }\n\n  /**\n   * 解析视频实体\n   * @param data 视频二进制数据\n   * @param url 视频地址\n   * @param needDecompress 是否解压\n   * @returns\n   */\n  static parseVideo(\n    data: ArrayBufferLike,\n    url: string,\n    needDecompress: boolean = true\n  ): PlatformVideo.Video {\n    return createVideoEntity(\n      new Uint8Array(needDecompress ? this.decompress(data) : data),\n      platform.path.filename(url)\n    );\n  }\n\n  /**\n   * 读取文件资源\n   * @param url 文件资源地址\n   * @returns\n   */\n  static async download(url: string): Promise<ArrayBuffer> {\n    const { globals, remote, path, local } = platform;\n    const { env } = globals;\n    const supportLocal = env !== \"h5\" && env !== \"tt\";\n    const filepath = path.is(url)\n        ? url\n        : path.resolve(path.filename(url));\n\n    // 本地读取\n    if (supportLocal) {\n      if (await local!.exists(filepath)) {\n        return local!.read(filepath);\n      }\n    }\n\n    // 远程读取\n    const buff = await remote.fetch(url);\n\n    // 本地缓存\n    if (supportLocal) {\n      try {\n        await local!.write(buff, filepath);\n      } catch (ex) {\n        // eslint-disable-next-line no-console\n        console.error(ex);\n      }\n    }\n\n    return buff;\n  }\n\n  /**\n   * 通过 url 下载并解析 SVGA 文件\n   * @param url SVGA 文件的下载链接\n   * @returns Promise<SVGA 数据源\n   */\n  static async load(url: string): Promise<PlatformVideo.Video> {\n    return Parser.parseVideo((await Parser.download(url))!, url);\n  }\n}\n","// import benchmark from \"octopus-benchmark\";\nimport Reader from \"./io/Reader\";\nimport { MovieEntity } from \"./serialization\";\n\nexport type * from \"./serialization\";\n\nexport function createVideoEntity(data: Uint8Array, filename: string) {\n  if (data instanceof Uint8Array) {\n    const reader = new Reader(data);\n    const video = MovieEntity.decode(reader);\n\n    // benchmark.log('preflight cache size', reader.preflight.size);\n    // benchmark.log('preflight hit count', reader.preflight.hitCount);\n    video.filename = filename;\n    reader.preflight.clear();\n\n    return video;\n  }\n\n  throw new Error(\"Invalid data type\");\n}\n","import type { PlatformCanvas, PlatformOffscreenCanvas } from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport type { PaintModel, PaintMode } from \"../../types\";\n\nconst { noop } = platform;\n\nexport class Painter {\n  /**\n   * 主屏的 Canvas 元素\n   * Main Screen\n   */\n  public X: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n  /**\n   * 主屏的 Context 对象\n   * Main Context\n   */\n  public XC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n  /**\n   * 副屏的 Canvas 元素\n   * Secondary Screen\n   */\n  public Y: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n  /**\n   * 副屏的 Context 对象\n   * Secondary Context\n   */\n  public YC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n  /**\n   * 画布的宽度\n   */\n  public W: number;\n  /**\n   * 画布的高度\n   */\n  public H: number;\n  /**\n   * 粉刷模式\n   */\n  private model: PaintModel = {} as PaintModel;\n\n  /**\n   *\n   * @param mode\n   *  - poster: 海报模式\n   *  - animation: 动画模式\n   *  - 默认为 animation\n   * @param W 海报模式必须传入\n   * @param H 海报模式必须传入\n   */\n  constructor(\n    private readonly mode: PaintMode = \"animation\",\n    width = 0,\n    height = 0\n  ) {\n    const { dpr } = platform.globals;\n\n    this.W = width * dpr;\n    this.H = height * dpr;\n  }\n\n  /**\n   * 设置 Canvas 的处理模式\n   * - C：代表 Canvas\n   * - O：代表 OffscreenCanvas\n   */\n  private setModel(type: \"C\" | \"O\"): void {\n    const { model } = this;\n    const { env } = platform.globals;\n\n    // set type\n    model.type = type;\n\n    // set clear\n    if (\n      type === \"O\" &&\n      // OffscreenCanvas 在 Firefox 浏览器无法被清理历史内容\n      env === \"h5\" &&\n      navigator.userAgent.includes(\"Firefox\")\n    ) {\n      model.clear = \"CR\";\n    } else if ((type === \"O\" && env === \"tt\") || env === \"alipay\") {\n      model.clear = \"CL\";\n    } else {\n      model.clear = \"RE\";\n    }\n  }\n\n  /**\n   * 注册画笔，根据环境判断生成最优的绘制方式\n   * @param selector\n   * @param ofsSelector\n   * @param component\n   */\n  public async register(\n    selector: string,\n    ofsSelector?: string,\n    component?: any\n  ) {\n    const { model, mode } = this;\n    const { getCanvas, getOfsCanvas } = platform;\n    const { env } = platform.globals;\n    // #region set main screen implement\n    // -------- 创建主屏 ---------\n    if (\n      mode === \"poster\" &&\n      (env !== \"h5\" || \"OffscreenCanvas\" in globalThis)\n    ) {\n      const { W, H } = this;\n      const { canvas, context } = getOfsCanvas({ width: W, height: H });\n\n      this.X = canvas;\n      this.XC = context;\n      this.setModel(\"O\");\n    } else {\n      const { canvas, context } = await getCanvas(selector, component);\n      const { width, height } = canvas;\n      // 添加主屏\n      this.X = canvas;\n      this.XC = context;\n      this.setModel(\"C\");\n\n      if (mode === \"poster\") {\n        canvas.width = this.W;\n        canvas.height = this.H;\n      } else {\n        this.W = width;\n        this.H = height;\n      }\n    }\n    // #endregion set main screen implement\n\n    // #region clear main screen implement\n    // ------- 生成主屏清理函数 -------\n    // FIXME:【支付宝小程序】无法通过改变尺寸来清理画布\n    if (model.clear === \"CL\") {\n      this.clearContainer = () => {\n        const { W, H, XC } = this;\n\n        XC!.clearRect(0, 0, W, H);\n      };\n    } else {\n      this.clearContainer = () => {\n        const { W, H, X } = this;\n\n        X!.width = W;\n        X!.height = H;\n      };\n    }\n    // #endregion clear main screen implement\n\n    if (mode === \"poster\") {\n      this.Y = this.X;\n      this.YC = this.XC;\n      this.clearSecondary = this.stick = noop;\n    } else {\n      // #region set secondary screen implement\n      // ------- 创建副屏 ---------\n      let ofsResult;\n\n      if (typeof ofsSelector === \"string\" && ofsSelector !== \"\") {\n        ofsResult = await getCanvas(ofsSelector, component);\n        ofsResult.canvas.width = this.W;\n        ofsResult.canvas.height = this.H;\n        this.setModel(\"C\");\n      } else {\n        ofsResult = getOfsCanvas({ width: this.W, height: this.H });\n        this.setModel(\"O\");\n      }\n\n      this.Y = ofsResult.canvas;\n      this.YC = ofsResult.context;\n      // #endregion set secondary screen implement\n\n      // #region clear secondary screen implement\n      // ------- 生成副屏清理函数 --------\n      switch (model.clear) {\n        case \"CR\":\n          this.clearSecondary = () => {\n            const { W, H } = this;\n            // FIXME:【支付宝小程序】频繁创建新的 OffscreenCanvas 会出现崩溃现象\n            const { canvas, context } = getOfsCanvas({ width: W, height: H });\n\n            this.Y = canvas;\n            this.YC = context;\n          };\n          break;\n        case \"CL\":\n          this.clearSecondary = () => {\n            const { W, H, YC } = this;\n            // FIXME:【支付宝小程序】无法通过改变尺寸来清理画布，无论是Canvas还是OffscreenCanvas\n            YC!.clearRect(0, 0, W, H);\n          };\n          break;\n        default:\n          this.clearSecondary = () => {\n            const { W, H, Y } = this;\n          \n            Y!.width = W;\n            Y!.height = H;\n          };\n      }\n      // #endregion clear secondary screen implement\n    }\n  }\n\n  public clearContainer: () => void = noop;\n\n  public clearSecondary: () => void = noop;\n\n  public stick() {\n    const { W, H, mode } = this;\n\n    if (mode !== \"poster\") {\n      this.XC!.drawImage(this.YC!.canvas, 0, 0, W, H);\n    }\n  }\n\n  /**\n   * 销毁画笔\n   */\n  public destroy() {\n    this.clearContainer();\n    this.clearSecondary();\n    this.X = this.XC = this.Y = this.YC = null;\n    this.clearContainer = this.clearSecondary = this.stick = noop;\n  }\n}\n","import {\n  type PlatformVideo,\n  type PlayerConfig,\n  PLAYER_FILL_MODE,\n  PLAYER_PLAY_MODE,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Config {\n  /**\n   * 最后停留的目标模式，类似于 animation-fill-mode，默认值 forwards。\n   */\n  public fillMode = PLAYER_FILL_MODE.BACKWARDS;\n  /**\n   * 播放模式，默认值 forwards\n   */\n  public playMode = PLAYER_PLAY_MODE.FORWARDS;\n  /**\n   * 填充模式，类似于 content-mode。\n   */\n  public contentMode = PLAYER_CONTENT_MODE.FILL;\n  /**\n   * 开始播放的帧，默认值 0\n   */\n  public startFrame = 0;\n  /**\n   * 结束播放的帧，默认值 0\n   */\n  public endFrame = 0;\n  /**\n   * 循环播放的开始帧，默认值 0\n   */\n  public loopStartFrame = 0;\n  /**\n   * 循环次数，默认值 0（无限循环）\n   */\n  public loop = 0;\n\n  public register(config: Partial<PlayerConfig>) {\n    if (typeof config.loop === \"number\" && config.loop >= 0) {\n      this.loop = config.loop;\n    }\n\n    if (\n      config.fillMode &&\n      [\n        PLAYER_FILL_MODE.FORWARDS,\n        PLAYER_FILL_MODE.BACKWARDS,\n        PLAYER_FILL_MODE.NONE,\n      ].includes(config.fillMode)\n    ) {\n      this.fillMode = config.fillMode;\n    }\n\n    if (\n      config.playMode &&\n      [PLAYER_PLAY_MODE.FORWARDS, PLAYER_PLAY_MODE.FALLBACKS].includes(\n        config.playMode\n      )\n    ) {\n      this.playMode = config.playMode;\n    }\n\n    if (typeof config.startFrame === \"number\" && config.startFrame >= 0) {\n      this.startFrame = config.startFrame;\n    }\n\n    if (typeof config.endFrame === \"number\" && config.endFrame >= 0) {\n      this.endFrame = config.endFrame;\n    }\n\n    if (\n      typeof config.loopStartFrame === \"number\" &&\n      config.loopStartFrame >= 0\n    ) {\n      this.loopStartFrame = config.loopStartFrame;\n    }\n\n    if (typeof config.contentMode === \"string\") {\n      this.contentMode = config.contentMode;\n    }\n  }\n\n  public setItem<T extends keyof PlayerConfig>(key: T, value: PlayerConfig[T]) {\n    this.register({ [key]: value });\n  }\n\n  public getConfig(entity: PlatformVideo.Video) {\n    const { playMode, loopStartFrame, startFrame, endFrame, fillMode, loop } =\n      this;\n    const { fps, sprites } = entity;\n    let { frames } = entity;\n    const spriteCount = sprites.length;\n    const start = startFrame > 0 ? startFrame : 0;\n    const end = endFrame > 0 && endFrame < frames ? endFrame : frames;\n    // 每帧持续的时间\n    const frameDuration = 1000 / fps;\n\n    if (start > end) {\n      throw new Error(\"StartFrame should greater than EndFrame\");\n    }\n\n    // 更新活动帧总数\n    if (end < frames) {\n      frames = end - start;\n    } else if (start > 0) {\n      frames -= start;\n    }\n\n    const duration = Math.floor(frames * frameDuration * 10 ** 6) / 10 ** 6;\n    let currFrame = 0;\n    let extFrame = 0;\n    let loopStart: number;\n\n    // 顺序播放/倒叙播放\n    if (playMode === PLAYER_PLAY_MODE.FORWARDS) {\n      // 重置为开始帧\n      currFrame = Math.max(loopStartFrame, startFrame);\n      if (fillMode === PLAYER_FILL_MODE.FORWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame > start ? (loopStartFrame - start) * frameDuration : 0;\n    } else {\n      // 重置为开始帧\n      currFrame = Math.min(loopStartFrame, end - 1);\n      if (fillMode === PLAYER_FILL_MODE.BACKWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame < end ? (end - loopStartFrame) * frameDuration : 0;\n    }\n\n    return {\n      currFrame,\n      startFrame: start,\n      endFrame: end,\n      totalFrame: frames,\n      spriteCount,\n      aniConfig: {\n        // 单个周期的运行时长\n        duration,\n        // 第一个周期开始时间偏移量\n        loopStart,\n        // 循环次数\n        loop: loop === 0 ? Infinity : loop,\n        // 最后一帧不在周期内，需要单独计算\n        fillValue: extFrame * frameDuration,\n      },\n    };\n  }\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder, QRCode } from \"../extensions\";\n\nexport interface IQrCodeImgOptions {\n  /**\n   * 二维码内容\n   */\n  code: string;\n  /**\n   * 二维码的大小\n   */\n  size: number;\n  /**\n   * 二维码的码元 二维码横向有多少个小点（1 - 40）\n   */\n  typeNumber?: number;\n  /**\n   * 二维码的纠错等级\n   * L: 7%（错误字码在 7% 以内可被修正, 容错率较低不建议使用）\n   * M: 15%（错误字码在 15% 以内可被修正, 容错率较低不建议使用）\n   * Q: 25%（错误字码在 25% 以内可被修正）\n   * H: 30%（错误字码在 30% 以内可被修正）\n   */\n  correctLevel?: \"L\" | \"M\" | \"Q\" | \"H\";\n  /**\n   * 二维码颜色，仅支持 六位的十六进制颜色值，暂不支持透明色 (仅对二维码生效)\n   */\n  codeColor?: string;\n  /**\n   * 二维码背景颜色，仅支持 六位的十六进制 颜色值。暂不支持透明色 (仅对二维码生效)\n   */\n  backgroundColor?: string;\n}\n\nfunction parseOptions(options: IQrCodeImgOptions) {\n  const typeNumber = options.typeNumber ?? 4;\n  const correctLevel = options.correctLevel ?? \"H\";\n  const codeColor = options.codeColor ?? \"#000000\";\n  const backgroundColor = options.backgroundColor ?? \"#FFFFFF\";\n\n  return {\n    code: options.code,\n    size: options.size,\n    typeNumber,\n    correctLevel,\n    codeColor,\n    backgroundColor,\n  };\n}\n\nconst calcCellSizeAndPadding = (moduleCount: number, size: number) => {\n  const cellSize = ~~(size / moduleCount);\n\n  return {\n    padding: ~~((size - moduleCount * cellSize) / 2),\n    cellSize: cellSize || 2,\n  };\n};\n\nexport function generateImageBufferFromCode(options: IQrCodeImgOptions) {\n  const { code, typeNumber, correctLevel, size, codeColor, backgroundColor } =\n    parseOptions(options);\n  let qr: QRCode;\n\n  try {\n    qr = new QRCode(typeNumber, correctLevel);\n    qr.addData(code);\n    qr.make();\n  } catch (e) {\n    if (typeNumber >= 40) {\n      throw new Error(\"Text too long to encode\");\n    }\n\n    return arguments.callee({\n      code,\n      size,\n      correctLevel,\n      typeNumber: typeNumber + 1,\n      codeColor,\n      backgroundColor,\n    });\n  }\n\n  // calc cellsize and margin\n  const moduleCount = qr.getModuleCount();\n  const { padding, cellSize } = calcCellSizeAndPadding(moduleCount, size);\n  const max = moduleCount * cellSize + padding;\n  const CODE_COLOR = +`${codeColor.replace(\"#\", \"0x\")}FF`;\n  const BACKGROUND_COLOR = +`${backgroundColor.replace(\"#\", \"0x\")}FF`;\n  const png = new PNGEncoder(size, size);\n\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      if (padding <= x && x < max && padding <= y && y < max) {\n        const c = ~~((x - padding) / cellSize);\n        const r = ~~((y - padding) / cellSize);\n\n        png.setPixel(x, y, qr.isDark(r, c) ? CODE_COLOR : BACKGROUND_COLOR);\n      } else {\n        png.setPixel(x, y, BACKGROUND_COLOR);\n      }\n    }\n  }\n\n  return png.flush();\n}\n\nexport function generateImageFromCode(options: IQrCodeImgOptions) {\n  const buff = generateImageBufferFromCode(options);\n\n  return platform.decode.toDataURL(buff);\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder } from \"../extensions\";\n\nexport function getBufferFromImageData(imageData: ImageData) {\n  const { width, height, data } = imageData;\n\n  return new PNGEncoder(width, height).write(data).flush();\n}\n\nexport function getDataURLFromImageData(imageData: ImageData) {\n  const buff = getBufferFromImageData(imageData);\n\n  return platform.decode.toDataURL(buff);\n}\n","/**\n * 检查数据是否为zlib压缩格式\n * @param data 待检查的二进制数据\n * @returns 是否为zlib压缩格式\n */\nexport function isZlibCompressed(data: Uint8Array): boolean {\n  // 检查数据长度是否足够（至少需要2字节头部和4字节ADLER-32校验和）\n  if (data.length < 6) {\n    return false\n  }\n\n  // 获取CMF和FLG字节\n  const cmf = data[0]\n  const flg = data[1]\n\n  // 检查CMF的压缩方法（低4位为8表示DEFLATE）\n  // eslint-disable-next-line no-bitwise\n  if ((cmf & 0x0F) !== 8) {\n    return false\n  }\n\n  // 检查窗口大小（高4位通常为7，但不是严格要求）\n  // 这里不强制检查，因为理论上可以是其他值\n\n  // 验证头部校验（CMF * 256 + FLG必须是31的倍数）\n  if (((cmf * 256 + flg) % 31) !== 0) {\n    return false\n  }\n\n  // 检查字典标志位（如果设置了字典，需要额外验证，但这种情况很少见）\n  // eslint-disable-next-line no-bitwise\n  const fdict = (flg & 0x20) !== 0\n  if (fdict) {\n    // 标准zlib压缩通常不使用预定义字典\n    // 这里假设不使用字典，若检测到字典标志则认为不是标准zlib格式\n    return false\n  }\n\n  // 尝试提取ADLER-32校验和并验证其格式\n  // 虽然无法验证校验和值（需要解压后计算），但可以检查其是否为合理的数值\n  const adler32Bytes = data.slice(-4)\n\n  if (adler32Bytes.length !== 4) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  const adler32 = (adler32Bytes[0] << 24) | (adler32Bytes[1] << 16) | (adler32Bytes[2] << 8) | adler32Bytes[3]\n\n  // 有效的ADLER-32值应大于0（除非是空数据）\n  if (data.length > 2 && adler32 === 0) {\n    return false\n  }\n\n  // 所有检查都通过，数据可能是zlib压缩格式\n  return true\n}\n","import { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport type { PlatformVideo } from \"../types/video\";\n\nexport interface Bucket {\n  // 远程地址\n  origin: string;\n  // 本地地址\n  local: string;\n  // 实例\n  entity: PlatformVideo.Video | null;\n  // 下载实例中\n  promise: Promise<ArrayBufferLike> | null;\n}\n\nexport interface NeedUpdatePoint {\n  action: \"remove\" | \"add\";\n  start: number;\n  end: number;\n}\n\nexport type LoadMode = \"fast\" | \"whole\";\n\nexport interface VideoManagerOptions {\n  preprocess: (bucket: Bucket) => Promise<ArrayBufferLike>;\n  postprocess: (\n    bucket: Bucket,\n    buff: ArrayBufferLike\n  ) => Promise<PlatformVideo.Video> | PlatformVideo.Video;\n  cleanup: (buckets: Bucket[]) => Promise<void> | void;\n}\n\nexport class VideoManager {\n  /**\n   * 视频池的当前指针位置\n   */\n  private point: number = 0;\n  /**\n   * 视频的最大留存数量，其他视频将放在磁盘上缓存\n   */\n  private maxRemain: number = 3;\n  /**\n   * 留存视频的开始指针位置\n   */\n  private remainStart: number = 0;\n  /**\n   * 留存视频的结束指针位置\n   */\n  private remainEnd: number = 0;\n  /**\n   * 视频加载模式\n   * - 快速加载模式：可保证当前视频加载完成后，尽快播放；其他请求将使用Promise的方式保存在bucket中，以供后续使用\n   * - 完整加载模式：可保证所有视频加载完成，确保播放切换的流畅性\n   */\n  private loadMode: LoadMode = \"fast\";\n  /**\n   * 视频池的所有数据\n   */\n  private buckets: Bucket[] = [];\n\n  private readonly options: VideoManagerOptions = {\n    /**\n     * 预处理动效数据\n     * @param url\n     * @returns\n     */\n    preprocess: (bucket: Bucket) => Parser.download(bucket.origin),\n    /**\n     * 后处理动效数据\n     * @param bucket\n     * @param data\n     * @returns\n     */\n    postprocess: (bucket: Bucket, data: ArrayBufferLike) =>\n      Parser.parseVideo(data, bucket.origin, true),\n    /**\n     * 清理数据\n     * @param buckets\n     * @returns\n     */\n    cleanup: (buckets: Bucket[]) => {\n      const { globals, local, path } = platform;\n\n      buckets.forEach((bucket: Bucket) => {\n        if (path.is(bucket.local)) {\n          local!.remove(bucket.local);\n        }\n      });\n    },\n  };\n\n  /**\n   * 获取视频池大小\n   */\n  get size(): number {\n    return this.buckets.length;\n  }\n\n  constructor(loadMode: LoadMode, options?: Partial<VideoManagerOptions>) {\n    if (typeof loadMode === \"string\") {\n      this.loadMode = loadMode;\n    }\n\n    Object.assign(this.options, options);\n  }\n\n  /**\n   * 更新留存指针位置\n   */\n  private updateRemainRange(\n    point: number,\n    maxRemain: number,\n    totalCount: number\n  ): void {\n    if (point < 0) {\n      this.point = 0;\n    } else if (point >= totalCount) {\n      this.point = totalCount - 1;\n    } else {\n      this.point = point;\n    }\n\n    if (this.loadMode === \"whole\") {\n      this.remainStart = 0;\n      this.remainEnd = totalCount;\n    } else {\n      if (maxRemain < 1) {\n        this.maxRemain = 1;\n      } else if (maxRemain > totalCount) {\n        this.maxRemain = totalCount;\n      } else {\n        this.maxRemain = maxRemain;\n      }\n\n      this.remainStart = this.point - Math.floor(this.maxRemain / 2);\n      if (this.remainStart < 0) {\n        this.remainStart = totalCount + this.remainStart;\n      }\n\n      this.remainEnd = this.remainStart + this.maxRemain;\n      if (this.remainEnd > totalCount) {\n        this.remainEnd = this.remainEnd % totalCount;\n      }\n    }\n  }\n\n  /**\n   * 指针是否在留存空间内\n   * @param point\n   * @returns\n   */\n  private includeRemainRange(point: number): boolean {\n    if (this.remainStart < this.remainEnd) {\n      return point >= this.remainStart && point < this.remainEnd;\n    }\n\n    if (this.remainStart > this.remainEnd) {\n      return point >= this.remainStart || point < this.remainEnd;\n    }\n\n    return true;\n  }\n\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse?: false\n  ): Promise<ArrayBuffer>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: true\n  ): Promise<PlatformVideo.Video>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: boolean = false\n  ) {\n    const { options } = this;\n    const data = await options.preprocess(bucket);\n\n    if (needParse) {\n      return options.postprocess(bucket, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * 创建bucket\n   * @param url 远程地址\n   * @param point 指针位置\n   * @param needDownloadAndParse 是否需要下载并解析\n   * @returns\n   */\n  private async createBucket(\n    url: string,\n    point: number,\n    needDownloadAndParse: boolean\n  ): Promise<Bucket> {\n    const { path } = platform;\n    const bucket: Bucket = {\n      origin: url,\n      local: path.resolve(path.filename(url)),\n      entity: null,\n      promise: null,\n    };\n\n    this.buckets[point] = bucket;\n    if (needDownloadAndParse) {\n      bucket.entity = await this.downloadAndParseVideo(bucket, true);\n    } else if (this.includeRemainRange(point)) {\n      bucket.promise = this.downloadAndParseVideo(bucket);\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 预加载视频到本地磁盘中\n   * @param urls 视频远程地址\n   * @param point 当前指针位置\n   * @param maxRemain 最大留存数量\n   */\n  async prepare(\n    urls: string[],\n    point: number = 0,\n    maxRemain: number = 3\n  ): Promise<void> {\n    this.updateRemainRange(point, maxRemain, urls.length);\n\n    const { loadMode, point: currentPoint } = this;\n    // 优先加载当前动效\n    const preloadBucket: Bucket = await this.createBucket(\n      urls[currentPoint],\n      currentPoint,\n      true\n    );\n\n    await Promise.all(\n      urls.map((url: string, index: number) => {\n        // 当前帧的视频已经预加载到内存中\n        if (index === currentPoint) {\n          return preloadBucket;\n        }\n\n        return this.createBucket(url, index, loadMode === \"whole\");\n      })\n    );\n  }\n\n  /**\n   * 获取当前帧的bucket\n   * @returns\n   */\n  async get(): Promise<Bucket> {\n    const bucket = this.buckets[this.point];\n\n    if (bucket.promise) {\n      bucket.entity = await bucket.promise.then((data: ArrayBufferLike) =>\n        this.options.postprocess(bucket, data)\n      );\n      bucket.promise = null;\n    } else if (!bucket.entity) {\n      bucket.entity = await this.downloadAndParseVideo(bucket, true);\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 获取当前的指针位置\n   * @returns\n   */\n  getPoint(): number {\n    return this.point;\n  }\n\n  /**\n   * 获取指定位置的bucket\n   * @param pos\n   * @returns\n   */\n  async go(point: number): Promise<Bucket> {\n    const { size, buckets, loadMode } = this;\n\n    if (point < 0 || point >= size) {\n      return buckets[this.point];\n    }\n\n    this.updateRemainRange(point, this.maxRemain, buckets.length);\n    if (loadMode === \"fast\" && this.maxRemain !== buckets.length) {\n      buckets.forEach((bucket: Bucket, index: number) => {\n        if (this.includeRemainRange(index)) {\n          if (bucket.entity === null && bucket.promise === null) {\n            bucket.promise = this.downloadAndParseVideo(bucket);\n          }\n        } else {\n          bucket.entity = null;\n          bucket.promise = null;\n        }\n      });\n    }\n\n    return this.get();\n  }\n\n  /**\n   * 清理所有的bucket\n   * @returns\n   */\n  async clear(needRemoveFiles: boolean = true): Promise<void> {\n    const { buckets } = this;\n\n    this.point = 0;\n    this.remainStart = 0;\n    this.remainEnd = 0;\n    this.maxRemain = 3;\n    this.buckets = [];\n\n    if (needRemoveFiles) {\n      await this.options.cleanup(buckets);\n    }\n  }\n}\n","import type { RawImage, PlatformImage } from \"octopus-platform\";\nimport { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport { generateImageBufferFromCode, IQrCodeImgOptions } from \"./qrcode\";\nimport { getBufferFromImageData } from \"./png\";\nimport type { ResourceManager } from \"./ResourceManager\";\nimport type { Painter } from \"../core/painter\";\nimport type { PlatformVideo, PlatformRenderingContext2D } from \"../types\";\n\ninterface VideoEditorOptions {\n  // 模式: R 替换, A 追加\n  mode?: \"R\" | \"A\";\n}\n\nexport class VideoEditor {\n  constructor(\n    private readonly painter: Painter,\n    private readonly resource: ResourceManager,\n    private readonly entity: PlatformVideo.Video\n  ) {}\n\n  private async set(\n    key: string,\n    value: RawImage,\n    mode: VideoEditorOptions[\"mode\"] = \"R\"\n  ) {\n    const { entity, resource } = this;\n\n    if (mode === \"A\") {\n      await resource.loadImagesWithRecord(\n        { [key]: value },\n        entity.filename,\n        \"dynamic\"\n      );\n    } else {\n      entity.images[key] = value;\n    }\n  }\n\n  /**\n   * 获取自定义编辑器\n   * @returns\n   */\n  getContext() {\n    return this.painter.YC;\n  }\n\n  /**\n   * 是否是有效的Key\n   * @param key\n   * @returns\n   */\n  hasValidKey(key: string): boolean {\n    const { images } = this.entity;\n\n    if (typeof Object.hasOwn === \"function\") {\n      return Object.hasOwn(images, key);\n    }\n\n    return Object.prototype.hasOwnProperty.call(images, key);\n  }\n\n  /**\n   * 加载并缓存图片\n   * @param source\n   * @param url\n   * @returns\n   */\n  loadImage(\n    source: Uint8Array | string,\n    url: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return this.resource.loadExtImage(source, platform.path.filename(url));\n  }\n\n  /**\n   * 创建画布图片\n   * @param key\n   * @param context\n   * @param options\n   * @returns\n   */\n  async setCanvas(\n    key: string,\n    context: PlatformRenderingContext2D,\n    options?: VideoEditorOptions & { width?: number; height?: number }\n  ) {\n    if (this.entity.locked) return;\n\n    const { canvas } = context;\n    const width = options?.width ?? canvas.width;\n    const height = options?.height ?? canvas.height;\n    const imageData = context.getImageData(0, 0, width, height);\n\n    await this.set(\n      key,\n      new Uint8Array(getBufferFromImageData(imageData)),\n      options?.mode\n    );\n  }\n\n  /**\n   * 创建二进制图片\n   * @param key\n   * @param buff\n   * @param options\n   * @returns\n   */\n  async setImage(key: string, url: string, options?: VideoEditorOptions) {\n    if (this.entity.locked) return;\n\n    if (url.startsWith(\"data:image\")) {\n      await this.set(key, url, options?.mode);\n    } else {\n      await this.set(\n        key,\n        new Uint8Array(await Parser.download(url)),\n        options?.mode\n      );\n    }\n  }\n\n  /**\n   * 创建二维码图片\n   * @param key\n   * @param code\n   * @param options\n   * @returns\n   */\n  async setQRCode(\n    key: string,\n    code: string,\n    options: VideoEditorOptions & Omit<IQrCodeImgOptions, \"code\">\n  ) {\n    if (this.entity.locked) return;\n\n    await this.set(\n      key,\n      new Uint8Array(generateImageBufferFromCode({ ...options, code })),\n      options?.mode\n    );\n  }\n}\n","import type { RawImage, PlatformImage, Bitmap } from \"octopus-platform\";\nimport { Painter } from \"../core/painter\";\nimport { platform } from \"../platform\";\nimport type { RawImages } from \"../types\";\n\nexport class ResourceManager {\n  /**\n   * 判断是否是 ImageBitmap\n   * @param img\n   * @returns\n   */\n  private static isBitmap(img: any): boolean {\n    return platform.globals.env === \"h5\" && img instanceof ImageBitmap;\n  }\n\n  /**\n   * 释放内存资源（图片）\n   * @param img\n   */\n  private static releaseOne(img: PlatformImage | ImageBitmap) {\n    if (ResourceManager.isBitmap(img)) {\n      (img as ImageBitmap).close();\n    } else if ((img as PlatformImage).src !== \"\") {\n      // 【微信】将存在本地的文件删除，防止用户空间被占满\n      if (\n        platform.globals.env === \"weapp\" &&\n        (img as PlatformImage).src.includes(\n          platform.path.USER_DATA_PATH\n        )\n      ) {\n        platform.local!.remove((img as PlatformImage).src);\n      }\n\n      platform.image.release(img as PlatformImage);\n    }\n  }\n\n  // FIXME: 微信小程序创建调用太多createImage会导致微信/微信小程序崩溃\n  private caches: Array<PlatformImage | ImageBitmap> = [];\n\n  /**\n   * 动态素材\n   */\n  public readonly dynamicMaterials: Map<string, Bitmap> =\n    new Map();\n\n  /**\n   * 素材\n   */\n  public readonly materials: Map<string, Bitmap> = new Map();\n\n  /**\n   * 已清理Image对象的坐标\n   */\n  private point: number = 0;\n\n  constructor(private readonly painter: Painter) {}\n\n  /**\n   * 创建图片标签\n   * @returns\n   */\n  private createImage(): PlatformImage {\n    let img: PlatformImage | null = null;\n\n    if (this.point > 0) {\n      this.point--;\n      img = this.caches.shift() as PlatformImage;\n    }\n\n    if (!img) {\n      img = platform.image.create(this.painter.X!);\n    }\n\n    this.caches.push(img);\n\n    return img;\n  }\n\n  /**\n   * 将 ImageBitmap 插入到 caches\n   * @param img\n   */\n  private inertBitmapIntoCaches(\n    img: PlatformImage | ImageBitmap\n  ) {\n    if (ResourceManager.isBitmap(img)) {\n      this.caches.push(img);\n    }\n  }\n\n  /**\n   * 加载额外的图片资源\n   * @param source 资源内容/地址\n   * @param filename 文件名称\n   * @returns\n   */\n  public loadExtImage(\n    source: string | Uint8Array,\n    filename: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return platform.image\n      .load(\n        () => this.createImage(),\n        source,\n        platform.path.resolve(filename, \"ext\")\n      )\n      .then((img) => {\n        this.inertBitmapIntoCaches(img);\n\n        return img;\n      });\n  }\n\n  /**\n   * 加载图片集\n   * @param images 图片数据\n   * @param filename 文件名称\n   * @returns\n   */\n  public async loadImagesWithRecord(\n    images: RawImages,\n    filename: string,\n    type: \"normal\" | \"dynamic\" = \"normal\"\n  ): Promise<void> {\n    const imageAwaits: Promise<void>[] = [];\n    const imageFilename = `${filename.replace(/\\.svga$/g, \"\")}.png`;\n\n    Object.entries(images).forEach(([name, image]) => {\n      // 过滤 1px 透明图\n      if (image instanceof Uint8Array && image.byteLength < 70) {\n        return;\n      }\n\n      const p = platform.image\n        .load(\n          () => this.createImage(),\n          image as RawImage,\n          platform.path.resolve(\n            imageFilename,\n            type === \"dynamic\" ? `dyn_${name}` : name\n          )\n        )\n        .then((img) => {\n          this.inertBitmapIntoCaches(img);\n          if (type === \"dynamic\") {\n            this.dynamicMaterials.set(name, img);\n          } else {\n            this.materials.set(name, img);\n          }\n        });\n\n      imageAwaits.push(p);\n    });\n\n    await Promise.all(imageAwaits);\n  }\n\n  /**\n   * 释放图片资源\n   */\n  public release(): void {\n    // FIXME: 小程序 image 对象需要手动释放内存，否则可能导致小程序崩溃\n    for (const img of this.caches) {\n      ResourceManager.releaseOne(img);\n    }\n\n    this.materials.clear();\n    this.dynamicMaterials.clear();\n    // FIXME: 支付宝小程序 image 修改 src 无法触发 onload 事件\n    platform.globals.env === \"alipay\" ? this.cleanup() : this.tidyUp();\n  }\n\n  /**\n   * 整理图片资源，将重复的图片资源移除\n   */\n  private tidyUp() {\n    // 通过 Set 的去重特性，保持 caches 元素的唯一性\n    this.caches = Array.from(new Set(this.caches));\n    this.point = this.caches.length;\n  }\n\n  /**\n   * 清理图片资源\n   */\n  public cleanup(): void {\n    this.caches.length = 0;\n    this.point = 0;\n  }\n}\n","import type { PlatformCanvas } from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport { Painter } from \"../painter\";\nimport { Config } from \"./config\";\nimport { Animator, Renderer2D } from \"../../extensions\";\nimport { ResourceManager } from \"../../helper\";\nimport {\n  type PlatformVideo,\n  type PlayerConfigOptions,\n  type PlayerConfig,\n  type PlayerEventCallback,\n  type PlayerProcessEventCallback,\n  PLAYER_PLAY_MODE,\n  PLAYER_FILL_MODE,\n} from \"../../types\";\n\n/**\n * SVGA 播放器\n */\nexport class Player {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 当前配置项\n   */\n  private readonly config = new Config();\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter = new Painter();\n\n  /**\n   * 动画实例\n   */\n  private readonly animator: Animator = new Animator();\n\n  /**\n   * 渲染器实例\n   */\n  private renderer: Renderer2D | null = null;\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   * @property container 主屏，播放动画的 Canvas 元素\n   * @property secondary 副屏，播放动画的 Canvas 元素\n   * @property loop 循环次数，默认值 0（无限循环）\n   * @property fillMode 最后停留的目标模式，类似于 animation-fill-mode，接受值 forwards 和 fallbacks，默认值 forwards。\n   * @property playMode 播放模式，接受值 forwards 和 fallbacks ，默认值 forwards。\n   * @property startFrame 单个循环周期内开始播放的帧数，默认值 0\n   * @property endFrame 单个循环周期内结束播放的帧数，默认值 0\n   * @property loopStartFrame 循环播放的开始帧，仅影响第一个周期的开始帧，默认值 0\n   * @property enableInObserver 是否启用 IntersectionObserver 监听容器是否处于浏览器视窗内，默认值 false\n   */\n  public async setConfig(\n    options: string | PlayerConfigOptions,\n    component?: any\n  ): Promise<void> {\n    const config: PlayerConfigOptions =\n      typeof options === \"string\" ? { container: options } : options;\n    const { container, secondary } = config;\n\n    this.config.register(config);\n    // 监听容器是否处于浏览器视窗内\n    // this.setIntersectionObserver()\n    await this.painter.register(container, secondary, component);\n    this.renderer = new Renderer2D(this.painter.YC!);\n    this.resource = new ResourceManager(this.painter);\n    this.animator.onAnimate = platform.rAF.bind(\n      null,\n      this.painter.X as PlatformCanvas\n    );\n  }\n\n  /**\n   * 更新配置\n   * @param key\n   * @param value\n   */\n  public setItem<T extends keyof PlayerConfig>(\n    key: T,\n    value: PlayerConfig[T]\n  ): void {\n    this.config.setItem<T>(key, value);\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @returns Promise<void>\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) throw new Error(\"videoEntity undefined\");\n\n    const { images, filename } = videoEntity;\n\n    this.animator!.stop();\n    this.painter.clearSecondary();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 开始播放事件回调\n   * @param frame\n   */\n  public onStart?: PlayerEventCallback;\n  /**\n   * 重新播放事件回调\n   * @param frame\n   */\n  public onResume?: PlayerEventCallback;\n  /**\n   * 暂停播放事件回调\n   * @param frame\n   */\n  public onPause?: PlayerEventCallback;\n  /**\n   * 停止播放事件回调\n   * @param frame\n   */\n  public onStop?: PlayerEventCallback;\n  /**\n   * 播放中事件回调\n   * @param percent\n   * @param frame\n   * @param frames\n   */\n  public onProcess?: PlayerProcessEventCallback;\n  /**\n   * 结束播放事件回调\n   * @param frame\n   */\n  public onEnd?: PlayerEventCallback;\n\n  /**\n   * 开始播放\n   */\n  public start(): void {\n    this.startAnimation();\n    this.onStart?.();\n  }\n\n  /**\n   * 重新播放\n   */\n  public resume(): void {\n    if (this.animator.resume()) {\n      this.onResume?.();\n    }\n  }\n\n  /**\n   * 暂停播放\n   */\n  public pause(): void {\n    if (this.animator.pause()) {\n      this.onPause?.();\n    }\n  }\n\n  /**\n   * 停止播放\n   */\n  public stop(): void {\n    this.animator.stop();\n    this.painter.clearContainer();\n    this.painter.clearSecondary();\n    this.onStop?.();\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.animator.stop();\n    this.painter.destroy();\n    this.renderer?.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n\n  /**\n   * 跳转到指定帧\n   * @param frame 目标帧\n   * @param andPlay 是否立即播放\n   */\n  public stepToFrame(frame: number, andPlay = false) {\n    if (!this.entity || frame < 0 || frame >= this.entity.frames) return;\n\n    this.pause();\n    this.config.loopStartFrame = frame;\n    if (andPlay) {\n      this.start();\n    }\n  }\n\n  /**\n   * 跳转到指定百分比\n   * @param percent 目标百分比\n   * @param andPlay 是否立即播放\n   */\n  public stepToPercentage(percent: number, andPlay: boolean = false) {\n    if (!this.entity) return;\n\n    const { frames } = this.entity;\n    let frame = percent < 0 ? 0 : Math.round(percent * frames);\n\n    if (frame >= frames) {\n      frame = frames - 1;\n    }\n\n    debugger;\n    this.stepToFrame(frame, andPlay);\n  }\n\n  /**\n   * 开始绘制动画\n   */\n  private startAnimation(): void {\n    const { entity, config, animator, painter, renderer, resource } = this;\n    const { W, H } = painter;\n    const { fillMode, playMode, contentMode } = config;\n    const {\n      currFrame,\n      startFrame,\n      endFrame,\n      totalFrame,\n      spriteCount,\n      aniConfig,\n    } = config.getConfig(entity!);\n    const { duration, loopStart, loop, fillValue } = aniConfig;\n    const isReverseMode = playMode === PLAYER_PLAY_MODE.FALLBACKS;\n\n    // 当前帧\n    let currentFrame = currFrame;\n    // 片段绘制结束位置\n    let tail = 0;\n    let nextTail: number;\n    // 上一帧\n    let latestFrame: number;\n    // 下一帧\n    let nextFrame: number;\n    // 精确帧\n    let exactFrame: number;\n    // 当前已完成的百分比\n    let percent: number;\n    // 是否还有剩余时间\n    let hasRemained: boolean;\n\n    // 更新动画基础信息\n    animator.setConfig(duration, loopStart, loop, fillValue);\n    renderer!.resize(contentMode, entity!.size, { width: W, height: H });\n\n    // 分段渲染函数\n    const MAX_DRAW_TIME_PER_FRAME = 8;\n    const MAX_ACCELERATE_DRAW_TIME_PER_FRAME = 3;\n    const MAX_DYNAMIC_CHUNK_SIZE = 34;\n    const MIN_DYNAMIC_CHUNK_SIZE = 1;\n    // 动态调整每次绘制的块大小\n    let dynamicChunkSize = 4; // 初始块大小\n    let startTime: number;\n    let chunk: number;\n    let elapsed: number;\n    // 使用`指数退避算法`平衡渲染速度和流畅度\n    const patchDraw = (before: () => void) => {\n      startTime = platform.now();\n      before();\n\n      while (tail < spriteCount) {\n        // 根据当前块大小计算nextTail\n        chunk = Math.min(dynamicChunkSize, spriteCount - tail);\n        nextTail = (tail + chunk) | 0;\n        renderer!.render(\n          entity!,\n          resource!.materials,\n          resource!.dynamicMaterials,\n          currentFrame,\n          tail,\n          nextTail\n        );\n        tail = nextTail;\n        // 动态调整块大小\n        elapsed = platform.now() - startTime;\n\n        if (elapsed < MAX_ACCELERATE_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.min(\n            dynamicChunkSize * 2,\n            MAX_DYNAMIC_CHUNK_SIZE\n          ); // 加快绘制\n        } else if (elapsed > MAX_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.max(\n            dynamicChunkSize / 2,\n            MIN_DYNAMIC_CHUNK_SIZE\n          ); // 减慢绘制\n          break;\n        }\n      }\n    };\n\n    // 动画绘制过程\n    animator.onUpdate = (timePercent: number) => {\n      patchDraw(() => {\n        percent = isReverseMode ? 1 - timePercent : timePercent;\n        exactFrame = percent * totalFrame;\n\n        if (isReverseMode) {\n          nextFrame =\n            (timePercent === 0 ? endFrame : Math.ceil(exactFrame)) - 1;\n          // FIXME: 倒序会有一帧的偏差，需要校准当前帧\n          percent = currentFrame / totalFrame;\n        } else {\n          nextFrame = timePercent === 1 ? startFrame : Math.floor(exactFrame);\n        }\n\n        hasRemained = currentFrame === nextFrame;\n      });\n\n      if (hasRemained) return;\n\n      painter.clearContainer();\n      painter.stick();\n      painter.clearSecondary();\n      latestFrame = currentFrame;\n      currentFrame = nextFrame;\n      tail = 0;\n      this.onProcess?.(~~(percent * 100) / 100, latestFrame);\n    };\n    animator.onStart = () => {\n      entity!.locked = true;\n    };\n    animator.onEnd = () => {\n      entity!.locked = false;\n      // 如果不保留最后一帧渲染，则清空画布\n      if (fillMode === PLAYER_FILL_MODE.NONE) {\n        painter.clearContainer();\n      }\n\n      this.onEnd?.();\n    };\n    animator.start();\n  }\n}\n","import { Renderer2D } from \"../../extensions\";\nimport { ResourceManager } from \"../../helper\";\nimport { Painter } from \"../painter\";\nimport {\n  type PlatformVideo,\n  type PosterConfig,\n  type PosterConfigOptions,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Poster {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 海报配置项\n   */\n  private readonly config: PosterConfig = {\n    /**\n     * 主屏，绘制海报的 Canvas 元素\n     */\n    container: \"\",\n    /**\n     * 填充模式，类似于 content-mode。\n     */\n    contentMode: PLAYER_CONTENT_MODE.FILL,\n    /**\n     * 绘制成海报的帧，默认是0。\n     */\n    frame: 0,\n  };\n\n  /**\n   * 是否配置完成\n   */\n  private isConfigured = false;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter: Painter;\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  /**\n   * 渲染器实例\n   */\n  private renderer: Renderer2D | null = null;\n\n  constructor(width: number, height: number) {\n    this.painter = new Painter(\"poster\", width, height);\n  }\n\n  /**\n   * 注册 SVGA 海报\n   * @param selector 容器选择器\n   * @param component 组件\n   */\n  private async register(\n    selector: string = \"\",\n    component?: any\n  ): Promise<void> {\n    await this.painter.register(selector, \"\", component);\n    this.renderer = new Renderer2D(this.painter.YC!);\n    this.resource = new ResourceManager(this.painter);\n  }\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   */\n  public async setConfig(\n    options: string | PosterConfigOptions = {},\n    component?: any\n  ): Promise<void> {\n    if (typeof options === \"string\") {\n      this.config.container = options;\n    } else {\n      Object.assign(this.config, options);\n    }\n\n    this.isConfigured = true;\n    await this.register(this.config.container, component);\n  }\n\n  /**\n   * 修改内容模式\n   * @param contentMode\n   */\n  public setContentMode(contentMode: PLAYER_CONTENT_MODE): void {\n    this.config.contentMode = contentMode;\n  }\n\n  /**\n   * 设置当前帧\n   * @param frame\n   */\n  public setFrame(frame: number): void {\n    this.config.frame = frame;\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @param currFrame\n   * @returns\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) {\n      throw new Error(\"videoEntity undefined\");\n    }\n\n    if (!this.isConfigured) {\n      await this.register();\n      this.isConfigured = true;\n    }\n\n    const { images, filename } = videoEntity;\n\n    this.painter.clearContainer();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 绘制海报\n   */\n  public draw(): void {\n    if (!this.entity) return;\n\n    const { painter, renderer, resource, entity, config } = this;\n\n    renderer!.resize(config.contentMode, entity!.size, painter.X!);\n    renderer!.render(\n      entity!,\n      resource!.materials,\n      resource!.dynamicMaterials,\n      config.frame,\n      0,\n      entity!.sprites.length\n    );\n  }\n\n  /**\n   * 获取海报的 ImageData 数据\n   */\n  public toImageData(): ImageData {\n    const { XC: context, W: width, H: height } = this.painter;\n\n    return context!.getImageData(0, 0, width, height);\n  }\n\n  /**\n   * 销毁海报\n   */\n  public destroy(): void {\n    this.painter.destroy();\n    this.renderer?.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n}\n"],"names":["platform","OctopusPlatform","now","path","remote","local","decode","image","rAF","getSelector","getCanvas","getOfsCanvas","constructor","super","pluginSelector","pluginCanvas","pluginOfsCanvas","pluginDecode","pluginDownload","pluginFsm","pluginImage","pluginNow","pluginPath","pluginRAF","this","init","installPlugin","plugin","readFloatLE","dataViewPool","Array","fill","map","DataView","ArrayBuffer","currentViewIndex","buf","pos","length","RangeError","view","u8","Uint8Array","buffer","getFloat32","readFloatLEImpl","Preflight","caches","Map","count","size","hitCount","calculate","reader","end","startPos","endPos","Math","min","len","buff","start","step","hash","i","toString","calculateHash","max","floor","has","key","hit","get","set","value","clear","Reader","static","preflight","indexOutOfRange","writeLength","readVarint32Slow","byte","shift","undefined","uint32","int32","float","getBytesRange","bytes","EMPTY_UINT8ARRAY","subarray","string","result","utf8","skip","Error","skipType","wireType","Layout","message","tag","x","y","width","height","format","Transform","a","b","c","d","tx","ty","ShapeArgs","RectArgs","cornerRadius","EllipseArgs","radiusX","radiusY","RGBAColor","r","g","ShapeStyle","stroke","strokeWidth","lineCap","lineJoin","miterLimit","lineDashI","lineDashII","lineDashIII","lineDash","push","ShapeEntity","type","shape","rect","ellipse","styles","transform","FrameEntity","alpha","layout","clipPath","shapes","HIDDEN_FRAME","SpriteEntity","imageKey","frames","matteKey","MovieParams","viewBoxWidth","viewBoxHeight","fps","MovieEntity","end2","tag2","version","params","EMPTY_U8","images","sprites","filename","locked","dynamicElements","PointPool","pool","acquire","pop","x1","y1","x2","y2","release","point","Renderer2D","context","Set","parseSVGPath","SVG_LETTER_REGEXP","currentIndex","state","currentCommand","currentArgs","char","test","command","args","trim","fillOrStroke","resetShapeStyles","strokeStyle","lineWidth","fillStyle","setLineDash","calculateScale","contentMode","videoSize","canvasSize","imageRatio","viewRatio","isAspectFit","createTransform","scale","translateX","translateY","scaleX","scaleY","pointPool","currentPoint","lastResizeKey","globalTransform","setTransform","drawBezier","save","beginPath","commands","SVG_PATH","drawBezierElement","split","filter","Boolean","restore","method","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","closePath","drawEllipse","w","h","kappa","ox","oy","xe","ye","xm","ym","drawRect","radius","arcTo","drawShape","drawSprite","frame","bitmap","dynamicElement","globalAlpha","drawImage","resize","canvasWidth","canvasHeight","videoWidth","videoHeight","resizeKey","lastTransform","render","videoEntity","materials","dynamicMaterials","currentFrame","head","tail","sprite","destroy","Animator","isRunning","startTime","duration","loopStart","pauseTime","loopDuration","onAnimate","onStart","noop","onUpdate","onEnd","setConfig","loop","fillValue","doFrame","resume","pause","stop","doDeltaTime","deltaTime","percent","ended","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","j","fl","revfl","fd","revfd","rev","hMap","cd","mb","s","l","le","co","rvb","sv","v","m","flt","fdt","flm","flrm","fdm","fdrm","bits","p","o","bits16","shft","slc","e","ec","err","ind","msg","nt","code","captureStackTrace","wbits","wbits16","hTree","t","f","t2","slice","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","dt","lft","cst","n","lc","cl","cli","cln","cls","clen","cf","wfblk","out","dat","wblk","final","syms","lf","df","li","bs","bl","dlt","mlb","ddt","mdb","lclt","nlc","lcdt","ndc","lcfreq","lct","mlcb","nlcc","flen","ftlen","dtlen","lm","ll","dm","dl","llm","lcts","it","clct","sym","dst","deo","adler","dopt","opt","pre","post","st","dictionary","dict","newDat","lvl","plvl","z","ceil","lst","msk","prev","bs1","bs2","hsh","wi","hv","imod","pimod","rem","ch","dif","maxn","maxd","ml","nl","mmd","md","ti","lin","din","dflt","level","mem","log","wbytes","zlibSync","data","opts","lv","zlh","unzlibSync","sl","noBuf","noSt","cbuf","nbuf","bt","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","lms","dms","lpos","add","dsym","dend","inflt","CRC32","Uint32Array","from","_","TypeError","bytesToString","crc","WHITE_COLOR","table","PNGEncoder","crc32","createChunk","setUint32","chunkType","charCodeAt","partialChunk","createIHDRChunk","ihdrData","setUint8","createIDATChunk","validRowSize","rowSize","pixelsData","startIdx","srcStart","setPixel","pixel","write","pixels","flush","iHDRChunk","iDATChunk","iENDChunk","pngData","offset","BitBuffer","lengthInBits","getAt","bufIndex","put","num","putBit","bit","QRMode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","BitByte","parsedData","byteArray","flat","unshift","mode","RS_BLOCK_TABLE","RSBlock","getRSBlockTable","typeNumber","errorCorrectLevel","getRSBlocks","rsBlock","list","totalCount","dataCount","EXP_TABLE","LOG_TABLE","QRMath","glog","gexp","Polynomial","multiply","mod","ratio","PATTERN_POSITION_TABLE","genBCHDigit","log2","BCH_G15","BCH_G18","Util","getBCHTypeInfo","getBCHTypeNumber","getPatternPosition","getMaskFunction","maskPattern","_i","getErrorCorrectPolynomial","errorCorrectLength","getLengthInBits","getLostPoint","qr","moduleCount","getModuleCount","lostPoint","row","col","dark","isDark","sameCount","nRow","nCol","darkCount","abs","pow","QRCode","modules","dataCache","dataList","makeImpl","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","nr","nc","getBestMaskPattern","minLostPoint","pattern","rsBlocks","totalDataCount","createBytes","maskFunc","inc","bitIndex","byteIndex","bitBuffer","dcdata","ecdata","maxDcCount","maxEcCount","dcCount","ecCount","rsPoly","modPoly","modIndex","totalCodeCount","index","addData","make","Parser","decompress","parseVideo","url","needDecompress","video","createVideoEntity","download","globals","env","supportLocal","filepath","is","resolve","exists","read","fetch","ex","console","error","load","Painter","X","XC","Y","YC","W","model","dpr","setModel","navigator","userAgent","includes","register","selector","ofsSelector","component","globalThis","canvas","clearContainer","clearRect","clearSecondary","stick","ofsResult","Config","fillMode","playMode","startFrame","endFrame","loopStartFrame","config","setItem","getConfig","entity","spriteCount","frameDuration","currFrame","extFrame","totalFrame","aniConfig","Infinity","generateImageBufferFromCode","options","correctLevel","codeColor","backgroundColor","parseOptions","arguments","callee","padding","cellSize","calcCellSizeAndPadding","CODE_COLOR","replace","BACKGROUND_COLOR","png","generateImageFromCode","toDataURL","getBufferFromImageData","imageData","getDataURLFromImageData","isZlibCompressed","cmf","flg","adler32Bytes","adler32","VideoManager","maxRemain","remainStart","remainEnd","loadMode","buckets","preprocess","bucket","origin","postprocess","cleanup","forEach","remove","Object","assign","updateRemainRange","includeRemainRange","downloadAndParseVideo","needParse","createBucket","needDownloadAndParse","promise","prepare","urls","preloadBucket","Promise","all","then","getPoint","go","needRemoveFiles","VideoEditor","painter","resource","loadImagesWithRecord","getContext","hasValidKey","hasOwn","prototype","hasOwnProperty","call","loadImage","source","loadExtImage","setCanvas","getImageData","setImage","startsWith","setQRCode","ResourceManager","isBitmap","img","ImageBitmap","releaseOne","close","src","USER_DATA_PATH","createImage","create","inertBitmapIntoCaches","imageAwaits","imageFilename","entries","name","byteLength","tidyUp","Player","animator","renderer","container","secondary","bind","mount","onResume","onPause","onStop","onProcess","startAnimation","stepToFrame","andPlay","stepToPercentage","round","isReverseMode","nextTail","latestFrame","nextFrame","exactFrame","hasRemained","chunk","elapsed","dynamicChunkSize","timePercent","before","patchDraw","Poster","isConfigured","setContentMode","setFrame","draw","toImageData"],"mappings":"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,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB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"}