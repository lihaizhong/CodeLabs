{"version":3,"file":"index.js","sources":["../../../node_modules/.pnpm/@rollup+plugin-typescript@12.1.4_rollup@4.45.1_tslib@2.8.1_typescript@5.8.3/node_modules/tslib/tslib.es6.js","../../octopus-platform/esm/index.js","../src/platform/index.ts","../src/extensions/resource-manager/index.ts","../src/extensions/svga-decoder/io/float.ts","../src/shared/hash.ts","../src/extensions/svga-decoder/io/preflight.ts","../src/extensions/svga-decoder/io/Reader.ts","../src/extensions/svga-decoder/serialization/Layout.ts","../src/extensions/svga-decoder/serialization/Transform.ts","../src/extensions/svga-decoder/serialization/ShapeArgs.ts","../src/extensions/svga-decoder/serialization/RectArgs.ts","../src/extensions/svga-decoder/serialization/EllipseArgs.ts","../src/extensions/svga-decoder/serialization/RGBAColor.ts","../src/extensions/svga-decoder/serialization/ShapeStyle.ts","../src/extensions/svga-decoder/serialization/ShapeEntity.ts","../src/extensions/svga-decoder/serialization/FrameEntity.ts","../src/extensions/svga-decoder/serialization/SpriteEntity.ts","../src/extensions/svga-decoder/serialization/MovieParams.ts","../src/extensions/svga-decoder/serialization/MovieEntity.ts","../src/extensions/svga-decoder/index.ts","../src/shared/PointPool.ts","../src/extensions/svga-renderer/2d/Renderer2D.ts","../src/extensions/svga-renderer/2d/index.ts","../src/extensions/svga-animator/index.ts","../src/extensions/zlib/index.ts","../src/extensions/png-encoder/crc.ts","../src/extensions/png-encoder/index.ts","../src/extensions/qrcode-encoder/bit-buffer.ts","../src/extensions/qrcode-encoder/constants.ts","../src/extensions/qrcode-encoder/bit-byte.ts","../src/extensions/qrcode-encoder/block.ts","../src/extensions/qrcode-encoder/math.ts","../src/extensions/qrcode-encoder/polynomial.ts","../src/extensions/qrcode-encoder/util.ts","../src/extensions/qrcode-encoder/index.ts","../src/core/parser/index.ts","../src/core/painter/index.ts","../src/core/player/config.ts","../src/core/player/index.ts","../src/core/poster/index.ts","../src/helper/qrcode.ts","../src/helper/png.ts","../src/helper/zlib.ts","../src/helper/VideoManager.ts","../src/helper/VideoEditor.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","const noop = (() => { });\n\nfunction delay(callback, interval) {\n    return new Promise((resolve) => setTimeout(() => resolve(callback()), interval));\n}\nasync function retry(fn, intervals = [], \n/*\n * @private 不建议外部传入\n */\ntimes = 0) {\n    try {\n        return fn();\n    }\n    catch (err) {\n        if (times >= intervals.length) {\n            throw err;\n        }\n        return delay(() => retry(fn, intervals, ++times), intervals[times]);\n    }\n}\n\n// 使用静态缓冲区，避免重复创建\nconst BUFFER_SIZE = 4096; // 更大的缓冲区，减少字符串拼接次数\nconst STATIC_BUFFER = new Uint16Array(BUFFER_SIZE); // 预分配ASCII缓冲区\n/**\n * 优化的 UTF-8 解码函数\n * 主要优化点：\n * 1. 使用静态缓冲区减少内存分配\n * 2. 批量处理 ASCII 字符\n * 3. 优化循环结构和条件判断\n * 4. 使用 Uint16Array 代替普通数组提高性能\n */\nfunction utf8(buffer, start, end) {\n    // 边界检查\n    if (start < 0 || end > buffer.length)\n        throw new RangeError(\"Index out of range\");\n    if (end - start < 1)\n        return \"\";\n    const resultParts = [];\n    let bufferPos = 0;\n    const appendBuffer = (parts) => {\n        resultParts.push(String.fromCharCode.apply(null, Array.from(parts)));\n    };\n    // 快速路径：检查是否全是 ASCII\n    let allAscii = true;\n    for (let i = start; i < end; i++) {\n        if (buffer[i] > 0x7F) {\n            allAscii = false;\n            break;\n        }\n    }\n    // 全 ASCII 优化路径\n    if (allAscii) {\n        for (let i = start; i < end; i += BUFFER_SIZE) {\n            const chunkEnd = Math.min(i + BUFFER_SIZE, end);\n            const len = chunkEnd - i;\n            // 直接复制到 Uint16Array\n            for (let j = 0; j < len; j++) {\n                STATIC_BUFFER[j] = buffer[i + j];\n            }\n            appendBuffer(STATIC_BUFFER.subarray(0, len));\n        }\n        return resultParts.join('');\n    }\n    // 混合内容处理\n    for (let i = start; i < end;) {\n        const byte = buffer[i++];\n        // ASCII 字符处理\n        if (byte < 0x80) {\n            STATIC_BUFFER[bufferPos++] = byte;\n            // 如果缓冲区满了，提交并清空\n            if (bufferPos === BUFFER_SIZE) {\n                appendBuffer(STATIC_BUFFER);\n                bufferPos = 0;\n            }\n            continue;\n        }\n        // 提交之前的 ASCII 字符\n        if (bufferPos > 0) {\n            appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n            bufferPos = 0;\n        }\n        // 变长编码处理 - 使用查表法代替多个条件判断\n        let codePoint;\n        // 2 字节序列: 110xxxxx 10xxxxxx\n        if ((byte & 0xE0) === 0xC0 && i < end) {\n            codePoint = ((byte & 0x1F) << 6) | (buffer[i++] & 0x3F);\n        }\n        // 3 字节序列: 1110xxxx 10xxxxxx 10xxxxxx\n        else if ((byte & 0xF0) === 0xE0 && i + 1 < end) {\n            codePoint = ((byte & 0x0F) << 12) |\n                ((buffer[i++] & 0x3F) << 6) |\n                (buffer[i++] & 0x3F);\n        }\n        // 4 字节序列: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n        else if ((byte & 0xF8) === 0xF0 && i + 2 < end) {\n            codePoint = ((byte & 0x07) << 18) |\n                ((buffer[i++] & 0x3F) << 12) |\n                ((buffer[i++] & 0x3F) << 6) |\n                (buffer[i++] & 0x3F);\n            // 处理 Unicode 代理对\n            if (codePoint > 0xFFFF) {\n                codePoint -= 0x10000;\n                STATIC_BUFFER[bufferPos++] = 0xD800 + (codePoint >> 10);\n                STATIC_BUFFER[bufferPos++] = 0xDC00 + (codePoint & 0x3FF);\n                // 检查缓冲区是否需要提交\n                if (bufferPos >= BUFFER_SIZE - 2) { // 预留空间给下一个可能的代理对\n                    appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n                    bufferPos = 0;\n                }\n                continue;\n            }\n        }\n        // 无效的 UTF-8 序列\n        else {\n            codePoint = 0xFFFD; // Unicode 替换字符\n            // 跳过可能的后续字节\n            while (i < end && (buffer[i] & 0xC0) === 0x80)\n                i++;\n        }\n        STATIC_BUFFER[bufferPos++] = codePoint;\n        // 检查缓冲区是否需要提交\n        if (bufferPos >= BUFFER_SIZE - 3) { // 预留空间给下一个可能的多字节字符\n            appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n            bufferPos = 0;\n        }\n    }\n    // 提交剩余字符\n    if (bufferPos > 0) {\n        appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n    }\n    return resultParts.join('');\n}\n\nclass OctopusPlatform {\n    /**\n     * 插件列表\n     */\n    plugins = [];\n    /**\n     * 平台版本\n     */\n    platformVersion = \"0.1.3\";\n    /**\n     * 应用版本\n     */\n    version = \"\";\n    /**\n     * 全局变量\n     */\n    globals = {\n        env: \"unknown\",\n        br: null,\n        dpr: 1,\n        system: \"\",\n    };\n    noop = noop;\n    retry = retry;\n    constructor(plugins, version) {\n        this.version = version || \"\";\n        this.plugins = plugins;\n        this.globals.env = this.autoEnv();\n    }\n    init() {\n        const { globals, plugins } = this;\n        const collection = new Map();\n        const names = [];\n        const installedPlugins = new Set();\n        globals.br = this.useBridge();\n        globals.dpr = this.usePixelRatio();\n        globals.system = this.useSystem();\n        for (const plugin of plugins) {\n            names.push(plugin.name);\n            collection.set(plugin.name, plugin);\n        }\n        this.usePlugins(collection, names, installedPlugins);\n        installedPlugins.clear();\n    }\n    autoEnv() {\n        if (typeof window !== \"undefined\") {\n            return \"h5\";\n        }\n        // FIXME：由于抖音场景支持wx对象，所以需要放在wx对象之前检查\n        if (typeof tt !== \"undefined\") {\n            return \"tt\";\n        }\n        if (typeof my !== \"undefined\") {\n            return \"alipay\";\n        }\n        if (typeof wx !== \"undefined\") {\n            return \"weapp\";\n        }\n        if (typeof has !== \"undefined\") {\n            return \"harmony\";\n        }\n        throw new Error(\"Unsupported platform！\");\n    }\n    useBridge() {\n        switch (this.globals.env) {\n            case \"alipay\":\n                return my;\n            case \"tt\":\n                return tt;\n            case \"weapp\":\n                return wx;\n        }\n        return globalThis;\n    }\n    usePixelRatio() {\n        const { env, br } = this.globals;\n        if (env === \"h5\") {\n            return devicePixelRatio;\n        }\n        if (\"getWindowInfo\" in br) {\n            return br.getWindowInfo().pixelRatio;\n        }\n        if (\"getSystemInfoSync\" in br) {\n            return br.getSystemInfoSync().pixelRatio;\n        }\n        return 1;\n    }\n    useSystem() {\n        const { env } = this.globals;\n        let system;\n        switch (env) {\n            case \"weapp\":\n                system = wx.getDeviceInfo().platform;\n                break;\n            case \"alipay\":\n                system = my.getDeviceBaseInfo().platform;\n                break;\n            case \"tt\":\n                system = tt.getDeviceInfoSync().platform;\n                break;\n            case \"harmony\":\n                system = has.getSystemInfoSync().platform;\n                break;\n            case \"h5\":\n                if (\"userAgentData\" in navigator) {\n                    // @ts-ignore\n                    system = navigator.userAgentData.platform;\n                }\n                else {\n                    const UA = navigator.userAgent;\n                    if (/(Android|Adr)/i.test(UA)) {\n                        system = \"android\";\n                    }\n                    else if (/\\(i[^;]+;( U;)? CPU.+Mac OS X/i.test(UA)) {\n                        system = \"ios\";\n                    }\n                    else if (/HarmonyOS/i.test(UA)) {\n                        system = \"harmony\";\n                    }\n                    else {\n                        system = \"unknown\";\n                    }\n                }\n                break;\n            default:\n                system = \"unknown\";\n        }\n        return system.toLowerCase();\n    }\n    usePlugins(plugins, pluginNames, installedPlugins) {\n        for (const pluginName of pluginNames) {\n            if (!plugins.has(pluginName)) {\n                throw new Error(`Plugin ${pluginName} not found`);\n            }\n            if (installedPlugins.has(pluginName)) {\n                return;\n            }\n            const plugin = plugins.get(pluginName);\n            // 递归调用依赖\n            if (Array.isArray(plugin.dependencies)) {\n                for (const dependency of plugin.dependencies) {\n                    if (typeof plugins.get(dependency)?.install !== \"function\") {\n                        throw new Error(`Plugin ${pluginName} depends on plugin ${dependency}, but ${dependency} is not found`);\n                    }\n                }\n                // 递归加载依赖\n                this.usePlugins(plugins, plugin.dependencies, installedPlugins);\n            }\n            this.installPlugin(plugin);\n            installedPlugins.add(pluginName);\n        }\n    }\n    switch(env) {\n        this.globals.env = env;\n        this.init();\n    }\n}\n\n/**\n * 定义平台插件\n */\nconst definePlugin = (plugin) => plugin;\n\nfunction installPlugin(platform, plugin) {\n    const value = plugin.install.call(platform);\n    Object.defineProperty(platform, plugin.name, {\n        get: () => value,\n        enumerable: true,\n        configurable: true,\n    });\n}\n\nvar pluginSelector = definePlugin({\n    name: \"getSelector\",\n    install() {\n        const { env, br } = this.globals;\n        if (env === \"h5\") {\n            return (selector) => document.querySelector(selector);\n        }\n        return (selector, component) => (component || br)\n            .createSelectorQuery()\n            .select(selector)\n            .fields({ node: true, size: true });\n    },\n});\n\n/**\n * 通过选择器匹配获取canvas实例\n * @returns\n */\nvar pluginCanvas = definePlugin({\n    name: \"getCanvas\",\n    dependencies: [\"getSelector\"],\n    install() {\n        const { retry, getSelector } = this;\n        const { env, br, dpr } = this.globals;\n        const intervals = [50, 100, 100];\n        function initCanvas(canvas, width, height) {\n            if (!canvas) {\n                throw new Error(\"canvas not found.\");\n            }\n            // const MAX_SIZE = 1365;\n            const context = canvas.getContext(\"2d\");\n            // let virtualWidth = width * dpr;\n            // let virtualHeight = height * dpr;\n            // // 微信小程序限制canvas最大尺寸为 1365 * 1365\n            // if (\n            //   env === \"weapp\" &&\n            //   (virtualWidth > MAX_SIZE || virtualHeight > MAX_SIZE)\n            // ) {\n            //   if (virtualWidth > virtualHeight) {\n            //     virtualHeight = (virtualHeight / virtualWidth) * MAX_SIZE;\n            //     virtualWidth = MAX_SIZE;\n            //   } else {\n            //     virtualWidth = (virtualWidth / virtualHeight) * MAX_SIZE;\n            //     virtualHeight = MAX_SIZE;\n            //   }\n            // }\n            // canvas!.width = virtualWidth;\n            // canvas!.height = virtualHeight;\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n            return { canvas, context };\n        }\n        if (env === \"h5\") {\n            return (selector) => retry(() => {\n                // FIXME: Taro 对 canvas 做了特殊处理，canvas 元素的 id 会被加上 canvas-id 的前缀\n                const canvas = (getSelector(`canvas[canvas-id=${selector.slice(1)}]`) || getSelector(selector));\n                return initCanvas(canvas, canvas?.clientWidth, canvas?.clientHeight);\n            }, intervals);\n        }\n        return (selector, component) => retry(() => new Promise((resolve, reject) => {\n            let query = getSelector(selector, component);\n            query.exec((res) => {\n                const { node, width, height } = res[0] || {};\n                try {\n                    resolve(initCanvas(node, width, height));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        }), intervals);\n    },\n});\n\n/**\n * 用于处理数据解码\n * @returns\n */\nvar pluginDecode = definePlugin({\n    name: \"decode\",\n    install() {\n        const { env, br } = this.globals;\n        const b64Wrap = (b64, type = \"image/png\") => `data:${type};base64,${b64}`;\n        const decode = {\n            toBuffer(data) {\n                const { buffer, byteOffset, byteLength } = data;\n                if (buffer instanceof ArrayBuffer) {\n                    return buffer.slice(byteOffset, byteOffset + byteLength);\n                }\n                const view = new Uint8Array(byteLength);\n                view.set(data);\n                return view.buffer;\n            },\n            bytesToString(data) {\n                const chunkSize = 8192; // 安全的块大小\n                let result = \"\";\n                for (let i = 0; i < data.length; i += chunkSize) {\n                    const chunk = data.slice(i, i + chunkSize);\n                    // 在安全的块上使用 String.fromCharCode\n                    result += String.fromCharCode.apply(null, Array.from(chunk));\n                }\n                return result;\n            },\n        };\n        if (env === \"h5\") {\n            const textDecoder = new TextDecoder(\"utf-8\", { fatal: true });\n            return {\n                ...decode,\n                toDataURL: (data) => b64Wrap(btoa(decode.bytesToString(data))),\n                utf8: (data, start, end) => textDecoder.decode(data.subarray(start, end)),\n            };\n        }\n        return {\n            ...decode,\n            toDataURL: (data) => b64Wrap(br.arrayBufferToBase64(decode.toBuffer(data))),\n            utf8,\n        };\n    },\n});\n\n/**\n * 用于处理远程文件读取\n * @returns\n */\nvar pluginDownload = definePlugin({\n    name: \"remote\",\n    install() {\n        const { env, br } = this.globals;\n        const isRemote = (url) => /^(blob:)?http(s)?:\\/\\//.test(url);\n        if (env === \"h5\") {\n            return {\n                is: isRemote,\n                fetch: (url) => fetch(url).then((response) => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    throw new Error(`HTTP error, status=${response.status}, statusText=${response.statusText}`);\n                }),\n            };\n        }\n        function download(url, enableCache) {\n            return new Promise((resolve, reject) => {\n                br.request({\n                    url,\n                    // @ts-ignore 支付宝小程序必须有该字段\n                    dataType: \"arraybuffer\",\n                    responseType: \"arraybuffer\",\n                    enableCache,\n                    success: (res) => resolve(res.data),\n                    fail: reject,\n                });\n            }).catch((err) => {\n                const errorMessage = err.errMsg || err.errorMessage || err.message;\n                // FIXME: 可能存在写入网络缓存空间失败的情况，此时重新下载\n                if (errorMessage.includes(\"ERR_CACHE_WRITE_FAILURE\") ||\n                    errorMessage.includes(\"ERR_CACHE_WRITE_FAILED\")) {\n                    return download(url, false);\n                }\n                throw err;\n            });\n        }\n        return {\n            is: isRemote,\n            fetch: (url) => download(url, true),\n        };\n    },\n});\n\n/**\n * 用于处理本地文件存储\n * @returns\n */\nvar pluginFsm = definePlugin({\n    name: \"local\",\n    install() {\n        const { env, br } = this.globals;\n        if (env === \"h5\" || env === \"tt\") {\n            return null;\n        }\n        const fsm = br.getFileSystemManager();\n        return {\n            exists: (filepath) => new Promise((resolve) => {\n                fsm.access({\n                    path: filepath,\n                    success: () => resolve(true),\n                    fail: () => resolve(false),\n                });\n            }),\n            write: (data, filePath) => new Promise((resolve, reject) => {\n                fsm.writeFile({\n                    filePath,\n                    data,\n                    success: () => resolve(filePath),\n                    fail: reject,\n                });\n            }),\n            read: (filePath) => new Promise((resolve, reject) => {\n                fsm.readFile({\n                    filePath,\n                    success: (res) => resolve(res.data),\n                    fail: reject,\n                });\n            }),\n            remove: (filePath) => new Promise((resolve, reject) => {\n                fsm.unlink({\n                    filePath,\n                    success: () => resolve(filePath),\n                    fail: reject,\n                });\n            }),\n        };\n    },\n});\n\n/**\n * 图片加载插件\n * @package plugin-fsm 本地文件存储能力\n * @package plugin-path 路径处理能力\n * @package plugin-decode 解码能力\n */\nvar pluginImage = definePlugin({\n    name: \"image\",\n    dependencies: [\"local\", \"decode\"],\n    install() {\n        const { local, decode } = this;\n        const { env } = this.globals;\n        const printError = (msg) => console.error(`image error: ${msg}`);\n        let genImageSource = (data, _filepath) => (typeof data === \"string\" ? data : decode.toDataURL(data));\n        /**\n         * 加载图片\n         * @param img\n         * @param url\n         * @returns\n         */\n        function loadImage(img, url) {\n            return new Promise((resolve, reject) => {\n                img.onload = () => resolve(img);\n                img.onerror = () => reject(new Error(`SVGA LOADING FAILURE: ${url}`));\n                img.crossOrigin = \"anonymous\";\n                img.src = url;\n            });\n        }\n        function releaseImage(img) {\n            img.onload = null;\n            img.onerror = null;\n            img.src = \"\";\n        }\n        if (env === \"h5\") {\n            return {\n                create: (_) => new Image(),\n                load: async (createImage, data, filepath) => {\n                    // 由于ImageBitmap在图片渲染上有优势，故优先使用\n                    if (data instanceof Uint8Array && \"createImageBitmap\" in globalThis) {\n                        try {\n                            data = await createImageBitmap(new Blob([decode.toBuffer(data)]));\n                        }\n                        catch (ex) {\n                            printError(ex.message);\n                        }\n                    }\n                    if (data instanceof ImageBitmap) {\n                        return data;\n                    }\n                    return loadImage(createImage(), genImageSource(data, filepath));\n                },\n                release: releaseImage,\n            };\n        }\n        // FIXME: 支付宝小程序IDE保存临时文件会失败;抖音最大用户文件大小为10M\n        if (env === \"weapp\") {\n            genImageSource = async (data, filepath) => {\n                if (typeof data === \"string\") {\n                    return data;\n                }\n                // FIXME: IOS设备 微信小程序 Uint8Array转base64 时间较长，使用图片缓存形式速度会更快\n                return local\n                    .write(decode.toBuffer(data), filepath)\n                    .catch((ex) => {\n                    printError(ex.errorMessage || ex.errMsg || ex.message);\n                    return decode.toDataURL(data);\n                });\n            };\n        }\n        return {\n            create: (canvas) => canvas.createImage(),\n            load: async (createImage, data, filepath) => loadImage(createImage(), await genImageSource(data, filepath)),\n            release: releaseImage,\n        };\n    },\n});\n\nvar pluginNow = definePlugin({\n    name: \"now\",\n    install() {\n        const { env, br } = this.globals;\n        // performance可以提供更高精度的时间测量，且不受系统时间的调整（如更改系统时间或同步时间）的影响\n        const perf = env === \"h5\" || env === \"tt\" ? performance : br.getPerformance();\n        if (typeof perf?.now === \"function\") {\n            // 支付宝小程序的performance.now()获取的是当前时间戳，单位是微秒。\n            if (perf.now() - Date.now() > 1) {\n                return () => perf.now() / 1000;\n            }\n            // H5环境下，performance.now()获取的不是当前时间戳，而是从页面加载开始的时间戳，单位是毫秒。\n            return () => perf.now();\n        }\n        return () => Date.now();\n    },\n});\n\n/**\n * 用于创建离屏canvas\n * @returns\n */\nvar pluginOfsCanvas = definePlugin({\n    name: \"getOfsCanvas\",\n    install() {\n        const { env } = this.globals;\n        let createOffscreenCanvas;\n        if (env === \"h5\") {\n            createOffscreenCanvas = (options) => new OffscreenCanvas(options.width, options.height);\n        }\n        else if (env === \"alipay\") {\n            createOffscreenCanvas = (options) => my.createOffscreenCanvas(options);\n        }\n        else if (env === \"tt\") {\n            createOffscreenCanvas = (options) => {\n                const canvas = tt.createOffscreenCanvas();\n                canvas.width = options.width;\n                canvas.height = options.height;\n                return canvas;\n            };\n        }\n        else {\n            createOffscreenCanvas = (options) => wx.createOffscreenCanvas(options);\n        }\n        return (options) => {\n            const type = options.type || \"2d\";\n            const canvas = createOffscreenCanvas({ ...options, type });\n            const context = canvas.getContext(type);\n            return {\n                canvas,\n                context,\n            };\n        };\n    },\n});\n\n/**\n * 用于处理文件路径\n * @returns\n */\nvar pluginPath = definePlugin({\n    name: \"path\",\n    install() {\n        const { env, br } = this.globals;\n        const filename = (path) => {\n            const filepath = path.split(/\\?#/g)[0];\n            return filepath.substring(filepath.lastIndexOf(\"/\") + 1);\n        };\n        if (env === \"h5\" || env === \"tt\") {\n            return {\n                USER_DATA_PATH: \"\",\n                is: (_) => false,\n                filename,\n                resolve: (filename, prefix) => \"\",\n            };\n        }\n        const { USER_DATA_PATH } = br.env;\n        return {\n            USER_DATA_PATH,\n            is: (filepath) => filepath?.startsWith(USER_DATA_PATH),\n            filename,\n            resolve: (filename, prefix) => `${USER_DATA_PATH}/${prefix ? `${prefix}__` : \"\"}${filename}`,\n        };\n    },\n});\n\n/**\n * 用于处理requestAnimationFrame\n * @returns\n */\nvar pluginRaf = definePlugin({\n    name: \"rAF\",\n    install() {\n        const { env } = this.globals;\n        function requestAnimationFrameImpl() {\n            return (callback) => setTimeout(callback, Math.max(0, 16 - (Date.now() % 16)));\n        }\n        if (env === \"h5\") {\n            const rAF = \"requestAnimationFrame\" in globalThis\n                ? requestAnimationFrame\n                : requestAnimationFrameImpl();\n            return (_, callback) => rAF(callback);\n        }\n        return (canvas, callback) => {\n            // 检查canvas是否存在\n            try {\n                return canvas.requestAnimationFrame(callback);\n            }\n            catch (error) {\n                console.warn(error.message);\n                return requestAnimationFrameImpl()(callback);\n            }\n        };\n    },\n});\n\nvar pluginIntersectionObserver = definePlugin({\n    name: \"walkIn\",\n    install() {\n        const { env, br } = this.globals;\n        const thresholds = [0, 0.5, 1];\n        if (env === \"h5\") {\n            return (callback, selector, options = {}) => {\n                let observer = new IntersectionObserver((entries) => callback(entries[0].intersectionRatio > 0), {\n                    threshold: thresholds,\n                    root: options.root ? document.querySelector(options.root) : null,\n                });\n                if (options.observeAll) {\n                    document.querySelectorAll(selector)?.forEach((element) => observer.observe(element));\n                }\n                else {\n                    const element = document.querySelector(selector);\n                    if (element) {\n                        observer.observe(element);\n                    }\n                }\n                return () => {\n                    observer.disconnect();\n                    observer = null;\n                };\n            };\n        }\n        return (callback, selector, options = {}) => {\n            let observer = br.createIntersectionObserver(options.component, {\n                thresholds,\n                initialRatio: 0,\n                observeAll: options.observeAll,\n                // nativeMode: true,\n            });\n            if (options.root) {\n                observer.relativeTo(options.root);\n            }\n            else {\n                observer.relativeToViewport();\n            }\n            observer.observe(selector, (res) => callback(res.intersectionRatio > 0));\n            return () => {\n                observer.disconnect();\n                observer = null;\n            };\n        };\n    },\n});\n\nexport { OctopusPlatform, definePlugin, installPlugin, pluginCanvas, pluginDecode, pluginDownload, pluginFsm, pluginImage, pluginIntersectionObserver, pluginNow, pluginOfsCanvas, pluginPath, pluginRaf as pluginRAF, pluginSelector };\n//# sourceMappingURL=index.js.map\n","import {\n  type OctopusPlatformPlugins,\n  type OctopusPlatformPluginOptions,\n  OctopusPlatform,\n  installPlugin,\n  pluginSelector,\n  pluginCanvas,\n  pluginOfsCanvas,\n  pluginDecode,\n  pluginDownload,\n  pluginFsm,\n  pluginImage,\n  pluginNow,\n  pluginPath,\n  pluginRAF,\n} from \"octopus-platform\";\n\nexport type PlatformProperties =\n  | \"now\"\n  | \"path\"\n  | \"remote\"\n  | \"local\"\n  | \"decode\"\n  | \"image\"\n  | \"rAF\"\n  | \"getSelector\"\n  | \"getCanvas\"\n  | \"getOfsCanvas\";\n\nexport class EnhancedPlatform extends OctopusPlatform<PlatformProperties> {\n  now!: OctopusPlatformPlugins[\"now\"];\n\n  path!: OctopusPlatformPlugins[\"path\"];\n\n  remote!: OctopusPlatformPlugins[\"remote\"];\n\n  local!: OctopusPlatformPlugins[\"local\"];\n\n  decode!: OctopusPlatformPlugins[\"decode\"];\n\n  image!: OctopusPlatformPlugins[\"image\"];\n\n  rAF!: OctopusPlatformPlugins[\"rAF\"];\n\n  getSelector!: OctopusPlatformPlugins[\"getSelector\"];\n\n  getCanvas!: OctopusPlatformPlugins[\"getCanvas\"];\n\n  getOfsCanvas!: OctopusPlatformPlugins[\"getOfsCanvas\"];\n\n  constructor() {\n    super(\n      [\n        pluginSelector,\n        pluginCanvas,\n        pluginOfsCanvas,\n        pluginDecode,\n        pluginDownload,\n        pluginFsm,\n        pluginImage,\n        pluginNow,\n        pluginPath,\n        pluginRAF,\n      ],\n      __VERSION__\n    );\n\n    this.init();\n  }\n\n  installPlugin(\n    plugin: OctopusPlatformPluginOptions<PlatformProperties>\n  ) {\n    installPlugin<PlatformProperties>(this, plugin);\n  }\n}\n\nexport const platform = new EnhancedPlatform();\n","import type { RawImage, PlatformImage, Bitmap } from \"octopus-platform\";\nimport { Painter } from \"../../core/painter\";\nimport { platform } from \"../../platform\";\nimport type { RawImages } from \"../../types\";\n\nexport class ResourceManager {\n  /**\n   * 判断是否是 ImageBitmap\n   * @param img\n   * @returns\n   */\n  private static isBitmap(img: any): boolean {\n    return platform.globals.env === \"h5\" && img instanceof ImageBitmap;\n  }\n\n  /**\n   * 释放内存资源（图片）\n   * @param img\n   */\n  private static releaseOne(img: PlatformImage | ImageBitmap) {\n    if (ResourceManager.isBitmap(img)) {\n      (img as ImageBitmap).close();\n    } else if ((img as PlatformImage).src !== \"\") {\n      // 将存在本地的文件删除，防止用户空间被占满\n      if (platform.path.is((img as PlatformImage).src)) {\n        platform.local!.remove((img as PlatformImage).src);\n      }\n\n      platform.image.release(img as PlatformImage);\n    }\n  }\n\n  // FIXME: 微信小程序创建调用太多createImage会导致微信/微信小程序崩溃\n  private caches: Array<PlatformImage | ImageBitmap> = [];\n\n  /**\n   * 动态素材\n   */\n  public readonly dynamicMaterials: Map<string, Bitmap> =\n    new Map();\n\n  /**\n   * 素材\n   */\n  public readonly materials: Map<string, Bitmap> = new Map();\n\n  /**\n   * 已清理Image对象的坐标\n   */\n  private point: number = 0;\n\n  constructor(private readonly painter: Painter) {}\n\n  /**\n   * 创建图片标签\n   * @returns\n   */\n  private createImage(): PlatformImage {\n    let img: PlatformImage | null = null;\n\n    if (this.point > 0) {\n      this.point--;\n      img = this.caches.shift() as PlatformImage;\n    }\n\n    if (!img) {\n      img = platform.image.create(this.painter.F!);\n    }\n\n    this.caches.push(img);\n\n    return img;\n  }\n\n  /**\n   * 将 ImageBitmap 插入到 caches\n   * @param img\n   */\n  private inertBitmapIntoCaches(\n    img: PlatformImage | ImageBitmap\n  ) {\n    if (ResourceManager.isBitmap(img)) {\n      this.caches.push(img);\n    }\n  }\n\n  /**\n   * 加载额外的图片资源\n   * @param source 资源内容/地址\n   * @param filename 文件名称\n   * @returns\n   */\n  public loadExtImage(\n    source: string | Uint8Array,\n    filename: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return platform.image\n      .load(\n        () => this.createImage(),\n        source,\n        platform.path.resolve(filename, \"ext\")\n      )\n      .then((img) => {\n        this.inertBitmapIntoCaches(img);\n\n        return img;\n      });\n  }\n\n  /**\n   * 加载图片集\n   * @param images 图片数据\n   * @param filename 文件名称\n   * @returns\n   */\n  public async loadImagesWithRecord(\n    images: RawImages,\n    filename: string,\n    type: \"normal\" | \"dynamic\" = \"normal\"\n  ): Promise<void> {\n    const imageAwaits: Promise<void>[] = [];\n    const imageFilename = `${filename.replace(/\\.svga$/g, \"\")}.png`;\n\n    Object.entries(images).forEach(([name, image]) => {\n      // 过滤 1px 透明图\n      if (image instanceof Uint8Array && image.byteLength < 70) {\n        return;\n      }\n\n      const p = platform.image\n        .load(\n          () => this.createImage(),\n          image as RawImage,\n          platform.path.resolve(\n            imageFilename,\n            type === \"dynamic\" ? `dyn_${name}` : name\n          )\n        )\n        .then((img) => {\n          this.inertBitmapIntoCaches(img);\n          if (type === \"dynamic\") {\n            this.dynamicMaterials.set(name, img);\n          } else {\n            this.materials.set(name, img);\n          }\n        });\n\n      imageAwaits.push(p);\n    });\n\n    await Promise.all(imageAwaits);\n  }\n\n  /**\n   * 释放图片资源\n   */\n  public release(): void {\n    // FIXME: 小程序 image 对象需要手动释放内存，否则可能导致小程序崩溃\n    for (const img of this.caches) {\n      ResourceManager.releaseOne(img);\n    }\n\n    this.materials.clear();\n    this.dynamicMaterials.clear();\n    // FIXME: 支付宝小程序 image 修改 src 无法触发 onload 事件\n    platform.globals.env === \"alipay\" ? this.cleanup() : this.tidyUp();\n  }\n\n  /**\n   * 整理图片资源，将重复的图片资源移除\n   */\n  private tidyUp() {\n    // 通过 Set 的去重特性，保持 caches 元素的唯一性\n    this.caches = Array.from(new Set(this.caches));\n    this.point = this.caches.length;\n  }\n\n  /**\n   * 清理图片资源\n   */\n  public cleanup(): void {\n    this.caches.length = 0;\n    this.point = 0;\n  }\n}\n","function readFloatLEImpl() {\n  // 使用静态DataView池\n  const DATA_VIEW_POOL_SIZE = 4;\n  const dataViewPool: DataView[] = Array(DATA_VIEW_POOL_SIZE)\n    .fill(0)\n    .map(() => new DataView(new ArrayBuffer(8))); // 使用8字节支持double\n  let currentViewIndex = 0;\n\n  return function readFloatLE(buf: Uint8Array, pos: number): number {\n    if (pos < 0 || pos + 4 > buf.length)\n      throw new RangeError(\"Index out of range\");\n\n    // 轮换使用DataView池中的实例\n    const view = dataViewPool[currentViewIndex];\n    currentViewIndex = (currentViewIndex + 1) % DATA_VIEW_POOL_SIZE;\n\n    // 直接设置字节，避免创建subarray\n    const u8 = new Uint8Array(view.buffer);\n    u8[0] = buf[pos];\n    u8[1] = buf[pos + 1];\n    u8[2] = buf[pos + 2];\n    u8[3] = buf[pos + 3];\n\n    return view.getFloat32(0, true);\n  };\n}\n\nexport const readFloatLE = readFloatLEImpl();\n","/**\n * 简易的hash算法\n * @param buff \n * @param start \n * @param end \n * @param step \n * @returns \n */\nexport function calculateHash(buff: Uint8Array, start: number, end: number, step: number) {\n  // 使用简单的哈希算法\n    let hash = 0;\n\n    for (let i = start; i < end; i += step) {\n      // 简单的哈希算法，类似于字符串哈希\n      hash = (hash << 5) - hash + buff[i];\n      hash = hash & hash; // 转换为32位整数\n    }\n\n    // 添加数据长度作为哈希的一部分，增加唯一性\n    hash = (hash << 5) - hash + end - start;\n    hash = hash & hash;\n    // 转换为字符串\n    return hash.toString(36);\n}\n","import { calculateHash } from \"../../../shared/hash\";\nimport Reader from \"./Reader\";\n\nexport class Preflight {\n  private caches: Map<string, any> = new Map();\n\n  private count: number = 0;\n\n  get size() {\n    return this.caches.size;\n  }\n\n  get hitCount() {\n    return this.count;\n  }\n\n  // get cache() {\n  //   return Object.fromEntries(this.caches);\n  // }\n\n  /**\n   * 计算二进制数据的哈希值\n   * @param reader Reader对象\n   * @param end 结束位置\n   * @returns 哈希值\n   */\n  calculate(reader: Reader, end: number): string {\n    // 保存原始位置\n    const { pos: startPos, buf } = reader;\n    const endPos = Math.min(end, reader.len);\n    // 采样数据以加快计算速度，同时保持足够的唯一性\n    // 对于大数据，每隔几个字节采样一次\n    const step = Math.max(1, Math.floor((endPos - startPos) / 100));\n    \n    return calculateHash(buf, startPos, endPos, step);\n  }\n\n  /**\n   * 检查是否存在缓存数据\n   * @param key 键\n   * @returns 是否存在\n   */\n  has(key: string): boolean {\n    const hit = this.caches.has(key);\n\n    if (hit) {\n      this.count++;\n    }\n\n    return hit;\n\n    // return this.caches.has(key);\n  }\n\n  /**\n   * 获取缓存数据\n   * @param key 键\n   * @returns 缓存数据\n   */\n  get(key: string): any {\n    return this.caches.get(key);\n  }\n\n  /**\n   * 设置缓存数据\n   * @param key 键\n   * @param value 缓存数据\n   */\n  set(key: string, value: any) {\n    this.caches.set(key, value);\n  }\n\n  /**\n   * 清空所有缓存数据\n   */\n  clear() {\n    this.count = 0;\n    this.caches.clear();\n  }\n}\n","import { platform } from \"../../../platform\";\nimport { readFloatLE } from \"./float\";\nimport { Preflight } from \"./preflight\";\n\nexport default class Reader {\n  // 添加静态缓存，用于常用的空数组\n  private static EMPTY_UINT8ARRAY = new Uint8Array(0);\n\n  /**\n   * Read buffer.\n   * @type {Uint8Array}\n   */\n  readonly buf: Uint8Array;\n  /**\n   * Read buffer length.\n   * @type {number}\n   */\n  readonly len: number;\n  /**\n   * Read buffer position.\n   * @type {number}\n   */\n  pos: number;\n\n  preflight = new Preflight();\n\n  /**\n   * Constructs a new reader instance using the specified buffer.\n   * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n   * @constructor\n   * @param {Uint8Array} buffer Buffer to read from\n   */\n  constructor(buffer: Uint8Array) {\n    this.buf = buffer;\n    this.pos = 0;\n    this.len = buffer.length;\n  }\n\n  private indexOutOfRange(reader: Reader, writeLength?: number) {\n    return new RangeError(\n      \"index out of range: \" +\n        reader.pos +\n        \" + \" +\n        (writeLength || 1) +\n        \" > \" +\n        reader.len\n    );\n  }\n\n  /**\n   * 将复杂逻辑分离到单独方法\n   * @returns\n   */\n  private readVarint32Slow() {\n    let byte = this.buf[this.pos++];\n    let value = byte & 0x7f;\n    let shift = 7;\n\n    // 使用do-while循环减少条件判断\n    do {\n      if (this.pos >= this.len) {\n        throw this.indexOutOfRange(this);\n      }\n\n      byte = this.buf[this.pos++];\n      value |= (byte & 0x7f) << shift;\n      shift += 7;\n    } while (byte >= 128 && shift < 32);\n\n    return value >>> 0; // 确保无符号\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @param length \n   * @returns \n   */\n  end(length?: number) {\n    return length === undefined ? this.len : this.pos + length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value.\n   * @function\n   * @returns {number} Value read\n   */\n  uint32() {\n    // 快速路径：大多数情况下是单字节\n    const byte = this.buf[this.pos];\n\n    if (byte < 128) {\n      this.pos++;\n\n      return byte;\n    }\n\n    // 慢速路径：多字节处理\n    return this.readVarint32Slow();\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value.\n   * @returns {number} Value read\n   */\n  int32() {\n    return this.uint32() | 0;\n  }\n\n  /**\n   * Reads a float (32 bit) as a number.\n   * @function\n   * @returns {number} Value read\n   */\n  float() {\n    const pos = this.pos + 4;\n\n    if (pos > this.len) {\n      throw this.indexOutOfRange(this, 4);\n    }\n\n    const value = readFloatLE(this.buf, this.pos);\n    this.pos = pos;\n\n    return value;\n  }\n\n  /**\n   * read bytes range\n   * @returns \n   */\n  private getBytesRange() {\n    const length = this.uint32();\n    const start = this.pos;\n    const end = start + length;\n\n    if (end > this.len) {\n      throw this.indexOutOfRange(this, length);\n    }\n\n    return [start, end, length];\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @returns {Uint8Array} Value read\n   */\n  bytes() {\n    const [start, end, length] = this.getBytesRange();\n\n    this.pos += length;\n\n    if (length === 0) {\n      return Reader.EMPTY_UINT8ARRAY;\n    }\n\n    return this.buf.subarray(start, end);\n  }\n\n  /**\n   * Reads a string preceeded by its byte length as a varint.\n   * @returns {string} Value read\n   */\n  string() {\n    const [start, end] = this.getBytesRange();\n    // 直接在原始buffer上解码，避免创建中间bytes对象\n    const result = platform.decode.utf8(this.buf, start, end);\n    this.pos = end;\n\n    return result;\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint.\n   * @param {number} [length] Length if known, otherwise a varint is assumed\n   * @returns {Reader} `this`\n   */\n  skip(length?: number) {\n    if (typeof length === \"number\") {\n      if (this.pos + length > this.len) {\n        throw this.indexOutOfRange(this, length);\n      }\n\n      this.pos += length;\n\n      return this;\n    }\n    \n    // 变长整数跳过优化 - 使用位运算\n    const { buf, len } = this;\n    let pos = this.pos;\n    \n    // 一次检查多个字节，减少循环次数\n    while (pos < len) {\n      const byte = buf[pos++];\n\n      if ((byte & 0x80) === 0) {\n        this.pos = pos;\n\n        return this;\n      }\n\n      // 快速检查连续的高位字节\n      if (pos < len && (buf[pos] & 0x80) !== 0) {\n        pos++;\n\n        if (pos < len && (buf[pos] & 0x80) !== 0) {\n          pos++;\n\n          if (pos < len && (buf[pos] & 0x80) !== 0) {\n            pos++;\n\n            // 继续检查剩余字节\n            while (pos < len && (buf[pos] & 0x80) !== 0) {\n              pos++;\n\n              if (pos - this.pos >= 10) {\n                throw Error(\"invalid varint encoding\");\n              }\n            }\n\n            if (pos < len) {\n              this.pos = pos + 1;\n\n              return this;\n            }\n          }\n        }\n      }\n    }\n    \n    throw this.indexOutOfRange(this);\n  }\n\n  /**\n   * Skips the next element of the specified wire type.\n   * @param {number} wireType Wire type received\n   * @returns {Reader} `this`\n   */\n  skipType(wireType: number) {\n    switch (wireType) {\n      case 0:\n        this.skip();\n        break;\n      case 1:\n        this.skip(8);\n        break;\n      case 2:\n        this.skip(this.uint32());\n        break;\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType);\n        }\n        break;\n      case 5:\n        this.skip(4);\n        break;\n\n      /* istanbul ignore next */\n      default:\n        throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n\n    return this;\n  }\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Layout {\n  /**\n   * Decodes a Layout message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Layout\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Rect {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new Layout();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, Layout.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: Layout): PlatformVideo.Rect {\n    const { x = 0, y = 0, width = 0, height = 0 } = message;\n\n    return { x, y, width, height };\n  }\n\n  /**\n   * Layout x.\n   * @member {number} x\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * Layout y.\n   * @member {number} y\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * Layout width.\n   * @member {number} width\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * Layout height.\n   * @member {number} height\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  height: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Transform {\n  /**\n   * Decodes a Transform message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Transform\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Transform} Transform\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Transform {\n    const end = reader.end(length);\n    const message = new Transform();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.a = reader.float();\n          break;\n        }\n        case 2: {\n          message.b = reader.float();\n          break;\n        }\n        case 3: {\n          message.c = reader.float();\n          break;\n        }\n        case 4: {\n          message.d = reader.float();\n          break;\n        }\n        case 5: {\n          message.tx = reader.float();\n          break;\n        }\n        case 6: {\n          message.ty = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * Transform a.\n   * @member {number} a\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  a: number = 0;\n  /**\n   * Transform b.\n   * @member {number} b\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * Transform c.\n   * @member {number} c\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  c: number = 0;\n  /**\n   * Transform d.\n   * @member {number} d\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  d: number = 0;\n  /**\n   * Transform tx.\n   * @member {number} tx\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  tx: number = 0;\n  /**\n   * Transform ty.\n   * @member {number} ty\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  ty: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a ShapeArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IShapeArgs\n * @property {string|null} [d] ShapeArgs d\n */\nexport interface ShapeArgsProps {\n  d: string | null;\n}\n\nexport default class ShapeArgs {\n  /**\n   * Decodes a ShapeArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeArgs} ShapeArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.ShapePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.d = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * ShapeArgs d.\n   * @member {string} d\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @instance\n   */\n  d: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RectArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IRectArgs\n * @property {number|null} [x] RectArgs x\n * @property {number|null} [y] RectArgs y\n * @property {number|null} [width] RectArgs width\n * @property {number|null} [height] RectArgs height\n * @property {number|null} [cornerRadius] RectArgs cornerRadius\n */\nexport interface RectArgsProps {\n  x: number | null;\n  y: number | null;\n  width: number | null;\n  height: number | null;\n  cornerRadius: number | null;\n}\n\nexport default class RectArgs {\n  /**\n   * Decodes a RectArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.RectArgs} RectArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RectPath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RectArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        case 5: {\n          message.cornerRadius = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * RectArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * RectArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * RectArgs width.\n   * @member {number} width\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * RectArgs height.\n   * @member {number} height\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  height: number = 0;\n  /**\n   * RectArgs cornerRadius.\n   * @member {number} cornerRadius\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  cornerRadius: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class EllipseArgs {\n  /**\n   * Decodes an EllipseArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.EllipseArgs} EllipseArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.EllipsePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new EllipseArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.radiusX = reader.float();\n          break;\n        }\n        case 4: {\n          message.radiusY = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * EllipseArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * EllipseArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * EllipseArgs radiusX.\n   * @member {number} radiusX\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusX: number = 0;\n  /**\n   * EllipseArgs radiusY.\n   * @member {number} radiusY\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusY: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RGBAColor.\n * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n * @interface IRGBAColor\n * @property {number|null} [r] RGBAColor r\n * @property {number|null} [g] RGBAColor g\n * @property {number|null} [b] RGBAColor b\n * @property {number|null} [a] RGBAColor a\n */\nexport interface RGBAColorProps {\n  r: number | null;\n  g: number | null;\n  b: number | null;\n  a: number | null;\n}\n\nexport default class RGBAColor {\n  /**\n   * Decodes a RGBAColor message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor} RGBAColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RGBA<number, number, number, number> {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RGBAColor();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.r = reader.float();\n          break;\n        }\n        case 2: {\n          message.g = reader.float();\n          break;\n        }\n        case 3: {\n          message.b = reader.float();\n          break;\n        }\n        case 4: {\n          message.a = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, RGBAColor.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(\n    message: RGBAColor\n  ): PlatformVideo.RGBA<number, number, number, number> {\n    const { r, g, b, a } = message;\n\n    return `rgba(${(r * 255) | 0}, ${(g * 255) | 0}, ${(b * 255) | 0}, ${\n      (a * 1) | 0\n    })`;\n  }\n\n  /**\n   * RGBAColor r.\n   * @member {number} r\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  r: number = 0;\n  /**\n   * RGBAColor g.\n   * @member {number} g\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  g: number = 0;\n  /**\n   * RGBAColor b.\n   * @member {number} b\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * RGBAColor a.\n   * @member {number} a\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  a: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport RGBAColor from \"./RGBAColor\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeStyle {\n  /**\n   * Decodes a ShapeStyle message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle} ShapeStyle\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoStyles {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeStyle();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.fill = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 2: {\n          message.stroke = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 3: {\n          message.strokeWidth = reader.float();\n          break;\n        }\n        case 4: {\n          message.lineCap = reader.int32();\n          break;\n        }\n        case 5: {\n          message.lineJoin = reader.int32();\n          break;\n        }\n        case 6: {\n          message.miterLimit = reader.float();\n          break;\n        }\n        case 7: {\n          message.lineDashI = reader.float();\n          break;\n        }\n        case 8: {\n          message.lineDashII = reader.float();\n          break;\n        }\n        case 9: {\n          message.lineDashIII = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, ShapeStyle.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: ShapeStyle): PlatformVideo.VideoStyles {\n    const { fill, stroke, strokeWidth, miterLimit, lineDashI, lineDashII, lineDashIII } = message;\n    const lineDash: number[] = [];\n    let lineCap: CanvasLineCap;\n    let lineJoin: CanvasLineJoin;\n\n    if (lineDashI > 0) {\n      lineDash.push(lineDashI);\n    }\n\n    if (lineDashII > 0) {\n      if (lineDash.length < 1) {\n        lineDash.push(0);\n      }\n\n      lineDash.push(lineDashII);\n    }\n\n    if (lineDashIII > 0) {\n      if (lineDash.length < 2) {\n        lineDash.push(0, 0);\n      }\n\n      lineDash.push(lineDashIII);\n    }\n\n    switch (message.lineCap) {\n      case PlatformVideo.LINE_CAP_CODE.BUTT:\n        lineCap = PlatformVideo.LINE_CAP.BUTT;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.ROUND:\n        lineCap = PlatformVideo.LINE_CAP.ROUND;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.SQUARE:\n        lineCap = PlatformVideo.LINE_CAP.SQUARE;\n        break;\n    }\n\n    switch (message.lineJoin) {\n      case PlatformVideo.LINE_JOIN_CODE.MITER:\n        lineJoin = PlatformVideo.LINE_JOIN.MITER;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.ROUND:\n        lineJoin = PlatformVideo.LINE_JOIN.ROUND;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.BEVEL:\n        lineJoin = PlatformVideo.LINE_JOIN.BEVEL;\n        break;\n    }\n\n    return {\n      lineDash,\n      fill: fill ? fill : null,\n      stroke: stroke ? stroke : null,\n      lineCap,\n      lineJoin,\n      strokeWidth,\n      miterLimit\n    }\n  }\n\n  /**\n   * ShapeStyle fill.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} fill\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  fill: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle stroke.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} stroke\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  stroke: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle strokeWidth.\n   * @member {number} strokeWidth\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  strokeWidth: number = 0;\n  /**\n   * ShapeStyle lineCap.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineCap} lineCap\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineCap: PlatformVideo.LINE_CAP_CODE = 0;\n  /**\n   * ShapeStyle lineJoin.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin} lineJoin\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineJoin: PlatformVideo.LINE_JOIN_CODE = 0;\n  /**\n   * ShapeStyle miterLimit.\n   * @member {number} miterLimit\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  miterLimit: number = 0;\n  /**\n   * ShapeStyle lineDashI.\n   * @member {number} lineDashI\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashI: number = 0;\n  /**\n   * ShapeStyle lineDashII.\n   * @member {number} lineDashII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashII: number = 0;\n  /**\n   * ShapeStyle lineDashIII.\n   * @member {number} lineDashIII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashIII: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport Transform from \"./Transform\";\nimport ShapeArgs from \"./ShapeArgs\";\nimport RectArgs from \"./RectArgs\";\nimport EllipseArgs from \"./EllipseArgs\";\nimport ShapeStyle from \"./ShapeStyle\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeEntity {\n  /**\n   * Decodes a ShapeEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity} ShapeEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrameShape | null {\n    const end = reader.end(length);\n    const message = new ShapeEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.type = reader.int32();\n          break;\n        }\n        case 2: {\n          message.shape = ShapeArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.rect = RectArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.ellipse = EllipseArgs.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 10: {\n          message.styles = ShapeStyle.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 11: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return ShapeEntity.format(message);\n  }\n\n  static format(message: ShapeEntity): PlatformVideo.VideoFrameShape | null {\n    const { type, shape, rect, ellipse, styles, transform } = message;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE_CODE.SHAPE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.SHAPE,\n          path: shape!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.RECT:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.RECT,\n          path: rect!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.ELLIPSE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.ELLIPSE,\n          path: ellipse!,\n          styles: styles!,\n          transform: transform!,\n        };\n      default:\n    }\n\n    return null;\n  }\n\n  /**\n   * ShapeEntity type.\n   * @member {com.opensource.svga.ShapeEntity.ShapeType} type\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  type: PlatformVideo.SHAPE_TYPE_CODE = 0;\n  /**\n   * ShapeEntity shape.\n   * @member {com.opensource.svga.ShapeEntity.IShapeArgs|null|undefined} shape\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  shape: PlatformVideo.ShapePath | null = null;\n  /**\n   * ShapeEntity rect.\n   * @member {com.opensource.svga.ShapeEntity.IRectArgs|null|undefined} rect\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  rect: PlatformVideo.RectPath | null = null;\n  /**\n   * ShapeEntity ellipse.\n   * @member {com.opensource.svga.ShapeEntity.IEllipseArgs|null|undefined} ellipse\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  ellipse: PlatformVideo.EllipsePath | null = null;\n  /**\n   * ShapeEntity styles.\n   * @member {com.opensource.svga.ShapeEntity.IShapeStyle|null|undefined} styles\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  styles: PlatformVideo.VideoStyles | null = null;\n  /**\n   * ShapeEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n}\n","import Reader from \"../io/Reader\";\nimport Layout from \"./Layout\";\nimport Transform from \"./Transform\";\nimport ShapeEntity from \"./ShapeEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class FrameEntity {\n  private static HIDDEN_FRAME: PlatformVideo.HiddenVideoFrame = {\n    alpha: 0,\n  };\n\n  /**\n   * Decodes a FrameEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.FrameEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.FrameEntity} FrameEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    const end = reader.end(length);\n    const message = new FrameEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.alpha = reader.float();\n          break;\n        }\n        case 2: {\n          message.layout = Layout.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.clipPath = reader.string();\n          break;\n        }\n        case 5: {\n          const shape = ShapeEntity.decode(reader, reader.uint32())\n\n          if (shape !== null) {\n            message.shapes.push(shape);\n          }\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (message.shapes.length === 0) {\n      message.shapes = reader.preflight.get(\"latest_shapes\");\n    } else {\n      reader.preflight.set(\"latest_shapes\", message.shapes);\n    }\n\n    return FrameEntity.format(message);\n  }\n\n  private static format(message: FrameEntity): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    // alpha值小于 0.05 将不展示，所以不做解析处理\n    if (message.alpha < 0.05) {\n      return FrameEntity.HIDDEN_FRAME;\n    }\n\n    const { alpha, layout, transform, shapes } = message;\n\n    return {\n      alpha,\n      layout: layout!,\n      transform,\n      shapes,\n    };\n  }\n\n  /**\n   * FrameEntity shapes.\n   * @member {Array.<com.opensource.svga.IShapeEntity>} shapes\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  shapes: PlatformVideo.VideoFrameShape[] = [];\n  /**\n   * FrameEntity alpha.\n   * @member {number} alpha\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  alpha: number = 0;\n  /**\n   * FrameEntity layout.\n   * @member {com.opensource.svga.ILayout|null|undefined} layout\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  layout: PlatformVideo.Rect | null = null;\n  /**\n   * FrameEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n  /**\n   * FrameEntity clipPath.\n   * @member {string} clipPath\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  clipPath: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport FrameEntity from \"./FrameEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class SpriteEntity {\n  /**\n   * Decodes a SpriteEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.SpriteEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.SpriteEntity} SpriteEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoSprite {\n    const end = reader.end(length);\n    const message = new SpriteEntity();\n    let tag: number;\n\n    reader.preflight.set(\"latest_shapes\", []);\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.imageKey = reader.string();\n          break;\n        }\n        case 2: {\n          if (!(message.frames && message.frames.length)) {\n            message.frames = [];\n          }\n\n          message.frames.push(FrameEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        case 3: {\n          message.matteKey = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return SpriteEntity.format(message);\n  }\n\n  static format(message: SpriteEntity): PlatformVideo.VideoSprite {\n    return {\n      imageKey: message.imageKey,\n      frames: message.frames,\n    };\n  }\n\n  /**\n   * SpriteEntity frames.\n   * @member {Array.<com.opensource.svga.IFrameEntity>} frames\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  frames: Array<PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame> = [];\n  /**\n   * SpriteEntity imageKey.\n   * @member {string} imageKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  imageKey: string = \"\";\n  /**\n   * SpriteEntity matteKey.\n   * @member {string} matteKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  matteKey: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieParams {\n  /**\n   * Decodes a MovieParams message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieParams\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieParams} MovieParams\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoParams {\n    const end = reader.end(length);\n    const message = new MovieParams();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.viewBoxWidth = reader.float();\n          break;\n        }\n        case 2: {\n          message.viewBoxHeight = reader.float();\n          break;\n        }\n        case 3: {\n          message.fps = reader.int32();\n          break;\n        }\n        case 4: {\n          message.frames = reader.int32();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * MovieParams viewBoxWidth.\n   * @member {number} viewBoxWidth\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxWidth: number = 0;\n  /**\n   * MovieParams viewBoxHeight.\n   * @member {number} viewBoxHeight\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxHeight: number = 0;\n  /**\n   * MovieParams fps.\n   * @member {number} fps\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  fps: number = 0;\n  /**\n   * MovieParams frames.\n   * @member {number} frames\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  frames: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport SpriteEntity from \"./SpriteEntity\";\nimport MovieParams from \"./MovieParams\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieEntity {\n  static EMPTY_U8 = new Uint8Array(0);\n  /**\n   * Decodes a MovieEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieEntity} MovieEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Video {\n    const end = reader.end(length);\n    const message = new MovieEntity();\n    let key: string;\n    let value: Uint8Array;\n    let end2: number;\n    let tag: number;\n    let tag2: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.version = reader.string();\n          break;\n        }\n        case 2: {\n          message.params = MovieParams.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          end2 = reader.uint32() + reader.pos;\n          key = \"\";\n          value = MovieEntity.EMPTY_U8;\n\n          while (reader.pos < end2) {\n            tag2 = reader.uint32();\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string();\n                break;\n              case 2:\n                value = reader.bytes();\n                break;\n              default:\n                reader.skipType(tag2 & 7);\n                break;\n            }\n          }\n\n          message.images[key] = value;\n          break;\n        }\n        case 4: {\n          message.sprites.push(SpriteEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return MovieEntity.format(message);\n  }\n\n  static format(message: MovieEntity): PlatformVideo.Video {\n    const { version, images, sprites } = message;\n    const { fps, frames, viewBoxWidth, viewBoxHeight } = message.params!;\n\n    return {\n      version,\n      filename: \"\",\n      locked: false,\n      dynamicElements: {},\n      size: {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n      },\n      fps,\n      frames,\n      images,\n      sprites,\n    };\n  }\n\n  /**\n   * MovieEntity version.\n   * @member {string} version\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  version: string = \"\";\n  /**\n   * MovieEntity params.\n   * @member {com.opensource.svga.IMovieParams|null|undefined} params\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  params: MovieParams | null = null;\n  /**\n   * MovieEntity images.\n   * @member {Object.<string,Uint8Array>} images\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  images: Record<string, Uint8Array> = {};\n  /**\n   * MovieEntity sprites.\n   * @member {Array.<com.opensource.svga.ISpriteEntity>} sprites\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  sprites: PlatformVideo.VideoSprite[] = [];\n}\n","// import benchmark from \"octopus-benchmark\";\nimport Reader from \"./io/Reader\";\nimport { MovieEntity } from \"./serialization\";\n\nexport type * from \"./serialization\";\n\nexport function createVideoEntity(data: Uint8Array, filename: string) {\n  if (data instanceof Uint8Array) {\n    const reader = new Reader(data);\n    const video = MovieEntity.decode(reader);\n\n    // benchmark.log('preflight cache size', reader.preflight.size);\n    // benchmark.log('preflight hit count', reader.preflight.hitCount);\n    video.filename = filename;\n    reader.preflight.clear();\n\n    return video;\n  }\n\n  throw new Error(\"Invalid data type\");\n}\n","export interface CurrentPoint {\n  x: number;\n  y: number;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n\n/**\n * CurrentPoint对象池，用于减少对象创建和GC压力\n */\nexport class PointPool {\n  private pool: CurrentPoint[] = [];\n\n  public acquire(): CurrentPoint {\n    const { pool } = this;\n\n    return pool.length > 0\n      ? pool.pop()!\n      : { x: 0, y: 0, x1: 0, y1: 0, x2: 0, y2: 0 };\n  }\n\n  public release(point: CurrentPoint): void {\n    // 重置点的属性\n    point.x = point.y = point.x1 = point.y1 = point.x2 = point.y2 = 0;\n    this.pool.push(point);\n  }\n}\n","import { type Bitmap } from \"octopus-platform\";\nimport { PointPool, CurrentPoint } from \"../../../shared/PointPool\";\nimport {\n  PlatformVideo,\n  type TransformScale,\n  type PlatformRenderingContext2D,\n  type CanvasSize,\n  PLAYER_CONTENT_MODE\n} from \"../../../types\";\n\nexport interface ICommand {\n  command: string;\n  args: string;\n}\n\nexport class Renderer2D {\n  /**\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths\n   * 绘制路径的不同指令：\n   * * 直线命令\n   * - M: moveTo，移动到指定点，不绘制直线。\n   * - L: lineTo，从起始点绘制一条直线到指定点。\n   * - H: horizontal lineTo，从起始点绘制一条水平线到指定点。\n   * - V: vertical lineTo，从起始点绘制一条垂直线到指定点。\n   * - Z: closePath，从起始点绘制一条直线到路径起点，形成一个闭合路径。\n   * * 曲线命令\n   * - C: bezierCurveTo，绘制三次贝塞尔曲线。\n   * - S: smooth curveTo，绘制平滑三次贝塞尔曲线。\n   * - Q: quadraticCurveTo，绘制两次贝塞尔曲线。\n   * - T: smooth quadraticCurveTo，绘制平滑两次贝塞尔曲线。\n   * * 弧线命令\n   * - A: arcTo，从起始点绘制一条弧线到指定点。\n   */\n  private static SVG_PATH = new Set([\n    \"M\",\n    \"L\",\n    \"H\",\n    \"V\",\n    \"Z\",\n    \"C\",\n    \"S\",\n    \"Q\",\n    \"m\",\n    \"l\",\n    \"h\",\n    \"v\",\n    \"z\",\n    \"c\",\n    \"s\",\n    \"q\",\n  ]);\n\n  private static SVG_LETTER_REGEXP = /[a-zA-Z]/;\n\n  // 在Renderer2D类中添加新的解析方法\n  private static parseSVGPath(d: string): ICommand[] {\n    const { SVG_LETTER_REGEXP } = Renderer2D;\n    const result: ICommand[] = [];\n    let currentIndex = 0;\n\n    // 状态：0 - 等待命令，1 - 读取参数\n    let state = 0;\n    let currentCommand = \"\";\n    let currentArgs = \"\";\n\n    while (currentIndex < d.length) {\n      const char = d[currentIndex];\n\n      switch (state) {\n        case 0: // 等待命令\n          if (SVG_LETTER_REGEXP.test(char)) {\n            currentCommand = char;\n            state = 1;\n          }\n          break;\n        case 1: // 读取参数\n          if (SVG_LETTER_REGEXP.test(char)) {\n            // 遇到新命令，保存当前命令和参数\n            result.push({\n              command: currentCommand,\n              args: currentArgs.trim(),\n            });\n            currentCommand = char;\n            currentArgs = \"\";\n          } else {\n            currentArgs += char;\n          }\n          break;\n      }\n\n      currentIndex++;\n    }\n\n    // 处理最后一个命令\n    if (currentCommand && state === 1) {\n      result.push({\n        command: currentCommand,\n        args: currentArgs.trim(),\n      });\n    }\n\n    return result;\n  }\n\n  private static fillOrStroke(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      if (styles.fill) {\n        context.fill();\n      }\n\n      if (styles.stroke) {\n        context.stroke();\n      }\n    }\n  }\n\n  private static resetShapeStyles(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      context.strokeStyle = styles.stroke || \"transparent\";\n\n      if (styles.strokeWidth! > 0) {\n        context.lineWidth = styles.strokeWidth!;\n      }\n\n      if (styles.miterLimit! > 0) {\n        context.miterLimit = styles.miterLimit!;\n      }\n\n      if (styles.lineCap) {\n        context.lineCap = styles.lineCap;\n      }\n\n      if (styles.lineJoin) {\n        context.lineJoin = styles.lineJoin;\n      }\n\n      context.fillStyle = styles.fill || \"transparent\";\n\n      if (styles.lineDash) {\n        context.setLineDash(styles.lineDash);\n      }\n    }\n  }\n\n  /**\n   * 计算缩放比例\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  private static calculateScale(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): TransformScale {\n    const imageRatio = videoSize.width / videoSize.height;\n    const viewRatio = canvasSize.width / canvasSize.height;\n    const isAspectFit = contentMode === PLAYER_CONTENT_MODE.ASPECT_FIT;\n    const shouldUseWidth =\n      (imageRatio >= viewRatio && isAspectFit) ||\n      (imageRatio <= viewRatio && !isAspectFit);\n    const createTransform = (\n      scale: number,\n      translateX: number,\n      translateY: number\n    ) => ({\n      scaleX: scale,\n      scaleY: scale,\n      translateX,\n      translateY,\n    });\n\n    if (shouldUseWidth) {\n      const scale = canvasSize.width / videoSize.width;\n\n      return createTransform(\n        scale,\n        0,\n        (canvasSize.height - videoSize.height * scale) / 2\n      );\n    }\n\n    const scale = canvasSize.height / videoSize.height;\n\n    return createTransform(\n      scale,\n      (canvasSize.width - videoSize.width * scale) / 2,\n      0\n    );\n  }\n\n  private readonly pointPool: PointPool = new PointPool();\n\n  private currentPoint: CurrentPoint;\n\n  private lastResizeKey = \"\";\n\n  private globalTransform?: PlatformVideo.Transform = undefined;\n\n  constructor(private context: PlatformRenderingContext2D | null) {\n    this.currentPoint = this.pointPool.acquire();\n  }\n\n  private setTransform(transform?: PlatformVideo.Transform): void {\n    if (transform && this.context) {\n      this.context!.transform(\n        transform.a,\n        transform.b,\n        transform.c,\n        transform.d,\n        transform.tx,\n        transform.ty\n      );\n    }\n  }\n\n  private drawBezier(\n    d?: string,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context, pointPool } = this;\n    this.currentPoint = pointPool.acquire();\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n    context!.beginPath();\n\n    if (d) {\n      // 使用状态机解析器替代正则表达式\n      const commands = Renderer2D.parseSVGPath(d);\n\n      for (const { command, args } of commands) {\n        if (Renderer2D.SVG_PATH.has(command)) {\n          this.drawBezierElement(\n            this.currentPoint,\n            command,\n            args.split(/[\\s,]+/).filter(Boolean)\n          );\n        }\n      }\n    }\n\n    Renderer2D.fillOrStroke(context!, styles);\n    pointPool.release(this.currentPoint);\n    context!.restore();\n  }\n\n  private drawBezierElement(\n    currentPoint: CurrentPoint,\n    method: string,\n    args: string[]\n  ): void {\n    const { context } = this;\n\n    switch (method) {\n      case \"M\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"m\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"L\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"l\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"H\":\n        currentPoint.x = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"h\":\n        currentPoint.x += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"V\":\n        currentPoint.y = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"v\":\n        currentPoint.y += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"C\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x2 = +args[2];\n        currentPoint.y2 = +args[3];\n        currentPoint.x = +args[4];\n        currentPoint.y = +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"c\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x2 = currentPoint.x + +args[2];\n        currentPoint.y2 = currentPoint.y + +args[3];\n        currentPoint.x += +args[4];\n        currentPoint.y += +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"S\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = +args[0];\n          currentPoint.y2 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = +args[0];\n          currentPoint.y1 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"s\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = currentPoint.x + +args[0];\n          currentPoint.y2 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = currentPoint.x + +args[0];\n          currentPoint.y1 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"Q\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x = +args[2];\n        currentPoint.y = +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"q\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x += +args[2];\n        currentPoint.y += +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        context!.closePath();\n        break;\n    }\n  }\n\n  private drawEllipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    x -= radiusX;\n    y -= radiusY;\n\n    const w = radiusX * 2;\n    const h = radiusY * 2;\n    const kappa = 0.5522848;\n    const ox = (w / 2) * kappa;\n    const oy = (h / 2) * kappa;\n    const xe = x + w;\n    const ye = y + h;\n    const xm = x + w / 2;\n    const ym = y + h / 2;\n\n    context!.beginPath();\n    context!.moveTo(x, ym);\n    context!.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    context!.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    context!.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    context!.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawRect(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    cornerRadius: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    let radius = cornerRadius;\n\n    if (width < 2 * radius) {\n      radius = width / 2;\n    }\n\n    if (height < 2 * radius) {\n      radius = height / 2;\n    }\n\n    context!.beginPath();\n    context!.moveTo(x + radius, y);\n    context!.arcTo(x + width, y, x + width, y + height, radius);\n    context!.arcTo(x + width, y + height, x, y + height, radius);\n    context!.arcTo(x, y + height, x, y, radius);\n    context!.arcTo(x, y, x + width, y, radius);\n    context!.closePath();\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawShape(shape: PlatformVideo.VideoFrameShape): void {\n    const { type, path, transform, styles } = shape;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE.SHAPE:\n        this.drawBezier(path.d, transform, styles);\n        break;\n      case PlatformVideo.SHAPE_TYPE.ELLIPSE:\n        this.drawEllipse(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.radiusX ?? 0,\n          path.radiusY ?? 0,\n          transform,\n          styles\n        );\n        break;\n      case PlatformVideo.SHAPE_TYPE.RECT:\n        this.drawRect(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.width ?? 0,\n          path.height ?? 0,\n          path.cornerRadius ?? 0,\n          transform,\n          styles\n        );\n        break;\n    }\n  }\n\n  private drawSprite(\n    frame: PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame,\n    bitmap?: Bitmap,\n    dynamicElement?: Bitmap\n  ): void {\n    if (frame.alpha === 0) return;\n\n    const { context } = this;\n    const { alpha, transform, layout, shapes } =\n      frame as PlatformVideo.VideoFrame;\n    const { a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0 } = transform ?? {};\n\n    context!.save();\n    this.setTransform(this.globalTransform);\n    context!.globalAlpha = alpha;\n    context!.transform(a, b, c, d, tx, ty);\n\n    if (bitmap) {\n      context!.drawImage(\n        bitmap as CanvasImageSource,\n        0,\n        0,\n        layout.width,\n        layout.height\n      );\n    }\n\n    if (dynamicElement) {\n      context!.drawImage(\n        dynamicElement as CanvasImageSource,\n        (layout.width - dynamicElement.width) / 2,\n        (layout.height - dynamicElement.height) / 2\n      );\n    }\n\n    for (let i = 0; i < shapes.length; i++) {\n      this.drawShape(shapes[i]);\n    }\n\n    context!.restore();\n  }\n\n  /**\n   * 调整画布尺寸\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  public resize(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): void {\n    const { width: canvasWidth, height: canvasHeight } = canvasSize;\n    const { width: videoWidth, height: videoHeight } = videoSize;\n    const resizeKey = `${contentMode}-${videoWidth}-${videoHeight}-${canvasWidth}-${canvasHeight}`;\n    const lastTransform = this.globalTransform;\n\n    if (this.lastResizeKey === resizeKey && lastTransform) {\n      return;\n    }\n\n    let scale: TransformScale = {\n      scaleX: 1,\n      scaleY: 1,\n      translateX: 0,\n      translateY: 0,\n    };\n\n    if (contentMode === PLAYER_CONTENT_MODE.FILL) {\n      scale.scaleX = canvasWidth / videoWidth;\n      scale.scaleY = canvasHeight / videoHeight;\n    } else {\n      scale = Renderer2D.calculateScale(contentMode, videoSize, canvasSize);\n    }\n\n    this.lastResizeKey = resizeKey;\n    this.globalTransform = {\n      a: scale.scaleX,\n      b: 0.0,\n      c: 0.0,\n      d: scale.scaleY,\n      tx: scale.translateX,\n      ty: scale.translateY,\n    };\n  }\n\n  public render(\n    videoEntity: PlatformVideo.Video,\n    materials: Map<string, Bitmap>,\n    dynamicMaterials: Map<string, Bitmap>,\n    currentFrame: number,\n    head: number,\n    tail: number\n  ): void {\n    let sprite: PlatformVideo.VideoSprite;\n    let imageKey: string;\n    let bitmap: Bitmap | undefined;\n    let dynamicElement: Bitmap | undefined;\n\n    for (let i = head; i < tail; i++) {\n      sprite = videoEntity.sprites[i];\n      imageKey = sprite.imageKey;\n      bitmap = materials.get(imageKey);\n      dynamicElement = dynamicMaterials.get(imageKey);\n\n      this.drawSprite(sprite.frames[currentFrame], bitmap, dynamicElement);\n    }\n  }\n\n  public destroy() {\n    this.globalTransform = undefined;\n    this.lastResizeKey = \"\";\n    this.context = null;\n  }\n}\n","import {\n  Bitmap,\n  PlatformCanvas,\n  PlatformOffscreenCanvas,\n} from \"octopus-platform\";\nexport * from \"./Renderer2D\";\n\nexport const Renderer2DExtension = {\n  stick:\n    (\n      context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n      bitmap: Bitmap\n    ) =>\n    () =>\n      context.drawImage(bitmap, 0, 0),\n  clear: (\n    type: \"CL\" | \"RE\",\n    context: CanvasRenderingContext2D | OffscreenCanvasRenderingContext2D,\n    canvas: PlatformCanvas | PlatformOffscreenCanvas,\n    width: number,\n    height: number\n  ) => {\n    if (type === \"CL\") {\n      return () => {\n        // FIXME:【支付宝小程序】无法通过改变尺寸来清理画布，无论是Canvas还是OffscreenCanvas\n        context!.clearRect(0, 0, width, height);\n      };\n    }\n\n    return () => {\n      canvas!.width = width;\n      canvas!.height = height;\n    };\n  },\n};\n","import { platform } from \"../../platform\";\n\n/**\n * 动画控制器\n */\nexport class Animator {\n  /**\n   * 动画是否执行\n   */\n  private isRunning = false;\n  /**\n   * 动画开始时间\n   */\n  private startTime = 0;\n  /**\n   * 动画持续时间\n   */\n  private duration: number = 0;\n  /**\n   * 循环播放开始帧与动画开始帧之间的时间偏差\n   */\n  private loopStart: number = 0;\n  /**\n   * 动画暂停时的时间偏差\n   */\n  private pauseTime: number = 0;\n  /**\n   * 循环持续时间\n   */\n  private loopDuration: number = 0;\n\n  public onAnimate: (callback: () => void) => number = platform.noop<number>;\n\n  /* ---- 事件钩子 ---- */\n  public onStart: () => void = platform.noop;\n  public onUpdate: (timePercent: number) => void = platform.noop;\n  public onEnd: () => void = platform.noop;\n\n  /**\n   * 设置动画的必要参数\n   * @param duration\n   * @param loopStart\n   * @param loop\n   * @param fillValue\n   */\n  public setConfig(\n    duration: number,\n    loopStart: number,\n    loop: number,\n    fillValue: number\n  ) {\n    this.duration = duration;\n    this.loopStart = loopStart;\n    this.loopDuration = duration * loop + fillValue - loopStart;\n  }\n\n  public start(): void {\n    this.isRunning = true;\n    this.startTime = platform.now();\n    this.pauseTime = 0;\n    this.onStart();\n    this.doFrame();\n  }\n\n  public resume(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = true;\n    this.doFrame();\n    return true;\n  }\n\n  public pause(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = false;\n    // 设置暂停的位置\n    this.pauseTime =\n      (platform.now() - this.startTime) % this.duration;\n    return true;\n  }\n\n  public stop(): void {\n    this.isRunning = false;\n    this.startTime = 0;\n  }\n\n  private doFrame(): void {\n    if (this.isRunning) {\n      this.doDeltaTime(platform.now() - this.startTime);\n      if (this.isRunning) {\n        this.onAnimate(() => this.doFrame());\n      }\n    }\n  }\n\n  private doDeltaTime(deltaTime: number): void {\n    const { duration, loopStart, pauseTime, loopDuration } = this;\n    // 本轮动画已消耗的时间比例（Percentage of speed time）\n    let percent: number;\n    let ended = false;\n\n    // 运行时间 大于等于 循环持续时间\n    if (deltaTime >= loopDuration) {\n      // 动画已结束\n      percent = 1.0;\n      ended = true;\n      this.stop();\n    } else {\n      // 本轮动画已消耗的时间比例 = 本轮动画已消耗的时间 / 动画持续时间\n      percent = ((deltaTime + loopStart + pauseTime) % duration) / duration;\n    }\n\n    this.onUpdate(percent);\n    if (!this.isRunning && ended) {\n      this.onEnd();\n    }\n  }\n}\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\n\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n\n// fixed length extra bits\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n\n// fixed distance extra bits\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n\n// code length index map\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n// get base, reverse index map from extra bits\nconst freb = (eb: Uint8Array, start: number) => {\n  const b = new u16(31);\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  }\n  // numbers here are at max 18 bits\n  const r = new i32(b[30]);\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = ((j - b[i]) << 5) | i;\n    }\n  }\n  return { b, r };\n}\n\nconst { b: fl, r: revfl } = freb(fleb, 2);\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nconst { b: fd, r: revfd } = freb(fdeb, 0);\n\n// map of value to reverse (assuming 16 bits)\nconst rev = new u16(32768);\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n  x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n  x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n  rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nconst hMap = ((cd: Uint8Array, mb: number, r: 0 | 1) => {\n  const s = cd.length;\n  // index\n  let i = 0;\n  // u16 \"map\": index -> # of codes with bit length = index\n  const l = new u16(mb);\n  // length of cd must be 288 (total # of codes)\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  }\n  // u16 \"map\": index -> minimum code for bit length = index\n  const le = new u16(mb);\n  for (i = 1; i < mb; ++i) {\n    le[i] = (le[i - 1] + l[i - 1]) << 1;\n  }\n  let co: Uint16Array;\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb);\n    // bits to remove for reverser\n    const rvb = 15 - mb;\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = (i << 4) | cd[i];\n        // free bits\n        const r = mb - cd[i];\n        // start value\n        let v = le[cd[i] - 1]++ << r;\n        // m is end value\n        for (const m = v | ((1 << r) - 1); v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n      }\n    }\n  }\n  return co;\n});\n\n// fixed length tree\nconst flt = new u8(288);\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\nfor (let i = 280; i < 288; ++i) flt[i] = 8;\n// fixed distance tree\nconst fdt = new u8(32);\nfor (let i = 0; i < 32; ++i) fdt[i] = 5;\n// fixed length map\nconst flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nconst fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n\n// find max of array\nconst max = (a: Uint8Array | number[]) => {\n  let m = a[0];\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n  return m;\n};\n\n// read d, starting at bit p and mask with m\nconst bits = (d: Uint8Array, p: number, m: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n}\n\n// read d, starting at bit p continuing for at least 16 bits\nconst bits16 = (d: Uint8Array, p: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n}\n\n// get end of byte\nconst shft = (p: number) => ((p + 7) / 8) | 0;\n\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nconst slc = (v: Uint8Array, s: number, e?: number) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length;\n  // can't use .constructor in case user-supplied\n  return new u8(v.subarray(s, e));\n}\n\n// inflate state\ntype InflateState = {\n  // lmap\n  l?: Uint16Array;\n  // dmap\n  d?: Uint16Array;\n  // lbits\n  m?: number;\n  // dbits\n  n?: number;\n  // final\n  f?: number;\n  // pos\n  p?: number;\n  // byte\n  b?: number;\n  // lstchk\n  i: number;\n};\n\n// error codes\nconst ec = [\n  'unexpected EOF',\n  'invalid block type',\n  'invalid length/literal',\n  'invalid distance',\n  'stream finished',\n  'no stream handler',\n  , // determined by compression function\n  'no callback',\n  'invalid UTF-8 data',\n  'extra field too long',\n  'date not in range 1980-2099',\n  'filename too long',\n  'stream finishing',\n  'invalid zip data'\n  // determined by unknown compression method\n];\n\n/**\n * An error generated within this library\n */\nexport interface FlateError extends Error {\n  /**\n   * The code associated with this error\n   */\n  code: number;\n};\n\nconst err = (ind: number, msg?: string | 0, nt?: 1) => {\n  const e: Partial<FlateError> = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e as FlateError;\n}\n\n// expands raw DEFLATE data\nconst inflt = (dat: Uint8Array, st: InflateState, buf?: Uint8Array, dict?: Uint8Array) => {\n  // source length       dict length\n  const sl = dat.length, dl = dict ? dict.length : 0;\n  if (!sl || st.f && !st.l) return buf || new u8(0);\n  const noBuf = !buf;\n  // have to estimate size\n  const resize = noBuf || st.i != 2;\n  // no state\n  const noSt = st.i;\n  // Assumes roughly 33% compression ratio average\n  if (noBuf) buf = new u8(sl * 3);\n  // ensure buffer can fit at least l elements\n  const cbuf = (l: number) => {\n    let bl = buf!.length;\n    // need to increase size to fit\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf!);\n      buf = nbuf;\n    }\n  };\n  //  last chunk         bitpos           bytes\n  let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n  // total bits\n  const tbts = sl * 8;\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1);\n      // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        }\n        // ensure size\n        if (resize) cbuf(bt + l);\n        // Copy over uncompressed data\n        buf!.set(dat.subarray(s, t), bt);\n        // Get new bitpos, update byte count\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      }\n      else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n      else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14;\n        // length+distance tree\n        const ldt = new u8(tl);\n        // code length tree\n        const clt = new u8(19);\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n        pos += hcLen * 3;\n        // code lengths bits\n        const clb = max(clt), clbmsk = (1 << clb) - 1;\n        // code lengths map\n        const clm = hMap(clt, clb, 1);\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)];\n          // bits read\n          pos += r & 15;\n          // symbol\n          const s = r >> 4;\n          // code length to copy\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0, n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n            else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;\n            else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n            while (n--) ldt[i++] = c;\n          }\n        }\n        //    length tree                 distance tree\n        const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n        // max length bits\n        lbt = max(lt)\n        // max dist bits\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    }\n    // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17\n    if (resize) cbuf(bt + 131072);\n    const lms = (1 << lbt!) - 1, dms = (1 << dbt!) - 1;\n    let lpos = pos;\n    for (;; lpos = pos) {\n      // bits read, code\n      const c = lm![bits16(dat, pos) & lms], sym = c >> 4;\n      pos += c & 15;\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n      if (!c) err(2);\n      if (sym < 256) buf![bt++] = sym;\n      else if (sym == 256) {\n        lpos = pos, lm = undefined;\n        break;\n      } else {\n        let add = sym - 254;\n        // no extra bits needed if less\n        if (sym > 264) {\n          // index\n          const i = sym - 257, b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        }\n        // dist\n        const d = dm![bits16(dat, pos) & dms], dsym = d >> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        let dt = fd[dsym];\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n        if (resize) cbuf(bt + 131072);\n        const end = bt + add;\n        if (bt < dt) {\n          const shift = dl - dt, dend = Math.min(dt, end);\n          if (shift + bt < 0) err(3);\n          for (; bt < dend; ++bt) buf![bt] = dict![shift + bt];\n        }\n        for (; bt < end; ++bt) buf![bt] = buf![bt - dt];\n      }\n    }\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final)\n  // don't reallocate for streams or user buffers\n  return bt != buf!.length && noBuf ? slc(buf!, 0, bt) : buf!.subarray(0, bt);\n}\n\n// starting at p, write the minimum number of bits that can hold v to d\nconst wbits = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n}\n\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nconst wbits16 = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n  d[o + 2] |= v >> 16;\n}\n\ntype HuffNode = {\n  // symbol\n  s: number;\n  // frequency\n  f: number;\n  // left child\n  l?: HuffNode;\n  // right child\n  r?: HuffNode;\n};\n\n// creates code lengths from a frequency table\nconst hTree = (d: Uint16Array, mb: number) => {\n  // Need extra info to make a tree\n  const t: HuffNode[] = [];\n  for (let i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({ s: i, f: d[i] });\n  }\n  const s = t.length;\n  const t2 = t.slice();\n  if (!s) return { t: et, l: 0 };\n  if (s == 1) {\n    const v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return { t: v, l: 1 };\n  }\n  t.sort((a, b) => a.f - b.f);\n  // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n  t.push({ s: -1, f: 25001 });\n  let l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n  t[0] = { s: -1, f: l.f + r.f, l, r };\n  // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = { s: -1, f: l.f + r.f, l, r };\n  }\n  let maxSym = t2[0].s;\n  for (let i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  }\n  // code lengths\n  const tr = new u16(maxSym + 1);\n  // max bits in tree\n  let mbt = ln(t[i1 - 1], tr, 0);\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    let i = 0, dt = 0;\n    //    left            cost\n    const lft = mbt - mb, cst = 1 << lft;\n    t2.sort((a, b) => tr[b.s] - tr[a.s] || a.f - b.f);\n    for (; i < s; ++i) {\n      const i2 = t2[i].s;\n      if (tr[i2] > mb) {\n        dt += cst - (1 << (mbt - tr[i2]));\n        tr[i2] = mb;\n      } else break;\n    }\n    dt >>= lft;\n    while (dt > 0) {\n      const i2 = t2[i].s;\n      if (tr[i2] < mb) dt -= 1 << (mb - tr[i2]++ - 1);\n      else ++i;\n    }\n    for (; i >= 0 && dt; --i) {\n      const i2 = t2[i].s;\n      if (tr[i2] == mb) {\n        --tr[i2];\n        ++dt;\n      }\n    }\n    mbt = mb;\n  }\n  return { t: new u8(tr), l: mbt };\n}\n// get the max length and assign length codes\nconst ln = (n: HuffNode, l: Uint16Array, d: number): number => {\n  return n.s == -1\n    ? Math.max(ln(n.l!, l, d + 1), ln(n.r!, l, d + 1))\n    : (l[n.s] = d);\n}\n\n// length codes generation\nconst lc = (c: Uint8Array) => {\n  let s = c.length;\n  // Note that the semicolon was intentional\n  while (s && !c[--s]);\n  const cl = new u16(++s);\n  //  ind      num         streak\n  let cli = 0, cln = c[0], cls = 1;\n  const w = (v: number) => { cl[cli++] = v; }\n  for (let i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s)\n      ++cls;\n    else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n        if (cls > 2) {\n          w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n        for (; cls > 6; cls -= 6) w(8304);\n        if (cls > 2) w(((cls - 3) << 5) | 8208), cls = 0;\n      }\n      while (cls--) w(cln);\n      cls = 1;\n      cln = c[i];\n    }\n  }\n  return { c: cl.subarray(0, cli), n: s };\n}\n\n// calculate the length of output from tree, code lengths\nconst clen = (cf: Uint16Array, cl: Uint8Array) => {\n  let l = 0;\n  for (let i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n  return l;\n}\n\n// writes a fixed block\n// returns the new bit pos\nconst wfblk = (out: Uint8Array, pos: number, dat: Uint8Array) => {\n  // no need to write 00 as type: TypedArray defaults to 0\n  const s = dat.length;\n  const o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n  for (let i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n  return (o + 4 + s) * 8;\n}\n\n// writes a block\nconst wblk = (dat: Uint8Array, out: Uint8Array, final: number, syms: Int32Array, lf: Uint16Array, df: Uint16Array, eb: number, li: number, bs: number, bl: number, p: number) => {\n  wbits(out, p++, final);\n  ++lf[256];\n  const { t: dlt, l: mlb } = hTree(lf, 15);\n  const { t: ddt, l: mdb } = hTree(df, 15);\n  const { c: lclt, n: nlc } = lc(dlt);\n  const { c: lcdt, n: ndc } = lc(ddt);\n  const lcfreq = new u16(19);\n  for (let i = 0; i < lclt.length; ++i) ++lcfreq[lclt[i] & 31];\n  for (let i = 0; i < lcdt.length; ++i) ++lcfreq[lcdt[i] & 31];\n  const { t: lct, l: mlcb } = hTree(lcfreq, 7);\n  let nlcc = 19;\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n  const flen = (bl + 5) << 3;\n  const ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  const dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n  if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  let lm: Uint16Array, ll: Uint8Array, dm: Uint16Array, dl: Uint8Array;\n  wbits(out, p, 1 + (dtlen < ftlen as unknown as number)), p += 2;\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    const llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n    for (let i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n    p += 3 * nlcc;\n    const lcts = [lclt, lcdt];\n    for (let it = 0; it < 2; ++it) {\n      const clct = lcts[it];\n      for (let i = 0; i < clct.length; ++i) {\n        const len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n  for (let i = 0; i < li; ++i) {\n    const sym = syms[i];\n    if (sym > 255) {\n      const len = (sym >> 18) & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n      const dst = sym & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[sym]), p += ll[sym];\n    }\n  }\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n}\n\n// deflate options (nice << 13) | chain\nconst deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n\n// empty\nconst et = /*#__PURE__*/new u8(0);\n\ntype DeflateState = {\n  // head\n  h?: Uint16Array;\n  // prev\n  p?: Uint16Array;\n  // index\n  i?: number;\n  // end index\n  z?: number;\n  // wait index\n  w?: number;\n  // remainder byte info\n  r?: number;\n  // last chunk\n  l: number;\n};\n\n// compresses data into a raw DEFLATE buffer\nconst dflt = (dat: Uint8Array, lvl: number, plvl: number, pre: number, post: number, st: DeflateState) => {\n  const s = st.z || dat.length;\n  const o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n  // writing to this writes to the output buffer\n  const w = o.subarray(pre, o.length - post);\n  const lst = st.l;\n  let pos = (st.r || 0) & 7;\n  if (lvl) {\n    if (pos) w[0] = st.r! >> 3;\n    const opt = deo[lvl - 1];\n    const n = opt >> 13, c = opt & 8191;\n    const msk = (1 << plvl) - 1;\n    //    prev 2-byte val map    curr 2-byte val map\n    const prev = st.p || new u16(32768), head = st.h || new u16(msk + 1);\n    const bs1 = Math.ceil(plvl / 3), bs2 = 2 * bs1;\n    const hsh = (i: number) => (dat[i] ^ (dat[i + 1] << bs1) ^ (dat[i + 2] << bs2)) & msk;\n    // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n    const syms = new i32(25000);\n    // length/literal freq   distance freq\n    const lf = new u16(288), df = new u16(32);\n    //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n    let lc = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n    for (; i + 2 < s; ++i) {\n      // hash value\n      const hv = hsh(i);\n      // index mod 32768    previous index mod\n      let imod = i & 32767, pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod;\n      // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n      if (wi <= i) {\n        // bytes remaining\n        const rem = s - i;\n        if ((lc > 7000 || li > 24576) && (rem > 423 || !lst)) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc = eb = 0, bs = i;\n          for (let j = 0; j < 286; ++j) lf[j] = 0;\n          for (let j = 0; j < 30; ++j) df[j] = 0;\n        }\n        //  len    dist   chain\n        let l = 2, d = 0, ch = c, dif = imod - pimod & 32767;\n        if (rem > 2 && hv == hsh(i - dif)) {\n          const maxn = Math.min(n, rem) - 1;\n          const maxd = Math.min(32767, i);\n          // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n          const ml = Math.min(258, rem);\n          while (dif <= maxd && --ch && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              let nl = 0;\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n              if (nl > l) {\n                l = nl, d = dif;\n                // break out early when we reach \"nice\" (we are satisfied enough)\n                if (nl > maxn) break;\n                // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n                const mmd = Math.min(dif, nl - 2);\n                let md = 0;\n                for (let j = 0; j < mmd; ++j) {\n                  const ti = i - dif + j & 32767;\n                  const pti = prev[ti];\n                  const cd = ti - pti & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            }\n            // check the previous match\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod & 32767;\n          }\n        }\n        // d will be nonzero only when a match was found\n        if (d) {\n          // store both dist and len data in one int32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n          const lin = revfl[l] & 31, din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n    for (i = Math.max(i, wi); i < s; ++i) {\n      syms[li++] = dat[i];\n      ++lf[dat[i]];\n    }\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n    if (!lst) {\n      st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n      // shft(pos) now 1 less if pos & 7 != 0\n      pos -= 7;\n      st.h = head, st.p = prev, st.i = i, st.w = wi;\n    }\n  } else {\n    for (let i = st.w || 0; i < s + lst; i += 65535) {\n      // end\n      let e = i + 65535;\n      if (e >= s) {\n        // write final block\n        w[(pos / 8) | 0] = lst;\n        e = s;\n      }\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n    st.i = s;\n  }\n  return slc(o, 0, pre + shft(pos) + post);\n}\n\n// crc check\ntype CRCV = {\n  p(d: Uint8Array): void;\n  d(): number;\n};\n\n// Adler32\nconst adler = (): CRCV => {\n  let a = 1, b = 0;\n  return {\n    p(d) {\n      // closures have awful performance\n      let n = a, m = b;\n      const l = d.length | 0;\n      for (let i = 0; i != l;) {\n        const e = Math.min(i + 2655, l);\n        for (; i < e; ++i) m += n += d[i];\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n      a = n, b = m;\n    },\n    d() {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n    }\n  }\n}\n\n/**\n * Options for compressing data into a DEFLATE format\n */\nexport interface DeflateOptions {\n  /**\n   * The level of compression to use, ranging from 0-9.\n   * \n   * 0 will store the data without compression.\n   * 1 is fastest but compresses the worst, 9 is slowest but compresses the best.\n   * The default level is 6.\n   * \n   * Typically, binary data benefits much more from higher values than text data.\n   * In both cases, higher values usually take disproportionately longer than the reduction in final size that results.\n   * \n   * For example, a 1 MB text file could:\n   * - become 1.01 MB with level 0 in 1ms\n   * - become 400 kB with level 1 in 10ms\n   * - become 320 kB with level 9 in 100ms\n   */\n  level?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;\n  /**\n   * The memory level to use, ranging from 0-12. Increasing this increases speed and compression ratio at the cost of memory.\n   * \n   * Note that this is exponential: while level 0 uses 4 kB, level 4 uses 64 kB, level 8 uses 1 MB, and level 12 uses 16 MB.\n   * It is recommended not to lower the value below 4, since that tends to hurt performance.\n   * In addition, values above 8 tend to help very little on most data and can even hurt performance.\n   * \n   * The default value is automatically determined based on the size of the input data.\n   */\n  mem?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n  /**\n   * A buffer containing common byte sequences in the input data that can be used to significantly improve compression ratios.\n   * \n   * Dictionaries should be 32kB or smaller and include strings or byte sequences likely to appear in the input.\n   * The decompressor must supply the same dictionary as the compressor to extract the original data.\n   * \n   * Dictionaries only improve aggregate compression ratio when reused across multiple small inputs. They should typically not be used otherwise.\n   * \n   * Avoid using dictionaries with GZIP and ZIP to maximize software compatibility.\n   */\n  dictionary?: Uint8Array;\n};\n\n/**\n * Options for compressing data into a Zlib format\n */\nexport interface ZlibOptions extends DeflateOptions {}\n\n/**\n * Options for decompressing DEFLATE data\n */\nexport interface InflateOptions {\n  /**\n   * The dictionary used to compress the original data. If no dictionary was used during compression, this option has no effect.\n   * \n   * Supplying the wrong dictionary during decompression usually yields corrupt output or causes an invalid distance error.\n   */\n  dictionary?: Uint8Array;\n  /**\n   * The buffer into which to write the decompressed data. Saves memory if you know the decompressed size in advance.\n   * \n   * Note that if the decompression result is larger than the size of this buffer, it will be truncated to fit.\n   */\n  out?: Uint8Array;\n}\n\n/**\n * Options for decompressing Zlib data\n */\nexport interface UnzlibOptions extends InflateOptions {}\n\n// deflate with opts\nconst dopt = (dat: Uint8Array, opt: DeflateOptions, pre: number, post: number, st?: DeflateState) => {\n  if (!st) {\n    st = { l: 1 };\n    if (opt.dictionary) {\n      const dict = opt.dictionary.subarray(-32768);\n      const newDat = new u8(dict.length + dat.length);\n      newDat.set(dict);\n      newDat.set(dat, dict.length);\n      dat = newDat;\n      st.w = dict.length;\n    }\n  }\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n}\n\n// write bytes\nconst wbytes = (d: Uint8Array, b: number, v: number) => {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n}\n\n// zlib header\nconst zlh = (c: Uint8Array, o: ZlibOptions) => {\n  const lv = o.level ?? 0, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = (fl << 6) | ((o.dictionary ?? 0) && 32);\n  c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n  if (o.dictionary) {\n    const h = adler();\n    h.p(o.dictionary);\n    wbytes(c, 2, h.d());\n  }\n}\n\n// zlib start\nconst zls = (d: Uint8Array, dict?: unknown) => {\n  if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31)) err(6, 'invalid zlib data');\n  if ((d[1] >> 5 & 1) == +!dict) err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n  return (d[1] >> 3 & 4) + 2;\n}\n\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data: Uint8Array, opts: ZlibOptions = {}) {\n  const a = adler();\n  a.p(data);\n  const d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data: Uint8Array, opts: UnzlibOptions = {}) {\n  return inflt(data.subarray(zls(data, opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n","import { platform } from \"../../platform\";\n\nexport class CRC32 {\n  // CRC32 Table 初始化\n  private static table = Uint32Array.from(Array(256), (_, i) => {\n    let c = i;\n\n    for (let j = 0; j < 8; j++) {\n      c = (c & 1) ? (0xedb88320 ^ (c >>> 1)) : (c >>> 1);\n    }\n\n    return c >>> 0;\n  });\n\n  private static WHITE_COLOR: number = 0xffffffff;\n\n  private readonly caches = new Map<string, number>();\n\n  calculate(buff: Uint8Array): number {\n    if (!(buff instanceof Uint8Array)) {\n      throw new TypeError('Input must be a Uint8Array');\n    }\n\n    const { caches } = this;\n    const key = platform.decode.bytesToString(buff);\n  \n    if (caches.has(key)) {\n      return caches.get(key)!;\n    }\n\n    let crc = CRC32.WHITE_COLOR;\n    // 使用位运算优化\n    for (let i = 0; i < buff.length; i++) {\n      crc = (crc >>> 8) ^ CRC32.table[(crc ^ buff[i]) & 0xff];\n    }\n\n    caches.set(key, (crc ^ CRC32.WHITE_COLOR) >>> 0);\n\n    return caches.get(key) as number;\n  }\n\n  clear(){\n    this.caches.clear();\n  }\n}","// import { zlibSync } from \"fflate\";\nimport { zlibSync } from \"../zlib\";\nimport { CRC32 } from \"./crc\";\n\nexport class PNGEncoder {\n  private readonly view: DataView;\n\n  private crc32 = new CRC32();\n\n  constructor(private readonly width: number, private readonly height: number) {\n    this.view = new DataView(new ArrayBuffer(4 * width * height));\n  }\n\n  private createChunk(type: string, data: Uint8Array): Uint8Array {\n    // 长度（4字节，大端序）\n    const length = new Uint8Array(4);\n    new DataView(length.buffer).setUint32(0, data.length, false);\n\n    // 块类型（4字节， ASCII）\n    const chunkType = Uint8Array.from(type, c => c.charCodeAt(0));\n\n    // 计算 CRC32 校验（类型 + 数据）\n    const partialChunk = new Uint8Array(chunkType.length + data.length);\n    partialChunk.set(chunkType);\n    partialChunk.set(data, chunkType.length);\n    \n    const crc = new Uint8Array(4);\n    new DataView(crc.buffer).setUint32(0, this.crc32.calculate(partialChunk) >>> 0, false);\n\n    // 汇总成完整的chunk数据\n    const result = new Uint8Array(length.length + partialChunk.length + crc.length);\n    result.set(length);\n    result.set(partialChunk, length.length);\n    result.set(crc, length.length + partialChunk.length);\n\n    return result;\n  }\n\n  private createIHDRChunk(): Uint8Array {\n    const ihdrData = new Uint8Array(13);\n    const view = new DataView(ihdrData.buffer);\n\n    // 宽度\n    view.setUint32(0, this.width, false);\n    // 高度\n    view.setUint32(4, this.height, false);\n    // 位深度\n    view.setUint8(8, 8);\n    // 颜色类型\n    view.setUint8(9, 6);\n    // 压缩方法\n    view.setUint8(10, 0);\n    // 过滤器方法\n    view.setUint8(11, 0);\n    // 交错方法\n    view.setUint8(12, 0);\n\n    return this.createChunk(\"IHDR\", ihdrData);\n  }\n\n  private createIDATChunk(): Uint8Array {\n    const { width, height } = this;\n    const validRowSize = width * 4;\n    // 每行开头添加一位过滤头数据\n    const rowSize = validRowSize + 1;\n    const data = new Uint8Array(rowSize * height);\n    // 将Uint32数据转换为Uint8数据\n    const pixelsData = new Uint8Array(this.view.buffer);\n    let startIdx: number;\n    let srcStart: number;\n\n    for (let y = 0; y < height; y++) {\n      startIdx = y * rowSize;\n      data[startIdx] = 0x00; // 过滤头\n      // ✅ 复制预先转换好的 RGBA 数据\n      srcStart = y * validRowSize; // Uint32 => 每个元素占 4 字节\n      data.set(pixelsData.subarray(srcStart, srcStart + validRowSize), startIdx + 1);\n    }\n\n    // 使用 zlib 进行压缩, 平衡压缩率有利于提升文件生成速度\n    return this.createChunk(\"IDAT\", zlibSync(data));\n  }\n\n  public setPixel(x: number, y: number, pixel: number): void {\n    this.view.setUint32((y * this.width + x) * 4, pixel, false);\n  }\n\n  public write(pixels: Uint8Array | Uint8ClampedArray): this {\n    const { width, height } = this;\n    let pos: number;\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    let pixel: number;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        pos = (y * width + x) * 4;\n        r = pixels[pos];\n        g = pixels[pos + 1];\n        b = pixels[pos + 2];\n        a = pixels[pos + 3];\n        pixel = ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n        this.setPixel(x, y, pixel);\n      }\n    }\n\n    return this;\n  }\n\n  public flush(): Uint8Array {\n    // 预先创建所有块\n    const iHDRChunk = this.createIHDRChunk();\n    const iDATChunk = this.createIDATChunk();\n    const iENDChunk = this.createChunk(\"IEND\", new Uint8Array(0));\n    \n    // 一次性分配内存（直接计算总大小）\n    const pngData = new Uint8Array(8 + iHDRChunk.length + iDATChunk.length + iENDChunk.length);\n    \n    /* ------ 按顺序写入数据 ------ */\n\n    // 1. 写入文件头（固定 8 字节）\n    let offset = 0;\n    pngData.set(new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]), offset);\n    // 2. 写入IHDR块\n    offset += 8;\n    pngData.set(iHDRChunk, offset);\n    // 3. 写入IDAT块\n    offset += iHDRChunk.length;\n    pngData.set(iDATChunk, offset);\n    // 4. 写入IEND块\n    offset += iDATChunk.length;\n    pngData.set(iENDChunk, offset);\n    \n    /* ------ 清空 CRC32 缓存 ------ */\n    this.crc32.clear();\n\n    return pngData;\n  }\n}\n","// ---------------------------------------------------------------------\n// qrBitBuffer\n// ---------------------------------------------------------------------\n\nexport class BitBuffer {\n  public buffer: number[] = [];\n\n  public lengthInBits = 0;\n\n  public getAt(i: number): boolean {\n    const bufIndex = ~~(i / 8);\n\n    return ((this.buffer[bufIndex] >>> (7 - (i % 8))) & 1) === 1;\n  }\n\n  public put(num: number, length: number): void {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  public putBit(bit: boolean): void {\n    const { lengthInBits: len, buffer } = this;\n    const bufIndex = ~~(len / 8);\n\n    if (buffer.length <= bufIndex) {\n      buffer.push(0);\n    }\n\n    if (bit) {\n      buffer[bufIndex] |= 0x80 >>> len % 8;\n    }\n\n    this.lengthInBits += 1;\n  }\n}\n","// ---------------------------------------------------------------------\n// QRMode\n// ---------------------------------------------------------------------\n\nexport const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n}\n\n// ---------------------------------------------------------------------\n// QRErrorCorrectLevel\n// ---------------------------------------------------------------------\n\nexport const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n}\n\n// ---------------------------------------------------------------------\n// QRMaskPattern\n// ---------------------------------------------------------------------\n\nexport const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n}\n","// ---------------------------------------------------------------------\n// qr8BitByte\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { QRMode } from \"./constants\";\n\nexport class BitByte {\n  private readonly bytes: number[];\n\n  constructor(data: string) {\n    let parsedData: number[][] = [];\n\n    // Added to support UTF-8 Characters\n    for (let i = 0; i < data.length; i++) {\n      const byteArray: number[] = [];\n      const code = data.charCodeAt(i);\n\n      if (code > 0x10000) {\n        byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n        byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n        byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[3] = 0x80 | (code & 0x3f);\n      } else if (code > 0x800) {\n        byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n        byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[2] = 0x80 | (code & 0x3f);\n      } else if (code > 0x80) {\n        byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n        byteArray[1] = 0x80 | (code & 0x3f);\n      } else {\n        byteArray[0] = code;\n      }\n\n      // Fix Unicode corruption bug\n      parsedData.push(byteArray);\n    }\n\n    this.bytes = parsedData.flat(1);\n\n    const { bytes } = this;\n    if (bytes.length !== data.length) {\n      bytes.unshift(191);\n      bytes.unshift(187);\n      bytes.unshift(239);\n    }\n  }\n\n  public get mode(): number {\n    return QRMode.MODE_8BIT_BYTE;\n  }\n\n  public get length(): number {\n    return this.bytes.length;\n  }\n\n  public write(buff: BitBuffer): void {\n    const { bytes } = this;\n\n    for (let i = 0; i < bytes.length; i++) {\n      buff.put(bytes[i], 8);\n    }\n  }\n}\n","// ---------------------------------------------------------------------\n// QRRSBlock\n// ---------------------------------------------------------------------\n\nimport { QRErrorCorrectLevel } from \"./constants\";\n\nexport interface RSBlockCount {\n  totalCount: number;\n  dataCount: number;\n}\n\nconst RS_BLOCK_TABLE = [\n  [1, 26, 19],\n  [1, 26, 16],\n  [1, 26, 13],\n  [1, 26, 9],\n  [1, 44, 34],\n  [1, 44, 28],\n  [1, 44, 22],\n  [1, 44, 16],\n  [1, 70, 55],\n  [1, 70, 44],\n  [2, 35, 17],\n  [2, 35, 13],\n  [1, 100, 80],\n  [2, 50, 32],\n  [2, 50, 24],\n  [4, 25, 9],\n  [1, 134, 108],\n  [2, 67, 43],\n  [2, 33, 15, 2, 34, 16],\n  [2, 33, 11, 2, 34, 12],\n  [2, 86, 68],\n  [4, 43, 27],\n  [4, 43, 19],\n  [4, 43, 15],\n  [2, 98, 78],\n  [4, 49, 31],\n  [2, 32, 14, 4, 33, 15],\n  [4, 39, 13, 1, 40, 14],\n  [2, 121, 97],\n  [2, 60, 38, 2, 61, 39],\n  [4, 40, 18, 2, 41, 19],\n  [4, 40, 14, 2, 41, 15],\n  [2, 146, 116],\n  [3, 58, 36, 2, 59, 37],\n  [4, 36, 16, 4, 37, 17],\n  [4, 36, 12, 4, 37, 13],\n  [2, 86, 68, 2, 87, 69],\n  [4, 69, 43, 1, 70, 44],\n  [6, 43, 19, 2, 44, 20],\n  [6, 43, 15, 2, 44, 16],\n  [4, 101, 81],\n  [1, 80, 50, 4, 81, 51],\n  [4, 50, 22, 4, 51, 23],\n  [3, 36, 12, 8, 37, 13],\n  [2, 116, 92, 2, 117, 93],\n  [6, 58, 36, 2, 59, 37],\n  [4, 46, 20, 6, 47, 21],\n  [7, 42, 14, 4, 43, 15],\n  [4, 133, 107],\n  [8, 59, 37, 1, 60, 38],\n  [8, 44, 20, 4, 45, 21],\n  [12, 33, 11, 4, 34, 12],\n  [3, 145, 115, 1, 146, 116],\n  [4, 64, 40, 5, 65, 41],\n  [11, 36, 16, 5, 37, 17],\n  [11, 36, 12, 5, 37, 13],\n  [5, 109, 87, 1, 110, 88],\n  [5, 65, 41, 5, 66, 42],\n  [5, 54, 24, 7, 55, 25],\n  [11, 36, 12],\n  [5, 122, 98, 1, 123, 99],\n  [7, 73, 45, 3, 74, 46],\n  [15, 43, 19, 2, 44, 20],\n  [3, 45, 15, 13, 46, 16],\n  [1, 135, 107, 5, 136, 108],\n  [10, 74, 46, 1, 75, 47],\n  [1, 50, 22, 15, 51, 23],\n  [2, 42, 14, 17, 43, 15],\n  [5, 150, 120, 1, 151, 121],\n  [9, 69, 43, 4, 70, 44],\n  [17, 50, 22, 1, 51, 23],\n  [2, 42, 14, 19, 43, 15],\n  [3, 141, 113, 4, 142, 114],\n  [3, 70, 44, 11, 71, 45],\n  [17, 47, 21, 4, 48, 22],\n  [9, 39, 13, 16, 40, 14],\n  [3, 135, 107, 5, 136, 108],\n  [3, 67, 41, 13, 68, 42],\n  [15, 54, 24, 5, 55, 25],\n  [15, 43, 15, 10, 44, 16],\n  [4, 144, 116, 4, 145, 117],\n  [17, 68, 42],\n  [17, 50, 22, 6, 51, 23],\n  [19, 46, 16, 6, 47, 17],\n  [2, 139, 111, 7, 140, 112],\n  [17, 74, 46],\n  [7, 54, 24, 16, 55, 25],\n  [34, 37, 13],\n  [4, 151, 121, 5, 152, 122],\n  [4, 75, 47, 14, 76, 48],\n  [11, 54, 24, 14, 55, 25],\n  [16, 45, 15, 14, 46, 16],\n  [6, 147, 117, 4, 148, 118],\n  [6, 73, 45, 14, 74, 46],\n  [11, 54, 24, 16, 55, 25],\n  [30, 46, 16, 2, 47, 17],\n  [8, 132, 106, 4, 133, 107],\n  [8, 75, 47, 13, 76, 48],\n  [7, 54, 24, 22, 55, 25],\n  [22, 45, 15, 13, 46, 16],\n  [10, 142, 114, 2, 143, 115],\n  [19, 74, 46, 4, 75, 47],\n  [28, 50, 22, 6, 51, 23],\n  [33, 46, 16, 4, 47, 17],\n  [8, 152, 122, 4, 153, 123],\n  [22, 73, 45, 3, 74, 46],\n  [8, 53, 23, 26, 54, 24],\n  [12, 45, 15, 28, 46, 16],\n  [3, 147, 117, 10, 148, 118],\n  [3, 73, 45, 23, 74, 46],\n  [4, 54, 24, 31, 55, 25],\n  [11, 45, 15, 31, 46, 16],\n  [7, 146, 116, 7, 147, 117],\n  [21, 73, 45, 7, 74, 46],\n  [1, 53, 23, 37, 54, 24],\n  [19, 45, 15, 26, 46, 16],\n  [5, 145, 115, 10, 146, 116],\n  [19, 75, 47, 10, 76, 48],\n  [15, 54, 24, 25, 55, 25],\n  [23, 45, 15, 25, 46, 16],\n  [13, 145, 115, 3, 146, 116],\n  [2, 74, 46, 29, 75, 47],\n  [42, 54, 24, 1, 55, 25],\n  [23, 45, 15, 28, 46, 16],\n  [17, 145, 115],\n  [10, 74, 46, 23, 75, 47],\n  [10, 54, 24, 35, 55, 25],\n  [19, 45, 15, 35, 46, 16],\n  [17, 145, 115, 1, 146, 116],\n  [14, 74, 46, 21, 75, 47],\n  [29, 54, 24, 19, 55, 25],\n  [11, 45, 15, 46, 46, 16],\n  [13, 145, 115, 6, 146, 116],\n  [14, 74, 46, 23, 75, 47],\n  [44, 54, 24, 7, 55, 25],\n  [59, 46, 16, 1, 47, 17],\n  [12, 151, 121, 7, 152, 122],\n  [12, 75, 47, 26, 76, 48],\n  [39, 54, 24, 14, 55, 25],\n  [22, 45, 15, 41, 46, 16],\n  [6, 151, 121, 14, 152, 122],\n  [6, 75, 47, 34, 76, 48],\n  [46, 54, 24, 10, 55, 25],\n  [2, 45, 15, 64, 46, 16],\n  [17, 152, 122, 4, 153, 123],\n  [29, 74, 46, 14, 75, 47],\n  [49, 54, 24, 10, 55, 25],\n  [24, 45, 15, 46, 46, 16],\n  [4, 152, 122, 18, 153, 123],\n  [13, 74, 46, 32, 75, 47],\n  [48, 54, 24, 14, 55, 25],\n  [42, 45, 15, 32, 46, 16],\n  [20, 147, 117, 4, 148, 118],\n  [40, 75, 47, 7, 76, 48],\n  [43, 54, 24, 22, 55, 25],\n  [10, 45, 15, 67, 46, 16],\n  [19, 148, 118, 6, 149, 119],\n  [18, 75, 47, 31, 76, 48],\n  [34, 54, 24, 34, 55, 25],\n  [20, 45, 15, 61, 46, 16],\n];\n\nexport class RSBlock {\n  private getRSBlockTable(typeNumber: number, errorCorrectLevel: number): number[] {\n    const { L, M, Q, H } = QRErrorCorrectLevel;\n    const pos = (typeNumber - 1) * 4;\n\n    switch (errorCorrectLevel) {\n      case L:\n        return RS_BLOCK_TABLE[pos + 0];\n      case M:\n        return RS_BLOCK_TABLE[pos + 1];\n      case Q:\n        return RS_BLOCK_TABLE[pos + 2];\n      case H:\n        return RS_BLOCK_TABLE[pos + 3];\n      default:\n        throw new Error(`bad rs block @ typeNumber:${typeNumber}/errorCorrectLevel: ${errorCorrectLevel}`);\n    }\n  }\n\n  public getRSBlocks(typeNumber: number, errorCorrectLevel: number): RSBlockCount[] {\n    const rsBlock = this.getRSBlockTable(typeNumber, errorCorrectLevel);\n    const length = rsBlock.length / 3;\n    const list: RSBlockCount[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n\n      for (let j = 0; j < count; j++) {\n        list.push({ totalCount, dataCount });\n      }\n    }\n\n    return list;\n  }\n}\n","// ---------------------------------------------------------------------\n// QRMath\n// ---------------------------------------------------------------------\n\nconst EXP_TABLE = new Array(256);\nconst LOG_TABLE = new Array(256);\n\n// initialize tables\nfor (let i = 0; i < 8; i++) {\n  EXP_TABLE[i] = 1 << i;\n}\n\nfor (let i = 8; i < 256; i++) {\n  EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n}\n\nfor (let i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nexport const QRMath = {\n  glog(n: number): number {\n    if (n < 1) {\n      throw new Error(`glog(${n})`);\n    }\n\n    return LOG_TABLE[n];\n  },\n\n  gexp(n: number): number {\n    if (n < 0) {\n      n = 255 + (n % 255);\n    } else if (n > 255) {\n      n %= 255;\n    }\n\n    return EXP_TABLE[n];\n  }\n}\n","// ---------------------------------------------------------------------\n// Polynomial\n// ---------------------------------------------------------------------\n\nimport { QRMath } from \"./math\";\n\nexport class Polynomial {\n  private readonly num: number[];\n\n  constructor(num: number[], shift: number) {\n    const { length } = num;\n\n    if (length === undefined) {\n      throw new Error(`${length}/${shift}`);\n    }\n\n    let offset = 0;\n    while (offset < length && num[offset] === 0) {\n      offset++;\n    }\n    \n    const len = length - offset;\n    this.num = new Array(len + shift);\n    for (let i = 0; i < len; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  public get length(): number {\n    return this.num.length;\n  }\n\n  public getAt(i: number): number {\n    return this.num[i];\n  }\n\n  public multiply(e: Polynomial): Polynomial {\n    const { glog, gexp } = QRMath;\n    const num: number[] = [];\n\n    for (let i = 0; i < this.length; i++) {\n      for (let j = 0; j < e.length; j++) {\n        num[i + j] ^= gexp(glog(this.getAt(i)) + glog(e.getAt(j)));\n      }\n    }\n\n    return new Polynomial(num, 0);\n  }\n\n  public mod(e: Polynomial): Polynomial {\n    if (this.length - e.length < 0) {\n      return this;\n    }\n\n    const { glog, gexp } = QRMath;\n    const ratio = glog(this.getAt(0)) - glog(e.getAt(0));\n    const num: number[] = [];\n\n    for (var i = 0; i < this.length; i++) {\n      const n = this.getAt(i);\n\n      num[i] = i < e.length ? n ^ gexp(glog(e.getAt(i)) + ratio) : n;\n    }\n\n    // recursive call\n    return new Polynomial(num, 0).mod(e);\n  }\n}\n","import { QRCode } from \".\";\nimport { Polynomial } from \"./polynomial\";\nimport { QRMaskPattern, QRMode } from \"./constants\";\nimport { QRMath } from \"./math\";\n\nconst PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\nconst G15 =\n  (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nconst G18 =\n  (1 << 12) |\n  (1 << 11) |\n  (1 << 10) |\n  (1 << 9) |\n  (1 << 8) |\n  (1 << 5) |\n  (1 << 2) |\n  (1 << 0);\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nconst genBCHDigit = (data: number) => data === 0 ? 0 : Math.log2(data);\nconst BCH_G15 = genBCHDigit(G15);\nconst BCH_G18 = genBCHDigit(G18);\n\n// ---------------------------------------------------------------------\n// QRUtil\n// ---------------------------------------------------------------------\n\nexport const Util = {\n  getBCHTypeInfo(data: number): number {\n    let d = data << 10;\n\n    while (genBCHDigit(d) - BCH_G15 >= 0) {\n      d ^= G15 << (genBCHDigit(d) - BCH_G15);\n    }\n\n    return ((data << 10) | d) ^ G15_MASK;\n  },\n\n  getBCHTypeNumber(data: number): number {\n    let d = data << 12;\n\n    while (genBCHDigit(d) - BCH_G18 >= 0) {\n      d ^= G18 << (genBCHDigit(d) - BCH_G18);\n    }\n\n    return (data << 12) | d;\n  },\n\n  getPatternPosition(typeNumber: number): number[] {\n    return PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n\n  getMaskFunction(maskPattern: number): (i: number, j: number) => boolean {\n    const {\n      PATTERN000,\n      PATTERN001,\n      PATTERN010,\n      PATTERN011,\n      PATTERN100,\n      PATTERN101,\n      PATTERN110,\n      PATTERN111,\n    } = QRMaskPattern;\n\n    switch (maskPattern) {\n      case PATTERN000:\n        return (i: number, j: number) => (i + j) % 2 === 0;\n      case PATTERN001:\n        return (i: number) => i % 2 === 0;\n      case PATTERN010:\n        return (_i: number, j: number) => j % 3 === 0;\n      case PATTERN011:\n        return (i: number, j: number) => (i + j) % 3 === 0;\n      case PATTERN100:\n        return (i: number, j: number) => (~~(i / 2) + ~~(j / 3)) % 2 === 0;\n      case PATTERN101:\n        return (i: number, j: number) => ((i * j) % 2) + ((i * j) % 3) === 0;\n      case PATTERN110:\n        return (i: number, j: number) =>\n          (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n      case PATTERN111:\n        return (i: number, j: number) =>\n          (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n      default:\n        throw new Error(`bad maskPattern: ${maskPattern}`);\n    }\n  },\n\n  getErrorCorrectPolynomial(errorCorrectLength: number): Polynomial {\n    let a = new Polynomial([1], 0);\n\n    for (let i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, QRMath.gexp(i)], 0));\n    }\n\n    return a;\n  },\n\n  getLengthInBits(mode: number, type: number): number {\n    const { MODE_NUMBER, MODE_ALPHA_NUM, MODE_8BIT_BYTE, MODE_KANJI } = QRMode;\n\n    if (type < 1 || type > 40) {\n      throw new Error(`type: ${type}`);\n    }\n\n    if (type >= 1 && type < 10) {\n      // 1 - 9\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 10;\n        case MODE_ALPHA_NUM:\n          return 9;\n        case MODE_8BIT_BYTE:\n          return 8;\n        case MODE_KANJI:\n          return 8;\n        default:\n      }\n    }\n\n    if (type < 27) {\n      // 10 - 26\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 12;\n        case MODE_ALPHA_NUM:\n          return 11;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 10;\n        default:\n      }\n    }\n\n    if (type <= 40) {\n      // 27 - 40\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 14;\n        case MODE_ALPHA_NUM:\n          return 13;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 12;\n        default:\n      }\n    }\n\n    throw new Error(`mode: ${mode}`);\n  },\n\n  getLostPoint(qr: QRCode): number {\n    const moduleCount = qr.getModuleCount();\n    let lostPoint = 0;\n\n    // LEVEL1\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount; col++) {\n        const dark = qr.isDark(row, col);\n        let sameCount = 0;\n\n        for (let r = -1; r <= 1; r++) {\n          const nRow = row + r;\n          if (nRow < 0 || moduleCount <= nRow) continue;\n\n          for (let c = -1; c <= 1; c++) {\n            const nCol = col + c;\n            if (nCol < 0 || moduleCount <= nCol) continue;\n            if (r === 0 && c === 0) continue;\n            if (dark === qr.isDark(nRow, nCol)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += sameCount + 3 - 5;\n        }\n      }\n    }\n\n    // LEVEL2\n\n    for (let row = 0; row < moduleCount - 1; row++) {\n      for (let col = 0; col < moduleCount - 1; col++) {\n        let count = 0;\n\n        if (qr.isDark(row, col)) count++;\n        if (qr.isDark(row + 1, col)) count++;\n        if (qr.isDark(row, col + 1)) count++;\n        if (qr.isDark(row + 1, col + 1)) count++;\n        if (count === 0 || count === 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n\n    // LEVEL3\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount - 6; col++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row, col + 1) &&\n          qr.isDark(row, col + 2) &&\n          qr.isDark(row, col + 3) &&\n          qr.isDark(row, col + 4) &&\n          !qr.isDark(row, col + 5) &&\n          qr.isDark(row, col + 6)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount - 6; row++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row + 1, col) &&\n          qr.isDark(row + 2, col) &&\n          qr.isDark(row + 3, col) &&\n          qr.isDark(row + 4, col) &&\n          !qr.isDark(row + 5, col) &&\n          qr.isDark(row + 6, col)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    // LEVEL4\n\n    let darkCount = 0;\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount; row++) {\n        if (qr.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    const ratio =\n      Math.abs((100 * darkCount) / Math.pow(moduleCount, 2) - 50) / 5;\n\n    return lostPoint + ratio * 10;\n  },\n};\n","// ---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2025 LiHZSky\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n// http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { BitByte } from \"./bit-byte\";\nimport { RSBlock, RSBlockCount } from \"./block\";\nimport { QRErrorCorrectLevel } from \"./constants\";\nimport { Polynomial } from \"./polynomial\";\nimport { Util } from \"./util\";\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\n/**\n * QRCode实现\n * https://www.cnblogs.com/leestar54/p/15782929.html\n * @param typeNumber 1 to 40\n * @param errorCorrectLevel 'L','M','Q','H'\n */\nexport class QRCode {\n  private readonly errorCorrectLevel: number;\n\n  private modules: boolean[][] = [];\n\n  private moduleCount = 0;\n\n  private dataCache: number[] | null = null;\n\n  private dataList: BitByte[] = [];\n\n  constructor(\n    private readonly typeNumber: number,\n    errorCorrectLevel: \"L\" | \"M\" | \"Q\" | \"H\"\n  ) {\n    this.errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];\n  }\n\n  private makeImpl(test: boolean, maskPattern: number): void {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = ((moduleCount: number) => {\n      const modules: boolean[][] = [];\n\n      // 预设一个 moduleCount * moduleCount 的空白矩阵\n      for (let row = 0; row < moduleCount; row++) {\n        modules[row] = [];\n\n        for (let col = 0; col < moduleCount; col++) {\n          modules[row][col] = null as unknown as boolean;\n        }\n      }\n\n      return modules;\n    })(this.moduleCount);;\n\n    const count = this.moduleCount - 7;\n\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(count, 0);\n    this.setupPositionProbePattern(0, count);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n\n    if (this.dataCache === null) {\n      this.dataCache = this.createData(\n        this.typeNumber,\n        this.errorCorrectLevel,\n        this.dataList\n      );\n    }\n\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  private setupPositionProbePattern(row: number, col: number): void {\n    const { modules, moduleCount } = this;\n\n    for (let r = -1; r <= 7; r++) {\n      const nr = row + r;\n      if (nr <= -1 || moduleCount <= nr) continue;\n\n      for (let c = -1; c <= 7; c++) {\n        const nc = col + c;\n        if (nc <= -1 || moduleCount <= nc) continue;\n\n        modules[nr][nc] =\n          (r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4);\n      }\n    }\n  }\n\n  private setupPositionAdjustPattern(): void {\n    const { typeNumber, modules } = this;\n    const pos = Util.getPatternPosition(typeNumber);\n    const { length } = pos;\n\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n\n        if (modules[row][col] != null) continue;\n\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            modules[row + r][col + c] =\n              r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0);\n          }\n        }\n      }\n    }\n  }\n\n  private setupTimingPattern(): void {\n    const { moduleCount, modules } = this;\n    const count = moduleCount - 8;\n\n    for (let r = 8; r < count; r++) {\n      if (modules[r][6] != null) continue;\n\n      modules[r][6] = r % 2 === 0;\n    }\n\n    for (let c = 8; c < count; c++) {\n      if (modules[6][c] != null) continue;\n\n      modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  private setupTypeInfo(test: boolean, maskPattern: number): void {\n    const { errorCorrectLevel, modules, moduleCount } = this;\n    const data = (errorCorrectLevel << 3) | maskPattern;\n    const bits = Util.getBCHTypeInfo(data);\n\n    // vertical\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 6) {\n        modules[i][8] = mod;\n      } else if (i < 8) {\n        modules[i + 1][8] = mod;\n      } else {\n        modules[moduleCount - 15 + i][8] = mod;\n      }\n    }\n\n    // horizontal\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 8) {\n        modules[8][moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        modules[8][15 - i] = mod;\n      } else {\n        modules[8][15 - i - 1] = mod;\n      }\n    }\n\n    // fixed module\n    modules[moduleCount - 8][8] = !test;\n  }\n\n  private getBestMaskPattern(): number {\n    let minLostPoint = 0;\n    let pattern = 0;\n\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n\n      const lostPoint = Util.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n\n    return pattern;\n  }\n\n  private setupTypeNumber(test: boolean): void {\n    const { typeNumber, modules, moduleCount } = this;\n    const bits = Util.getBCHTypeNumber(typeNumber);\n\n    for (let i = 0; i < 18; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      modules[~~(i / 3)][(i % 3) + moduleCount - 8 - 3] = mod;\n      modules[(i % 3) + moduleCount - 8 - 3][~~(i / 3)] = mod;\n    }\n  }\n\n  private createData(\n    typeNumber: number,\n    errorCorrectLevel: number,\n    dataList: BitByte[]\n  ): number[] {\n    const rsBlocks = new RSBlock().getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new BitBuffer();\n\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n\n      buffer.put(data.mode, 4);\n      buffer.put(data.length, Util.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n\n    // calc num max data.\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n\n    const totalCount = totalDataCount * 8;\n    if (buffer.lengthInBits > totalCount) {\n      throw new Error(\n        `code length overflow. (${buffer.lengthInBits} > ${totalCount})`\n      );\n    }\n\n    // end code\n    if (buffer.lengthInBits + 4 <= totalCount) {\n      buffer.put(0, 4);\n    }\n\n    // padding\n    while (buffer.lengthInBits % 8 !== 0) {\n      buffer.putBit(false);\n    }\n\n    // padding\n    while (true) {\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  private mapData(data: number[], maskPattern: number): void {\n    const { modules, moduleCount } = this;\n    const maskFunc = Util.getMaskFunction(maskPattern);\n    let inc = -1;\n    let row = moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n\n    for (let col = row; col > 0; col -= 2) {\n      if (col === 6) col -= 1;\n\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (modules[row][col - c] == null) {\n            let dark = false;\n\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n\n            if (maskFunc(row, col - c)) {\n              dark = !dark;\n            }\n\n            modules[row][col - c] = dark;\n            bitIndex--;\n\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n\n        row += inc;\n\n        if (row < 0 || moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  private createBytes(\n    bitBuffer: BitBuffer,\n    rsBlocks: RSBlockCount[]\n  ): number[] {\n    const dcdata: number[][] = [];\n    const ecdata: number[][] = [];\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n\n      dcdata[r] = [];\n\n      for (let i = 0; i < dcCount; i++) {\n        dcdata[r][i] = 0xff & bitBuffer.buffer[i + offset];\n      }\n\n      offset += dcCount;\n\n      const rsPoly = Util.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new Polynomial(dcdata[r], rsPoly.length - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n\n      ecdata[r] = new Array(rsPoly.length - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.length - ecdata[r].length;\n\n        ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n      }\n    }\n\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n\n    const data = new Array(totalCodeCount);\n    let index = 0;\n\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n\n    return data;\n  }\n\n  public isDark(row: number, col: number): boolean {\n    const { moduleCount } = this;\n\n    if (row < 0 || moduleCount <= row || col < 0 || moduleCount <= col) {\n      throw new Error(`${row}, ${col}`);\n    }\n\n    return this.modules[row][col];\n  }\n\n  public addData(data: string): void {\n    this.dataList.push(new BitByte(data));\n    this.dataCache = null;\n  }\n\n  public getModuleCount(): number {\n    return this.moduleCount;\n  }\n\n  public make(): void {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n}\n","// import { unzlibSync } from \"fflate\";\nimport { unzlibSync, createVideoEntity } from \"../../extensions\";\nimport { platform } from \"../../platform\";\nimport type { PlatformVideo } from \"../../types\";\n\n/**\n * SVGA 下载解析器\n */\nexport class Parser {\n  /**\n   * 解压视频源文件\n   * @param data\n   * @returns\n   */\n  static decompress(data: ArrayBufferLike): ArrayBufferLike {\n    return unzlibSync(new Uint8Array(data)).buffer;\n  }\n\n  /**\n   * 解析视频实体\n   * @param data 视频二进制数据\n   * @param url 视频地址\n   * @param needDecompress 是否解压\n   * @returns\n   */\n  static parseVideo(\n    data: ArrayBufferLike,\n    url: string,\n    needDecompress: boolean = true\n  ): PlatformVideo.Video {\n    return createVideoEntity(\n      new Uint8Array(needDecompress ? this.decompress(data) : data),\n      platform.path.filename(url)\n    );\n  }\n\n  /**\n   * 读取文件资源\n   * @param url 文件资源地址\n   * @returns\n   */\n  static async download(url: string): Promise<ArrayBuffer> {\n    const { globals, remote, path, local } = platform;\n    const { env } = globals;\n    const supportLocal = env !== \"h5\" && env !== \"tt\";\n    const filepath = path.is(url)\n        ? url\n        : path.resolve(path.filename(url));\n\n    // 本地读取\n    if (supportLocal) {\n      if (await local!.exists(filepath)) {\n        return local!.read(filepath);\n      }\n    }\n\n    // 远程读取\n    const buff = await remote.fetch(url);\n\n    // 本地缓存\n    if (supportLocal) {\n      try {\n        await local!.write(buff, filepath);\n      } catch (ex) {\n        // eslint-disable-next-line no-console\n        console.error(ex);\n      }\n    }\n\n    return buff;\n  }\n\n  /**\n   * 通过 url 下载并解析 SVGA 文件\n   * @param url SVGA 文件的下载链接\n   * @returns Promise<SVGA 数据源\n   */\n  static async load(url: string): Promise<PlatformVideo.Video> {\n    return Parser.parseVideo((await Parser.download(url))!, url);\n  }\n}\n","import type {\n  Bitmap,\n  PlatformCanvas,\n  PlatformOffscreenCanvas,\n} from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport type {\n  PainterActionModel,\n  PainterMode,\n  PlatformVideo,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\nimport { Renderer2D, Renderer2DExtension } from \"src/extensions\";\n\nconst { noop } = platform;\n\nexport class Painter {\n  /**\n   * 主屏的 Canvas 元素\n   * Front Screen\n   */\n  public F: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n\n  /**\n   * 主屏的 Context 对象\n   * Front Context\n   */\n  public FC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n\n  /**\n   * 副屏的 Canvas 元素\n   * Background Screen\n   */\n  public B: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n\n  /**\n   * 副屏的 Context 对象\n   * Background Context\n   */\n  public BC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n\n  /**\n   * 画布的宽度\n   */\n  public W: number;\n\n  /**\n   * 画布的高度\n   */\n  public H: number;\n\n  /**\n   * 粉刷模式\n   */\n  private model: PainterActionModel = {} as PainterActionModel;\n\n  /**\n   * 渲染器实例\n   */\n  private renderer: Renderer2D | null = null;\n\n  /**\n   *\n   * @param mode\n   * @param W 海报模式必须传入\n   * @param H 海报模式必须传入\n   */\n  constructor(\n    private readonly mode: PainterMode = \"dual\",\n    width = 0,\n    height = 0\n  ) {\n    const { dpr } = platform.globals;\n\n    this.W = width * dpr;\n    this.H = height * dpr;\n  }\n\n  /**\n   * 设置 Canvas 的处理模式\n   * - C：代表 Canvas\n   * - O：代表 OffscreenCanvas\n   */\n  private setActionModel(type: \"C\" | \"O\"): void {\n    const { model } = this;\n    const { env } = platform.globals;\n\n    // set type\n    model.type = type;\n\n    // set clear\n    if ((type === \"O\" && env === \"tt\") || env === \"alipay\") {\n      model.clear = \"CL\";\n    } else {\n      model.clear = \"RE\";\n    }\n  }\n\n  /**\n   * 注册画笔，根据环境判断生成最优的绘制方式\n   * @param selector\n   * @param ofsSelector\n   * @param component\n   */\n  public async register(\n    selector: string,\n    ofsSelector?: string,\n    component?: any\n  ) {\n    const { model, mode } = this;\n    const { getCanvas, getOfsCanvas } = platform;\n    const { env } = platform.globals;\n    // #region set main screen implement\n    // -------- 创建主屏 ---------\n    if (\n      mode === \"single\" &&\n      (env !== \"h5\" || \"OffscreenCanvas\" in globalThis)\n    ) {\n      const { W, H } = this;\n      const { canvas, context } = getOfsCanvas({ width: W, height: H });\n      // 添加主屏\n      this.F = canvas;\n      this.FC = context;\n      this.setActionModel(\"O\");\n    } else {\n      const { canvas, context } = await getCanvas(selector, component);\n      // 添加主屏\n      this.F = canvas;\n      this.FC = context;\n      this.setActionModel(\"C\");\n\n      if (mode === \"single\") {\n        canvas.width = this.W;\n        canvas.height = this.H;\n      } else {\n        this.W = canvas.width;\n        this.H = canvas.height;\n      }\n    }\n    // #endregion set main screen implement\n\n    const { FC, F, W, H } = this;\n    const clearType = model.clear;\n\n    this.clearContainer = Renderer2DExtension.clear(clearType, FC!, F!, W, H);\n\n    if (mode === \"single\") {\n      this.B = F;\n      this.BC = FC;\n      this.clearSecondary = this.clearContainer;\n      this.stick = noop;\n    } else {\n      // #region set secondary screen implement\n      // ------- 创建副屏 ---------\n      let ofsResult;\n      if (typeof ofsSelector === \"string\" && ofsSelector !== \"\") {\n        ofsResult = await getCanvas(ofsSelector, component);\n        ofsResult.canvas.width = W;\n        ofsResult.canvas.height = H;\n        this.setActionModel(\"C\");\n      } else {\n        ofsResult = getOfsCanvas({ width: W, height: H });\n        this.setActionModel(\"O\");\n      }\n\n      this.B = ofsResult.canvas;\n      this.BC = ofsResult.context;\n      // #endregion set secondary screen implement\n\n      const { BC, B } = this;\n\n      this.clearSecondary = Renderer2DExtension.clear(clearType, BC!, B!, W, H);\n      this.stick = Renderer2DExtension.stick(FC!, B!);\n    }\n\n    // #region other methods implement\n    // ------- 生成其他方法 --------\n    const { B, BC } = this;\n    const renderer = (this.renderer = new Renderer2D(BC));\n\n    this.resize = (\n      contentMode: PLAYER_CONTENT_MODE,\n      videoSize: PlatformVideo.VideoSize\n    ) => renderer!.resize(contentMode, videoSize, B!);\n    this.draw = (\n      videoEntity: PlatformVideo.Video,\n      materials: Map<string, Bitmap>,\n      dynamicMaterials: Map<string, Bitmap>,\n      currentFrame: number,\n      head: number,\n      tail: number\n    ) =>\n      renderer!.render(\n        videoEntity,\n        materials,\n        dynamicMaterials,\n        currentFrame,\n        head,\n        tail\n      );\n    // #endregion other methods implement\n  }\n\n  public clearContainer: () => void = noop;\n\n  public clearSecondary: () => void = noop;\n\n  public resize: (\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize\n  ) => void = noop;\n\n  public draw: (\n    videoEntity: PlatformVideo.Video,\n    materials: Map<string, Bitmap>,\n    dynamicMaterials: Map<string, Bitmap>,\n    currentFrame: number,\n    head: number,\n    tail: number\n  ) => void = noop;\n\n  public stick: () => void = noop;\n\n  /**\n   * 销毁画笔\n   */\n  public destroy() {\n    this.clearContainer();\n    this.clearSecondary();\n    this.F = this.FC = this.B = this.BC = null;\n    this.clearContainer = this.clearSecondary = this.stick = noop;\n    this.renderer?.destroy();\n  }\n}\n","import {\n  type PlatformVideo,\n  type PlayerConfig,\n  PLAYER_FILL_MODE,\n  PLAYER_PLAY_MODE,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Config {\n  /**\n   * 最后停留的目标模式，类似于 animation-fill-mode，默认值 forwards。\n   */\n  public fillMode = PLAYER_FILL_MODE.BACKWARDS;\n  /**\n   * 播放模式，默认值 forwards\n   */\n  public playMode = PLAYER_PLAY_MODE.FORWARDS;\n  /**\n   * 填充模式，类似于 content-mode。\n   */\n  public contentMode = PLAYER_CONTENT_MODE.FILL;\n  /**\n   * 开始播放的帧，默认值 0\n   */\n  public startFrame = 0;\n  /**\n   * 结束播放的帧，默认值 0\n   */\n  public endFrame = 0;\n  /**\n   * 循环播放的开始帧，默认值 0\n   */\n  public loopStartFrame = 0;\n  /**\n   * 循环次数，默认值 0（无限循环）\n   */\n  public loop = 0;\n\n  public register(config: Partial<PlayerConfig>) {\n    if (typeof config.loop === \"number\" && config.loop >= 0) {\n      this.loop = config.loop;\n    }\n\n    if (\n      config.fillMode &&\n      [\n        PLAYER_FILL_MODE.FORWARDS,\n        PLAYER_FILL_MODE.BACKWARDS,\n        PLAYER_FILL_MODE.NONE,\n      ].includes(config.fillMode)\n    ) {\n      this.fillMode = config.fillMode;\n    }\n\n    if (\n      config.playMode &&\n      [PLAYER_PLAY_MODE.FORWARDS, PLAYER_PLAY_MODE.FALLBACKS].includes(\n        config.playMode\n      )\n    ) {\n      this.playMode = config.playMode;\n    }\n\n    if (typeof config.startFrame === \"number\" && config.startFrame >= 0) {\n      this.startFrame = config.startFrame;\n    }\n\n    if (typeof config.endFrame === \"number\" && config.endFrame >= 0) {\n      this.endFrame = config.endFrame;\n    }\n\n    if (\n      typeof config.loopStartFrame === \"number\" &&\n      config.loopStartFrame >= 0\n    ) {\n      this.loopStartFrame = config.loopStartFrame;\n    }\n\n    if (typeof config.contentMode === \"string\") {\n      this.contentMode = config.contentMode;\n    }\n  }\n\n  public setItem<T extends keyof PlayerConfig>(key: T, value: PlayerConfig[T]) {\n    this.register({ [key]: value });\n  }\n\n  public getConfig(entity: PlatformVideo.Video) {\n    const { playMode, loopStartFrame, startFrame, endFrame, fillMode, loop } =\n      this;\n    const { fps, sprites } = entity;\n    let { frames } = entity;\n    const spriteCount = sprites.length;\n    const start = startFrame > 0 ? startFrame : 0;\n    const end = endFrame > 0 && endFrame < frames ? endFrame : frames;\n    // 每帧持续的时间\n    const frameDuration = 1000 / fps;\n\n    if (start > end) {\n      throw new Error(\"StartFrame should greater than EndFrame\");\n    }\n\n    // 更新活动帧总数\n    if (end < frames) {\n      frames = end - start;\n    } else if (start > 0) {\n      frames -= start;\n    }\n\n    const duration = Math.floor(frames * frameDuration * 10 ** 6) / 10 ** 6;\n    let currFrame = 0;\n    let extFrame = 0;\n    let loopStart: number;\n\n    // 顺序播放/倒叙播放\n    if (playMode === PLAYER_PLAY_MODE.FORWARDS) {\n      // 重置为开始帧\n      currFrame = Math.max(loopStartFrame, startFrame);\n      if (fillMode === PLAYER_FILL_MODE.FORWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame > start ? (loopStartFrame - start) * frameDuration : 0;\n    } else {\n      // 重置为开始帧\n      currFrame = Math.min(loopStartFrame, end - 1);\n      if (fillMode === PLAYER_FILL_MODE.BACKWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame < end ? (end - loopStartFrame) * frameDuration : 0;\n    }\n\n    return {\n      currFrame,\n      startFrame: start,\n      endFrame: end,\n      totalFrame: frames,\n      spriteCount,\n      aniConfig: {\n        // 单个周期的运行时长\n        duration,\n        // 第一个周期开始时间偏移量\n        loopStart,\n        // 循环次数\n        loop: loop === 0 ? Infinity : loop,\n        // 最后一帧不在周期内，需要单独计算\n        fillValue: extFrame * frameDuration,\n      },\n    };\n  }\n}\n","import type { PlatformCanvas } from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport { Painter } from \"../painter\";\nimport { Config } from \"./config\";\nimport { Animator, ResourceManager } from \"../../extensions\";\nimport {\n  type PlatformVideo,\n  type PlayerConfigOptions,\n  type PlayerConfig,\n  type PlayerEventCallback,\n  type PlayerProcessEventCallback,\n  PLAYER_PLAY_MODE,\n  PLAYER_FILL_MODE,\n} from \"../../types\";\n\n/**\n * SVGA 播放器\n */\nexport class Player {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 当前配置项\n   */\n  private readonly config = new Config();\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter = new Painter();\n\n  /**\n   * 动画实例\n   */\n  private readonly animator: Animator = new Animator();\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   * @property container 主屏，播放动画的 Canvas 元素\n   * @property secondary 副屏，播放动画的 Canvas 元素\n   * @property loop 循环次数，默认值 0（无限循环）\n   * @property fillMode 最后停留的目标模式，类似于 animation-fill-mode，接受值 forwards 和 fallbacks，默认值 forwards。\n   * @property playMode 播放模式，接受值 forwards 和 fallbacks ，默认值 forwards。\n   * @property startFrame 单个循环周期内开始播放的帧数，默认值 0\n   * @property endFrame 单个循环周期内结束播放的帧数，默认值 0\n   * @property loopStartFrame 循环播放的开始帧，仅影响第一个周期的开始帧，默认值 0\n   * @property enableInObserver 是否启用 IntersectionObserver 监听容器是否处于浏览器视窗内，默认值 false\n   */\n  public async setConfig(\n    options: string | PlayerConfigOptions,\n    component?: any\n  ): Promise<void> {\n    const config: PlayerConfigOptions =\n      typeof options === \"string\" ? { container: options } : options;\n    const { container, secondary } = config;\n\n    this.config.register(config);\n    // 监听容器是否处于浏览器视窗内\n    // this.setIntersectionObserver()\n    await this.painter.register(container, secondary, component);\n    this.resource = new ResourceManager(this.painter);\n    this.animator.onAnimate = platform.rAF.bind(\n      null,\n      this.painter.F as PlatformCanvas\n    );\n  }\n\n  /**\n   * 更新配置\n   * @param key\n   * @param value\n   */\n  public setItem<T extends keyof PlayerConfig>(\n    key: T,\n    value: PlayerConfig[T]\n  ): void {\n    this.config.setItem<T>(key, value);\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @returns Promise<void>\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) throw new Error(\"videoEntity undefined\");\n\n    const { images, filename } = videoEntity;\n\n    this.animator!.stop();\n    this.painter.clearSecondary();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 开始播放事件回调\n   * @param frame\n   */\n  public onStart?: PlayerEventCallback;\n  /**\n   * 重新播放事件回调\n   * @param frame\n   */\n  public onResume?: PlayerEventCallback;\n  /**\n   * 暂停播放事件回调\n   * @param frame\n   */\n  public onPause?: PlayerEventCallback;\n  /**\n   * 停止播放事件回调\n   * @param frame\n   */\n  public onStop?: PlayerEventCallback;\n  /**\n   * 播放中事件回调\n   * @param percent\n   * @param frame\n   * @param frames\n   */\n  public onProcess?: PlayerProcessEventCallback;\n  /**\n   * 结束播放事件回调\n   * @param frame\n   */\n  public onEnd?: PlayerEventCallback;\n\n  /**\n   * 开始播放\n   */\n  public start(): void {\n    this.startAnimation();\n    this.onStart?.();\n  }\n\n  /**\n   * 重新播放\n   */\n  public resume(): void {\n    if (this.animator.resume()) {\n      this.onResume?.();\n    }\n  }\n\n  /**\n   * 暂停播放\n   */\n  public pause(): void {\n    if (this.animator.pause()) {\n      this.onPause?.();\n    }\n  }\n\n  /**\n   * 停止播放\n   */\n  public stop(): void {\n    this.animator.stop();\n    this.painter.clearContainer();\n    this.painter.clearSecondary();\n    this.onStop?.();\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.animator.stop();\n    this.painter.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n\n  /**\n   * 跳转到指定帧\n   * @param frame 目标帧\n   * @param andPlay 是否立即播放\n   */\n  public stepToFrame(frame: number, andPlay = false) {\n    if (!this.entity || frame < 0 || frame >= this.entity.frames) return;\n\n    this.pause();\n    this.config.loopStartFrame = frame;\n    if (andPlay) {\n      this.start();\n    }\n  }\n\n  /**\n   * 跳转到指定百分比\n   * @param percent 目标百分比\n   * @param andPlay 是否立即播放\n   */\n  public stepToPercentage(percent: number, andPlay: boolean = false) {\n    if (!this.entity) return;\n\n    const { frames } = this.entity;\n    let frame = percent < 0 ? 0 : Math.round(percent * frames);\n\n    if (frame >= frames) {\n      frame = frames - 1;\n    }\n\n    debugger;\n    this.stepToFrame(frame, andPlay);\n  }\n\n  /**\n   * 开始绘制动画\n   */\n  private startAnimation(): void {\n    const { entity, config, animator, painter, resource } = this;\n    const { W, H } = painter;\n    const { materials, dynamicMaterials } = resource!;\n    const { fillMode, playMode, contentMode } = config;\n    const {\n      currFrame,\n      startFrame,\n      endFrame,\n      totalFrame,\n      spriteCount,\n      aniConfig,\n    } = config.getConfig(entity!);\n    const { duration, loopStart, loop, fillValue } = aniConfig;\n    const isReverseMode = playMode === PLAYER_PLAY_MODE.FALLBACKS;\n\n    // 当前帧\n    let currentFrame = currFrame;\n    // 片段绘制结束位置\n    let tail = 0;\n    let nextTail: number;\n    // 上一帧\n    let latestFrame: number;\n    // 下一帧\n    let nextFrame: number;\n    // 精确帧\n    let exactFrame: number;\n    // 当前已完成的百分比\n    let percent: number;\n    // 是否还有剩余时间\n    let hasRemained: boolean;\n\n    // 更新动画基础信息\n    animator.setConfig(duration, loopStart, loop, fillValue);\n    painter.resize(contentMode, entity!.size);\n\n    // 分段渲染函数\n    const MAX_DRAW_TIME_PER_FRAME = 8;\n    const MAX_ACCELERATE_DRAW_TIME_PER_FRAME = 3;\n    const MAX_DYNAMIC_CHUNK_SIZE = 34;\n    const MIN_DYNAMIC_CHUNK_SIZE = 1;\n    const render = (head: number, tail: number) =>\n      painter.draw(\n        entity!,\n        materials,\n        dynamicMaterials,\n        currentFrame,\n        head,\n        tail\n      );\n    // 动态调整每次绘制的块大小\n    let dynamicChunkSize = 4; // 初始块大小\n    let startTime: number;\n    let chunk: number;\n    let elapsed: number;\n    // 使用`指数退避算法`平衡渲染速度和流畅度\n    const patchDraw = (before: () => void) => {\n      startTime = platform.now();\n      before();\n\n      while (tail < spriteCount) {\n        // 根据当前块大小计算nextTail\n        chunk = Math.min(dynamicChunkSize, spriteCount - tail);\n        nextTail = (tail + chunk) | 0;\n        render(tail, nextTail);\n        tail = nextTail;\n        // 动态调整块大小\n        elapsed = platform.now() - startTime;\n\n        if (elapsed < MAX_ACCELERATE_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.min(\n            dynamicChunkSize * 2,\n            MAX_DYNAMIC_CHUNK_SIZE\n          ); // 加快绘制\n        } else if (elapsed > MAX_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.max(\n            dynamicChunkSize / 2,\n            MIN_DYNAMIC_CHUNK_SIZE\n          ); // 减慢绘制\n          break;\n        }\n      }\n    };\n\n    // 动画绘制过程\n    animator.onUpdate = (timePercent: number) => {\n      patchDraw(() => {\n        percent = isReverseMode ? 1 - timePercent : timePercent;\n        exactFrame = percent * totalFrame;\n\n        if (isReverseMode) {\n          nextFrame =\n            (timePercent === 0 ? endFrame : Math.ceil(exactFrame)) - 1;\n          // FIXME: 倒序会有一帧的偏差，需要校准当前帧\n          percent = currentFrame / totalFrame;\n        } else {\n          nextFrame = timePercent === 1 ? startFrame : Math.floor(exactFrame);\n        }\n\n        hasRemained = currentFrame === nextFrame;\n      });\n\n      if (hasRemained) return;\n      if (tail < spriteCount) {\n        render(tail, spriteCount);\n      }\n\n      painter.clearContainer();\n      painter.stick();\n      painter.clearSecondary();\n      latestFrame = currentFrame;\n      currentFrame = nextFrame;\n      tail = 0;\n      this.onProcess?.(~~(percent * 100) / 100, latestFrame);\n    };\n    animator.onStart = () => {\n      entity!.locked = true;\n    };\n    animator.onEnd = () => {\n      entity!.locked = false;\n      // 如果不保留最后一帧渲染，则清空画布\n      if (fillMode === PLAYER_FILL_MODE.NONE) {\n        painter.clearContainer();\n      }\n\n      this.onEnd?.();\n    };\n    animator.start();\n  }\n}\n","import { ResourceManager } from \"../../extensions\";\nimport { Painter } from \"../painter\";\nimport {\n  type PlatformVideo,\n  type PosterConfig,\n  type PosterConfigOptions,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Poster {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 海报配置项\n   */\n  private readonly config: PosterConfig = {\n    /**\n     * 主屏，绘制海报的 Canvas 元素\n     */\n    container: \"\",\n    /**\n     * 填充模式，类似于 content-mode。\n     */\n    contentMode: PLAYER_CONTENT_MODE.FILL,\n    /**\n     * 绘制成海报的帧，默认是0。\n     */\n    frame: 0,\n  };\n\n  /**\n   * 是否配置完成\n   */\n  private isConfigured = false;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter: Painter;\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  constructor(width: number, height: number) {\n    this.painter = new Painter(\"single\", width, height);\n  }\n\n  /**\n   * 注册 SVGA 海报\n   * @param selector 容器选择器\n   * @param component 组件\n   */\n  private async register(\n    selector: string = \"\",\n    component?: any\n  ): Promise<void> {\n    await this.painter.register(selector, \"\", component);\n    this.resource = new ResourceManager(this.painter);\n  }\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   */\n  public async setConfig(\n    options: string | PosterConfigOptions = {},\n    component?: any\n  ): Promise<void> {\n    if (typeof options === \"string\") {\n      this.config.container = options;\n    } else {\n      Object.assign(this.config, options);\n    }\n\n    this.isConfigured = true;\n    await this.register(this.config.container, component);\n  }\n\n  /**\n   * 修改内容模式\n   * @param contentMode\n   */\n  public setContentMode(contentMode: PLAYER_CONTENT_MODE): void {\n    this.config.contentMode = contentMode;\n  }\n\n  /**\n   * 设置当前帧\n   * @param frame\n   */\n  public setFrame(frame: number): void {\n    this.config.frame = frame;\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @param currFrame\n   * @returns\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) {\n      throw new Error(\"videoEntity undefined\");\n    }\n\n    if (!this.isConfigured) {\n      await this.register();\n      this.isConfigured = true;\n    }\n\n    const { images, filename } = videoEntity;\n\n    this.painter.clearContainer();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 绘制海报\n   */\n  public draw(): void {\n    if (!this.entity) return;\n\n    const { painter, resource, entity, config } = this;\n\n    painter.resize(config.contentMode, entity!.size);\n    painter.draw(\n      entity!,\n      resource!.materials,\n      resource!.dynamicMaterials,\n      config.frame,\n      0,\n      entity!.sprites.length\n    );\n  }\n\n  /**\n   * 获取海报的 ImageData 数据\n   */\n  public toImageData(): ImageData {\n    const { FC, W: width, H: height } = this.painter;\n\n    return FC!.getImageData(0, 0, width, height);\n  }\n\n  /**\n   * 销毁海报\n   */\n  public destroy(): void {\n    this.painter.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder, QRCode } from \"../extensions\";\n\nexport interface IQrCodeImgOptions {\n  /**\n   * 二维码内容\n   */\n  code: string;\n  /**\n   * 二维码的大小\n   */\n  size: number;\n  /**\n   * 二维码的码元 二维码横向有多少个小点（1 - 40）\n   */\n  typeNumber?: number;\n  /**\n   * 二维码的纠错等级\n   * L: 7%（错误字码在 7% 以内可被修正, 容错率较低不建议使用）\n   * M: 15%（错误字码在 15% 以内可被修正, 容错率较低不建议使用）\n   * Q: 25%（错误字码在 25% 以内可被修正）\n   * H: 30%（错误字码在 30% 以内可被修正）\n   */\n  correctLevel?: \"L\" | \"M\" | \"Q\" | \"H\";\n  /**\n   * 二维码颜色，仅支持 六位的十六进制颜色值，暂不支持透明色 (仅对二维码生效)\n   */\n  codeColor?: string;\n  /**\n   * 二维码背景颜色，仅支持 六位的十六进制 颜色值。暂不支持透明色 (仅对二维码生效)\n   */\n  backgroundColor?: string;\n}\n\nfunction parseOptions(options: IQrCodeImgOptions) {\n  const typeNumber = options.typeNumber ?? 4;\n  const correctLevel = options.correctLevel ?? \"H\";\n  const codeColor = options.codeColor ?? \"#000000\";\n  const backgroundColor = options.backgroundColor ?? \"#FFFFFF\";\n\n  return {\n    code: options.code,\n    size: options.size,\n    typeNumber,\n    correctLevel,\n    codeColor,\n    backgroundColor,\n  };\n}\n\nconst calcCellSizeAndPadding = (moduleCount: number, size: number) => {\n  const cellSize = ~~(size / moduleCount);\n\n  return {\n    padding: ~~((size - moduleCount * cellSize) / 2),\n    cellSize: cellSize || 2,\n  };\n};\n\nexport function generateImageBufferFromCode(options: IQrCodeImgOptions) {\n  const { code, typeNumber, correctLevel, size, codeColor, backgroundColor } =\n    parseOptions(options);\n  let qr: QRCode;\n\n  try {\n    qr = new QRCode(typeNumber, correctLevel);\n    qr.addData(code);\n    qr.make();\n  } catch (e) {\n    if (typeNumber >= 40) {\n      throw new Error(\"Text too long to encode\");\n    }\n\n    return arguments.callee({\n      code,\n      size,\n      correctLevel,\n      typeNumber: typeNumber + 1,\n      codeColor,\n      backgroundColor,\n    });\n  }\n\n  // calc cellsize and margin\n  const moduleCount = qr.getModuleCount();\n  const { padding, cellSize } = calcCellSizeAndPadding(moduleCount, size);\n  const max = moduleCount * cellSize + padding;\n  const CODE_COLOR = +`${codeColor.replace(\"#\", \"0x\")}FF`;\n  const BACKGROUND_COLOR = +`${backgroundColor.replace(\"#\", \"0x\")}FF`;\n  const png = new PNGEncoder(size, size);\n\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      if (padding <= x && x < max && padding <= y && y < max) {\n        const c = ~~((x - padding) / cellSize);\n        const r = ~~((y - padding) / cellSize);\n\n        png.setPixel(x, y, qr.isDark(r, c) ? CODE_COLOR : BACKGROUND_COLOR);\n      } else {\n        png.setPixel(x, y, BACKGROUND_COLOR);\n      }\n    }\n  }\n\n  return png.flush();\n}\n\nexport function generateImageFromCode(options: IQrCodeImgOptions) {\n  const buff = generateImageBufferFromCode(options);\n\n  return platform.decode.toDataURL(buff);\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder } from \"../extensions\";\n\n/**\n * 将 ImageData 转换为 PNG 格式的 Buffer\n * @param imageData\n * @returns PNG 格式的 Buffer\n */\nexport function createBufferOfImageData(imageData: ImageData) {\n  const { width, height, data } = imageData;\n\n  return new PNGEncoder(width, height).write(data).flush();\n}\n\n/**\n * @deprecated 请使用 createBufferOfImageData 代替，此方法可能在后续版本中移除\n */\nexport const getBufferFromImageData = createBufferOfImageData;\n\n/**\n * 将 ImageData 转换为 PNG 格式的 Base64 字符串\n * @param imageData\n * @returns PNG 格式的 Base64 字符串\n */\nexport function createImageDataUrl(imageData: ImageData) {\n  return platform.decode.toDataURL(createBufferOfImageData(imageData));\n}\n\n/**\n * @deprecated 请使用 createImageDataUrl 代替，此方法可能在后续版本中移除\n */\nexport const getDataURLFromImageData = createImageDataUrl;\n","/**\n * 检查数据是否为zlib压缩格式\n * @param data 待检查的二进制数据\n * @returns 是否为zlib压缩格式\n */\nexport function isZlibCompressed(data: Uint8Array): boolean {\n  // 检查数据长度是否足够（至少需要2字节头部和4字节ADLER-32校验和）\n  if (data.length < 6) {\n    return false;\n  }\n\n  // 获取CMF和FLG字节\n  const cmf = data[0];\n  const flg = data[1];\n\n  // 检查CMF的压缩方法（低4位为8表示DEFLATE）\n  if ((cmf & 0x0f) !== 8) {\n    return false;\n  }\n\n  // 检查窗口大小（高4位通常为7，但不是严格要求）\n  // - 这里不强制检查，因为理论上可以是其他值\n\n  // 验证头部校验（CMF * 256 + FLG必须是31的倍数）\n  if ((cmf * 256 + flg) % 31 !== 0) {\n    return false;\n  }\n\n  // 检查字典标志位（如果设置了字典，需要额外验证，但这种情况很少见）\n  const fdict = (flg & 0x20) !== 0;\n  if (fdict) {\n    // 标准zlib压缩通常不使用预定义字典\n    // 这里假设不使用字典，若检测到字典标志则认为不是标准zlib格式\n    return false;\n  }\n\n  // 尝试提取ADLER-32校验和并验证其格式\n  // 虽然无法验证校验和值（需要解压后计算），但可以检查其是否为合理的数值\n  const adler32Bytes = data.slice(-4);\n\n  if (adler32Bytes.length !== 4) {\n    return false;\n  }\n\n  const adler32 =\n    (adler32Bytes[0] << 24) |\n    (adler32Bytes[1] << 16) |\n    (adler32Bytes[2] << 8) |\n    adler32Bytes[3];\n\n  // 有效的ADLER-32值应大于0（除非是空数据）\n  if (data.length > 2 && adler32 === 0) {\n    return false;\n  }\n\n  // 所有检查都通过，数据可能是zlib压缩格式\n  return true;\n}\n","import { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport type { PlatformVideo } from \"../types/video\";\n\nexport interface Bucket {\n  // 远程地址\n  origin: string;\n  // 本地地址\n  local: string;\n  // 实例\n  entity: PlatformVideo.Video | null;\n  // 下载实例中\n  promise: Promise<ArrayBufferLike> | null;\n}\n\nexport interface NeedUpdatePoint {\n  action: \"remove\" | \"add\";\n  start: number;\n  end: number;\n}\n\nexport type LoadMode = \"fast\" | \"whole\";\n\nexport interface VideoManagerOptions {\n  preprocess: (bucket: Bucket) => Promise<ArrayBufferLike>;\n  postprocess: (\n    bucket: Bucket,\n    buff: ArrayBufferLike\n  ) => Promise<PlatformVideo.Video> | PlatformVideo.Video;\n  cleanup: (buckets: Bucket[]) => Promise<void> | void;\n}\n\nexport class VideoManager {\n  /**\n   * 视频池的当前指针位置\n   */\n  private point: number = 0;\n  /**\n   * 视频的最大留存数量，其他视频将放在磁盘上缓存\n   */\n  private maxRemain: number = 3;\n  /**\n   * 留存视频的开始指针位置\n   */\n  private remainStart: number = 0;\n  /**\n   * 留存视频的结束指针位置\n   */\n  private remainEnd: number = 0;\n  /**\n   * 视频加载模式\n   * - 快速加载模式：可保证当前视频加载完成后，尽快播放；其他请求将使用Promise的方式保存在bucket中，以供后续使用\n   * - 完整加载模式：可保证所有视频加载完成，确保播放切换的流畅性\n   */\n  private loadMode: LoadMode = \"fast\";\n  /**\n   * 视频池的所有数据\n   */\n  private buckets: Bucket[] = [];\n\n  private readonly options: VideoManagerOptions = {\n    /**\n     * 预处理动效数据\n     * @param url\n     * @returns\n     */\n    preprocess: (bucket: Bucket) => Parser.download(bucket.origin),\n    /**\n     * 后处理动效数据\n     * @param bucket\n     * @param data\n     * @returns\n     */\n    postprocess: (bucket: Bucket, data: ArrayBufferLike) =>\n      Parser.parseVideo(data, bucket.origin, true),\n    /**\n     * 清理数据\n     * @param buckets\n     * @returns\n     */\n    cleanup: (buckets: Bucket[]) => {\n      const { local, path } = platform;\n\n      buckets.forEach((bucket: Bucket) => {\n        if (path.is(bucket.local)) {\n          local!.remove(bucket.local);\n        }\n      });\n    },\n  };\n\n  /**\n   * 获取视频池大小\n   */\n  get size(): number {\n    return this.buckets.length;\n  }\n\n  constructor(loadMode: LoadMode, options?: Partial<VideoManagerOptions>) {\n    if (typeof loadMode === \"string\") {\n      this.loadMode = loadMode;\n    }\n\n    Object.assign(this.options, options);\n  }\n\n  /**\n   * 更新留存指针位置\n   */\n  private updateRemainRange(\n    point: number,\n    maxRemain: number,\n    totalCount: number\n  ): void {\n    if (point < 0) {\n      this.point = 0;\n    } else if (point >= totalCount) {\n      this.point = totalCount - 1;\n    } else {\n      this.point = point;\n    }\n\n    if (this.loadMode === \"whole\") {\n      this.remainStart = 0;\n      this.remainEnd = totalCount;\n    } else {\n      if (maxRemain < 1) {\n        this.maxRemain = 1;\n      } else if (maxRemain > totalCount) {\n        this.maxRemain = totalCount;\n      } else {\n        this.maxRemain = maxRemain;\n      }\n\n      this.remainStart = this.point - Math.floor(this.maxRemain / 2);\n      if (this.remainStart < 0) {\n        this.remainStart = totalCount + this.remainStart;\n      }\n\n      this.remainEnd = this.remainStart + this.maxRemain;\n      if (this.remainEnd > totalCount) {\n        this.remainEnd = this.remainEnd % totalCount;\n      }\n    }\n  }\n\n  /**\n   * 指针是否在留存空间内\n   * @param point\n   * @returns\n   */\n  private includeRemainRange(point: number): boolean {\n    if (this.remainStart < this.remainEnd) {\n      return point >= this.remainStart && point < this.remainEnd;\n    }\n\n    if (this.remainStart > this.remainEnd) {\n      return point >= this.remainStart || point < this.remainEnd;\n    }\n\n    return true;\n  }\n\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse?: false\n  ): Promise<ArrayBuffer>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: true\n  ): Promise<PlatformVideo.Video>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: boolean = false\n  ) {\n    const { options } = this;\n    const data = await options.preprocess(bucket);\n\n    if (needParse) {\n      return options.postprocess(bucket, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * 创建bucket\n   * @param url 远程地址\n   * @param point 指针位置\n   * @param needDownloadAndParse 是否需要下载并解析\n   * @returns\n   */\n  private async createBucket(\n    url: string,\n    point: number,\n    needDownloadAndParse: boolean\n  ): Promise<Bucket> {\n    const { path } = platform;\n    const bucket: Bucket = {\n      origin: url,\n      local: path.resolve(path.filename(url)),\n      entity: null,\n      promise: null,\n    };\n\n    this.buckets[point] = bucket;\n    if (needDownloadAndParse) {\n      bucket.entity = await this.downloadAndParseVideo(bucket, true);\n    } else if (this.includeRemainRange(point)) {\n      bucket.promise = this.downloadAndParseVideo(bucket);\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 预加载视频到本地磁盘中\n   * @param urls 视频远程地址\n   * @param point 当前指针位置\n   * @param maxRemain 最大留存数量\n   */\n  async prepare(\n    urls: string[],\n    point: number = 0,\n    maxRemain: number = 3\n  ): Promise<void> {\n    this.updateRemainRange(point, maxRemain, urls.length);\n\n    const { loadMode, point: currentPoint } = this;\n    const needDownloadAndParse = loadMode === \"whole\";\n    // 优先加载当前动效\n    const preloadBucket: Bucket = await this.createBucket(\n      urls[currentPoint],\n      currentPoint,\n      needDownloadAndParse\n    );\n\n    await Promise.all(\n      urls.map((url: string, index: number) =>\n        index === currentPoint\n          ? preloadBucket\n          : this.createBucket(url, index, needDownloadAndParse)\n      )\n    );\n  }\n\n  /**\n   * 获取当前帧的bucket\n   * @returns\n   */\n  async get(): Promise<Bucket> {\n    const bucket = this.buckets[this.point];\n\n    if (!bucket.entity) {\n      if (!bucket.promise) {\n        bucket.promise = this.downloadAndParseVideo(bucket);\n      }\n\n      bucket.entity = await bucket.promise.then((data: ArrayBufferLike) =>\n        this.options.postprocess(bucket, data)\n      );\n      bucket.promise = null;\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 获取当前的指针位置\n   * @returns\n   */\n  getPoint(): number {\n    return this.point;\n  }\n\n  /**\n   * 获取指定位置的bucket\n   * @param pos\n   * @returns\n   */\n  async go(point: number): Promise<Bucket> {\n    const { size, buckets, loadMode } = this;\n\n    if (point < 0 || point >= size) {\n      return buckets[this.point];\n    }\n\n    this.updateRemainRange(point, this.maxRemain, buckets.length);\n    if (loadMode === \"fast\" && this.maxRemain !== buckets.length) {\n      buckets.forEach((bucket: Bucket, index: number) => {\n        if (this.includeRemainRange(index)) {\n          if (bucket.entity === null && bucket.promise === null) {\n            bucket.promise = this.downloadAndParseVideo(bucket);\n          }\n        } else {\n          bucket.entity = null;\n          bucket.promise = null;\n        }\n      });\n    }\n\n    return this.get();\n  }\n\n  /**\n   * 清理所有的bucket\n   * @returns\n   */\n  async clear(needRemoveFiles: boolean = true): Promise<void> {\n    const { buckets } = this;\n\n    this.point = 0;\n    this.remainStart = 0;\n    this.remainEnd = 0;\n    this.maxRemain = 3;\n    this.buckets = [];\n\n    if (needRemoveFiles) {\n      await this.options.cleanup(buckets);\n    }\n  }\n}\n","import type { RawImage, PlatformImage } from \"octopus-platform\";\nimport { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport { generateImageBufferFromCode, IQrCodeImgOptions } from \"./qrcode\";\nimport { createBufferOfImageData } from \"./png\";\nimport type { ResourceManager } from \"../extensions\";\nimport type { Painter } from \"../core/painter\";\nimport type { PlatformVideo, PlatformRenderingContext2D } from \"../types\";\n\ninterface VideoEditorOptions {\n  // 模式: R 替换, A 追加\n  mode?: \"R\" | \"A\";\n}\n\nexport class VideoEditor {\n  constructor(\n    private readonly painter: Painter,\n    private readonly resource: ResourceManager,\n    private readonly entity: PlatformVideo.Video\n  ) {}\n\n  private async set(\n    key: string,\n    value: RawImage,\n    mode: VideoEditorOptions[\"mode\"] = \"R\"\n  ) {\n    const { entity, resource } = this;\n\n    if (mode === \"A\") {\n      await resource.loadImagesWithRecord(\n        { [key]: value },\n        entity.filename,\n        \"dynamic\"\n      );\n    } else {\n      entity.images[key] = value;\n    }\n  }\n\n  /**\n   * 获取自定义编辑器\n   * @returns\n   */\n  getContext() {\n    return this.painter.BC;\n  }\n\n  /**\n   * 是否是有效的Key\n   * @param key\n   * @returns\n   */\n  hasValidKey(key: string): boolean {\n    const { images } = this.entity;\n\n    if (typeof Object.hasOwn === \"function\") {\n      return Object.hasOwn(images, key);\n    }\n\n    return Object.prototype.hasOwnProperty.call(images, key);\n  }\n\n  /**\n   * 加载并缓存图片\n   * @param source\n   * @param url\n   * @returns\n   */\n  loadImage(\n    source: Uint8Array | string,\n    url: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return this.resource.loadExtImage(source, platform.path.filename(url));\n  }\n\n  /**\n   * 创建画布图片\n   * @param key\n   * @param context\n   * @param options\n   * @returns\n   */\n  async setCanvas(\n    key: string,\n    context: PlatformRenderingContext2D,\n    options?: VideoEditorOptions & { width?: number; height?: number }\n  ) {\n    if (this.entity.locked) return;\n\n    const { canvas } = context;\n    const width = options?.width ?? canvas.width;\n    const height = options?.height ?? canvas.height;\n    const imageData = context.getImageData(0, 0, width, height);\n\n    this.painter.clearSecondary();\n    await this.set(\n      key,\n      new Uint8Array(createBufferOfImageData(imageData)),\n      options?.mode\n    );\n  }\n\n  /**\n   * 创建二进制图片\n   * @param key\n   * @param buff\n   * @param options\n   * @returns\n   */\n  async setImage(key: string, url: string, options?: VideoEditorOptions) {\n    if (this.entity.locked) return;\n\n    if (url.startsWith(\"data:image\")) {\n      await this.set(key, url, options?.mode);\n    } else {\n      await this.set(\n        key,\n        new Uint8Array(await Parser.download(url)),\n        options?.mode\n      );\n    }\n  }\n\n  /**\n   * 创建二维码图片\n   * @param key\n   * @param code\n   * @param options\n   * @returns\n   */\n  async setQRCode(\n    key: string,\n    code: string,\n    options: VideoEditorOptions & Omit<IQrCodeImgOptions, \"code\">\n  ) {\n    if (this.entity.locked) return;\n\n    await this.set(\n      key,\n      new Uint8Array(generateImageBufferFromCode({ ...options, code })),\n      options?.mode\n    );\n  }\n}\n"],"names":["noop","EnhancedPlatform","_OctopusPlatform","_this","_classCallCheck","_callSuper","pluginSelector","pluginCanvas","pluginOfsCanvas","pluginDecode","pluginDownload","pluginFsm","pluginImage","pluginNow","pluginPath","pluginRAF","__VERSION__","init","_inherits","_createClass","key","value","installPlugin","plugin","OctopusPlatform","platform","ResourceManager","painter","caches","dynamicMaterials","Map","materials","point","createImage","img","shift","image","create","F","push","inertBitmapIntoCaches","isBitmap","loadExtImage","source","filename","load","path","resolve","then","loadImagesWithRecord","images_1","filename_1","__awaiter","arguments","images","_this2","type","length","undefined","_regenerator","m","_callee","imageAwaits","imageFilename","w","_context","n","concat","replace","Object","entries","forEach","_ref","_ref2","_slicedToArray","name","Uint8Array","byteLength","p","set","Promise","all","a","release","_iterator","_createForOfIteratorHelper","_step","s","done","releaseOne","err","e","f","clear","globals","env","cleanup","tidyUp","Array","from","Set","ImageBitmap","close","src","is","local","remove","readFloatLEImpl","DATA_VIEW_POOL_SIZE","dataViewPool","fill","map","DataView","ArrayBuffer","currentViewIndex","readFloatLE","buf","pos","RangeError","view","u8","buffer","getFloat32","calculateHash","buff","start","end","step","hash","i","toString","Preflight","count","get","size","calculate","reader","startPos","endPos","Math","min","len","max","floor","has","hit","Reader","preflight","indexOutOfRange","writeLength","readVarint32Slow","byte","uint32","int32","float","getBytesRange","bytes","_this$getBytesRange","_this$getBytesRange2","EMPTY_UINT8ARRAY","subarray","string","_this$getBytesRange3","_this$getBytesRange4","result","decode","utf8","skip","Error","skipType","wireType","Layout","x","y","width","height","message","tag","format","_message$x","_message$y","_message$width","_message$height","Transform","b","c","d","tx","ty","ShapeArgs","RectArgs","cornerRadius","EllipseArgs","radiusX","radiusY","RGBAColor","r","g","ShapeStyle","stroke","strokeWidth","lineCap","lineJoin","miterLimit","lineDashI","lineDashII","lineDashIII","lineDash","ShapeEntity","shape","rect","ellipse","styles","transform","FrameEntity","shapes","alpha","layout","clipPath","HIDDEN_FRAME","SpriteEntity","frames","imageKey","matteKey","MovieParams","viewBoxWidth","viewBoxHeight","fps","MovieEntity","version","params","sprites","end2","tag2","EMPTY_U8","_message$params","locked","dynamicElements","createVideoEntity","data","video","PointPool","pool","acquire","pop","x1","y1","x2","y2","Renderer2D","context","pointPool","lastResizeKey","globalTransform","currentPoint","setTransform","drawBezier","save","resetShapeStyles","beginPath","commands","parseSVGPath","_step$value","command","args","SVG_PATH","drawBezierElement","split","filter","Boolean","fillOrStroke","restore","method","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","closePath","drawEllipse","h","kappa","ox","oy","xe","ye","xm","ym","drawRect","radius","arcTo","drawShape","_a","_b","_c","_d","_e","_f","_g","_h","_j","drawSprite","frame","bitmap","dynamicElement","_ref$a","_ref$b","_ref$c","_ref$d","_ref$tx","_ref$ty","globalAlpha","drawImage","resize","contentMode","videoSize","canvasSize","canvasWidth","canvasHeight","videoWidth","videoHeight","resizeKey","lastTransform","scale","scaleX","scaleY","translateX","translateY","calculateScale","render","videoEntity","currentFrame","head","tail","sprite","destroy","SVG_LETTER_REGEXP","currentIndex","state","currentCommand","currentArgs","char","test","trim","strokeStyle","lineWidth","fillStyle","setLineDash","imageRatio","viewRatio","isAspectFit","shouldUseWidth","createTransform","Renderer2DExtension","stick","canvas","clearRect","Animator","isRunning","startTime","duration","loopStart","pauseTime","loopDuration","onAnimate","onStart","onUpdate","onEnd","setConfig","loop","fillValue","now","doFrame","resume","pause","stop","doDeltaTime","deltaTime","percent","ended","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","j","_freb","fl","revfl","_freb2","fd","revfd","rev","hMap","cd","mb","l","le","co","rvb","sv","v","flt","fdt","flm","flrm","fdm","fdrm","bits","o","bits16","shft","slc","ec","ind","msg","nt","code","captureStackTrace","inflt","dat","st","dict","sl","dl","noBuf","noSt","cbuf","bl","nbuf","final","bt","lm","dm","lbt","dbt","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","add","dsym","dend","wbits","wbits16","hTree","t2","slice","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","lc","cl","cli","cln","cls","clen","cf","wfblk","out","wblk","syms","lf","df","li","bs","_hTree","dlt","mlb","_hTree2","ddt","mdb","_lc","lclt","nlc","_lc2","lcdt","ndc","lcfreq","_hTree3","lct","mlcb","nlcc","flen","ftlen","dtlen","ll","llm","lcts","it","clct","dst","deo","dflt","lvl","plvl","pre","post","z","ceil","lst","opt","msk","prev","bs1","bs2","hsh","wi","hv","imod","pimod","rem","ch","dif","maxn","maxd","ml","nl","mmd","md","ti","pti","lin","din","adler","dopt","dictionary","newDat","level","mem","log","wbytes","zlh","lv","zls","zlibSync","opts","unzlibSync","CRC32","TypeError","bytesToString","crc","WHITE_COLOR","table","Uint32Array","_","PNGEncoder","crc32","createChunk","setUint32","chunkType","charCodeAt","partialChunk","createIHDRChunk","ihdrData","setUint8","createIDATChunk","validRowSize","rowSize","pixelsData","startIdx","srcStart","setPixel","pixel","write","pixels","flush","iHDRChunk","iDATChunk","iENDChunk","pngData","offset","BitBuffer","lengthInBits","getAt","bufIndex","put","num","putBit","bit","QRMode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","BitByte","parsedData","byteArray","flat","unshift","RS_BLOCK_TABLE","RSBlock","getRSBlockTable","typeNumber","errorCorrectLevel","getRSBlocks","rsBlock","list","totalCount","dataCount","EXP_TABLE","LOG_TABLE","QRMath","glog","gexp","Polynomial","multiply","mod","ratio","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","genBCHDigit","log2","BCH_G15","BCH_G18","Util","getBCHTypeInfo","getBCHTypeNumber","getPatternPosition","getMaskFunction","maskPattern","_i","getErrorCorrectPolynomial","errorCorrectLength","getLengthInBits","mode","getLostPoint","qr","moduleCount","getModuleCount","lostPoint","row","col","dark","isDark","sameCount","nRow","nCol","darkCount","abs","pow","PAD0","PAD1","QRCode","modules","dataCache","dataList","makeImpl","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","nr","nc","getBestMaskPattern","minLostPoint","pattern","rsBlocks","totalDataCount","createBytes","maskFunc","inc","bitIndex","byteIndex","bitBuffer","dcdata","ecdata","maxDcCount","maxEcCount","dcCount","ecCount","rsPoly","rawPoly","modPoly","modIndex","totalCodeCount","index","addData","make","Parser","decompress","parseVideo","url","needDecompress","download","remote","supportLocal","filepath","exists","read","fetch","_t","console","error","_context2","_t3","_t4","_t2","call","_callee2","Painter","FC","B","BC","model","renderer","clearContainer","clearSecondary","draw","dpr","W","setActionModel","register","selector","ofsSelector","component","getCanvas","getOfsCanvas","globalThis","_getOfsCanvas","_yield$getCanvas","clearType","ofsResult","Config","fillMode","playMode","startFrame","endFrame","loopStartFrame","config","includes","setItem","_defineProperty","getConfig","entity","spriteCount","frameDuration","currFrame","extFrame","totalFrame","aniConfig","Infinity","Player","resource","animator","options","container","secondary","rAF","bind","mount","startAnimation","onResume","onPause","onStop","stepToFrame","andPlay","stepToPercentage","round","_config$getConfig","isReverseMode","nextTail","latestFrame","nextFrame","exactFrame","hasRemained","MAX_DRAW_TIME_PER_FRAME","MAX_ACCELERATE_DRAW_TIME_PER_FRAME","MAX_DYNAMIC_CHUNK_SIZE","MIN_DYNAMIC_CHUNK_SIZE","dynamicChunkSize","chunk","elapsed","patchDraw","before","timePercent","onProcess","Poster","isConfigured","assign","setContentMode","setFrame","_context3","_callee3","toImageData","_this$painter","getImageData","parseOptions","correctLevel","codeColor","backgroundColor","calcCellSizeAndPadding","cellSize","padding","generateImageBufferFromCode","_parseOptions","callee","_calcCellSizeAndPaddi","CODE_COLOR","BACKGROUND_COLOR","png","generateImageFromCode","toDataURL","createBufferOfImageData","imageData","getBufferFromImageData","createImageDataUrl","getDataURLFromImageData","isZlibCompressed","cmf","flg","fdict","adler32Bytes","adler32","VideoManager","loadMode","maxRemain","remainStart","remainEnd","buckets","preprocess","bucket","origin","postprocess","updateRemainRange","includeRemainRange","downloadAndParseVideo","bucket_1","needParse","createBucket","needDownloadAndParse","promise","prepare","urls_1","urls","preloadBucket","_context4","_this3","_callee4","getPoint","go","_context5","_this4","_callee5","_this5","needRemoveFiles","_callee6","_context6","VideoEditor","key_1","value_1","getContext","hasValidKey","hasOwn","prototype","hasOwnProperty","loadImage","setCanvas","setImage","startsWith","_t5","_t6","setQRCode"],"mappings":"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AAG,CAAC,EACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EACb,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACtB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC1B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACd,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACvB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,EAC3B,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACxB,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E,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACpB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,EACxB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,EACzB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,CAAC,E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","x_google_ignoreList":[0]}