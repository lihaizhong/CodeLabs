{"version":3,"file":"index.min.js","sources":["../../../node_modules/.pnpm/@rollup+plugin-typescript@12.1.4_rollup@4.45.1_tslib@2.8.1_typescript@5.8.3/node_modules/tslib/tslib.es6.js","../../octopus-platform/esm/index.js","../src/platform/index.ts","../src/extensions/svga-decoder/io/float.ts","../src/extensions/svga-decoder/io/preflight.ts","../src/shared/hash.ts","../src/extensions/svga-decoder/io/Reader.ts","../src/extensions/svga-decoder/serialization/Layout.ts","../src/extensions/svga-decoder/serialization/Transform.ts","../src/extensions/svga-decoder/serialization/ShapeArgs.ts","../src/extensions/svga-decoder/serialization/RectArgs.ts","../src/extensions/svga-decoder/serialization/EllipseArgs.ts","../src/extensions/svga-decoder/serialization/RGBAColor.ts","../src/extensions/svga-decoder/serialization/ShapeStyle.ts","../src/extensions/svga-decoder/serialization/ShapeEntity.ts","../src/extensions/svga-decoder/serialization/FrameEntity.ts","../src/extensions/svga-decoder/serialization/SpriteEntity.ts","../src/extensions/svga-decoder/serialization/MovieParams.ts","../src/extensions/svga-decoder/serialization/MovieEntity.ts","../src/shared/PointPool.ts","../src/extensions/svga-renderer/2d/index.ts","../src/extensions/svga-animator/index.ts","../src/extensions/zlib/index.ts","../src/extensions/png-encoder/crc.ts","../src/extensions/qrcode-encoder/math.ts","../src/extensions/png-encoder/index.ts","../src/extensions/qrcode-encoder/bit-buffer.ts","../src/extensions/qrcode-encoder/constants.ts","../src/extensions/qrcode-encoder/bit-byte.ts","../src/extensions/qrcode-encoder/block.ts","../src/extensions/qrcode-encoder/polynomial.ts","../src/extensions/qrcode-encoder/util.ts","../src/extensions/qrcode-encoder/index.ts","../src/core/parser/index.ts","../src/extensions/svga-decoder/index.ts","../src/core/painter/index.ts","../src/core/player/config.ts","../src/helper/qrcode.ts","../src/helper/png.ts","../src/helper/VideoManager.ts","../src/helper/VideoEditor.ts","../src/helper/ResourceManager.ts","../src/core/player/index.ts","../src/core/poster/index.ts","../src/helper/zlib.ts"],"sourcesContent":["/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","const noop = (() => { });\n\nfunction delay(callback, interval) {\n    return new Promise((resolve) => setTimeout(() => resolve(callback()), interval));\n}\nasync function retry(fn, intervals = [], \n/*\n * @private 不建议外部传入\n */\ntimes = 0) {\n    try {\n        return fn();\n    }\n    catch (err) {\n        if (times >= intervals.length) {\n            throw err;\n        }\n        return delay(() => retry(fn, intervals, ++times), intervals[times]);\n    }\n}\n\n// 使用静态缓冲区，避免重复创建\nconst BUFFER_SIZE = 4096; // 更大的缓冲区，减少字符串拼接次数\nconst STATIC_BUFFER = new Uint16Array(BUFFER_SIZE); // 预分配ASCII缓冲区\n/**\n * 优化的 UTF-8 解码函数\n * 主要优化点：\n * 1. 使用静态缓冲区减少内存分配\n * 2. 批量处理 ASCII 字符\n * 3. 优化循环结构和条件判断\n * 4. 使用 Uint16Array 代替普通数组提高性能\n */\nfunction utf8(buffer, start, end) {\n    // 边界检查\n    if (start < 0 || end > buffer.length)\n        throw new RangeError(\"Index out of range\");\n    if (end - start < 1)\n        return \"\";\n    const resultParts = [];\n    let bufferPos = 0;\n    const appendBuffer = (parts) => {\n        resultParts.push(String.fromCharCode.apply(null, Array.from(parts)));\n    };\n    // 快速路径：检查是否全是 ASCII\n    let allAscii = true;\n    for (let i = start; i < end; i++) {\n        if (buffer[i] > 0x7F) {\n            allAscii = false;\n            break;\n        }\n    }\n    // 全 ASCII 优化路径\n    if (allAscii) {\n        for (let i = start; i < end; i += BUFFER_SIZE) {\n            const chunkEnd = Math.min(i + BUFFER_SIZE, end);\n            const len = chunkEnd - i;\n            // 直接复制到 Uint16Array\n            for (let j = 0; j < len; j++) {\n                STATIC_BUFFER[j] = buffer[i + j];\n            }\n            appendBuffer(STATIC_BUFFER.subarray(0, len));\n        }\n        return resultParts.join('');\n    }\n    // 混合内容处理\n    for (let i = start; i < end;) {\n        const byte = buffer[i++];\n        // ASCII 字符处理\n        if (byte < 0x80) {\n            STATIC_BUFFER[bufferPos++] = byte;\n            // 如果缓冲区满了，提交并清空\n            if (bufferPos === BUFFER_SIZE) {\n                appendBuffer(STATIC_BUFFER);\n                bufferPos = 0;\n            }\n            continue;\n        }\n        // 提交之前的 ASCII 字符\n        if (bufferPos > 0) {\n            appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n            bufferPos = 0;\n        }\n        // 变长编码处理 - 使用查表法代替多个条件判断\n        let codePoint;\n        // 2 字节序列: 110xxxxx 10xxxxxx\n        if ((byte & 0xE0) === 0xC0 && i < end) {\n            codePoint = ((byte & 0x1F) << 6) | (buffer[i++] & 0x3F);\n        }\n        // 3 字节序列: 1110xxxx 10xxxxxx 10xxxxxx\n        else if ((byte & 0xF0) === 0xE0 && i + 1 < end) {\n            codePoint = ((byte & 0x0F) << 12) |\n                ((buffer[i++] & 0x3F) << 6) |\n                (buffer[i++] & 0x3F);\n        }\n        // 4 字节序列: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n        else if ((byte & 0xF8) === 0xF0 && i + 2 < end) {\n            codePoint = ((byte & 0x07) << 18) |\n                ((buffer[i++] & 0x3F) << 12) |\n                ((buffer[i++] & 0x3F) << 6) |\n                (buffer[i++] & 0x3F);\n            // 处理 Unicode 代理对\n            if (codePoint > 0xFFFF) {\n                codePoint -= 0x10000;\n                STATIC_BUFFER[bufferPos++] = 0xD800 + (codePoint >> 10);\n                STATIC_BUFFER[bufferPos++] = 0xDC00 + (codePoint & 0x3FF);\n                // 检查缓冲区是否需要提交\n                if (bufferPos >= BUFFER_SIZE - 2) { // 预留空间给下一个可能的代理对\n                    appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n                    bufferPos = 0;\n                }\n                continue;\n            }\n        }\n        // 无效的 UTF-8 序列\n        else {\n            codePoint = 0xFFFD; // Unicode 替换字符\n            // 跳过可能的后续字节\n            while (i < end && (buffer[i] & 0xC0) === 0x80)\n                i++;\n        }\n        STATIC_BUFFER[bufferPos++] = codePoint;\n        // 检查缓冲区是否需要提交\n        if (bufferPos >= BUFFER_SIZE - 3) { // 预留空间给下一个可能的多字节字符\n            appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n            bufferPos = 0;\n        }\n    }\n    // 提交剩余字符\n    if (bufferPos > 0) {\n        appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n    }\n    return resultParts.join('');\n}\n\nclass OctopusPlatform {\n    /**\n     * 插件列表\n     */\n    plugins = [];\n    /**\n     * 平台版本\n     */\n    platformVersion = \"0.1.1\";\n    /**\n     * 应用版本\n     */\n    version = \"\";\n    /**\n     * 全局变量\n     */\n    globals = {\n        env: \"unknown\",\n        br: null,\n        dpr: 1,\n        system: \"unknown\",\n    };\n    noop = noop;\n    retry = retry;\n    constructor(plugins, version) {\n        this.version = version || \"\";\n        this.plugins = plugins;\n        this.globals.env = this.autoEnv();\n    }\n    init() {\n        const { globals, plugins } = this;\n        const collection = new Map();\n        const names = [];\n        const installedPlugins = new Set();\n        globals.br = this.useBridge();\n        globals.dpr = this.usePixelRatio();\n        globals.system = this.useSystem();\n        for (const plugin of plugins) {\n            names.push(plugin.name);\n            collection.set(plugin.name, plugin);\n        }\n        this.usePlugins(collection, names, installedPlugins);\n        installedPlugins.clear();\n    }\n    autoEnv() {\n        // FIXME：由于抖音场景支持wx对象，所以需要放在wx对象之前检查\n        if (typeof window !== \"undefined\") {\n            return \"h5\";\n        }\n        if (typeof tt !== \"undefined\") {\n            return \"tt\";\n        }\n        if (typeof my !== \"undefined\") {\n            return \"alipay\";\n        }\n        if (typeof wx !== \"undefined\") {\n            return \"weapp\";\n        }\n        throw new Error(\"Unsupported app\");\n    }\n    useBridge() {\n        switch (this.globals.env) {\n            case \"h5\":\n                return globalThis;\n            case \"alipay\":\n                return my;\n            case \"tt\":\n                return tt;\n            case \"weapp\":\n                return wx;\n        }\n        return {};\n    }\n    usePixelRatio() {\n        const { env, br } = this.globals;\n        if (env === \"h5\") {\n            return devicePixelRatio;\n        }\n        if (\"getWindowInfo\" in br) {\n            return br.getWindowInfo().pixelRatio;\n        }\n        if (\"getSystemInfoSync\" in br) {\n            return br.getSystemInfoSync().pixelRatio;\n        }\n        return 1;\n    }\n    useSystem() {\n        const { env } = this.globals;\n        let system;\n        switch (env) {\n            case \"weapp\":\n                system = wx.getDeviceInfo().platform;\n                break;\n            case \"alipay\":\n                system = my.getDeviceBaseInfo().platform;\n                break;\n            case \"tt\":\n                system = tt.getDeviceInfoSync().platform;\n                break;\n            default:\n                system = \"unknown\";\n        }\n        return system.toLowerCase();\n    }\n    usePlugins(plugins, pluginNames, installedPlugins) {\n        for (const pluginName of pluginNames) {\n            if (!plugins.has(pluginName)) {\n                throw new Error(`Plugin ${pluginName} not found`);\n            }\n            if (installedPlugins.has(pluginName)) {\n                return;\n            }\n            const plugin = plugins.get(pluginName);\n            // 递归调用依赖\n            if (Array.isArray(plugin.dependencies)) {\n                for (const dependency of plugin.dependencies) {\n                    if (typeof plugins.get(dependency)?.install !== \"function\") {\n                        throw new Error(`Plugin ${pluginName} depends on plugin ${dependency}, but ${dependency} is not found`);\n                    }\n                }\n                // 递归加载依赖\n                this.usePlugins(plugins, plugin.dependencies, installedPlugins);\n            }\n            this.installPlugin(plugin);\n            installedPlugins.add(pluginName);\n        }\n    }\n    switch(env) {\n        this.globals.env = env;\n        this.init();\n    }\n}\n\n/**\n * 定义平台插件\n */\nconst definePlugin = (plugin) => plugin;\n\nfunction installPlugin(platform, plugin) {\n    const value = plugin.install.call(platform);\n    Object.defineProperty(platform, plugin.name, {\n        get: () => value,\n        enumerable: true,\n        configurable: true,\n    });\n}\n\nvar pluginSelector = definePlugin({\n    name: \"getSelector\",\n    install() {\n        const { env, br } = this.globals;\n        if (env === \"h5\") {\n            return (selector) => document.querySelector(selector);\n        }\n        return (selector, component) => {\n            let query = br.createSelectorQuery();\n            if (component) {\n                query = query.in(component);\n            }\n            return query\n                .select(selector)\n                .fields({ node: true, size: true });\n        };\n    }\n});\n\n/**\n * 通过选择器匹配获取canvas实例\n * @returns\n */\nvar pluginCanvas = definePlugin({\n    name: \"getCanvas\",\n    dependencies: [\"getSelector\"],\n    install() {\n        const { retry, getSelector } = this;\n        const { env, br, dpr } = this.globals;\n        const intervals = [50, 100, 100];\n        function initCanvas(canvas, width, height) {\n            if (!canvas) {\n                throw new Error(\"canvas not found.\");\n            }\n            // const MAX_SIZE = 1365;\n            const context = canvas.getContext(\"2d\");\n            // let virtualWidth = width * dpr;\n            // let virtualHeight = height * dpr;\n            // // 微信小程序限制canvas最大尺寸为 1365 * 1365\n            // if (\n            //   env === \"weapp\" &&\n            //   (virtualWidth > MAX_SIZE || virtualHeight > MAX_SIZE)\n            // ) {\n            //   if (virtualWidth > virtualHeight) {\n            //     virtualHeight = (virtualHeight / virtualWidth) * MAX_SIZE;\n            //     virtualWidth = MAX_SIZE;\n            //   } else {\n            //     virtualWidth = (virtualWidth / virtualHeight) * MAX_SIZE;\n            //     virtualHeight = MAX_SIZE;\n            //   }\n            // }\n            // canvas!.width = virtualWidth;\n            // canvas!.height = virtualHeight;\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n            return { canvas, context };\n        }\n        if (env === \"h5\") {\n            return (selector) => retry(() => {\n                // FIXME: Taro 对 canvas 做了特殊处理，canvas 元素的 id 会被加上 canvas-id 的前缀\n                const canvas = (getSelector(`canvas[canvas-id=${selector.slice(1)}]`) || getSelector(selector));\n                return initCanvas(canvas, canvas?.clientWidth, canvas?.clientHeight);\n            }, intervals);\n        }\n        return (selector, component) => retry(() => new Promise((resolve, reject) => {\n            let query = getSelector(selector, component);\n            query.exec((res) => {\n                const { node, width, height } = res[0] || {};\n                try {\n                    resolve(initCanvas(node, width, height));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        }), intervals);\n    },\n});\n\n/**\n * 用于处理数据解码\n * @returns\n */\nvar pluginDecode = definePlugin({\n    name: \"decode\",\n    install() {\n        const { env, br } = this.globals;\n        const b64Wrap = (b64, type = \"image/png\") => `data:${type};base64,${b64}`;\n        const decode = {\n            toBuffer(data) {\n                const { buffer, byteOffset, byteLength } = data;\n                if (buffer instanceof ArrayBuffer) {\n                    return buffer.slice(byteOffset, byteOffset + byteLength);\n                }\n                const view = new Uint8Array(byteLength);\n                view.set(data);\n                return view.buffer;\n            },\n            bytesToString(data) {\n                const chunkSize = 8192; // 安全的块大小\n                let result = \"\";\n                for (let i = 0; i < data.length; i += chunkSize) {\n                    const chunk = data.slice(i, i + chunkSize);\n                    // 在安全的块上使用 String.fromCharCode\n                    result += String.fromCharCode.apply(null, Array.from(chunk));\n                }\n                return result;\n            },\n        };\n        if (env === \"h5\") {\n            const textDecoder = new TextDecoder(\"utf-8\", { fatal: true });\n            return {\n                ...decode,\n                toDataURL: (data) => b64Wrap(btoa(decode.bytesToString(data))),\n                utf8: (data, start, end) => textDecoder.decode(data.subarray(start, end)),\n            };\n        }\n        return {\n            ...decode,\n            toDataURL: (data) => b64Wrap(br.arrayBufferToBase64(decode.toBuffer(data))),\n            utf8,\n        };\n    },\n});\n\n/**\n * 用于处理远程文件读取\n * @returns\n */\nvar pluginDownload = definePlugin({\n    name: \"remote\",\n    install() {\n        const { env, br } = this.globals;\n        const isRemote = (url) => /^(blob:)?http(s)?:\\/\\//.test(url);\n        if (env === \"h5\") {\n            return {\n                is: isRemote,\n                fetch: (url) => fetch(url).then((response) => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    throw new Error(`HTTP error, status=${response.status}, statusText=${response.statusText}`);\n                }),\n            };\n        }\n        function download(url, enableCache) {\n            return new Promise((resolve, reject) => {\n                br.request({\n                    url,\n                    // @ts-ignore 支付宝小程序必须有该字段\n                    dataType: \"arraybuffer\",\n                    responseType: \"arraybuffer\",\n                    enableCache,\n                    success: (res) => resolve(res.data),\n                    fail: reject,\n                });\n            }).catch((err) => {\n                const errorMessage = err.errMsg || err.errorMessage || err.message;\n                // FIXME: 可能存在写入网络缓存空间失败的情况，此时重新下载\n                if (errorMessage.includes(\"ERR_CACHE_WRITE_FAILURE\") ||\n                    errorMessage.includes(\"ERR_CACHE_WRITE_FAILED\")) {\n                    return download(url, false);\n                }\n                throw err;\n            });\n        }\n        return {\n            is: isRemote,\n            fetch: (url) => download(url, true),\n        };\n    },\n});\n\n/**\n * 用于处理本地文件存储\n * @returns\n */\nvar pluginFsm = definePlugin({\n    name: \"local\",\n    install() {\n        const { env, br } = this.globals;\n        if (env === \"h5\" || env === \"tt\") {\n            return null;\n        }\n        const fsm = br.getFileSystemManager();\n        return {\n            exists: (filepath) => new Promise((resolve) => {\n                fsm.access({\n                    path: filepath,\n                    success: () => resolve(true),\n                    fail: () => resolve(false),\n                });\n            }),\n            write: (data, filePath) => new Promise((resolve, reject) => {\n                fsm.writeFile({\n                    filePath,\n                    data,\n                    success: () => resolve(filePath),\n                    fail: reject,\n                });\n            }),\n            read: (filePath) => new Promise((resolve, reject) => {\n                fsm.readFile({\n                    filePath,\n                    success: (res) => resolve(res.data),\n                    fail: reject,\n                });\n            }),\n            remove: (filePath) => new Promise((resolve, reject) => {\n                fsm.unlink({\n                    filePath,\n                    success: () => resolve(filePath),\n                    fail: reject,\n                });\n            }),\n        };\n    },\n});\n\n/**\n * 图片加载插件\n * @package plugin-fsm 本地文件存储能力\n * @package plugin-path 路径处理能力\n * @package plugin-decode 解码能力\n */\nvar pluginImage = definePlugin({\n    name: \"image\",\n    dependencies: [\"local\", \"decode\"],\n    install() {\n        const { local, decode } = this;\n        const { env } = this.globals;\n        let genImageSource = (data, _filepath) => (typeof data === \"string\" ? data : decode.toDataURL(data));\n        /**\n         * 加载图片\n         * @param img\n         * @param url\n         * @returns\n         */\n        function loadImage(img, url) {\n            return new Promise((resolve, reject) => {\n                img.onload = () => resolve(img);\n                img.onerror = () => reject(new Error(`SVGA LOADING FAILURE: ${url}`));\n                img.src = url;\n            });\n        }\n        function releaseImage(img) {\n            img.onload = null;\n            img.onerror = null;\n            img.src = \"\";\n        }\n        if (env === \"h5\") {\n            return {\n                create: (_) => new Image(),\n                load: (createImage, data, filepath) => {\n                    // 由于ImageBitmap在图片渲染上有优势，故优先使用\n                    if (data instanceof Uint8Array && \"createImageBitmap\" in globalThis) {\n                        return createImageBitmap(new Blob([decode.toBuffer(data)]));\n                    }\n                    if (data instanceof ImageBitmap) {\n                        return Promise.resolve(data);\n                    }\n                    return loadImage(createImage(), genImageSource(data, filepath));\n                },\n                release: releaseImage,\n            };\n        }\n        // FIXME: 支付宝小程序IDE保存临时文件会失败;抖音最大用户文件大小为10M\n        if (env === \"weapp\") {\n            genImageSource = async (data, filepath) => {\n                if (typeof data === \"string\") {\n                    return data;\n                }\n                // FIXME: IOS设备 微信小程序 Uint8Array转base64 时间较长，使用图片缓存形式速度会更快\n                return local\n                    .write(decode.toBuffer(data), filepath)\n                    .catch((ex) => {\n                    console.warn(`image write fail: ${ex.errorMessage || ex.errMsg || ex.message}`);\n                    return decode.toDataURL(data);\n                });\n            };\n        }\n        return {\n            create: (canvas) => canvas.createImage(),\n            load: async (createImage, data, filepath) => loadImage(createImage(), await genImageSource(data, filepath)),\n            release: releaseImage,\n        };\n    },\n});\n\nvar pluginNow = definePlugin({\n    name: \"now\",\n    install() {\n        const { env, br } = this.globals;\n        // performance可以提供更高精度的时间测量，且不受系统时间的调整（如更改系统时间或同步时间）的影响\n        const perf = env === \"h5\" || env === \"tt\" ? performance : br.getPerformance();\n        if (typeof perf?.now === \"function\") {\n            // 支付宝小程序的performance.now()获取的是当前时间戳，单位是微秒。\n            if (perf.now() - Date.now() > 1) {\n                return () => perf.now() / 1000;\n            }\n            // H5环境下，performance.now()获取的不是当前时间戳，而是从页面加载开始的时间戳，单位是毫秒。\n            return () => perf.now();\n        }\n        return () => Date.now();\n    },\n});\n\n/**\n * 用于创建离屏canvas\n * @returns\n */\nvar pluginOfsCanvas = definePlugin({\n    name: \"getOfsCanvas\",\n    install() {\n        const { env } = this.globals;\n        let createOffscreenCanvas;\n        if (env === \"h5\") {\n            createOffscreenCanvas = (options) => new OffscreenCanvas(options.width, options.height);\n        }\n        else if (env === \"alipay\") {\n            createOffscreenCanvas = (options) => my.createOffscreenCanvas(options);\n        }\n        else if (env === \"tt\") {\n            createOffscreenCanvas = (options) => {\n                const canvas = tt.createOffscreenCanvas();\n                canvas.width = options.width;\n                canvas.height = options.height;\n                return canvas;\n            };\n        }\n        else {\n            createOffscreenCanvas = (options) => wx.createOffscreenCanvas(options);\n        }\n        return (options) => {\n            const type = options.type || \"2d\";\n            const canvas = createOffscreenCanvas({ ...options, type });\n            const context = canvas.getContext(type);\n            return {\n                canvas,\n                context,\n            };\n        };\n    },\n});\n\n/**\n * 用于处理文件路径\n * @returns\n */\nvar pluginPath = definePlugin({\n    name: \"path\",\n    install() {\n        const { env, br } = this.globals;\n        const filename = (path) => {\n            const filepath = path.split(/\\?#/g)[0];\n            return filepath.substring(filepath.lastIndexOf(\"/\") + 1);\n        };\n        if (env === \"h5\" || env === \"tt\") {\n            return {\n                USER_DATA_PATH: \"\",\n                is: (_) => false,\n                filename,\n                resolve: (filename, prefix) => \"\",\n            };\n        }\n        const { USER_DATA_PATH } = br.env;\n        return {\n            USER_DATA_PATH,\n            is: (filepath) => filepath?.startsWith(USER_DATA_PATH),\n            filename,\n            resolve: (filename, prefix) => `${USER_DATA_PATH}/${prefix ? `${prefix}__` : \"\"}${filename}`,\n        };\n    },\n});\n\n/**\n * 用于处理requestAnimationFrame\n * @returns\n */\nvar pluginRaf = definePlugin({\n    name: \"rAF\",\n    install() {\n        const { env } = this.globals;\n        function requestAnimationFrameImpl() {\n            return (callback) => setTimeout(callback, Math.max(0, 16 - (Date.now() % 16)));\n        }\n        if (env === \"h5\") {\n            const rAF = \"requestAnimationFrame\" in globalThis\n                ? requestAnimationFrame\n                : requestAnimationFrameImpl();\n            return (_, callback) => rAF(callback);\n        }\n        return (canvas, callback) => {\n            // 检查canvas是否存在\n            try {\n                return canvas.requestAnimationFrame(callback);\n            }\n            catch (error) {\n                console.warn(error.message);\n                return requestAnimationFrameImpl()(callback);\n            }\n        };\n    },\n});\n\nvar pluginIntersectionObserver = definePlugin({\n    name: \"walkIn\",\n    install() {\n        const { env, br } = this.globals;\n        const thresholds = [0, 0.5, 1];\n        if (env === \"h5\") {\n            return (callback, selector, options = {}) => {\n                let observer = new IntersectionObserver((entries) => callback(entries[0].intersectionRatio > 0), {\n                    threshold: thresholds,\n                    root: options.root ? document.querySelector(options.root) : null,\n                });\n                if (options.observeAll) {\n                    document.querySelectorAll(selector)?.forEach((element) => observer.observe(element));\n                }\n                else {\n                    const element = document.querySelector(selector);\n                    if (element) {\n                        observer.observe(element);\n                    }\n                }\n                return () => {\n                    observer.disconnect();\n                    observer = null;\n                };\n            };\n        }\n        return (callback, selector, options = {}) => {\n            let observer = br.createIntersectionObserver(options.component, {\n                thresholds,\n                initialRatio: 0,\n                observeAll: options.observeAll,\n                // nativeMode: true,\n            });\n            if (options.root) {\n                observer.relativeTo(options.root);\n            }\n            else {\n                observer.relativeToViewport();\n            }\n            observer.observe(selector, (res) => callback(res.intersectionRatio > 0));\n            return () => {\n                observer.disconnect();\n                observer = null;\n            };\n        };\n    },\n});\n\nexport { OctopusPlatform, definePlugin, installPlugin, pluginCanvas, pluginDecode, pluginDownload, pluginFsm, pluginImage, pluginIntersectionObserver, pluginNow, pluginOfsCanvas, pluginPath, pluginRaf as pluginRAF, pluginSelector };\n//# sourceMappingURL=index.js.map\n","import {\n  type OctopusPlatformPlugins,\n  type OctopusPlatformPluginOptions,\n  OctopusPlatform,\n  installPlugin,\n  pluginSelector,\n  pluginCanvas,\n  pluginOfsCanvas,\n  pluginDecode,\n  pluginDownload,\n  pluginFsm,\n  pluginImage,\n  pluginNow,\n  pluginPath,\n  pluginRAF,\n} from \"octopus-platform\";\n\nexport type PlatformProperties =\n  | \"now\"\n  | \"path\"\n  | \"remote\"\n  | \"local\"\n  | \"decode\"\n  | \"image\"\n  | \"rAF\"\n  | \"getSelector\"\n  | \"getCanvas\"\n  | \"getOfsCanvas\";\n\nclass EnhancedPlatform extends OctopusPlatform<PlatformProperties> {\n  now!: OctopusPlatformPlugins[\"now\"];\n\n  path!: OctopusPlatformPlugins[\"path\"];\n\n  remote!: OctopusPlatformPlugins[\"remote\"];\n\n  local!: OctopusPlatformPlugins[\"local\"];\n\n  decode!: OctopusPlatformPlugins[\"decode\"];\n\n  image!: OctopusPlatformPlugins[\"image\"];\n\n  rAF!: OctopusPlatformPlugins[\"rAF\"];\n\n  getSelector!: OctopusPlatformPlugins[\"getSelector\"];\n\n  getCanvas!: OctopusPlatformPlugins[\"getCanvas\"];\n\n  getOfsCanvas!: OctopusPlatformPlugins[\"getOfsCanvas\"];\n\n  constructor() {\n    super(\n      [\n        pluginSelector,\n        pluginCanvas,\n        pluginOfsCanvas,\n        pluginDecode,\n        pluginDownload,\n        pluginFsm,\n        pluginImage,\n        pluginNow,\n        pluginPath,\n        pluginRAF,\n      ],\n      __VERSION__\n    );\n\n    this.init();\n  }\n\n  installPlugin(\n    plugin: OctopusPlatformPluginOptions<PlatformProperties>\n  ) {\n    installPlugin<PlatformProperties>(this, plugin);\n  }\n}\n\nexport const platform = new EnhancedPlatform();\n","function readFloatLEImpl() {\n  // 使用静态DataView池\n  const DATA_VIEW_POOL_SIZE = 4;\n  const dataViewPool: DataView[] = Array(DATA_VIEW_POOL_SIZE)\n    .fill(0)\n    .map(() => new DataView(new ArrayBuffer(8))); // 使用8字节支持double\n  let currentViewIndex = 0;\n\n  return function readFloatLE(buf: Uint8Array, pos: number): number {\n    if (pos < 0 || pos + 4 > buf.length)\n      throw new RangeError(\"Index out of range\");\n\n    // 轮换使用DataView池中的实例\n    const view = dataViewPool[currentViewIndex];\n    currentViewIndex = (currentViewIndex + 1) % DATA_VIEW_POOL_SIZE;\n\n    // 直接设置字节，避免创建subarray\n    const u8 = new Uint8Array(view.buffer);\n    u8[0] = buf[pos];\n    u8[1] = buf[pos + 1];\n    u8[2] = buf[pos + 2];\n    u8[3] = buf[pos + 3];\n\n    return view.getFloat32(0, true);\n  };\n}\n\nexport const readFloatLE = readFloatLEImpl();\n","import { calculateHash } from \"../../../shared/hash\";\nimport Reader from \"./Reader\";\n\nexport class Preflight {\n  private caches: Map<string, any> = new Map();\n\n  private count: number = 0;\n\n  get size() {\n    return this.caches.size;\n  }\n\n  get hitCount() {\n    return this.count;\n  }\n\n  // get cache() {\n  //   return Object.fromEntries(this.caches);\n  // }\n\n  /**\n   * 计算二进制数据的哈希值\n   * @param reader Reader对象\n   * @param end 结束位置\n   * @returns 哈希值\n   */\n  calculate(reader: Reader, end: number): string {\n    // 保存原始位置\n    const { pos: startPos, buf } = reader;\n    const endPos = Math.min(end, reader.len);\n    // 采样数据以加快计算速度，同时保持足够的唯一性\n    // 对于大数据，每隔几个字节采样一次\n    const step = Math.max(1, Math.floor((endPos - startPos) / 100));\n    \n    return calculateHash(buf, startPos, endPos, step);\n  }\n\n  /**\n   * 检查是否存在缓存数据\n   * @param key 键\n   * @returns 是否存在\n   */\n  has(key: string): boolean {\n    const hit = this.caches.has(key);\n\n    if (hit) {\n      this.count++;\n    }\n\n    return hit;\n\n    // return this.caches.has(key);\n  }\n\n  /**\n   * 获取缓存数据\n   * @param key 键\n   * @returns 缓存数据\n   */\n  get(key: string): any {\n    return this.caches.get(key);\n  }\n\n  /**\n   * 设置缓存数据\n   * @param key 键\n   * @param value 缓存数据\n   */\n  set(key: string, value: any) {\n    this.caches.set(key, value);\n  }\n\n  /**\n   * 清空所有缓存数据\n   */\n  clear() {\n    this.count = 0;\n    this.caches.clear();\n  }\n}\n","/**\n * 简易的hash算法\n * @param buff \n * @param start \n * @param end \n * @param step \n * @returns \n */\nexport function calculateHash(buff: Uint8Array, start: number, end: number, step: number) {\n  // 使用简单的哈希算法\n    let hash = 0;\n\n    for (let i = start; i < end; i += step) {\n      // 简单的哈希算法，类似于字符串哈希\n      hash = (hash << 5) - hash + buff[i];\n      hash = hash & hash; // 转换为32位整数\n    }\n\n    // 添加数据长度作为哈希的一部分，增加唯一性\n    hash = (hash << 5) - hash + end - start;\n    hash = hash & hash;\n    // 转换为字符串\n    return hash.toString(36);\n}\n","import { platform } from \"../../../platform\";\nimport { readFloatLE } from \"./float\";\nimport { Preflight } from \"./preflight\";\n\nexport default class Reader {\n  // 添加静态缓存，用于常用的空数组\n  private static EMPTY_UINT8ARRAY = new Uint8Array(0);\n\n  /**\n   * Read buffer.\n   * @type {Uint8Array}\n   */\n  readonly buf: Uint8Array;\n  /**\n   * Read buffer length.\n   * @type {number}\n   */\n  readonly len: number;\n  /**\n   * Read buffer position.\n   * @type {number}\n   */\n  pos: number;\n\n  preflight = new Preflight();\n\n  /**\n   * Constructs a new reader instance using the specified buffer.\n   * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n   * @constructor\n   * @param {Uint8Array} buffer Buffer to read from\n   */\n  constructor(buffer: Uint8Array) {\n    this.buf = buffer;\n    this.pos = 0;\n    this.len = buffer.length;\n  }\n\n  private indexOutOfRange(reader: Reader, writeLength?: number) {\n    return new RangeError(\n      \"index out of range: \" +\n        reader.pos +\n        \" + \" +\n        (writeLength || 1) +\n        \" > \" +\n        reader.len\n    );\n  }\n\n  /**\n   * 将复杂逻辑分离到单独方法\n   * @returns\n   */\n  private readVarint32Slow() {\n    let byte = this.buf[this.pos++];\n    let value = byte & 0x7f;\n    let shift = 7;\n\n    // 使用do-while循环减少条件判断\n    do {\n      if (this.pos >= this.len) {\n        throw this.indexOutOfRange(this);\n      }\n\n      byte = this.buf[this.pos++];\n      value |= (byte & 0x7f) << shift;\n      shift += 7;\n    } while (byte >= 128 && shift < 32);\n\n    return value >>> 0; // 确保无符号\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @param length \n   * @returns \n   */\n  end(length?: number) {\n    return length === undefined ? this.len : this.pos + length\n  }\n\n  /**\n   * Reads a varint as an unsigned 32 bit value.\n   * @function\n   * @returns {number} Value read\n   */\n  uint32() {\n    // 快速路径：大多数情况下是单字节\n    const byte = this.buf[this.pos];\n\n    if (byte < 128) {\n      this.pos++;\n\n      return byte;\n    }\n\n    // 慢速路径：多字节处理\n    return this.readVarint32Slow();\n  }\n\n  /**\n   * Reads a varint as a signed 32 bit value.\n   * @returns {number} Value read\n   */\n  int32() {\n    return this.uint32() | 0;\n  }\n\n  /**\n   * Reads a float (32 bit) as a number.\n   * @function\n   * @returns {number} Value read\n   */\n  float() {\n    const pos = this.pos + 4;\n\n    if (pos > this.len) {\n      throw this.indexOutOfRange(this, 4);\n    }\n\n    const value = readFloatLE(this.buf, this.pos);\n    this.pos = pos;\n\n    return value;\n  }\n\n  /**\n   * read bytes range\n   * @returns \n   */\n  private getBytesRange() {\n    const length = this.uint32();\n    const start = this.pos;\n    const end = start + length;\n\n    if (end > this.len) {\n      throw this.indexOutOfRange(this, length);\n    }\n\n    return [start, end, length];\n  }\n\n  /**\n   * Reads a sequence of bytes preceded by its length as a varint.\n   * @returns {Uint8Array} Value read\n   */\n  bytes() {\n    const [start, end, length] = this.getBytesRange();\n\n    this.pos += length;\n\n    if (length === 0) {\n      return Reader.EMPTY_UINT8ARRAY;\n    }\n\n    return this.buf.subarray(start, end);\n  }\n\n  /**\n   * Reads a string preceeded by its byte length as a varint.\n   * @returns {string} Value read\n   */\n  string() {\n    const [start, end] = this.getBytesRange();\n    // 直接在原始buffer上解码，避免创建中间bytes对象\n    const result = platform.decode.utf8(this.buf, start, end);\n    this.pos = end;\n\n    return result;\n  }\n\n  /**\n   * Skips the specified number of bytes if specified, otherwise skips a varint.\n   * @param {number} [length] Length if known, otherwise a varint is assumed\n   * @returns {Reader} `this`\n   */\n  skip(length?: number) {\n    if (typeof length === \"number\") {\n      if (this.pos + length > this.len) {\n        throw this.indexOutOfRange(this, length);\n      }\n\n      this.pos += length;\n\n      return this;\n    }\n    \n    // 变长整数跳过优化 - 使用位运算\n    const { buf, len } = this;\n    let pos = this.pos;\n    \n    // 一次检查多个字节，减少循环次数\n    while (pos < len) {\n      const byte = buf[pos++];\n\n      if ((byte & 0x80) === 0) {\n        this.pos = pos;\n\n        return this;\n      }\n\n      // 快速检查连续的高位字节\n      if (pos < len && (buf[pos] & 0x80) !== 0) {\n        pos++;\n\n        if (pos < len && (buf[pos] & 0x80) !== 0) {\n          pos++;\n\n          if (pos < len && (buf[pos] & 0x80) !== 0) {\n            pos++;\n\n            // 继续检查剩余字节\n            while (pos < len && (buf[pos] & 0x80) !== 0) {\n              pos++;\n\n              if (pos - this.pos >= 10) {\n                throw Error(\"invalid varint encoding\");\n              }\n            }\n\n            if (pos < len) {\n              this.pos = pos + 1;\n\n              return this;\n            }\n          }\n        }\n      }\n    }\n    \n    throw this.indexOutOfRange(this);\n  }\n\n  /**\n   * Skips the next element of the specified wire type.\n   * @param {number} wireType Wire type received\n   * @returns {Reader} `this`\n   */\n  skipType(wireType: number) {\n    switch (wireType) {\n      case 0:\n        this.skip();\n        break;\n      case 1:\n        this.skip(8);\n        break;\n      case 2:\n        this.skip(this.uint32());\n        break;\n      case 3:\n        while ((wireType = this.uint32() & 7) !== 4) {\n          this.skipType(wireType);\n        }\n        break;\n      case 5:\n        this.skip(4);\n        break;\n\n      /* istanbul ignore next */\n      default:\n        throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n\n    return this;\n  }\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Layout {\n  /**\n   * Decodes a Layout message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Layout\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Layout} Layout\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Rect {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new Layout();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, Layout.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: Layout): PlatformVideo.Rect {\n    const { x = 0, y = 0, width = 0, height = 0 } = message;\n\n    return { x, y, width, height };\n  }\n\n  /**\n   * Layout x.\n   * @member {number} x\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * Layout y.\n   * @member {number} y\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * Layout width.\n   * @member {number} width\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * Layout height.\n   * @member {number} height\n   * @memberof com.opensource.svga.Layout\n   * @instance\n   */\n  height: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class Transform {\n  /**\n   * Decodes a Transform message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.Transform\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.Transform} Transform\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Transform {\n    const end = reader.end(length);\n    const message = new Transform();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.a = reader.float();\n          break;\n        }\n        case 2: {\n          message.b = reader.float();\n          break;\n        }\n        case 3: {\n          message.c = reader.float();\n          break;\n        }\n        case 4: {\n          message.d = reader.float();\n          break;\n        }\n        case 5: {\n          message.tx = reader.float();\n          break;\n        }\n        case 6: {\n          message.ty = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * Transform a.\n   * @member {number} a\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  a: number = 0;\n  /**\n   * Transform b.\n   * @member {number} b\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * Transform c.\n   * @member {number} c\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  c: number = 0;\n  /**\n   * Transform d.\n   * @member {number} d\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  d: number = 0;\n  /**\n   * Transform tx.\n   * @member {number} tx\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  tx: number = 0;\n  /**\n   * Transform ty.\n   * @member {number} ty\n   * @memberof com.opensource.svga.Transform\n   * @instance\n   */\n  ty: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a ShapeArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IShapeArgs\n * @property {string|null} [d] ShapeArgs d\n */\nexport interface ShapeArgsProps {\n  d: string | null;\n}\n\nexport default class ShapeArgs {\n  /**\n   * Decodes a ShapeArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeArgs} ShapeArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.ShapePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.d = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * ShapeArgs d.\n   * @member {string} d\n   * @memberof com.opensource.svga.ShapeEntity.ShapeArgs\n   * @instance\n   */\n  d: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RectArgs.\n * @memberof com.opensource.svga.ShapeEntity\n * @interface IRectArgs\n * @property {number|null} [x] RectArgs x\n * @property {number|null} [y] RectArgs y\n * @property {number|null} [width] RectArgs width\n * @property {number|null} [height] RectArgs height\n * @property {number|null} [cornerRadius] RectArgs cornerRadius\n */\nexport interface RectArgsProps {\n  x: number | null;\n  y: number | null;\n  width: number | null;\n  height: number | null;\n  cornerRadius: number | null;\n}\n\nexport default class RectArgs {\n  /**\n   * Decodes a RectArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.RectArgs} RectArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RectPath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RectArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.width = reader.float();\n          break;\n        }\n        case 4: {\n          message.height = reader.float();\n          break;\n        }\n        case 5: {\n          message.cornerRadius = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * RectArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * RectArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * RectArgs width.\n   * @member {number} width\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  width: number = 0;\n  /**\n   * RectArgs height.\n   * @member {number} height\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  height: number = 0;\n  /**\n   * RectArgs cornerRadius.\n   * @member {number} cornerRadius\n   * @memberof com.opensource.svga.ShapeEntity.RectArgs\n   * @instance\n   */\n  cornerRadius: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class EllipseArgs {\n  /**\n   * Decodes an EllipseArgs message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.EllipseArgs} EllipseArgs\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.EllipsePath {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new EllipseArgs();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.x = reader.float();\n          break;\n        }\n        case 2: {\n          message.y = reader.float();\n          break;\n        }\n        case 3: {\n          message.radiusX = reader.float();\n          break;\n        }\n        case 4: {\n          message.radiusY = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, message);\n\n    return preflight.get(hash);\n  }\n\n  /**\n   * EllipseArgs x.\n   * @member {number} x\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  x: number = 0;\n  /**\n   * EllipseArgs y.\n   * @member {number} y\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  y: number = 0;\n  /**\n   * EllipseArgs radiusX.\n   * @member {number} radiusX\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusX: number = 0;\n  /**\n   * EllipseArgs radiusY.\n   * @member {number} radiusY\n   * @memberof com.opensource.svga.ShapeEntity.EllipseArgs\n   * @instance\n   */\n  radiusY: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\n/**\n * Properties of a RGBAColor.\n * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n * @interface IRGBAColor\n * @property {number|null} [r] RGBAColor r\n * @property {number|null} [g] RGBAColor g\n * @property {number|null} [b] RGBAColor b\n * @property {number|null} [a] RGBAColor a\n */\nexport interface RGBAColorProps {\n  r: number | null;\n  g: number | null;\n  b: number | null;\n  a: number | null;\n}\n\nexport default class RGBAColor {\n  /**\n   * Decodes a RGBAColor message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor} RGBAColor\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.RGBA<number, number, number, number> {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new RGBAColor();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.r = reader.float();\n          break;\n        }\n        case 2: {\n          message.g = reader.float();\n          break;\n        }\n        case 3: {\n          message.b = reader.float();\n          break;\n        }\n        case 4: {\n          message.a = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, RGBAColor.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(\n    message: RGBAColor\n  ): PlatformVideo.RGBA<number, number, number, number> {\n    const { r, g, b, a } = message;\n\n    return `rgba(${(r * 255) | 0}, ${(g * 255) | 0}, ${(b * 255) | 0}, ${\n      (a * 1) | 0\n    })`;\n  }\n\n  /**\n   * RGBAColor r.\n   * @member {number} r\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  r: number = 0;\n  /**\n   * RGBAColor g.\n   * @member {number} g\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  g: number = 0;\n  /**\n   * RGBAColor b.\n   * @member {number} b\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  b: number = 0;\n  /**\n   * RGBAColor a.\n   * @member {number} a\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle.RGBAColor\n   * @instance\n   */\n  a: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport RGBAColor from \"./RGBAColor\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeStyle {\n  /**\n   * Decodes a ShapeStyle message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity.ShapeStyle} ShapeStyle\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoStyles {\n    const { preflight } = reader;\n    const end = reader.end(length);\n    const hash = preflight.calculate(reader, end);\n\n    if (preflight.has(hash)) {\n      reader.pos = end;\n      return preflight.get(hash);\n    }\n\n    const message = new ShapeStyle();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.fill = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 2: {\n          message.stroke = RGBAColor.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 3: {\n          message.strokeWidth = reader.float();\n          break;\n        }\n        case 4: {\n          message.lineCap = reader.int32();\n          break;\n        }\n        case 5: {\n          message.lineJoin = reader.int32();\n          break;\n        }\n        case 6: {\n          message.miterLimit = reader.float();\n          break;\n        }\n        case 7: {\n          message.lineDashI = reader.float();\n          break;\n        }\n        case 8: {\n          message.lineDashII = reader.float();\n          break;\n        }\n        case 9: {\n          message.lineDashIII = reader.float();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    preflight.set(hash, ShapeStyle.format(message));\n\n    return preflight.get(hash);\n  }\n\n  static format(message: ShapeStyle): PlatformVideo.VideoStyles {\n    const { fill, stroke, strokeWidth, miterLimit, lineDashI, lineDashII, lineDashIII } = message;\n    const lineDash: number[] = [];\n    let lineCap: CanvasLineCap;\n    let lineJoin: CanvasLineJoin;\n\n    if (lineDashI > 0) {\n      lineDash.push(lineDashI);\n    }\n\n    if (lineDashII > 0) {\n      if (lineDash.length < 1) {\n        lineDash.push(0);\n      }\n\n      lineDash.push(lineDashII);\n    }\n\n    if (lineDashIII > 0) {\n      if (lineDash.length < 2) {\n        lineDash.push(0, 0);\n      }\n\n      lineDash.push(lineDashIII);\n    }\n\n    switch (message.lineCap) {\n      case PlatformVideo.LINE_CAP_CODE.BUTT:\n        lineCap = PlatformVideo.LINE_CAP.BUTT;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.ROUND:\n        lineCap = PlatformVideo.LINE_CAP.ROUND;\n        break;\n      case PlatformVideo.LINE_CAP_CODE.SQUARE:\n        lineCap = PlatformVideo.LINE_CAP.SQUARE;\n        break;\n    }\n\n    switch (message.lineJoin) {\n      case PlatformVideo.LINE_JOIN_CODE.MITER:\n        lineJoin = PlatformVideo.LINE_JOIN.MITER;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.ROUND:\n        lineJoin = PlatformVideo.LINE_JOIN.ROUND;\n        break;\n      case PlatformVideo.LINE_JOIN_CODE.BEVEL:\n        lineJoin = PlatformVideo.LINE_JOIN.BEVEL;\n        break;\n    }\n\n    return {\n      lineDash,\n      fill: fill ? fill : null,\n      stroke: stroke ? stroke : null,\n      lineCap,\n      lineJoin,\n      strokeWidth,\n      miterLimit\n    }\n  }\n\n  /**\n   * ShapeStyle fill.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} fill\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  fill: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle stroke.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.IRGBAColor|null|undefined} stroke\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  stroke: PlatformVideo.RGBA<number, number, number, number> | null = null;\n  /**\n   * ShapeStyle strokeWidth.\n   * @member {number} strokeWidth\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  strokeWidth: number = 0;\n  /**\n   * ShapeStyle lineCap.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineCap} lineCap\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineCap: PlatformVideo.LINE_CAP_CODE = 0;\n  /**\n   * ShapeStyle lineJoin.\n   * @member {com.opensource.svga.ShapeEntity.ShapeStyle.LineJoin} lineJoin\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineJoin: PlatformVideo.LINE_JOIN_CODE = 0;\n  /**\n   * ShapeStyle miterLimit.\n   * @member {number} miterLimit\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  miterLimit: number = 0;\n  /**\n   * ShapeStyle lineDashI.\n   * @member {number} lineDashI\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashI: number = 0;\n  /**\n   * ShapeStyle lineDashII.\n   * @member {number} lineDashII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashII: number = 0;\n  /**\n   * ShapeStyle lineDashIII.\n   * @member {number} lineDashIII\n   * @memberof com.opensource.svga.ShapeEntity.ShapeStyle\n   * @instance\n   */\n  lineDashIII: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport Transform from \"./Transform\";\nimport ShapeArgs from \"./ShapeArgs\";\nimport RectArgs from \"./RectArgs\";\nimport EllipseArgs from \"./EllipseArgs\";\nimport ShapeStyle from \"./ShapeStyle\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class ShapeEntity {\n  /**\n   * Decodes a ShapeEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.ShapeEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.ShapeEntity} ShapeEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrameShape | null {\n    const end = reader.end(length);\n    const message = new ShapeEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.type = reader.int32();\n          break;\n        }\n        case 2: {\n          message.shape = ShapeArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.rect = RectArgs.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.ellipse = EllipseArgs.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 10: {\n          message.styles = ShapeStyle.decode(\n            reader,\n            reader.uint32()\n          );\n          break;\n        }\n        case 11: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return ShapeEntity.format(message);\n  }\n\n  static format(message: ShapeEntity): PlatformVideo.VideoFrameShape | null {\n    const { type, shape, rect, ellipse, styles, transform } = message;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE_CODE.SHAPE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.SHAPE,\n          path: shape!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.RECT:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.RECT,\n          path: rect!,\n          styles: styles!,\n          transform: transform!,\n        };\n      case PlatformVideo.SHAPE_TYPE_CODE.ELLIPSE:\n        return {\n          type: PlatformVideo.SHAPE_TYPE.ELLIPSE,\n          path: ellipse!,\n          styles: styles!,\n          transform: transform!,\n        };\n      default:\n    }\n\n    return null;\n  }\n\n  /**\n   * ShapeEntity type.\n   * @member {com.opensource.svga.ShapeEntity.ShapeType} type\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  type: PlatformVideo.SHAPE_TYPE_CODE = 0;\n  /**\n   * ShapeEntity shape.\n   * @member {com.opensource.svga.ShapeEntity.IShapeArgs|null|undefined} shape\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  shape: PlatformVideo.ShapePath | null = null;\n  /**\n   * ShapeEntity rect.\n   * @member {com.opensource.svga.ShapeEntity.IRectArgs|null|undefined} rect\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  rect: PlatformVideo.RectPath | null = null;\n  /**\n   * ShapeEntity ellipse.\n   * @member {com.opensource.svga.ShapeEntity.IEllipseArgs|null|undefined} ellipse\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  ellipse: PlatformVideo.EllipsePath | null = null;\n  /**\n   * ShapeEntity styles.\n   * @member {com.opensource.svga.ShapeEntity.IShapeStyle|null|undefined} styles\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  styles: PlatformVideo.VideoStyles | null = null;\n  /**\n   * ShapeEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.ShapeEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n}\n","import Reader from \"../io/Reader\";\nimport Layout from \"./Layout\";\nimport Transform from \"./Transform\";\nimport ShapeEntity from \"./ShapeEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class FrameEntity {\n  private static HIDDEN_FRAME: PlatformVideo.HiddenVideoFrame = {\n    alpha: 0,\n  };\n\n  /**\n   * Decodes a FrameEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.FrameEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.FrameEntity} FrameEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    const end = reader.end(length);\n    const message = new FrameEntity();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.alpha = reader.float();\n          break;\n        }\n        case 2: {\n          message.layout = Layout.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          message.transform = Transform.decode(reader, reader.uint32());\n          break;\n        }\n        case 4: {\n          message.clipPath = reader.string();\n          break;\n        }\n        case 5: {\n          const shape = ShapeEntity.decode(reader, reader.uint32())\n\n          if (shape !== null) {\n            message.shapes.push(shape);\n          }\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    if (message.shapes.length === 0) {\n      message.shapes = reader.preflight.get(\"latest_shapes\");\n    } else {\n      reader.preflight.set(\"latest_shapes\", message.shapes);\n    }\n\n    return FrameEntity.format(message);\n  }\n\n  private static format(message: FrameEntity): PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame {\n    // alpha值小于 0.05 将不展示，所以不做解析处理\n    if (message.alpha < 0.05) {\n      return FrameEntity.HIDDEN_FRAME;\n    }\n\n    const { alpha, layout, transform, shapes } = message;\n\n    return {\n      alpha,\n      layout: layout!,\n      transform,\n      shapes,\n    };\n  }\n\n  /**\n   * FrameEntity shapes.\n   * @member {Array.<com.opensource.svga.IShapeEntity>} shapes\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  shapes: PlatformVideo.VideoFrameShape[] = [];\n  /**\n   * FrameEntity alpha.\n   * @member {number} alpha\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  alpha: number = 0;\n  /**\n   * FrameEntity layout.\n   * @member {com.opensource.svga.ILayout|null|undefined} layout\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  layout: PlatformVideo.Rect | null = null;\n  /**\n   * FrameEntity transform.\n   * @member {com.opensource.svga.ITransform|null|undefined} transform\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  transform: PlatformVideo.Transform | null = null;\n  /**\n   * FrameEntity clipPath.\n   * @member {string} clipPath\n   * @memberof com.opensource.svga.FrameEntity\n   * @instance\n   */\n  clipPath: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport FrameEntity from \"./FrameEntity\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class SpriteEntity {\n  /**\n   * Decodes a SpriteEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.SpriteEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.SpriteEntity} SpriteEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoSprite {\n    const end = reader.end(length);\n    const message = new SpriteEntity();\n    let tag: number;\n\n    reader.preflight.set(\"latest_shapes\", []);\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.imageKey = reader.string();\n          break;\n        }\n        case 2: {\n          if (!(message.frames && message.frames.length)) {\n            message.frames = [];\n          }\n\n          message.frames.push(FrameEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        case 3: {\n          message.matteKey = reader.string();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return SpriteEntity.format(message);\n  }\n\n  static format(message: SpriteEntity): PlatformVideo.VideoSprite {\n    return {\n      imageKey: message.imageKey,\n      frames: message.frames,\n    };\n  }\n\n  /**\n   * SpriteEntity frames.\n   * @member {Array.<com.opensource.svga.IFrameEntity>} frames\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  frames: Array<PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame> = [];\n  /**\n   * SpriteEntity imageKey.\n   * @member {string} imageKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  imageKey: string = \"\";\n  /**\n   * SpriteEntity matteKey.\n   * @member {string} matteKey\n   * @memberof com.opensource.svga.SpriteEntity\n   * @instance\n   */\n  matteKey: string = \"\";\n}\n","import Reader from \"../io/Reader\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieParams {\n  /**\n   * Decodes a MovieParams message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieParams\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieParams} MovieParams\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.VideoParams {\n    const end = reader.end(length);\n    const message = new MovieParams();\n    let tag: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.viewBoxWidth = reader.float();\n          break;\n        }\n        case 2: {\n          message.viewBoxHeight = reader.float();\n          break;\n        }\n        case 3: {\n          message.fps = reader.int32();\n          break;\n        }\n        case 4: {\n          message.frames = reader.int32();\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  }\n\n  /**\n   * MovieParams viewBoxWidth.\n   * @member {number} viewBoxWidth\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxWidth: number = 0;\n  /**\n   * MovieParams viewBoxHeight.\n   * @member {number} viewBoxHeight\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  viewBoxHeight: number = 0;\n  /**\n   * MovieParams fps.\n   * @member {number} fps\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  fps: number = 0;\n  /**\n   * MovieParams frames.\n   * @member {number} frames\n   * @memberof com.opensource.svga.MovieParams\n   * @instance\n   */\n  frames: number = 0;\n}\n","import Reader from \"../io/Reader\";\nimport SpriteEntity from \"./SpriteEntity\";\nimport MovieParams from \"./MovieParams\";\nimport { PlatformVideo } from \"../../../types/video\";\n\nexport default class MovieEntity {\n  static EMPTY_U8 = new Uint8Array(0);\n  /**\n   * Decodes a MovieEntity message from the specified reader.\n   * @function decode\n   * @memberof com.opensource.svga.MovieEntity\n   * @static\n   * @param {$protobuf.Reader} reader Reader to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {com.opensource.svga.MovieEntity} MovieEntity\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  static decode(reader: Reader, length?: number): PlatformVideo.Video {\n    const end = reader.end(length);\n    const message = new MovieEntity();\n    let key: string;\n    let value: Uint8Array;\n    let end2: number;\n    let tag: number;\n    let tag2: number;\n\n    while (reader.pos < end) {\n      tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1: {\n          message.version = reader.string();\n          break;\n        }\n        case 2: {\n          message.params = MovieParams.decode(reader, reader.uint32());\n          break;\n        }\n        case 3: {\n          end2 = reader.uint32() + reader.pos;\n          key = \"\";\n          value = MovieEntity.EMPTY_U8;\n\n          while (reader.pos < end2) {\n            tag2 = reader.uint32();\n            switch (tag2 >>> 3) {\n              case 1:\n                key = reader.string();\n                break;\n              case 2:\n                value = reader.bytes();\n                break;\n              default:\n                reader.skipType(tag2 & 7);\n                break;\n            }\n          }\n\n          message.images[key] = value;\n          break;\n        }\n        case 4: {\n          message.sprites.push(SpriteEntity.decode(reader, reader.uint32()));\n          break;\n        }\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return MovieEntity.format(message);\n  }\n\n  static format(message: MovieEntity): PlatformVideo.Video {\n    const { version, images, sprites } = message;\n    const { fps, frames, viewBoxWidth, viewBoxHeight } = message.params!;\n\n    return {\n      version,\n      filename: \"\",\n      locked: false,\n      dynamicElements: {},\n      size: {\n        width: viewBoxWidth,\n        height: viewBoxHeight,\n      },\n      fps,\n      frames,\n      images,\n      sprites,\n    };\n  }\n\n  /**\n   * MovieEntity version.\n   * @member {string} version\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  version: string = \"\";\n  /**\n   * MovieEntity params.\n   * @member {com.opensource.svga.IMovieParams|null|undefined} params\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  params: MovieParams | null = null;\n  /**\n   * MovieEntity images.\n   * @member {Object.<string,Uint8Array>} images\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  images: Record<string, Uint8Array> = {};\n  /**\n   * MovieEntity sprites.\n   * @member {Array.<com.opensource.svga.ISpriteEntity>} sprites\n   * @memberof com.opensource.svga.MovieEntity\n   * @instance\n   */\n  sprites: PlatformVideo.VideoSprite[] = [];\n}\n","export interface CurrentPoint {\n  x: number;\n  y: number;\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n}\n\n/**\n * CurrentPoint对象池，用于减少对象创建和GC压力\n */\nexport class PointPool {\n  private pool: CurrentPoint[] = [];\n\n  public acquire(): CurrentPoint {\n    const { pool } = this;\n\n    return pool.length > 0\n      ? pool.pop()!\n      : { x: 0, y: 0, x1: 0, y1: 0, x2: 0, y2: 0 };\n  }\n\n  public release(point: CurrentPoint): void {\n    // 重置点的属性\n    point.x = point.y = point.x1 = point.y1 = point.x2 = point.y2 = 0;\n    this.pool.push(point);\n  }\n}\n","import { type Bitmap } from \"octopus-platform\";\nimport { PointPool, CurrentPoint } from \"../../../shared/PointPool\";\nimport {\n  PlatformVideo,\n  type TransformScale,\n  type PlatformRenderingContext2D,\n  type CanvasSize,\n  PLAYER_CONTENT_MODE\n} from \"../../../types\";\n\nexport interface ICommand {\n  command: string;\n  args: string;\n}\n\nexport class Renderer2D {\n  /**\n   * https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial/Paths\n   * 绘制路径的不同指令：\n   * * 直线命令\n   * - M: moveTo，移动到指定点，不绘制直线。\n   * - L: lineTo，从起始点绘制一条直线到指定点。\n   * - H: horizontal lineTo，从起始点绘制一条水平线到指定点。\n   * - V: vertical lineTo，从起始点绘制一条垂直线到指定点。\n   * - Z: closePath，从起始点绘制一条直线到路径起点，形成一个闭合路径。\n   * * 曲线命令\n   * - C: bezierCurveTo，绘制三次贝塞尔曲线。\n   * - S: smooth curveTo，绘制平滑三次贝塞尔曲线。\n   * - Q: quadraticCurveTo，绘制两次贝塞尔曲线。\n   * - T: smooth quadraticCurveTo，绘制平滑两次贝塞尔曲线。\n   * * 弧线命令\n   * - A: arcTo，从起始点绘制一条弧线到指定点。\n   */\n  private static SVG_PATH = new Set([\n    \"M\",\n    \"L\",\n    \"H\",\n    \"V\",\n    \"Z\",\n    \"C\",\n    \"S\",\n    \"Q\",\n    \"m\",\n    \"l\",\n    \"h\",\n    \"v\",\n    \"z\",\n    \"c\",\n    \"s\",\n    \"q\",\n  ]);\n\n  private static SVG_LETTER_REGEXP = /[a-zA-Z]/;\n\n  // 在Renderer2D类中添加新的解析方法\n  private static parseSVGPath(d: string): ICommand[] {\n    const { SVG_LETTER_REGEXP } = Renderer2D;\n    const result: ICommand[] = [];\n    let currentIndex = 0;\n\n    // 状态：0 - 等待命令，1 - 读取参数\n    let state = 0;\n    let currentCommand = \"\";\n    let currentArgs = \"\";\n\n    while (currentIndex < d.length) {\n      const char = d[currentIndex];\n\n      switch (state) {\n        case 0: // 等待命令\n          if (SVG_LETTER_REGEXP.test(char)) {\n            currentCommand = char;\n            state = 1;\n          }\n          break;\n        case 1: // 读取参数\n          if (SVG_LETTER_REGEXP.test(char)) {\n            // 遇到新命令，保存当前命令和参数\n            result.push({\n              command: currentCommand,\n              args: currentArgs.trim(),\n            });\n            currentCommand = char;\n            currentArgs = \"\";\n          } else {\n            currentArgs += char;\n          }\n          break;\n      }\n\n      currentIndex++;\n    }\n\n    // 处理最后一个命令\n    if (currentCommand && state === 1) {\n      result.push({\n        command: currentCommand,\n        args: currentArgs.trim(),\n      });\n    }\n\n    return result;\n  }\n\n  private static fillOrStroke(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      if (styles.fill) {\n        context.fill();\n      }\n\n      if (styles.stroke) {\n        context.stroke();\n      }\n    }\n  }\n\n  private static resetShapeStyles(\n    context: PlatformRenderingContext2D,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    if (styles) {\n      context.strokeStyle = styles.stroke || \"transparent\";\n\n      if (styles.strokeWidth! > 0) {\n        context.lineWidth = styles.strokeWidth!;\n      }\n\n      if (styles.miterLimit! > 0) {\n        context.miterLimit = styles.miterLimit!;\n      }\n\n      if (styles.lineCap) {\n        context.lineCap = styles.lineCap;\n      }\n\n      if (styles.lineJoin) {\n        context.lineJoin = styles.lineJoin;\n      }\n\n      context.fillStyle = styles.fill || \"transparent\";\n\n      if (styles.lineDash) {\n        context.setLineDash(styles.lineDash);\n      }\n    }\n  }\n\n  /**\n   * 计算缩放比例\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  private static calculateScale(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): TransformScale {\n    const imageRatio = videoSize.width / videoSize.height;\n    const viewRatio = canvasSize.width / canvasSize.height;\n    const isAspectFit = contentMode === PLAYER_CONTENT_MODE.ASPECT_FIT;\n    const shouldUseWidth =\n      (imageRatio >= viewRatio && isAspectFit) ||\n      (imageRatio <= viewRatio && !isAspectFit);\n    const createTransform = (\n      scale: number,\n      translateX: number,\n      translateY: number\n    ) => ({\n      scaleX: scale,\n      scaleY: scale,\n      translateX,\n      translateY,\n    });\n\n    if (shouldUseWidth) {\n      const scale = canvasSize.width / videoSize.width;\n\n      return createTransform(\n        scale,\n        0,\n        (canvasSize.height - videoSize.height * scale) / 2\n      );\n    }\n\n    const scale = canvasSize.height / videoSize.height;\n\n    return createTransform(\n      scale,\n      (canvasSize.width - videoSize.width * scale) / 2,\n      0\n    );\n  }\n\n  private readonly pointPool: PointPool = new PointPool();\n\n  private currentPoint: CurrentPoint;\n\n  private lastResizeKey = \"\";\n\n  private globalTransform?: PlatformVideo.Transform = undefined;\n\n  constructor(private context: PlatformRenderingContext2D | null) {\n    this.currentPoint = this.pointPool.acquire();\n  }\n\n  private setTransform(transform?: PlatformVideo.Transform): void {\n    if (transform && this.context) {\n      this.context!.transform(\n        transform.a,\n        transform.b,\n        transform.c,\n        transform.d,\n        transform.tx,\n        transform.ty\n      );\n    }\n  }\n\n  private drawBezier(\n    d?: string,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context, pointPool } = this;\n    this.currentPoint = pointPool.acquire();\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n    context!.beginPath();\n\n    if (d) {\n      // 使用状态机解析器替代正则表达式\n      const commands = Renderer2D.parseSVGPath(d);\n\n      for (const { command, args } of commands) {\n        if (Renderer2D.SVG_PATH.has(command)) {\n          this.drawBezierElement(\n            this.currentPoint,\n            command,\n            args.split(/[\\s,]+/).filter(Boolean)\n          );\n        }\n      }\n    }\n\n    Renderer2D.fillOrStroke(context!, styles);\n    pointPool.release(this.currentPoint);\n    context!.restore();\n  }\n\n  private drawBezierElement(\n    currentPoint: CurrentPoint,\n    method: string,\n    args: string[]\n  ): void {\n    const { context } = this;\n\n    switch (method) {\n      case \"M\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"m\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.moveTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"L\":\n        currentPoint.x = +args[0];\n        currentPoint.y = +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"l\":\n        currentPoint.x += +args[0];\n        currentPoint.y += +args[1];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"H\":\n        currentPoint.x = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"h\":\n        currentPoint.x += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"V\":\n        currentPoint.y = +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"v\":\n        currentPoint.y += +args[0];\n        context!.lineTo(currentPoint.x, currentPoint.y);\n        break;\n      case \"C\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x2 = +args[2];\n        currentPoint.y2 = +args[3];\n        currentPoint.x = +args[4];\n        currentPoint.y = +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"c\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x2 = currentPoint.x + +args[2];\n        currentPoint.y2 = currentPoint.y + +args[3];\n        currentPoint.x += +args[4];\n        currentPoint.y += +args[5];\n        context!.bezierCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x2,\n          currentPoint.y2,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"S\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = +args[0];\n          currentPoint.y2 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = +args[0];\n          currentPoint.y1 = +args[1];\n          currentPoint.x = +args[2];\n          currentPoint.y = +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"s\":\n        if (\n          currentPoint.x1 !== undefined &&\n          currentPoint.y1 !== undefined &&\n          currentPoint.x2 !== undefined &&\n          currentPoint.y2 !== undefined\n        ) {\n          currentPoint.x1 = currentPoint.x - currentPoint.x2 + currentPoint.x;\n          currentPoint.y1 = currentPoint.y - currentPoint.y2 + currentPoint.y;\n          currentPoint.x2 = currentPoint.x + +args[0];\n          currentPoint.y2 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.bezierCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x2,\n            currentPoint.y2,\n            currentPoint.x,\n            currentPoint.y\n          );\n        } else {\n          currentPoint.x1 = currentPoint.x + +args[0];\n          currentPoint.y1 = currentPoint.y + +args[1];\n          currentPoint.x += +args[2];\n          currentPoint.y += +args[3];\n          context!.quadraticCurveTo(\n            currentPoint.x1,\n            currentPoint.y1,\n            currentPoint.x,\n            currentPoint.y\n          );\n        }\n        break;\n      case \"Q\":\n        currentPoint.x1 = +args[0];\n        currentPoint.y1 = +args[1];\n        currentPoint.x = +args[2];\n        currentPoint.y = +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"q\":\n        currentPoint.x1 = currentPoint.x + +args[0];\n        currentPoint.y1 = currentPoint.y + +args[1];\n        currentPoint.x += +args[2];\n        currentPoint.y += +args[3];\n        context!.quadraticCurveTo(\n          currentPoint.x1,\n          currentPoint.y1,\n          currentPoint.x,\n          currentPoint.y\n        );\n        break;\n      case \"Z\":\n      case \"z\":\n        context!.closePath();\n        break;\n    }\n  }\n\n  private drawEllipse(\n    x: number,\n    y: number,\n    radiusX: number,\n    radiusY: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    x -= radiusX;\n    y -= radiusY;\n\n    const w = radiusX * 2;\n    const h = radiusY * 2;\n    const kappa = 0.5522848;\n    const ox = (w / 2) * kappa;\n    const oy = (h / 2) * kappa;\n    const xe = x + w;\n    const ye = y + h;\n    const xm = x + w / 2;\n    const ym = y + h / 2;\n\n    context!.beginPath();\n    context!.moveTo(x, ym);\n    context!.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n    context!.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n    context!.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n    context!.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawRect(\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    cornerRadius: number,\n    transform?: PlatformVideo.Transform,\n    styles?: PlatformVideo.VideoStyles\n  ): void {\n    const { context } = this;\n\n    context!.save();\n    Renderer2D.resetShapeStyles(context!, styles);\n    this.setTransform(transform);\n\n    let radius = cornerRadius;\n\n    if (width < 2 * radius) {\n      radius = width / 2;\n    }\n\n    if (height < 2 * radius) {\n      radius = height / 2;\n    }\n\n    context!.beginPath();\n    context!.moveTo(x + radius, y);\n    context!.arcTo(x + width, y, x + width, y + height, radius);\n    context!.arcTo(x + width, y + height, x, y + height, radius);\n    context!.arcTo(x, y + height, x, y, radius);\n    context!.arcTo(x, y, x + width, y, radius);\n    context!.closePath();\n\n    Renderer2D.fillOrStroke(context!, styles);\n    context!.restore();\n  }\n\n  private drawShape(shape: PlatformVideo.VideoFrameShape): void {\n    const { type, path, transform, styles } = shape;\n\n    switch (type) {\n      case PlatformVideo.SHAPE_TYPE.SHAPE:\n        this.drawBezier(path.d, transform, styles);\n        break;\n      case PlatformVideo.SHAPE_TYPE.ELLIPSE:\n        this.drawEllipse(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.radiusX ?? 0,\n          path.radiusY ?? 0,\n          transform,\n          styles\n        );\n        break;\n      case PlatformVideo.SHAPE_TYPE.RECT:\n        this.drawRect(\n          path.x ?? 0,\n          path.y ?? 0,\n          path.width ?? 0,\n          path.height ?? 0,\n          path.cornerRadius ?? 0,\n          transform,\n          styles\n        );\n        break;\n    }\n  }\n\n  private drawSprite(\n    frame: PlatformVideo.VideoFrame | PlatformVideo.HiddenVideoFrame,\n    bitmap?: Bitmap,\n    dynamicElement?: Bitmap\n  ): void {\n    if (frame.alpha === 0) return;\n\n    const { context } = this;\n    const { alpha, transform, layout, shapes } =\n      frame as PlatformVideo.VideoFrame;\n    const { a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0 } = transform ?? {};\n\n    context!.save();\n    this.setTransform(this.globalTransform);\n    context!.globalAlpha = alpha;\n    context!.transform(a, b, c, d, tx, ty);\n\n    if (bitmap) {\n      context!.drawImage(\n        bitmap as CanvasImageSource,\n        0,\n        0,\n        layout.width,\n        layout.height\n      );\n    }\n\n    if (dynamicElement) {\n      context!.drawImage(\n        dynamicElement as CanvasImageSource,\n        (layout.width - dynamicElement.width) / 2,\n        (layout.height - dynamicElement.height) / 2\n      );\n    }\n\n    for (let i = 0; i < shapes.length; i++) {\n      this.drawShape(shapes[i]);\n    }\n\n    context!.restore();\n  }\n\n  /**\n   * 调整画布尺寸\n   * @param contentMode\n   * @param videoSize\n   * @param canvasSize\n   * @returns\n   */\n  public resize(\n    contentMode: PLAYER_CONTENT_MODE,\n    videoSize: PlatformVideo.VideoSize,\n    canvasSize: CanvasSize\n  ): void {\n    const { width: canvasWidth, height: canvasHeight } = canvasSize;\n    const { width: videoWidth, height: videoHeight } = videoSize;\n    const resizeKey = `${contentMode}-${videoWidth}-${videoHeight}-${canvasWidth}-${canvasHeight}`;\n    const lastTransform = this.globalTransform;\n\n    if (this.lastResizeKey === resizeKey && lastTransform) {\n      return;\n    }\n\n    let scale: TransformScale = {\n      scaleX: 1,\n      scaleY: 1,\n      translateX: 0,\n      translateY: 0,\n    };\n\n    if (contentMode === PLAYER_CONTENT_MODE.FILL) {\n      scale.scaleX = canvasWidth / videoWidth;\n      scale.scaleY = canvasHeight / videoHeight;\n    } else {\n      scale = Renderer2D.calculateScale(contentMode, videoSize, canvasSize);\n    }\n\n    this.lastResizeKey = resizeKey;\n    this.globalTransform = {\n      a: scale.scaleX,\n      b: 0.0,\n      c: 0.0,\n      d: scale.scaleY,\n      tx: scale.translateX,\n      ty: scale.translateY,\n    };\n  }\n\n  public render(\n    videoEntity: PlatformVideo.Video,\n    materials: Map<string, Bitmap>,\n    dynamicMaterials: Map<string, Bitmap>,\n    currentFrame: number,\n    head: number,\n    tail: number\n  ): void {\n    let sprite: PlatformVideo.VideoSprite;\n    let imageKey: string;\n    let bitmap: Bitmap | undefined;\n    let dynamicElement: Bitmap | undefined;\n\n    for (let i = head; i < tail; i++) {\n      sprite = videoEntity.sprites[i];\n      imageKey = sprite.imageKey;\n      bitmap = materials.get(imageKey);\n      dynamicElement = dynamicMaterials.get(imageKey);\n\n      this.drawSprite(sprite.frames[currentFrame], bitmap, dynamicElement);\n    }\n  }\n\n  public destroy() {\n    this.globalTransform = undefined;\n    this.lastResizeKey = \"\";\n    this.context = null;\n  }\n}\n","import { platform } from \"../../platform\";\n\n/**\n * 动画控制器\n */\nexport class Animator {\n  /**\n   * 动画是否执行\n   */\n  private isRunning = false;\n  /**\n   * 动画开始时间\n   */\n  private startTime = 0;\n  /**\n   * 动画持续时间\n   */\n  private duration: number = 0;\n  /**\n   * 循环播放开始帧与动画开始帧之间的时间偏差\n   */\n  private loopStart: number = 0;\n  /**\n   * 动画暂停时的时间偏差\n   */\n  private pauseTime: number = 0;\n  /**\n   * 循环持续时间\n   */\n  private loopDuration: number = 0;\n\n  public onAnimate: (callback: () => void) => number = platform.noop<number>;\n\n  /* ---- 事件钩子 ---- */\n  public onStart: () => void = platform.noop;\n  public onUpdate: (timePercent: number) => void = platform.noop;\n  public onEnd: () => void = platform.noop;\n\n  /**\n   * 设置动画的必要参数\n   * @param duration\n   * @param loopStart\n   * @param loop\n   * @param fillValue\n   */\n  public setConfig(\n    duration: number,\n    loopStart: number,\n    loop: number,\n    fillValue: number\n  ) {\n    this.duration = duration;\n    this.loopStart = loopStart;\n    this.loopDuration = duration * loop + fillValue - loopStart;\n  }\n\n  public start(): void {\n    this.isRunning = true;\n    this.startTime = platform.now();\n    this.pauseTime = 0;\n    this.onStart();\n    this.doFrame();\n  }\n\n  public resume(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = true;\n    this.doFrame();\n    return true;\n  }\n\n  public pause(): boolean {\n    if (this.startTime === 0) {\n      return false;\n    }\n\n    this.isRunning = false;\n    // 设置暂停的位置\n    this.pauseTime =\n      (platform.now() - this.startTime) % this.duration;\n    return true;\n  }\n\n  public stop(): void {\n    this.isRunning = false;\n    this.startTime = 0;\n  }\n\n  private doFrame(): void {\n    if (this.isRunning) {\n      this.doDeltaTime(platform.now() - this.startTime);\n      if (this.isRunning) {\n        this.onAnimate(() => this.doFrame());\n      }\n    }\n  }\n\n  private doDeltaTime(deltaTime: number): void {\n    const { duration, loopStart, pauseTime, loopDuration } = this;\n    // 本轮动画已消耗的时间比例（Percentage of speed time）\n    let percent: number;\n    let ended = false;\n\n    // 运行时间 大于等于 循环持续时间\n    if (deltaTime >= loopDuration) {\n      // 动画已结束\n      percent = 1.0;\n      ended = true;\n      this.stop();\n    } else {\n      // 本轮动画已消耗的时间比例 = 本轮动画已消耗的时间 / 动画持续时间\n      percent = ((deltaTime + loopStart + pauseTime) % duration) / duration;\n    }\n\n    this.onUpdate(percent);\n    if (!this.isRunning && ended) {\n      this.onEnd();\n    }\n  }\n}\n","// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\n\n// aliases for shorter compressed code (most minifers don't do this)\nconst u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n\n// fixed length extra bits\nconst fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n\n// fixed distance extra bits\nconst fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n\n// code length index map\nconst clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\n// get base, reverse index map from extra bits\nconst freb = (eb: Uint8Array, start: number) => {\n  const b = new u16(31);\n  for (let i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  }\n  // numbers here are at max 18 bits\n  const r = new i32(b[30]);\n  for (let i = 1; i < 30; ++i) {\n    for (let j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = ((j - b[i]) << 5) | i;\n    }\n  }\n  return { b, r };\n}\n\nconst { b: fl, r: revfl } = freb(fleb, 2);\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nconst { b: fd, r: revfd } = freb(fdeb, 0);\n\n// map of value to reverse (assuming 16 bits)\nconst rev = new u16(32768);\nfor (let i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  let x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n  x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n  x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n  rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nconst hMap = ((cd: Uint8Array, mb: number, r: 0 | 1) => {\n  const s = cd.length;\n  // index\n  let i = 0;\n  // u16 \"map\": index -> # of codes with bit length = index\n  const l = new u16(mb);\n  // length of cd must be 288 (total # of codes)\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  }\n  // u16 \"map\": index -> minimum code for bit length = index\n  const le = new u16(mb);\n  for (i = 1; i < mb; ++i) {\n    le[i] = (le[i - 1] + l[i - 1]) << 1;\n  }\n  let co: Uint16Array;\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb);\n    // bits to remove for reverser\n    const rvb = 15 - mb;\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        const sv = (i << 4) | cd[i];\n        // free bits\n        const r = mb - cd[i];\n        // start value\n        let v = le[cd[i] - 1]++ << r;\n        // m is end value\n        for (const m = v | ((1 << r) - 1); v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n      }\n    }\n  }\n  return co;\n});\n\n// fixed length tree\nconst flt = new u8(288);\nfor (let i = 0; i < 144; ++i) flt[i] = 8;\nfor (let i = 144; i < 256; ++i) flt[i] = 9;\nfor (let i = 256; i < 280; ++i) flt[i] = 7;\nfor (let i = 280; i < 288; ++i) flt[i] = 8;\n// fixed distance tree\nconst fdt = new u8(32);\nfor (let i = 0; i < 32; ++i) fdt[i] = 5;\n// fixed length map\nconst flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nconst fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n\n// find max of array\nconst max = (a: Uint8Array | number[]) => {\n  let m = a[0];\n  for (let i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n  return m;\n};\n\n// read d, starting at bit p and mask with m\nconst bits = (d: Uint8Array, p: number, m: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n}\n\n// read d, starting at bit p continuing for at least 16 bits\nconst bits16 = (d: Uint8Array, p: number) => {\n  const o = (p / 8) | 0;\n  return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n}\n\n// get end of byte\nconst shft = (p: number) => ((p + 7) / 8) | 0;\n\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nconst slc = (v: Uint8Array, s: number, e?: number) => {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length;\n  // can't use .constructor in case user-supplied\n  return new u8(v.subarray(s, e));\n}\n\n// inflate state\ntype InflateState = {\n  // lmap\n  l?: Uint16Array;\n  // dmap\n  d?: Uint16Array;\n  // lbits\n  m?: number;\n  // dbits\n  n?: number;\n  // final\n  f?: number;\n  // pos\n  p?: number;\n  // byte\n  b?: number;\n  // lstchk\n  i: number;\n};\n\n// error codes\nconst ec = [\n  'unexpected EOF',\n  'invalid block type',\n  'invalid length/literal',\n  'invalid distance',\n  'stream finished',\n  'no stream handler',\n  , // determined by compression function\n  'no callback',\n  'invalid UTF-8 data',\n  'extra field too long',\n  'date not in range 1980-2099',\n  'filename too long',\n  'stream finishing',\n  'invalid zip data'\n  // determined by unknown compression method\n];\n\n/**\n * An error generated within this library\n */\nexport interface FlateError extends Error {\n  /**\n   * The code associated with this error\n   */\n  code: number;\n};\n\nconst err = (ind: number, msg?: string | 0, nt?: 1) => {\n  const e: Partial<FlateError> = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e as FlateError;\n}\n\n// expands raw DEFLATE data\nconst inflt = (dat: Uint8Array, st: InflateState, buf?: Uint8Array, dict?: Uint8Array) => {\n  // source length       dict length\n  const sl = dat.length, dl = dict ? dict.length : 0;\n  if (!sl || st.f && !st.l) return buf || new u8(0);\n  const noBuf = !buf;\n  // have to estimate size\n  const resize = noBuf || st.i != 2;\n  // no state\n  const noSt = st.i;\n  // Assumes roughly 33% compression ratio average\n  if (noBuf) buf = new u8(sl * 3);\n  // ensure buffer can fit at least l elements\n  const cbuf = (l: number) => {\n    let bl = buf!.length;\n    // need to increase size to fit\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      const nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf!);\n      buf = nbuf;\n    }\n  };\n  //  last chunk         bitpos           bytes\n  let final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n  // total bits\n  const tbts = sl * 8;\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1);\n      // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n      const type = bits(dat, pos + 1, 3);\n      pos += 3;\n      if (!type) {\n        // go to end of byte boundary\n        const s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        }\n        // ensure size\n        if (resize) cbuf(bt + l);\n        // Copy over uncompressed data\n        buf!.set(dat.subarray(s, t), bt);\n        // Get new bitpos, update byte count\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      }\n      else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n      else if (type == 2) {\n        //  literal                            lengths\n        const hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n        const tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14;\n        // length+distance tree\n        const ldt = new u8(tl);\n        // code length tree\n        const clt = new u8(19);\n        for (let i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n        pos += hcLen * 3;\n        // code lengths bits\n        const clb = max(clt), clbmsk = (1 << clb) - 1;\n        // code lengths map\n        const clm = hMap(clt, clb, 1);\n        for (let i = 0; i < tl;) {\n          const r = clm[bits(dat, pos, clbmsk)];\n          // bits read\n          pos += r & 15;\n          // symbol\n          const s = r >> 4;\n          // code length to copy\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            let c = 0, n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n            else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;\n            else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n            while (n--) ldt[i++] = c;\n          }\n        }\n        //    length tree                 distance tree\n        const lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n        // max length bits\n        lbt = max(lt)\n        // max dist bits\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    }\n    // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17\n    if (resize) cbuf(bt + 131072);\n    const lms = (1 << lbt!) - 1, dms = (1 << dbt!) - 1;\n    let lpos = pos;\n    for (;; lpos = pos) {\n      // bits read, code\n      const c = lm![bits16(dat, pos) & lms], sym = c >> 4;\n      pos += c & 15;\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n      if (!c) err(2);\n      if (sym < 256) buf![bt++] = sym;\n      else if (sym == 256) {\n        lpos = pos, lm = undefined;\n        break;\n      } else {\n        let add = sym - 254;\n        // no extra bits needed if less\n        if (sym > 264) {\n          // index\n          const i = sym - 257, b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        }\n        // dist\n        const d = dm![bits16(dat, pos) & dms], dsym = d >> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        let dt = fd[dsym];\n        if (dsym > 3) {\n          const b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n        if (resize) cbuf(bt + 131072);\n        const end = bt + add;\n        if (bt < dt) {\n          const shift = dl - dt, dend = Math.min(dt, end);\n          if (shift + bt < 0) err(3);\n          for (; bt < dend; ++bt) buf![bt] = dict![shift + bt];\n        }\n        for (; bt < end; ++bt) buf![bt] = buf![bt - dt];\n      }\n    }\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final)\n  // don't reallocate for streams or user buffers\n  return bt != buf!.length && noBuf ? slc(buf!, 0, bt) : buf!.subarray(0, bt);\n}\n\n// starting at p, write the minimum number of bits that can hold v to d\nconst wbits = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n}\n\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nconst wbits16 = (d: Uint8Array, p: number, v: number) => {\n  v <<= p & 7;\n  const o = (p / 8) | 0;\n  d[o] |= v;\n  d[o + 1] |= v >> 8;\n  d[o + 2] |= v >> 16;\n}\n\ntype HuffNode = {\n  // symbol\n  s: number;\n  // frequency\n  f: number;\n  // left child\n  l?: HuffNode;\n  // right child\n  r?: HuffNode;\n};\n\n// creates code lengths from a frequency table\nconst hTree = (d: Uint16Array, mb: number) => {\n  // Need extra info to make a tree\n  const t: HuffNode[] = [];\n  for (let i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({ s: i, f: d[i] });\n  }\n  const s = t.length;\n  const t2 = t.slice();\n  if (!s) return { t: et, l: 0 };\n  if (s == 1) {\n    const v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return { t: v, l: 1 };\n  }\n  t.sort((a, b) => a.f - b.f);\n  // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n  t.push({ s: -1, f: 25001 });\n  let l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n  t[0] = { s: -1, f: l.f + r.f, l, r };\n  // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = { s: -1, f: l.f + r.f, l, r };\n  }\n  let maxSym = t2[0].s;\n  for (let i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  }\n  // code lengths\n  const tr = new u16(maxSym + 1);\n  // max bits in tree\n  let mbt = ln(t[i1 - 1], tr, 0);\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    let i = 0, dt = 0;\n    //    left            cost\n    const lft = mbt - mb, cst = 1 << lft;\n    t2.sort((a, b) => tr[b.s] - tr[a.s] || a.f - b.f);\n    for (; i < s; ++i) {\n      const i2 = t2[i].s;\n      if (tr[i2] > mb) {\n        dt += cst - (1 << (mbt - tr[i2]));\n        tr[i2] = mb;\n      } else break;\n    }\n    dt >>= lft;\n    while (dt > 0) {\n      const i2 = t2[i].s;\n      if (tr[i2] < mb) dt -= 1 << (mb - tr[i2]++ - 1);\n      else ++i;\n    }\n    for (; i >= 0 && dt; --i) {\n      const i2 = t2[i].s;\n      if (tr[i2] == mb) {\n        --tr[i2];\n        ++dt;\n      }\n    }\n    mbt = mb;\n  }\n  return { t: new u8(tr), l: mbt };\n}\n// get the max length and assign length codes\nconst ln = (n: HuffNode, l: Uint16Array, d: number): number => {\n  return n.s == -1\n    ? Math.max(ln(n.l!, l, d + 1), ln(n.r!, l, d + 1))\n    : (l[n.s] = d);\n}\n\n// length codes generation\nconst lc = (c: Uint8Array) => {\n  let s = c.length;\n  // Note that the semicolon was intentional\n  while (s && !c[--s]);\n  const cl = new u16(++s);\n  //  ind      num         streak\n  let cli = 0, cln = c[0], cls = 1;\n  const w = (v: number) => { cl[cli++] = v; }\n  for (let i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s)\n      ++cls;\n    else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n        if (cls > 2) {\n          w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n        for (; cls > 6; cls -= 6) w(8304);\n        if (cls > 2) w(((cls - 3) << 5) | 8208), cls = 0;\n      }\n      while (cls--) w(cln);\n      cls = 1;\n      cln = c[i];\n    }\n  }\n  return { c: cl.subarray(0, cli), n: s };\n}\n\n// calculate the length of output from tree, code lengths\nconst clen = (cf: Uint16Array, cl: Uint8Array) => {\n  let l = 0;\n  for (let i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n  return l;\n}\n\n// writes a fixed block\n// returns the new bit pos\nconst wfblk = (out: Uint8Array, pos: number, dat: Uint8Array) => {\n  // no need to write 00 as type: TypedArray defaults to 0\n  const s = dat.length;\n  const o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n  for (let i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n  return (o + 4 + s) * 8;\n}\n\n// writes a block\nconst wblk = (dat: Uint8Array, out: Uint8Array, final: number, syms: Int32Array, lf: Uint16Array, df: Uint16Array, eb: number, li: number, bs: number, bl: number, p: number) => {\n  wbits(out, p++, final);\n  ++lf[256];\n  const { t: dlt, l: mlb } = hTree(lf, 15);\n  const { t: ddt, l: mdb } = hTree(df, 15);\n  const { c: lclt, n: nlc } = lc(dlt);\n  const { c: lcdt, n: ndc } = lc(ddt);\n  const lcfreq = new u16(19);\n  for (let i = 0; i < lclt.length; ++i) ++lcfreq[lclt[i] & 31];\n  for (let i = 0; i < lcdt.length; ++i) ++lcfreq[lcdt[i] & 31];\n  const { t: lct, l: mlcb } = hTree(lcfreq, 7);\n  let nlcc = 19;\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n  const flen = (bl + 5) << 3;\n  const ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  const dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n  if (bs >= 0 && flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  let lm: Uint16Array, ll: Uint8Array, dm: Uint16Array, dl: Uint8Array;\n  wbits(out, p, 1 + (dtlen < ftlen as unknown as number)), p += 2;\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    const llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n    for (let i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n    p += 3 * nlcc;\n    const lcts = [lclt, lcdt];\n    for (let it = 0; it < 2; ++it) {\n      const clct = lcts[it];\n      for (let i = 0; i < clct.length; ++i) {\n        const len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n  for (let i = 0; i < li; ++i) {\n    const sym = syms[i];\n    if (sym > 255) {\n      const len = (sym >> 18) & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n      const dst = sym & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[sym]), p += ll[sym];\n    }\n  }\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n}\n\n// deflate options (nice << 13) | chain\nconst deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n\n// empty\nconst et = /*#__PURE__*/new u8(0);\n\ntype DeflateState = {\n  // head\n  h?: Uint16Array;\n  // prev\n  p?: Uint16Array;\n  // index\n  i?: number;\n  // end index\n  z?: number;\n  // wait index\n  w?: number;\n  // remainder byte info\n  r?: number;\n  // last chunk\n  l: number;\n};\n\n// compresses data into a raw DEFLATE buffer\nconst dflt = (dat: Uint8Array, lvl: number, plvl: number, pre: number, post: number, st: DeflateState) => {\n  const s = st.z || dat.length;\n  const o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n  // writing to this writes to the output buffer\n  const w = o.subarray(pre, o.length - post);\n  const lst = st.l;\n  let pos = (st.r || 0) & 7;\n  if (lvl) {\n    if (pos) w[0] = st.r! >> 3;\n    const opt = deo[lvl - 1];\n    const n = opt >> 13, c = opt & 8191;\n    const msk = (1 << plvl) - 1;\n    //    prev 2-byte val map    curr 2-byte val map\n    const prev = st.p || new u16(32768), head = st.h || new u16(msk + 1);\n    const bs1 = Math.ceil(plvl / 3), bs2 = 2 * bs1;\n    const hsh = (i: number) => (dat[i] ^ (dat[i + 1] << bs1) ^ (dat[i + 2] << bs2)) & msk;\n    // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n    const syms = new i32(25000);\n    // length/literal freq   distance freq\n    const lf = new u16(288), df = new u16(32);\n    //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n    let lc = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n    for (; i + 2 < s; ++i) {\n      // hash value\n      const hv = hsh(i);\n      // index mod 32768    previous index mod\n      let imod = i & 32767, pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod;\n      // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n      if (wi <= i) {\n        // bytes remaining\n        const rem = s - i;\n        if ((lc > 7000 || li > 24576) && (rem > 423 || !lst)) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc = eb = 0, bs = i;\n          for (let j = 0; j < 286; ++j) lf[j] = 0;\n          for (let j = 0; j < 30; ++j) df[j] = 0;\n        }\n        //  len    dist   chain\n        let l = 2, d = 0, ch = c, dif = imod - pimod & 32767;\n        if (rem > 2 && hv == hsh(i - dif)) {\n          const maxn = Math.min(n, rem) - 1;\n          const maxd = Math.min(32767, i);\n          // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n          const ml = Math.min(258, rem);\n          while (dif <= maxd && --ch && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              let nl = 0;\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n              if (nl > l) {\n                l = nl, d = dif;\n                // break out early when we reach \"nice\" (we are satisfied enough)\n                if (nl > maxn) break;\n                // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n                const mmd = Math.min(dif, nl - 2);\n                let md = 0;\n                for (let j = 0; j < mmd; ++j) {\n                  const ti = i - dif + j & 32767;\n                  const pti = prev[ti];\n                  const cd = ti - pti & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            }\n            // check the previous match\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod & 32767;\n          }\n        }\n        // d will be nonzero only when a match was found\n        if (d) {\n          // store both dist and len data in one int32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n          const lin = revfl[l] & 31, din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n    for (i = Math.max(i, wi); i < s; ++i) {\n      syms[li++] = dat[i];\n      ++lf[dat[i]];\n    }\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n    if (!lst) {\n      st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n      // shft(pos) now 1 less if pos & 7 != 0\n      pos -= 7;\n      st.h = head, st.p = prev, st.i = i, st.w = wi;\n    }\n  } else {\n    for (let i = st.w || 0; i < s + lst; i += 65535) {\n      // end\n      let e = i + 65535;\n      if (e >= s) {\n        // write final block\n        w[(pos / 8) | 0] = lst;\n        e = s;\n      }\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n    st.i = s;\n  }\n  return slc(o, 0, pre + shft(pos) + post);\n}\n\n// crc check\ntype CRCV = {\n  p(d: Uint8Array): void;\n  d(): number;\n};\n\n// Adler32\nconst adler = (): CRCV => {\n  let a = 1, b = 0;\n  return {\n    p(d) {\n      // closures have awful performance\n      let n = a, m = b;\n      const l = d.length | 0;\n      for (let i = 0; i != l;) {\n        const e = Math.min(i + 2655, l);\n        for (; i < e; ++i) m += n += d[i];\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n      a = n, b = m;\n    },\n    d() {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n    }\n  }\n}\n\n/**\n * Options for compressing data into a DEFLATE format\n */\nexport interface DeflateOptions {\n  /**\n   * The level of compression to use, ranging from 0-9.\n   * \n   * 0 will store the data without compression.\n   * 1 is fastest but compresses the worst, 9 is slowest but compresses the best.\n   * The default level is 6.\n   * \n   * Typically, binary data benefits much more from higher values than text data.\n   * In both cases, higher values usually take disproportionately longer than the reduction in final size that results.\n   * \n   * For example, a 1 MB text file could:\n   * - become 1.01 MB with level 0 in 1ms\n   * - become 400 kB with level 1 in 10ms\n   * - become 320 kB with level 9 in 100ms\n   */\n  level?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;\n  /**\n   * The memory level to use, ranging from 0-12. Increasing this increases speed and compression ratio at the cost of memory.\n   * \n   * Note that this is exponential: while level 0 uses 4 kB, level 4 uses 64 kB, level 8 uses 1 MB, and level 12 uses 16 MB.\n   * It is recommended not to lower the value below 4, since that tends to hurt performance.\n   * In addition, values above 8 tend to help very little on most data and can even hurt performance.\n   * \n   * The default value is automatically determined based on the size of the input data.\n   */\n  mem?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;\n  /**\n   * A buffer containing common byte sequences in the input data that can be used to significantly improve compression ratios.\n   * \n   * Dictionaries should be 32kB or smaller and include strings or byte sequences likely to appear in the input.\n   * The decompressor must supply the same dictionary as the compressor to extract the original data.\n   * \n   * Dictionaries only improve aggregate compression ratio when reused across multiple small inputs. They should typically not be used otherwise.\n   * \n   * Avoid using dictionaries with GZIP and ZIP to maximize software compatibility.\n   */\n  dictionary?: Uint8Array;\n};\n\n/**\n * Options for compressing data into a Zlib format\n */\nexport interface ZlibOptions extends DeflateOptions {}\n\n/**\n * Options for decompressing DEFLATE data\n */\nexport interface InflateOptions {\n  /**\n   * The dictionary used to compress the original data. If no dictionary was used during compression, this option has no effect.\n   * \n   * Supplying the wrong dictionary during decompression usually yields corrupt output or causes an invalid distance error.\n   */\n  dictionary?: Uint8Array;\n  /**\n   * The buffer into which to write the decompressed data. Saves memory if you know the decompressed size in advance.\n   * \n   * Note that if the decompression result is larger than the size of this buffer, it will be truncated to fit.\n   */\n  out?: Uint8Array;\n}\n\n/**\n * Options for decompressing Zlib data\n */\nexport interface UnzlibOptions extends InflateOptions {}\n\n// deflate with opts\nconst dopt = (dat: Uint8Array, opt: DeflateOptions, pre: number, post: number, st?: DeflateState) => {\n  if (!st) {\n    st = { l: 1 };\n    if (opt.dictionary) {\n      const dict = opt.dictionary.subarray(-32768);\n      const newDat = new u8(dict.length + dat.length);\n      newDat.set(dict);\n      newDat.set(dat, dict.length);\n      dat = newDat;\n      st.w = dict.length;\n    }\n  }\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n}\n\n// write bytes\nconst wbytes = (d: Uint8Array, b: number, v: number) => {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n}\n\n// zlib header\nconst zlh = (c: Uint8Array, o: ZlibOptions) => {\n  const lv = o.level ?? 0, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = (fl << 6) | ((o.dictionary ?? 0) && 32);\n  c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n  if (o.dictionary) {\n    const h = adler();\n    h.p(o.dictionary);\n    wbytes(c, 2, h.d());\n  }\n}\n\n// zlib start\nconst zls = (d: Uint8Array, dict?: unknown) => {\n  if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31)) err(6, 'invalid zlib data');\n  if ((d[1] >> 5 & 1) == +!dict) err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n  return (d[1] >> 3 & 4) + 2;\n}\n\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data: Uint8Array, opts: ZlibOptions = {}) {\n  const a = adler();\n  a.p(data);\n  const d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data: Uint8Array, opts: UnzlibOptions = {}) {\n  return inflt(data.subarray(zls(data, opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n","import { platform } from \"../../platform\";\n\nexport class CRC32 {\n  // CRC32 Table 初始化\n  private static table = Uint32Array.from(Array(256), (_, i) => {\n    let c = i;\n\n    for (let j = 0; j < 8; j++) {\n      c = (c & 1) ? (0xedb88320 ^ (c >>> 1)) : (c >>> 1);\n    }\n\n    return c >>> 0;\n  });\n\n  private static WHITE_COLOR: number = 0xffffffff;\n\n  private readonly caches = new Map<string, number>();\n\n  calculate(buff: Uint8Array): number {\n    if (!(buff instanceof Uint8Array)) {\n      throw new TypeError('Input must be a Uint8Array');\n    }\n\n    const { caches } = this;\n    const key = platform.decode.bytesToString(buff);\n  \n    if (caches.has(key)) {\n      return caches.get(key)!;\n    }\n\n    let crc = CRC32.WHITE_COLOR;\n    // 使用位运算优化\n    for (let i = 0; i < buff.length; i++) {\n      crc = (crc >>> 8) ^ CRC32.table[(crc ^ buff[i]) & 0xff];\n    }\n\n    caches.set(key, (crc ^ CRC32.WHITE_COLOR) >>> 0);\n\n    return caches.get(key) as number;\n  }\n\n  clear(){\n    this.caches.clear();\n  }\n}","// ---------------------------------------------------------------------\n// QRMath\n// ---------------------------------------------------------------------\n\nconst EXP_TABLE = new Array(256);\nconst LOG_TABLE = new Array(256);\n\n// initialize tables\nfor (let i = 0; i < 8; i++) {\n  EXP_TABLE[i] = 1 << i;\n}\n\nfor (let i = 8; i < 256; i++) {\n  EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n}\n\nfor (let i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nexport const QRMath = {\n  glog(n: number): number {\n    if (n < 1) {\n      throw new Error(`glog(${n})`);\n    }\n\n    return LOG_TABLE[n];\n  },\n\n  gexp(n: number): number {\n    if (n < 0) {\n      n = 255 + (n % 255);\n    } else if (n > 255) {\n      n %= 255;\n    }\n\n    return EXP_TABLE[n];\n  }\n}\n","// import { zlibSync } from \"fflate\";\nimport { zlibSync } from \"../zlib\";\nimport { CRC32 } from \"./crc\";\n\nexport class PNGEncoder {\n  private readonly view: DataView;\n\n  private crc32 = new CRC32();\n\n  constructor(private readonly width: number, private readonly height: number) {\n    this.view = new DataView(new ArrayBuffer(4 * width * height));\n  }\n\n  private createChunk(type: string, data: Uint8Array): Uint8Array {\n    // 长度（4字节，大端序）\n    const length = new Uint8Array(4);\n    new DataView(length.buffer).setUint32(0, data.length, false);\n\n    // 块类型（4字节， ASCII）\n    const chunkType = Uint8Array.from(type, c => c.charCodeAt(0));\n\n    // 计算 CRC32 校验（类型 + 数据）\n    const partialChunk = new Uint8Array(chunkType.length + data.length);\n    partialChunk.set(chunkType);\n    partialChunk.set(data, chunkType.length);\n    \n    const crc = new Uint8Array(4);\n    new DataView(crc.buffer).setUint32(0, this.crc32.calculate(partialChunk) >>> 0, false);\n\n    // 汇总成完整的chunk数据\n    const result = new Uint8Array(length.length + partialChunk.length + crc.length);\n    result.set(length);\n    result.set(partialChunk, length.length);\n    result.set(crc, length.length + partialChunk.length);\n\n    return result;\n  }\n\n  private createIHDRChunk(): Uint8Array {\n    const ihdrData = new Uint8Array(13);\n    const view = new DataView(ihdrData.buffer);\n\n    // 宽度\n    view.setUint32(0, this.width, false);\n    // 高度\n    view.setUint32(4, this.height, false);\n    // 位深度\n    view.setUint8(8, 8);\n    // 颜色类型\n    view.setUint8(9, 6);\n    // 压缩方法\n    view.setUint8(10, 0);\n    // 过滤器方法\n    view.setUint8(11, 0);\n    // 交错方法\n    view.setUint8(12, 0);\n\n    return this.createChunk(\"IHDR\", ihdrData);\n  }\n\n  private createIDATChunk(): Uint8Array {\n    const { width, height } = this;\n    const validRowSize = width * 4;\n    // 每行开头添加一位过滤头数据\n    const rowSize = validRowSize + 1;\n    const data = new Uint8Array(rowSize * height);\n    // 将Uint32数据转换为Uint8数据\n    const pixelsData = new Uint8Array(this.view.buffer);\n    let startIdx: number;\n    let srcStart: number;\n\n    for (let y = 0; y < height; y++) {\n      startIdx = y * rowSize;\n      data[startIdx] = 0x00; // 过滤头\n      // ✅ 复制预先转换好的 RGBA 数据\n      srcStart = y * validRowSize; // Uint32 => 每个元素占 4 字节\n      data.set(pixelsData.subarray(srcStart, srcStart + validRowSize), startIdx + 1);\n    }\n\n    // 使用 zlib 进行压缩, 平衡压缩率有利于提升文件生成速度\n    return this.createChunk(\"IDAT\", zlibSync(data));\n  }\n\n  public setPixel(x: number, y: number, pixel: number): void {\n    this.view.setUint32((y * this.width + x) * 4, pixel, false);\n  }\n\n  public write(pixels: Uint8Array | Uint8ClampedArray): this {\n    const { width, height } = this;\n    let pos: number;\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    let pixel: number;\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        pos = (y * width + x) * 4;\n        r = pixels[pos];\n        g = pixels[pos + 1];\n        b = pixels[pos + 2];\n        a = pixels[pos + 3];\n        pixel = ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n        this.setPixel(x, y, pixel);\n      }\n    }\n\n    return this;\n  }\n\n  public flush(): Uint8Array {\n    // 预先创建所有块\n    const iHDRChunk = this.createIHDRChunk();\n    const iDATChunk = this.createIDATChunk();\n    const iENDChunk = this.createChunk(\"IEND\", new Uint8Array(0));\n    \n    // 一次性分配内存（直接计算总大小）\n    const pngData = new Uint8Array(8 + iHDRChunk.length + iDATChunk.length + iENDChunk.length);\n    \n    /* ------ 按顺序写入数据 ------ */\n\n    // 1. 写入文件头（固定 8 字节）\n    let offset = 0;\n    pngData.set(new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]), offset);\n    // 2. 写入IHDR块\n    offset += 8;\n    pngData.set(iHDRChunk, offset);\n    // 3. 写入IDAT块\n    offset += iHDRChunk.length;\n    pngData.set(iDATChunk, offset);\n    // 4. 写入IEND块\n    offset += iDATChunk.length;\n    pngData.set(iENDChunk, offset);\n    \n    /* ------ 清空 CRC32 缓存 ------ */\n    this.crc32.clear();\n\n    return pngData;\n  }\n}\n","// ---------------------------------------------------------------------\n// qrBitBuffer\n// ---------------------------------------------------------------------\n\nexport class BitBuffer {\n  public buffer: number[] = [];\n\n  public lengthInBits = 0;\n\n  public getAt(i: number): boolean {\n    const bufIndex = ~~(i / 8);\n\n    return ((this.buffer[bufIndex] >>> (7 - (i % 8))) & 1) === 1;\n  }\n\n  public put(num: number, length: number): void {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  public putBit(bit: boolean): void {\n    const { lengthInBits: len, buffer } = this;\n    const bufIndex = ~~(len / 8);\n\n    if (buffer.length <= bufIndex) {\n      buffer.push(0);\n    }\n\n    if (bit) {\n      buffer[bufIndex] |= 0x80 >>> len % 8;\n    }\n\n    this.lengthInBits += 1;\n  }\n}\n","// ---------------------------------------------------------------------\n// QRMode\n// ---------------------------------------------------------------------\n\nexport const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n}\n\n// ---------------------------------------------------------------------\n// QRErrorCorrectLevel\n// ---------------------------------------------------------------------\n\nexport const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n}\n\n// ---------------------------------------------------------------------\n// QRMaskPattern\n// ---------------------------------------------------------------------\n\nexport const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n}\n","// ---------------------------------------------------------------------\n// qr8BitByte\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { QRMode } from \"./constants\";\n\nexport class BitByte {\n  private readonly bytes: number[];\n\n  constructor(data: string) {\n    let parsedData: number[][] = [];\n\n    // Added to support UTF-8 Characters\n    for (let i = 0; i < data.length; i++) {\n      const byteArray: number[] = [];\n      const code = data.charCodeAt(i);\n\n      if (code > 0x10000) {\n        byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n        byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n        byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[3] = 0x80 | (code & 0x3f);\n      } else if (code > 0x800) {\n        byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n        byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[2] = 0x80 | (code & 0x3f);\n      } else if (code > 0x80) {\n        byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n        byteArray[1] = 0x80 | (code & 0x3f);\n      } else {\n        byteArray[0] = code;\n      }\n\n      // Fix Unicode corruption bug\n      parsedData.push(byteArray);\n    }\n\n    this.bytes = parsedData.flat(1);\n\n    const { bytes } = this;\n    if (bytes.length !== data.length) {\n      bytes.unshift(191);\n      bytes.unshift(187);\n      bytes.unshift(239);\n    }\n  }\n\n  public get mode(): number {\n    return QRMode.MODE_8BIT_BYTE;\n  }\n\n  public get length(): number {\n    return this.bytes.length;\n  }\n\n  public write(buff: BitBuffer): void {\n    const { bytes } = this;\n\n    for (let i = 0; i < bytes.length; i++) {\n      buff.put(bytes[i], 8);\n    }\n  }\n}\n","// ---------------------------------------------------------------------\n// QRRSBlock\n// ---------------------------------------------------------------------\n\nimport { QRErrorCorrectLevel } from \"./constants\";\n\nexport interface RSBlockCount {\n  totalCount: number;\n  dataCount: number;\n}\n\nconst RS_BLOCK_TABLE = [\n  [1, 26, 19],\n  [1, 26, 16],\n  [1, 26, 13],\n  [1, 26, 9],\n  [1, 44, 34],\n  [1, 44, 28],\n  [1, 44, 22],\n  [1, 44, 16],\n  [1, 70, 55],\n  [1, 70, 44],\n  [2, 35, 17],\n  [2, 35, 13],\n  [1, 100, 80],\n  [2, 50, 32],\n  [2, 50, 24],\n  [4, 25, 9],\n  [1, 134, 108],\n  [2, 67, 43],\n  [2, 33, 15, 2, 34, 16],\n  [2, 33, 11, 2, 34, 12],\n  [2, 86, 68],\n  [4, 43, 27],\n  [4, 43, 19],\n  [4, 43, 15],\n  [2, 98, 78],\n  [4, 49, 31],\n  [2, 32, 14, 4, 33, 15],\n  [4, 39, 13, 1, 40, 14],\n  [2, 121, 97],\n  [2, 60, 38, 2, 61, 39],\n  [4, 40, 18, 2, 41, 19],\n  [4, 40, 14, 2, 41, 15],\n  [2, 146, 116],\n  [3, 58, 36, 2, 59, 37],\n  [4, 36, 16, 4, 37, 17],\n  [4, 36, 12, 4, 37, 13],\n  [2, 86, 68, 2, 87, 69],\n  [4, 69, 43, 1, 70, 44],\n  [6, 43, 19, 2, 44, 20],\n  [6, 43, 15, 2, 44, 16],\n  [4, 101, 81],\n  [1, 80, 50, 4, 81, 51],\n  [4, 50, 22, 4, 51, 23],\n  [3, 36, 12, 8, 37, 13],\n  [2, 116, 92, 2, 117, 93],\n  [6, 58, 36, 2, 59, 37],\n  [4, 46, 20, 6, 47, 21],\n  [7, 42, 14, 4, 43, 15],\n  [4, 133, 107],\n  [8, 59, 37, 1, 60, 38],\n  [8, 44, 20, 4, 45, 21],\n  [12, 33, 11, 4, 34, 12],\n  [3, 145, 115, 1, 146, 116],\n  [4, 64, 40, 5, 65, 41],\n  [11, 36, 16, 5, 37, 17],\n  [11, 36, 12, 5, 37, 13],\n  [5, 109, 87, 1, 110, 88],\n  [5, 65, 41, 5, 66, 42],\n  [5, 54, 24, 7, 55, 25],\n  [11, 36, 12],\n  [5, 122, 98, 1, 123, 99],\n  [7, 73, 45, 3, 74, 46],\n  [15, 43, 19, 2, 44, 20],\n  [3, 45, 15, 13, 46, 16],\n  [1, 135, 107, 5, 136, 108],\n  [10, 74, 46, 1, 75, 47],\n  [1, 50, 22, 15, 51, 23],\n  [2, 42, 14, 17, 43, 15],\n  [5, 150, 120, 1, 151, 121],\n  [9, 69, 43, 4, 70, 44],\n  [17, 50, 22, 1, 51, 23],\n  [2, 42, 14, 19, 43, 15],\n  [3, 141, 113, 4, 142, 114],\n  [3, 70, 44, 11, 71, 45],\n  [17, 47, 21, 4, 48, 22],\n  [9, 39, 13, 16, 40, 14],\n  [3, 135, 107, 5, 136, 108],\n  [3, 67, 41, 13, 68, 42],\n  [15, 54, 24, 5, 55, 25],\n  [15, 43, 15, 10, 44, 16],\n  [4, 144, 116, 4, 145, 117],\n  [17, 68, 42],\n  [17, 50, 22, 6, 51, 23],\n  [19, 46, 16, 6, 47, 17],\n  [2, 139, 111, 7, 140, 112],\n  [17, 74, 46],\n  [7, 54, 24, 16, 55, 25],\n  [34, 37, 13],\n  [4, 151, 121, 5, 152, 122],\n  [4, 75, 47, 14, 76, 48],\n  [11, 54, 24, 14, 55, 25],\n  [16, 45, 15, 14, 46, 16],\n  [6, 147, 117, 4, 148, 118],\n  [6, 73, 45, 14, 74, 46],\n  [11, 54, 24, 16, 55, 25],\n  [30, 46, 16, 2, 47, 17],\n  [8, 132, 106, 4, 133, 107],\n  [8, 75, 47, 13, 76, 48],\n  [7, 54, 24, 22, 55, 25],\n  [22, 45, 15, 13, 46, 16],\n  [10, 142, 114, 2, 143, 115],\n  [19, 74, 46, 4, 75, 47],\n  [28, 50, 22, 6, 51, 23],\n  [33, 46, 16, 4, 47, 17],\n  [8, 152, 122, 4, 153, 123],\n  [22, 73, 45, 3, 74, 46],\n  [8, 53, 23, 26, 54, 24],\n  [12, 45, 15, 28, 46, 16],\n  [3, 147, 117, 10, 148, 118],\n  [3, 73, 45, 23, 74, 46],\n  [4, 54, 24, 31, 55, 25],\n  [11, 45, 15, 31, 46, 16],\n  [7, 146, 116, 7, 147, 117],\n  [21, 73, 45, 7, 74, 46],\n  [1, 53, 23, 37, 54, 24],\n  [19, 45, 15, 26, 46, 16],\n  [5, 145, 115, 10, 146, 116],\n  [19, 75, 47, 10, 76, 48],\n  [15, 54, 24, 25, 55, 25],\n  [23, 45, 15, 25, 46, 16],\n  [13, 145, 115, 3, 146, 116],\n  [2, 74, 46, 29, 75, 47],\n  [42, 54, 24, 1, 55, 25],\n  [23, 45, 15, 28, 46, 16],\n  [17, 145, 115],\n  [10, 74, 46, 23, 75, 47],\n  [10, 54, 24, 35, 55, 25],\n  [19, 45, 15, 35, 46, 16],\n  [17, 145, 115, 1, 146, 116],\n  [14, 74, 46, 21, 75, 47],\n  [29, 54, 24, 19, 55, 25],\n  [11, 45, 15, 46, 46, 16],\n  [13, 145, 115, 6, 146, 116],\n  [14, 74, 46, 23, 75, 47],\n  [44, 54, 24, 7, 55, 25],\n  [59, 46, 16, 1, 47, 17],\n  [12, 151, 121, 7, 152, 122],\n  [12, 75, 47, 26, 76, 48],\n  [39, 54, 24, 14, 55, 25],\n  [22, 45, 15, 41, 46, 16],\n  [6, 151, 121, 14, 152, 122],\n  [6, 75, 47, 34, 76, 48],\n  [46, 54, 24, 10, 55, 25],\n  [2, 45, 15, 64, 46, 16],\n  [17, 152, 122, 4, 153, 123],\n  [29, 74, 46, 14, 75, 47],\n  [49, 54, 24, 10, 55, 25],\n  [24, 45, 15, 46, 46, 16],\n  [4, 152, 122, 18, 153, 123],\n  [13, 74, 46, 32, 75, 47],\n  [48, 54, 24, 14, 55, 25],\n  [42, 45, 15, 32, 46, 16],\n  [20, 147, 117, 4, 148, 118],\n  [40, 75, 47, 7, 76, 48],\n  [43, 54, 24, 22, 55, 25],\n  [10, 45, 15, 67, 46, 16],\n  [19, 148, 118, 6, 149, 119],\n  [18, 75, 47, 31, 76, 48],\n  [34, 54, 24, 34, 55, 25],\n  [20, 45, 15, 61, 46, 16],\n];\n\nexport class RSBlock {\n  private getRSBlockTable(typeNumber: number, errorCorrectLevel: number): number[] {\n    const { L, M, Q, H } = QRErrorCorrectLevel;\n    const pos = (typeNumber - 1) * 4;\n\n    switch (errorCorrectLevel) {\n      case L:\n        return RS_BLOCK_TABLE[pos + 0];\n      case M:\n        return RS_BLOCK_TABLE[pos + 1];\n      case Q:\n        return RS_BLOCK_TABLE[pos + 2];\n      case H:\n        return RS_BLOCK_TABLE[pos + 3];\n      default:\n        throw new Error(`bad rs block @ typeNumber:${typeNumber}/errorCorrectLevel: ${errorCorrectLevel}`);\n    }\n  }\n\n  public getRSBlocks(typeNumber: number, errorCorrectLevel: number): RSBlockCount[] {\n    const rsBlock = this.getRSBlockTable(typeNumber, errorCorrectLevel);\n    const length = rsBlock.length / 3;\n    const list: RSBlockCount[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n\n      for (let j = 0; j < count; j++) {\n        list.push({ totalCount, dataCount });\n      }\n    }\n\n    return list;\n  }\n}\n","// ---------------------------------------------------------------------\n// Polynomial\n// ---------------------------------------------------------------------\n\nimport { QRMath } from \"./math\";\n\nexport class Polynomial {\n  private readonly num: number[];\n\n  constructor(num: number[], shift: number) {\n    const { length } = num;\n\n    if (length === undefined) {\n      throw new Error(`${length}/${shift}`);\n    }\n\n    let offset = 0;\n    while (offset < length && num[offset] === 0) {\n      offset++;\n    }\n    \n    const len = length - offset;\n    this.num = new Array(len + shift);\n    for (let i = 0; i < len; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  public get length(): number {\n    return this.num.length;\n  }\n\n  public getAt(i: number): number {\n    return this.num[i];\n  }\n\n  public multiply(e: Polynomial): Polynomial {\n    const { glog, gexp } = QRMath;\n    const num: number[] = [];\n\n    for (let i = 0; i < this.length; i++) {\n      for (let j = 0; j < e.length; j++) {\n        num[i + j] ^= gexp(glog(this.getAt(i)) + glog(e.getAt(j)));\n      }\n    }\n\n    return new Polynomial(num, 0);\n  }\n\n  public mod(e: Polynomial): Polynomial {\n    if (this.length - e.length < 0) {\n      return this;\n    }\n\n    const { glog, gexp } = QRMath;\n    const ratio = glog(this.getAt(0)) - glog(e.getAt(0));\n    const num: number[] = [];\n\n    for (var i = 0; i < this.length; i++) {\n      const n = this.getAt(i);\n\n      num[i] = i < e.length ? n ^ gexp(glog(e.getAt(i)) + ratio) : n;\n    }\n\n    // recursive call\n    return new Polynomial(num, 0).mod(e);\n  }\n}\n","import { QRCode } from \".\";\nimport { Polynomial } from \"./polynomial\";\nimport { QRMaskPattern, QRMode } from \"./constants\";\nimport { QRMath } from \"./math\";\n\nconst PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\nconst G15 =\n  (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nconst G18 =\n  (1 << 12) |\n  (1 << 11) |\n  (1 << 10) |\n  (1 << 9) |\n  (1 << 8) |\n  (1 << 5) |\n  (1 << 2) |\n  (1 << 0);\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nconst genBCHDigit = (data: number) => data === 0 ? 0 : Math.log2(data);\nconst BCH_G15 = genBCHDigit(G15);\nconst BCH_G18 = genBCHDigit(G18);\n\n// ---------------------------------------------------------------------\n// QRUtil\n// ---------------------------------------------------------------------\n\nexport const Util = {\n  getBCHTypeInfo(data: number): number {\n    let d = data << 10;\n\n    while (genBCHDigit(d) - BCH_G15 >= 0) {\n      d ^= G15 << (genBCHDigit(d) - BCH_G15);\n    }\n\n    return ((data << 10) | d) ^ G15_MASK;\n  },\n\n  getBCHTypeNumber(data: number): number {\n    let d = data << 12;\n\n    while (genBCHDigit(d) - BCH_G18 >= 0) {\n      d ^= G18 << (genBCHDigit(d) - BCH_G18);\n    }\n\n    return (data << 12) | d;\n  },\n\n  getPatternPosition(typeNumber: number): number[] {\n    return PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n\n  getMaskFunction(maskPattern: number): (i: number, j: number) => boolean {\n    const {\n      PATTERN000,\n      PATTERN001,\n      PATTERN010,\n      PATTERN011,\n      PATTERN100,\n      PATTERN101,\n      PATTERN110,\n      PATTERN111,\n    } = QRMaskPattern;\n\n    switch (maskPattern) {\n      case PATTERN000:\n        return (i: number, j: number) => (i + j) % 2 === 0;\n      case PATTERN001:\n        return (i: number) => i % 2 === 0;\n      case PATTERN010:\n        return (_i: number, j: number) => j % 3 === 0;\n      case PATTERN011:\n        return (i: number, j: number) => (i + j) % 3 === 0;\n      case PATTERN100:\n        return (i: number, j: number) => (~~(i / 2) + ~~(j / 3)) % 2 === 0;\n      case PATTERN101:\n        return (i: number, j: number) => ((i * j) % 2) + ((i * j) % 3) === 0;\n      case PATTERN110:\n        return (i: number, j: number) =>\n          (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n      case PATTERN111:\n        return (i: number, j: number) =>\n          (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n      default:\n        throw new Error(`bad maskPattern: ${maskPattern}`);\n    }\n  },\n\n  getErrorCorrectPolynomial(errorCorrectLength: number): Polynomial {\n    let a = new Polynomial([1], 0);\n\n    for (let i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new Polynomial([1, QRMath.gexp(i)], 0));\n    }\n\n    return a;\n  },\n\n  getLengthInBits(mode: number, type: number): number {\n    const { MODE_NUMBER, MODE_ALPHA_NUM, MODE_8BIT_BYTE, MODE_KANJI } = QRMode;\n\n    if (type < 1 || type > 40) {\n      throw new Error(`type: ${type}`);\n    }\n\n    if (type >= 1 && type < 10) {\n      // 1 - 9\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 10;\n        case MODE_ALPHA_NUM:\n          return 9;\n        case MODE_8BIT_BYTE:\n          return 8;\n        case MODE_KANJI:\n          return 8;\n        default:\n      }\n    }\n\n    if (type < 27) {\n      // 10 - 26\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 12;\n        case MODE_ALPHA_NUM:\n          return 11;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 10;\n        default:\n      }\n    }\n\n    if (type <= 40) {\n      // 27 - 40\n\n      switch (mode) {\n        case MODE_NUMBER:\n          return 14;\n        case MODE_ALPHA_NUM:\n          return 13;\n        case MODE_8BIT_BYTE:\n          return 16;\n        case MODE_KANJI:\n          return 12;\n        default:\n      }\n    }\n\n    throw new Error(`mode: ${mode}`);\n  },\n\n  getLostPoint(qr: QRCode): number {\n    const moduleCount = qr.getModuleCount();\n    let lostPoint = 0;\n\n    // LEVEL1\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount; col++) {\n        const dark = qr.isDark(row, col);\n        let sameCount = 0;\n\n        for (let r = -1; r <= 1; r++) {\n          const nRow = row + r;\n          if (nRow < 0 || moduleCount <= nRow) continue;\n\n          for (let c = -1; c <= 1; c++) {\n            const nCol = col + c;\n            if (nCol < 0 || moduleCount <= nCol) continue;\n            if (r === 0 && c === 0) continue;\n            if (dark === qr.isDark(nRow, nCol)) {\n              sameCount++;\n            }\n          }\n        }\n\n        if (sameCount > 5) {\n          lostPoint += sameCount + 3 - 5;\n        }\n      }\n    }\n\n    // LEVEL2\n\n    for (let row = 0; row < moduleCount - 1; row++) {\n      for (let col = 0; col < moduleCount - 1; col++) {\n        let count = 0;\n\n        if (qr.isDark(row, col)) count++;\n        if (qr.isDark(row + 1, col)) count++;\n        if (qr.isDark(row, col + 1)) count++;\n        if (qr.isDark(row + 1, col + 1)) count++;\n        if (count === 0 || count === 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n\n    // LEVEL3\n\n    for (let row = 0; row < moduleCount; row++) {\n      for (let col = 0; col < moduleCount - 6; col++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row, col + 1) &&\n          qr.isDark(row, col + 2) &&\n          qr.isDark(row, col + 3) &&\n          qr.isDark(row, col + 4) &&\n          !qr.isDark(row, col + 5) &&\n          qr.isDark(row, col + 6)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount - 6; row++) {\n        if (\n          qr.isDark(row, col) &&\n          !qr.isDark(row + 1, col) &&\n          qr.isDark(row + 2, col) &&\n          qr.isDark(row + 3, col) &&\n          qr.isDark(row + 4, col) &&\n          !qr.isDark(row + 5, col) &&\n          qr.isDark(row + 6, col)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n\n    // LEVEL4\n\n    let darkCount = 0;\n    for (let col = 0; col < moduleCount; col++) {\n      for (let row = 0; row < moduleCount; row++) {\n        if (qr.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n\n    const ratio =\n      Math.abs((100 * darkCount) / Math.pow(moduleCount, 2) - 50) / 5;\n\n    return lostPoint + ratio * 10;\n  },\n};\n","// ---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2025 LiHZSky\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n// http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//\n// ---------------------------------------------------------------------\n\nimport { BitBuffer } from \"./bit-buffer\";\nimport { BitByte } from \"./bit-byte\";\nimport { RSBlock, RSBlockCount } from \"./block\";\nimport { QRErrorCorrectLevel } from \"./constants\";\nimport { Polynomial } from \"./polynomial\";\nimport { Util } from \"./util\";\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\n/**\n * QRCode实现\n * https://www.cnblogs.com/leestar54/p/15782929.html\n * @param typeNumber 1 to 40\n * @param errorCorrectLevel 'L','M','Q','H'\n */\nexport class QRCode {\n  private readonly errorCorrectLevel: number;\n\n  private modules: boolean[][] = [];\n\n  private moduleCount = 0;\n\n  private dataCache: number[] | null = null;\n\n  private dataList: BitByte[] = [];\n\n  constructor(\n    private readonly typeNumber: number,\n    errorCorrectLevel: \"L\" | \"M\" | \"Q\" | \"H\"\n  ) {\n    this.errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];\n  }\n\n  private makeImpl(test: boolean, maskPattern: number): void {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = ((moduleCount: number) => {\n      const modules: boolean[][] = [];\n\n      // 预设一个 moduleCount * moduleCount 的空白矩阵\n      for (let row = 0; row < moduleCount; row++) {\n        modules[row] = [];\n\n        for (let col = 0; col < moduleCount; col++) {\n          modules[row][col] = null as unknown as boolean;\n        }\n      }\n\n      return modules;\n    })(this.moduleCount);;\n\n    const count = this.moduleCount - 7;\n\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(count, 0);\n    this.setupPositionProbePattern(0, count);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n\n    if (this.dataCache === null) {\n      this.dataCache = this.createData(\n        this.typeNumber,\n        this.errorCorrectLevel,\n        this.dataList\n      );\n    }\n\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  private setupPositionProbePattern(row: number, col: number): void {\n    const { modules, moduleCount } = this;\n\n    for (let r = -1; r <= 7; r++) {\n      const nr = row + r;\n      if (nr <= -1 || moduleCount <= nr) continue;\n\n      for (let c = -1; c <= 7; c++) {\n        const nc = col + c;\n        if (nc <= -1 || moduleCount <= nc) continue;\n\n        modules[nr][nc] =\n          (r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4);\n      }\n    }\n  }\n\n  private setupPositionAdjustPattern(): void {\n    const { typeNumber, modules } = this;\n    const pos = Util.getPatternPosition(typeNumber);\n    const { length } = pos;\n\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n\n        if (modules[row][col] != null) continue;\n\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            modules[row + r][col + c] =\n              r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0);\n          }\n        }\n      }\n    }\n  }\n\n  private setupTimingPattern(): void {\n    const { moduleCount, modules } = this;\n    const count = moduleCount - 8;\n\n    for (let r = 8; r < count; r++) {\n      if (modules[r][6] != null) continue;\n\n      modules[r][6] = r % 2 === 0;\n    }\n\n    for (let c = 8; c < count; c++) {\n      if (modules[6][c] != null) continue;\n\n      modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  private setupTypeInfo(test: boolean, maskPattern: number): void {\n    const { errorCorrectLevel, modules, moduleCount } = this;\n    const data = (errorCorrectLevel << 3) | maskPattern;\n    const bits = Util.getBCHTypeInfo(data);\n\n    // vertical\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 6) {\n        modules[i][8] = mod;\n      } else if (i < 8) {\n        modules[i + 1][8] = mod;\n      } else {\n        modules[moduleCount - 15 + i][8] = mod;\n      }\n    }\n\n    // horizontal\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      if (i < 8) {\n        modules[8][moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        modules[8][15 - i] = mod;\n      } else {\n        modules[8][15 - i - 1] = mod;\n      }\n    }\n\n    // fixed module\n    modules[moduleCount - 8][8] = !test;\n  }\n\n  private getBestMaskPattern(): number {\n    let minLostPoint = 0;\n    let pattern = 0;\n\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n\n      const lostPoint = Util.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n\n    return pattern;\n  }\n\n  private setupTypeNumber(test: boolean): void {\n    const { typeNumber, modules, moduleCount } = this;\n    const bits = Util.getBCHTypeNumber(typeNumber);\n\n    for (let i = 0; i < 18; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n\n      modules[~~(i / 3)][(i % 3) + moduleCount - 8 - 3] = mod;\n      modules[(i % 3) + moduleCount - 8 - 3][~~(i / 3)] = mod;\n    }\n  }\n\n  private createData(\n    typeNumber: number,\n    errorCorrectLevel: number,\n    dataList: BitByte[]\n  ): number[] {\n    const rsBlocks = new RSBlock().getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new BitBuffer();\n\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n\n      buffer.put(data.mode, 4);\n      buffer.put(data.length, Util.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n\n    // calc num max data.\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n\n    const totalCount = totalDataCount * 8;\n    if (buffer.lengthInBits > totalCount) {\n      throw new Error(\n        `code length overflow. (${buffer.lengthInBits} > ${totalCount})`\n      );\n    }\n\n    // end code\n    if (buffer.lengthInBits + 4 <= totalCount) {\n      buffer.put(0, 4);\n    }\n\n    // padding\n    while (buffer.lengthInBits % 8 !== 0) {\n      buffer.putBit(false);\n    }\n\n    // padding\n    while (true) {\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n\n      if (buffer.lengthInBits >= totalCount) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  private mapData(data: number[], maskPattern: number): void {\n    const { modules, moduleCount } = this;\n    const maskFunc = Util.getMaskFunction(maskPattern);\n    let inc = -1;\n    let row = moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n\n    for (let col = row; col > 0; col -= 2) {\n      if (col === 6) col -= 1;\n\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (modules[row][col - c] == null) {\n            let dark = false;\n\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n\n            if (maskFunc(row, col - c)) {\n              dark = !dark;\n            }\n\n            modules[row][col - c] = dark;\n            bitIndex--;\n\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n\n        row += inc;\n\n        if (row < 0 || moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  private createBytes(\n    bitBuffer: BitBuffer,\n    rsBlocks: RSBlockCount[]\n  ): number[] {\n    const dcdata: number[][] = [];\n    const ecdata: number[][] = [];\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n\n      dcdata[r] = [];\n\n      for (let i = 0; i < dcCount; i++) {\n        dcdata[r][i] = 0xff & bitBuffer.buffer[i + offset];\n      }\n\n      offset += dcCount;\n\n      const rsPoly = Util.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new Polynomial(dcdata[r], rsPoly.length - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n\n      ecdata[r] = new Array(rsPoly.length - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.length - ecdata[r].length;\n\n        ecdata[r][i] = modIndex >= 0 ? modPoly.getAt(modIndex) : 0;\n      }\n    }\n\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n\n    const data = new Array(totalCodeCount);\n    let index = 0;\n\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n\n    return data;\n  }\n\n  public isDark(row: number, col: number): boolean {\n    const { moduleCount } = this;\n\n    if (row < 0 || moduleCount <= row || col < 0 || moduleCount <= col) {\n      throw new Error(`${row}, ${col}`);\n    }\n\n    return this.modules[row][col];\n  }\n\n  public addData(data: string): void {\n    this.dataList.push(new BitByte(data));\n    this.dataCache = null;\n  }\n\n  public getModuleCount(): number {\n    return this.moduleCount;\n  }\n\n  public make(): void {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n}\n","// import { unzlibSync } from \"fflate\";\nimport { unzlibSync, createVideoEntity } from \"../../extensions\";\nimport { platform } from \"../../platform\";\nimport type { PlatformVideo } from \"../../types\";\n\n/**\n * SVGA 下载解析器\n */\nexport class Parser {\n  /**\n   * 解压视频源文件\n   * @param data\n   * @returns\n   */\n  static decompress(data: ArrayBufferLike): ArrayBufferLike {\n    return unzlibSync(new Uint8Array(data)).buffer;\n  }\n\n  /**\n   * 解析视频实体\n   * @param data 视频二进制数据\n   * @param url 视频地址\n   * @param needDecompress 是否解压\n   * @returns\n   */\n  static parseVideo(\n    data: ArrayBufferLike,\n    url: string,\n    needDecompress: boolean = true\n  ): PlatformVideo.Video {\n    return createVideoEntity(\n      new Uint8Array(needDecompress ? this.decompress(data) : data),\n      platform.path.filename(url)\n    );\n  }\n\n  /**\n   * 读取文件资源\n   * @param url 文件资源地址\n   * @returns\n   */\n  static async download(url: string): Promise<ArrayBuffer> {\n    const { globals, remote, path, local } = platform;\n    const { env } = globals;\n    const supportLocal = env !== \"h5\" && env !== \"tt\";\n    const filepath = path.is(url)\n        ? url\n        : path.resolve(path.filename(url));\n\n    // 本地读取\n    if (supportLocal) {\n      if (await local!.exists(filepath)) {\n        return local!.read(filepath);\n      }\n    }\n\n    // 远程读取\n    const buff = await remote.fetch(url);\n\n    // 本地缓存\n    if (supportLocal) {\n      try {\n        await local!.write(buff, filepath);\n      } catch (ex) {\n        // eslint-disable-next-line no-console\n        console.error(ex);\n      }\n    }\n\n    return buff;\n  }\n\n  /**\n   * 通过 url 下载并解析 SVGA 文件\n   * @param url SVGA 文件的下载链接\n   * @returns Promise<SVGA 数据源\n   */\n  static async load(url: string): Promise<PlatformVideo.Video> {\n    return Parser.parseVideo((await Parser.download(url))!, url);\n  }\n}\n","// import benchmark from \"octopus-benchmark\";\nimport Reader from \"./io/Reader\";\nimport { MovieEntity } from \"./serialization\";\n\nexport type * from \"./serialization\";\n\nexport function createVideoEntity(data: Uint8Array, filename: string) {\n  if (data instanceof Uint8Array) {\n    const reader = new Reader(data);\n    const video = MovieEntity.decode(reader);\n\n    // benchmark.log('preflight cache size', reader.preflight.size);\n    // benchmark.log('preflight hit count', reader.preflight.hitCount);\n    video.filename = filename;\n    reader.preflight.clear();\n\n    return video;\n  }\n\n  throw new Error(\"Invalid data type\");\n}\n","import type { PlatformCanvas, PlatformOffscreenCanvas } from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport type { PaintModel, PaintMode } from \"../../types\";\n\nconst { noop } = platform;\n\nexport class Painter {\n  /**\n   * 主屏的 Canvas 元素\n   * Main Screen\n   */\n  public X: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n  /**\n   * 主屏的 Context 对象\n   * Main Context\n   */\n  public XC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n  /**\n   * 副屏的 Canvas 元素\n   * Secondary Screen\n   */\n  public Y: PlatformCanvas | PlatformOffscreenCanvas | null = null;\n  /**\n   * 副屏的 Context 对象\n   * Secondary Context\n   */\n  public YC:\n    | CanvasRenderingContext2D\n    | OffscreenCanvasRenderingContext2D\n    | null = null;\n  /**\n   * 画布的宽度\n   */\n  public W: number;\n  /**\n   * 画布的高度\n   */\n  public H: number;\n  /**\n   * 粉刷模式\n   */\n  private model: PaintModel = {} as PaintModel;\n\n  /**\n   *\n   * @param mode\n   *  - poster: 海报模式\n   *  - animation: 动画模式\n   *  - 默认为 animation\n   * @param W 海报模式必须传入\n   * @param H 海报模式必须传入\n   */\n  constructor(\n    private readonly mode: PaintMode = \"animation\",\n    width = 0,\n    height = 0\n  ) {\n    const { dpr } = platform.globals;\n\n    this.W = width * dpr;\n    this.H = height * dpr;\n  }\n\n  /**\n   * 设置 Canvas 的处理模式\n   * - C：代表 Canvas\n   * - O：代表 OffscreenCanvas\n   */\n  private setModel(type: \"C\" | \"O\"): void {\n    const { model } = this;\n    const { env } = platform.globals;\n\n    // set type\n    model.type = type;\n\n    // set clear\n    if (\n      type === \"O\" &&\n      // OffscreenCanvas 在 Firefox 浏览器无法被清理历史内容\n      env === \"h5\" &&\n      navigator.userAgent.includes(\"Firefox\")\n    ) {\n      model.clear = \"CR\";\n    } else if ((type === \"O\" && env === \"tt\") || env === \"alipay\") {\n      model.clear = \"CL\";\n    } else {\n      model.clear = \"RE\";\n    }\n  }\n\n  /**\n   * 注册画笔，根据环境判断生成最优的绘制方式\n   * @param selector\n   * @param ofsSelector\n   * @param component\n   */\n  public async register(\n    selector: string,\n    ofsSelector?: string,\n    component?: any\n  ) {\n    const { model, mode } = this;\n    const { getCanvas, getOfsCanvas } = platform;\n    const { env } = platform.globals;\n    // #region set main screen implement\n    // -------- 创建主屏 ---------\n    if (\n      mode === \"poster\" &&\n      (env !== \"h5\" || \"OffscreenCanvas\" in globalThis)\n    ) {\n      const { W, H } = this;\n      const { canvas, context } = getOfsCanvas({ width: W, height: H });\n\n      this.X = canvas;\n      this.XC = context;\n      this.setModel(\"O\");\n    } else {\n      const { canvas, context } = await getCanvas(selector, component);\n      const { width, height } = canvas;\n      // 添加主屏\n      this.X = canvas;\n      this.XC = context;\n      this.setModel(\"C\");\n\n      if (mode === \"poster\") {\n        canvas.width = this.W;\n        canvas.height = this.H;\n      } else {\n        this.W = width;\n        this.H = height;\n      }\n    }\n    // #endregion set main screen implement\n\n    // #region clear main screen implement\n    // ------- 生成主屏清理函数 -------\n    // FIXME:【支付宝小程序】无法通过改变尺寸来清理画布\n    if (model.clear === \"CL\") {\n      this.clearContainer = () => {\n        const { W, H, XC } = this;\n\n        XC!.clearRect(0, 0, W, H);\n      };\n    } else {\n      this.clearContainer = () => {\n        const { W, H, X } = this;\n\n        X!.width = W;\n        X!.height = H;\n      };\n    }\n    // #endregion clear main screen implement\n\n    if (mode === \"poster\") {\n      this.Y = this.X;\n      this.YC = this.XC;\n      this.clearSecondary = this.stick = noop;\n    } else {\n      // #region set secondary screen implement\n      // ------- 创建副屏 ---------\n      let ofsResult;\n\n      if (typeof ofsSelector === \"string\" && ofsSelector !== \"\") {\n        ofsResult = await getCanvas(ofsSelector, component);\n        ofsResult.canvas.width = this.W;\n        ofsResult.canvas.height = this.H;\n        this.setModel(\"C\");\n      } else {\n        ofsResult = getOfsCanvas({ width: this.W, height: this.H });\n        this.setModel(\"O\");\n      }\n\n      this.Y = ofsResult.canvas;\n      this.YC = ofsResult.context;\n      // #endregion set secondary screen implement\n\n      // #region clear secondary screen implement\n      // ------- 生成副屏清理函数 --------\n      switch (model.clear) {\n        case \"CR\":\n          this.clearSecondary = () => {\n            const { W, H } = this;\n            // FIXME:【支付宝小程序】频繁创建新的 OffscreenCanvas 会出现崩溃现象\n            const { canvas, context } = getOfsCanvas({ width: W, height: H });\n\n            this.Y = canvas;\n            this.YC = context;\n          };\n          break;\n        case \"CL\":\n          this.clearSecondary = () => {\n            const { W, H, YC } = this;\n            // FIXME:【支付宝小程序】无法通过改变尺寸来清理画布，无论是Canvas还是OffscreenCanvas\n            YC!.clearRect(0, 0, W, H);\n          };\n          break;\n        default:\n          this.clearSecondary = () => {\n            const { W, H, Y } = this;\n          \n            Y!.width = W;\n            Y!.height = H;\n          };\n      }\n      // #endregion clear secondary screen implement\n    }\n  }\n\n  public clearContainer: () => void = noop;\n\n  public clearSecondary: () => void = noop;\n\n  public stick() {\n    const { W, H, mode } = this;\n\n    if (mode !== \"poster\") {\n      this.XC!.drawImage(this.YC!.canvas, 0, 0, W, H);\n    }\n  }\n\n  /**\n   * 销毁画笔\n   */\n  public destroy() {\n    this.clearContainer();\n    this.clearSecondary();\n    this.X = this.XC = this.Y = this.YC = null;\n    this.clearContainer = this.clearSecondary = this.stick = noop;\n  }\n}\n","import {\n  type PlatformVideo,\n  type PlayerConfig,\n  PLAYER_FILL_MODE,\n  PLAYER_PLAY_MODE,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Config {\n  /**\n   * 最后停留的目标模式，类似于 animation-fill-mode，默认值 forwards。\n   */\n  public fillMode = PLAYER_FILL_MODE.BACKWARDS;\n  /**\n   * 播放模式，默认值 forwards\n   */\n  public playMode = PLAYER_PLAY_MODE.FORWARDS;\n  /**\n   * 填充模式，类似于 content-mode。\n   */\n  public contentMode = PLAYER_CONTENT_MODE.FILL;\n  /**\n   * 开始播放的帧，默认值 0\n   */\n  public startFrame = 0;\n  /**\n   * 结束播放的帧，默认值 0\n   */\n  public endFrame = 0;\n  /**\n   * 循环播放的开始帧，默认值 0\n   */\n  public loopStartFrame = 0;\n  /**\n   * 循环次数，默认值 0（无限循环）\n   */\n  public loop = 0;\n\n  public register(config: Partial<PlayerConfig>) {\n    if (typeof config.loop === \"number\" && config.loop >= 0) {\n      this.loop = config.loop;\n    }\n\n    if (\n      config.fillMode &&\n      [\n        PLAYER_FILL_MODE.FORWARDS,\n        PLAYER_FILL_MODE.BACKWARDS,\n        PLAYER_FILL_MODE.NONE,\n      ].includes(config.fillMode)\n    ) {\n      this.fillMode = config.fillMode;\n    }\n\n    if (\n      config.playMode &&\n      [PLAYER_PLAY_MODE.FORWARDS, PLAYER_PLAY_MODE.FALLBACKS].includes(\n        config.playMode\n      )\n    ) {\n      this.playMode = config.playMode;\n    }\n\n    if (typeof config.startFrame === \"number\" && config.startFrame >= 0) {\n      this.startFrame = config.startFrame;\n    }\n\n    if (typeof config.endFrame === \"number\" && config.endFrame >= 0) {\n      this.endFrame = config.endFrame;\n    }\n\n    if (\n      typeof config.loopStartFrame === \"number\" &&\n      config.loopStartFrame >= 0\n    ) {\n      this.loopStartFrame = config.loopStartFrame;\n    }\n\n    if (typeof config.contentMode === \"string\") {\n      this.contentMode = config.contentMode;\n    }\n  }\n\n  public setItem<T extends keyof PlayerConfig>(key: T, value: PlayerConfig[T]) {\n    this.register({ [key]: value });\n  }\n\n  public getConfig(entity: PlatformVideo.Video) {\n    const { playMode, loopStartFrame, startFrame, endFrame, fillMode, loop } =\n      this;\n    const { fps, sprites } = entity;\n    let { frames } = entity;\n    const spriteCount = sprites.length;\n    const start = startFrame > 0 ? startFrame : 0;\n    const end = endFrame > 0 && endFrame < frames ? endFrame : frames;\n    // 每帧持续的时间\n    const frameDuration = 1000 / fps;\n\n    if (start > end) {\n      throw new Error(\"StartFrame should greater than EndFrame\");\n    }\n\n    // 更新活动帧总数\n    if (end < frames) {\n      frames = end - start;\n    } else if (start > 0) {\n      frames -= start;\n    }\n\n    const duration = Math.floor(frames * frameDuration * 10 ** 6) / 10 ** 6;\n    let currFrame = 0;\n    let extFrame = 0;\n    let loopStart: number;\n\n    // 顺序播放/倒叙播放\n    if (playMode === PLAYER_PLAY_MODE.FORWARDS) {\n      // 重置为开始帧\n      currFrame = Math.max(loopStartFrame, startFrame);\n      if (fillMode === PLAYER_FILL_MODE.FORWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame > start ? (loopStartFrame - start) * frameDuration : 0;\n    } else {\n      // 重置为开始帧\n      currFrame = Math.min(loopStartFrame, end - 1);\n      if (fillMode === PLAYER_FILL_MODE.BACKWARDS) {\n        extFrame = 1;\n      }\n      loopStart =\n        loopStartFrame < end ? (end - loopStartFrame) * frameDuration : 0;\n    }\n\n    return {\n      currFrame,\n      startFrame: start,\n      endFrame: end,\n      totalFrame: frames,\n      spriteCount,\n      aniConfig: {\n        // 单个周期的运行时长\n        duration,\n        // 第一个周期开始时间偏移量\n        loopStart,\n        // 循环次数\n        loop: loop === 0 ? Infinity : loop,\n        // 最后一帧不在周期内，需要单独计算\n        fillValue: extFrame * frameDuration,\n      },\n    };\n  }\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder, QRCode } from \"../extensions\";\n\nexport interface IQrCodeImgOptions {\n  /**\n   * 二维码内容\n   */\n  code: string;\n  /**\n   * 二维码的大小\n   */\n  size: number;\n  /**\n   * 二维码的码元 二维码横向有多少个小点（1 - 40）\n   */\n  typeNumber?: number;\n  /**\n   * 二维码的纠错等级\n   * L: 7%（错误字码在 7% 以内可被修正, 容错率较低不建议使用）\n   * M: 15%（错误字码在 15% 以内可被修正, 容错率较低不建议使用）\n   * Q: 25%（错误字码在 25% 以内可被修正）\n   * H: 30%（错误字码在 30% 以内可被修正）\n   */\n  correctLevel?: \"L\" | \"M\" | \"Q\" | \"H\";\n  /**\n   * 二维码颜色，仅支持 六位的十六进制颜色值，暂不支持透明色 (仅对二维码生效)\n   */\n  codeColor?: string;\n  /**\n   * 二维码背景颜色，仅支持 六位的十六进制 颜色值。暂不支持透明色 (仅对二维码生效)\n   */\n  backgroundColor?: string;\n}\n\nfunction parseOptions(options: IQrCodeImgOptions) {\n  const typeNumber = options.typeNumber ?? 4;\n  const correctLevel = options.correctLevel ?? \"H\";\n  const codeColor = options.codeColor ?? \"#000000\";\n  const backgroundColor = options.backgroundColor ?? \"#FFFFFF\";\n\n  return {\n    code: options.code,\n    size: options.size,\n    typeNumber,\n    correctLevel,\n    codeColor,\n    backgroundColor,\n  };\n}\n\nconst calcCellSizeAndPadding = (moduleCount: number, size: number) => {\n  const cellSize = ~~(size / moduleCount);\n\n  return {\n    padding: ~~((size - moduleCount * cellSize) / 2),\n    cellSize: cellSize || 2,\n  };\n};\n\nexport function generateImageBufferFromCode(options: IQrCodeImgOptions) {\n  const { code, typeNumber, correctLevel, size, codeColor, backgroundColor } =\n    parseOptions(options);\n  let qr: QRCode;\n\n  try {\n    qr = new QRCode(typeNumber, correctLevel);\n    qr.addData(code);\n    qr.make();\n  } catch (e) {\n    if (typeNumber >= 40) {\n      throw new Error(\"Text too long to encode\");\n    }\n\n    return arguments.callee({\n      code,\n      size,\n      correctLevel,\n      typeNumber: typeNumber + 1,\n      codeColor,\n      backgroundColor,\n    });\n  }\n\n  // calc cellsize and margin\n  const moduleCount = qr.getModuleCount();\n  const { padding, cellSize } = calcCellSizeAndPadding(moduleCount, size);\n  const max = moduleCount * cellSize + padding;\n  const CODE_COLOR = +`${codeColor.replace(\"#\", \"0x\")}FF`;\n  const BACKGROUND_COLOR = +`${backgroundColor.replace(\"#\", \"0x\")}FF`;\n  const png = new PNGEncoder(size, size);\n\n  for (let y = 0; y < size; y++) {\n    for (let x = 0; x < size; x++) {\n      if (padding <= x && x < max && padding <= y && y < max) {\n        const c = ~~((x - padding) / cellSize);\n        const r = ~~((y - padding) / cellSize);\n\n        png.setPixel(x, y, qr.isDark(r, c) ? CODE_COLOR : BACKGROUND_COLOR);\n      } else {\n        png.setPixel(x, y, BACKGROUND_COLOR);\n      }\n    }\n  }\n\n  return png.flush();\n}\n\nexport function generateImageFromCode(options: IQrCodeImgOptions) {\n  const buff = generateImageBufferFromCode(options);\n\n  return platform.decode.toDataURL(buff);\n}\n","import { platform } from \"../platform\";\nimport { PNGEncoder } from \"../extensions\";\n\nexport function getBufferFromImageData(imageData: ImageData) {\n  const { width, height, data } = imageData;\n\n  return new PNGEncoder(width, height).write(data).flush();\n}\n\nexport function getDataURLFromImageData(imageData: ImageData) {\n  const buff = getBufferFromImageData(imageData);\n\n  return platform.decode.toDataURL(buff);\n}\n","import { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport type { PlatformVideo } from \"../types/video\";\n\nexport interface Bucket {\n  // 远程地址\n  origin: string;\n  // 本地地址\n  local: string;\n  // 实例\n  entity: PlatformVideo.Video | null;\n  // 下载实例中\n  promise: Promise<ArrayBufferLike> | null;\n}\n\nexport interface NeedUpdatePoint {\n  action: \"remove\" | \"add\";\n  start: number;\n  end: number;\n}\n\nexport type LoadMode = \"fast\" | \"whole\";\n\nexport interface VideoManagerOptions {\n  preprocess: (bucket: Bucket) => Promise<ArrayBufferLike>;\n  postprocess: (\n    bucket: Bucket,\n    buff: ArrayBufferLike\n  ) => Promise<PlatformVideo.Video> | PlatformVideo.Video;\n  cleanup: (buckets: Bucket[]) => Promise<void> | void;\n}\n\nexport class VideoManager {\n  /**\n   * 视频池的当前指针位置\n   */\n  private point: number = 0;\n  /**\n   * 视频的最大留存数量，其他视频将放在磁盘上缓存\n   */\n  private maxRemain: number = 3;\n  /**\n   * 留存视频的开始指针位置\n   */\n  private remainStart: number = 0;\n  /**\n   * 留存视频的结束指针位置\n   */\n  private remainEnd: number = 0;\n  /**\n   * 视频加载模式\n   * - 快速加载模式：可保证当前视频加载完成后，尽快播放；其他请求将使用Promise的方式保存在bucket中，以供后续使用\n   * - 完整加载模式：可保证所有视频加载完成，确保播放切换的流畅性\n   */\n  private loadMode: LoadMode = \"fast\";\n  /**\n   * 视频池的所有数据\n   */\n  private buckets: Bucket[] = [];\n\n  private readonly options: VideoManagerOptions = {\n    /**\n     * 预处理动效数据\n     * @param url\n     * @returns\n     */\n    preprocess: (bucket: Bucket) => Parser.download(bucket.origin),\n    /**\n     * 后处理动效数据\n     * @param bucket\n     * @param data\n     * @returns\n     */\n    postprocess: (bucket: Bucket, data: ArrayBufferLike) =>\n      Parser.parseVideo(data, bucket.origin, true),\n    /**\n     * 清理数据\n     * @param buckets\n     * @returns\n     */\n    cleanup: (buckets: Bucket[]) => {\n      const { globals, local, path } = platform;\n\n      buckets.forEach((bucket: Bucket) => {\n        if (path.is(bucket.local)) {\n          local!.remove(bucket.local);\n        }\n      });\n    },\n  };\n\n  /**\n   * 获取视频池大小\n   */\n  get size(): number {\n    return this.buckets.length;\n  }\n\n  constructor(loadMode: LoadMode, options?: Partial<VideoManagerOptions>) {\n    if (typeof loadMode === \"string\") {\n      this.loadMode = loadMode;\n    }\n\n    Object.assign(this.options, options);\n  }\n\n  /**\n   * 更新留存指针位置\n   */\n  private updateRemainRange(\n    point: number,\n    maxRemain: number,\n    totalCount: number\n  ): void {\n    if (point < 0) {\n      this.point = 0;\n    } else if (point >= totalCount) {\n      this.point = totalCount - 1;\n    } else {\n      this.point = point;\n    }\n\n    if (this.loadMode === \"whole\") {\n      this.remainStart = 0;\n      this.remainEnd = totalCount;\n    } else {\n      if (maxRemain < 1) {\n        this.maxRemain = 1;\n      } else if (maxRemain > totalCount) {\n        this.maxRemain = totalCount;\n      } else {\n        this.maxRemain = maxRemain;\n      }\n\n      this.remainStart = this.point - Math.floor(this.maxRemain / 2);\n      if (this.remainStart < 0) {\n        this.remainStart = totalCount + this.remainStart;\n      }\n\n      this.remainEnd = this.remainStart + this.maxRemain;\n      if (this.remainEnd > totalCount) {\n        this.remainEnd = this.remainEnd % totalCount;\n      }\n    }\n  }\n\n  /**\n   * 指针是否在留存空间内\n   * @param point\n   * @returns\n   */\n  private includeRemainRange(point: number): boolean {\n    if (this.remainStart < this.remainEnd) {\n      return point >= this.remainStart && point < this.remainEnd;\n    }\n\n    if (this.remainStart > this.remainEnd) {\n      return point >= this.remainStart || point < this.remainEnd;\n    }\n\n    return true;\n  }\n\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse?: false\n  ): Promise<ArrayBuffer>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: true\n  ): Promise<PlatformVideo.Video>;\n  private async downloadAndParseVideo(\n    bucket: Bucket,\n    needParse: boolean = false\n  ) {\n    const { options } = this;\n    const data = await options.preprocess(bucket);\n\n    if (needParse) {\n      return options.postprocess(bucket, data);\n    }\n\n    return data;\n  }\n\n  /**\n   * 创建bucket\n   * @param url 远程地址\n   * @param point 指针位置\n   * @param needDownloadAndParse 是否需要下载并解析\n   * @returns\n   */\n  private async createBucket(\n    url: string,\n    point: number,\n    needDownloadAndParse: boolean\n  ): Promise<Bucket> {\n    const { path } = platform;\n    const bucket: Bucket = {\n      origin: url,\n      local: path.resolve(path.filename(url)),\n      entity: null,\n      promise: null,\n    };\n\n    this.buckets[point] = bucket;\n    if (needDownloadAndParse) {\n      bucket.entity = await this.downloadAndParseVideo(bucket, true);\n    } else if (this.includeRemainRange(point)) {\n      bucket.promise = this.downloadAndParseVideo(bucket);\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 预加载视频到本地磁盘中\n   * @param urls 视频远程地址\n   * @param point 当前指针位置\n   * @param maxRemain 最大留存数量\n   */\n  async prepare(\n    urls: string[],\n    point: number = 0,\n    maxRemain: number = 3\n  ): Promise<void> {\n    this.updateRemainRange(point, maxRemain, urls.length);\n\n    const { loadMode, point: currentPoint } = this;\n    // 优先加载当前动效\n    const preloadBucket: Bucket = await this.createBucket(\n      urls[currentPoint],\n      currentPoint,\n      true\n    );\n\n    await Promise.all(\n      urls.map((url: string, index: number) => {\n        // 当前帧的视频已经预加载到内存中\n        if (index === currentPoint) {\n          return preloadBucket;\n        }\n\n        return this.createBucket(url, index, loadMode === \"whole\");\n      })\n    );\n  }\n\n  /**\n   * 获取当前帧的bucket\n   * @returns\n   */\n  async get(): Promise<Bucket> {\n    const bucket = this.buckets[this.point];\n\n    if (bucket.promise) {\n      bucket.entity = await bucket.promise.then((data: ArrayBufferLike) =>\n        this.options.postprocess(bucket, data)\n      );\n      bucket.promise = null;\n    } else if (!bucket.entity) {\n      bucket.entity = await this.downloadAndParseVideo(bucket, true);\n    }\n\n    return bucket;\n  }\n\n  /**\n   * 获取当前的指针位置\n   * @returns\n   */\n  getPoint(): number {\n    return this.point;\n  }\n\n  /**\n   * 获取指定位置的bucket\n   * @param pos\n   * @returns\n   */\n  async go(point: number): Promise<Bucket> {\n    const { size, buckets, loadMode } = this;\n\n    if (point < 0 || point >= size) {\n      return buckets[this.point];\n    }\n\n    this.updateRemainRange(point, this.maxRemain, buckets.length);\n    if (loadMode === \"fast\" && this.maxRemain !== buckets.length) {\n      buckets.forEach((bucket: Bucket, index: number) => {\n        if (this.includeRemainRange(index)) {\n          if (bucket.entity === null && bucket.promise === null) {\n            bucket.promise = this.downloadAndParseVideo(bucket);\n          }\n        } else {\n          bucket.entity = null;\n          bucket.promise = null;\n        }\n      });\n    }\n\n    return this.get();\n  }\n\n  /**\n   * 清理所有的bucket\n   * @returns\n   */\n  async clear(needRemoveFiles: boolean = true): Promise<void> {\n    const { buckets } = this;\n\n    this.point = 0;\n    this.remainStart = 0;\n    this.remainEnd = 0;\n    this.maxRemain = 3;\n    this.buckets = [];\n\n    if (needRemoveFiles) {\n      await this.options.cleanup(buckets);\n    }\n  }\n}\n","import type { RawImage, PlatformImage } from \"octopus-platform\";\nimport { platform } from \"../platform\";\nimport { Parser } from \"../core/parser\";\nimport { generateImageBufferFromCode, IQrCodeImgOptions } from \"./qrcode\";\nimport { getBufferFromImageData } from \"./png\";\nimport type { ResourceManager } from \"./ResourceManager\";\nimport type { Painter } from \"../core/painter\";\nimport type { PlatformVideo, PlatformRenderingContext2D } from \"../types\";\n\ninterface VideoEditorOptions {\n  // 模式: R 替换, A 追加\n  mode?: \"R\" | \"A\";\n}\n\nexport class VideoEditor {\n  constructor(\n    private readonly painter: Painter,\n    private readonly resource: ResourceManager,\n    private readonly entity: PlatformVideo.Video\n  ) {}\n\n  private async set(\n    key: string,\n    value: RawImage,\n    mode: VideoEditorOptions[\"mode\"] = \"R\"\n  ) {\n    const { entity, resource } = this;\n\n    if (mode === \"A\") {\n      await resource.loadImagesWithRecord(\n        { [key]: value },\n        entity.filename,\n        \"dynamic\"\n      );\n    } else {\n      entity.images[key] = value;\n    }\n  }\n\n  /**\n   * 获取自定义编辑器\n   * @returns\n   */\n  getContext() {\n    return this.painter.YC;\n  }\n\n  /**\n   * 是否是有效的Key\n   * @param key\n   * @returns\n   */\n  hasValidKey(key: string): boolean {\n    const { images } = this.entity;\n\n    if (typeof Object.hasOwn === \"function\") {\n      return Object.hasOwn(images, key);\n    }\n\n    return Object.prototype.hasOwnProperty.call(images, key);\n  }\n\n  /**\n   * 加载并缓存图片\n   * @param source\n   * @param url\n   * @returns\n   */\n  loadImage(\n    source: Uint8Array | string,\n    url: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return this.resource.loadExtImage(source, platform.path.filename(url));\n  }\n\n  /**\n   * 创建画布图片\n   * @param key\n   * @param context\n   * @param options\n   * @returns\n   */\n  async setCanvas(\n    key: string,\n    context: PlatformRenderingContext2D,\n    options?: VideoEditorOptions & { width?: number; height?: number }\n  ) {\n    if (this.entity.locked) return;\n\n    const { canvas } = context;\n    const width = options?.width ?? canvas.width;\n    const height = options?.height ?? canvas.height;\n    const imageData = context.getImageData(0, 0, width, height);\n\n    await this.set(\n      key,\n      new Uint8Array(getBufferFromImageData(imageData)),\n      options?.mode\n    );\n  }\n\n  /**\n   * 创建二进制图片\n   * @param key\n   * @param buff\n   * @param options\n   * @returns\n   */\n  async setImage(key: string, url: string, options?: VideoEditorOptions) {\n    if (this.entity.locked) return;\n\n    if (url.startsWith(\"data:image\")) {\n      await this.set(key, url, options?.mode);\n    } else {\n      await this.set(\n        key,\n        new Uint8Array(await Parser.download(url)),\n        options?.mode\n      );\n    }\n  }\n\n  /**\n   * 创建二维码图片\n   * @param key\n   * @param code\n   * @param options\n   * @returns\n   */\n  async setQRCode(\n    key: string,\n    code: string,\n    options: VideoEditorOptions & Omit<IQrCodeImgOptions, \"code\">\n  ) {\n    if (this.entity.locked) return;\n\n    await this.set(\n      key,\n      new Uint8Array(generateImageBufferFromCode({ ...options, code })),\n      options?.mode\n    );\n  }\n}\n","import type { RawImage, PlatformImage, Bitmap } from \"octopus-platform\";\nimport { Painter } from \"../core/painter\";\nimport { platform } from \"../platform\";\nimport type { RawImages } from \"../types\";\n\nexport class ResourceManager {\n  /**\n   * 判断是否是 ImageBitmap\n   * @param img\n   * @returns\n   */\n  private static isBitmap(img: any): boolean {\n    return platform.globals.env === \"h5\" && img instanceof ImageBitmap;\n  }\n\n  /**\n   * 释放内存资源（图片）\n   * @param img\n   */\n  private static releaseOne(img: PlatformImage | ImageBitmap) {\n    if (ResourceManager.isBitmap(img)) {\n      (img as ImageBitmap).close();\n    } else if ((img as PlatformImage).src !== \"\") {\n      // 【微信】将存在本地的文件删除，防止用户空间被占满\n      if (\n        platform.globals.env === \"weapp\" &&\n        (img as PlatformImage).src.includes(\n          platform.path.USER_DATA_PATH\n        )\n      ) {\n        platform.local!.remove((img as PlatformImage).src);\n      }\n\n      platform.image.release(img as PlatformImage);\n    }\n  }\n\n  // FIXME: 微信小程序创建调用太多createImage会导致微信/微信小程序崩溃\n  private caches: Array<PlatformImage | ImageBitmap> = [];\n\n  /**\n   * 动态素材\n   */\n  public readonly dynamicMaterials: Map<string, Bitmap> =\n    new Map();\n\n  /**\n   * 素材\n   */\n  public readonly materials: Map<string, Bitmap> = new Map();\n\n  /**\n   * 已清理Image对象的坐标\n   */\n  private point: number = 0;\n\n  constructor(private readonly painter: Painter) {}\n\n  /**\n   * 创建图片标签\n   * @returns\n   */\n  private createImage(): PlatformImage {\n    let img: PlatformImage | null = null;\n\n    if (this.point > 0) {\n      this.point--;\n      img = this.caches.shift() as PlatformImage;\n    }\n\n    if (!img) {\n      img = platform.image.create(this.painter.X!);\n    }\n\n    this.caches.push(img);\n\n    return img;\n  }\n\n  /**\n   * 将 ImageBitmap 插入到 caches\n   * @param img\n   */\n  private inertBitmapIntoCaches(\n    img: PlatformImage | ImageBitmap\n  ) {\n    if (ResourceManager.isBitmap(img)) {\n      this.caches.push(img);\n    }\n  }\n\n  /**\n   * 加载额外的图片资源\n   * @param source 资源内容/地址\n   * @param filename 文件名称\n   * @returns\n   */\n  public loadExtImage(\n    source: string | Uint8Array,\n    filename: string\n  ): Promise<PlatformImage | ImageBitmap> {\n    return platform.image\n      .load(\n        () => this.createImage(),\n        source,\n        platform.path.resolve(filename, \"ext\")\n      )\n      .then((img) => {\n        this.inertBitmapIntoCaches(img);\n\n        return img;\n      });\n  }\n\n  /**\n   * 加载图片集\n   * @param images 图片数据\n   * @param filename 文件名称\n   * @returns\n   */\n  public async loadImagesWithRecord(\n    images: RawImages,\n    filename: string,\n    type: \"normal\" | \"dynamic\" = \"normal\"\n  ): Promise<void> {\n    const imageAwaits: Promise<void>[] = [];\n    const imageFilename = `${filename.replace(/\\.svga$/g, \"\")}.png`;\n\n    Object.entries(images).forEach(([name, image]) => {\n      // 过滤 1px 透明图\n      if (image instanceof Uint8Array && image.byteLength < 70) {\n        return;\n      }\n\n      const p = platform.image\n        .load(\n          () => this.createImage(),\n          image as RawImage,\n          platform.path.resolve(\n            imageFilename,\n            type === \"dynamic\" ? `dyn_${name}` : name\n          )\n        )\n        .then((img) => {\n          this.inertBitmapIntoCaches(img);\n          if (type === \"dynamic\") {\n            this.dynamicMaterials.set(name, img);\n          } else {\n            this.materials.set(name, img);\n          }\n        });\n\n      imageAwaits.push(p);\n    });\n\n    await Promise.all(imageAwaits);\n  }\n\n  /**\n   * 释放图片资源\n   */\n  public release(): void {\n    // FIXME: 小程序 image 对象需要手动释放内存，否则可能导致小程序崩溃\n    for (const img of this.caches) {\n      ResourceManager.releaseOne(img);\n    }\n\n    this.materials.clear();\n    this.dynamicMaterials.clear();\n    // FIXME: 支付宝小程序 image 修改 src 无法触发 onload 事件\n    platform.globals.env === \"alipay\" ? this.cleanup() : this.tidyUp();\n  }\n\n  /**\n   * 整理图片资源，将重复的图片资源移除\n   */\n  private tidyUp() {\n    // 通过 Set 的去重特性，保持 caches 元素的唯一性\n    this.caches = Array.from(new Set(this.caches));\n    this.point = this.caches.length;\n  }\n\n  /**\n   * 清理图片资源\n   */\n  public cleanup(): void {\n    this.caches.length = 0;\n    this.point = 0;\n  }\n}\n","import type { PlatformCanvas } from \"octopus-platform\";\nimport { platform } from \"../../platform\";\nimport { Painter } from \"../painter\";\nimport { Config } from \"./config\";\nimport { Animator, Renderer2D } from \"../../extensions\";\nimport { ResourceManager } from \"../../helper\";\nimport {\n  type PlatformVideo,\n  type PlayerConfigOptions,\n  type PlayerConfig,\n  type PlayerEventCallback,\n  type PlayerProcessEventCallback,\n  PLAYER_PLAY_MODE,\n  PLAYER_FILL_MODE,\n} from \"../../types\";\n\n/**\n * SVGA 播放器\n */\nexport class Player {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 当前配置项\n   */\n  private readonly config = new Config();\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter = new Painter();\n\n  /**\n   * 动画实例\n   */\n  private readonly animator: Animator = new Animator();\n\n  /**\n   * 渲染器实例\n   */\n  private renderer: Renderer2D | null = null;\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   * @property container 主屏，播放动画的 Canvas 元素\n   * @property secondary 副屏，播放动画的 Canvas 元素\n   * @property loop 循环次数，默认值 0（无限循环）\n   * @property fillMode 最后停留的目标模式，类似于 animation-fill-mode，接受值 forwards 和 fallbacks，默认值 forwards。\n   * @property playMode 播放模式，接受值 forwards 和 fallbacks ，默认值 forwards。\n   * @property startFrame 单个循环周期内开始播放的帧数，默认值 0\n   * @property endFrame 单个循环周期内结束播放的帧数，默认值 0\n   * @property loopStartFrame 循环播放的开始帧，仅影响第一个周期的开始帧，默认值 0\n   * @property enableInObserver 是否启用 IntersectionObserver 监听容器是否处于浏览器视窗内，默认值 false\n   */\n  public async setConfig(\n    options: string | PlayerConfigOptions,\n    component?: any\n  ): Promise<void> {\n    const config: PlayerConfigOptions =\n      typeof options === \"string\" ? { container: options } : options;\n    const { container, secondary } = config;\n\n    this.config.register(config);\n    // 监听容器是否处于浏览器视窗内\n    // this.setIntersectionObserver()\n    await this.painter.register(container, secondary, component);\n    this.renderer = new Renderer2D(this.painter.YC!);\n    this.resource = new ResourceManager(this.painter);\n    this.animator.onAnimate = platform.rAF.bind(\n      null,\n      this.painter.X as PlatformCanvas\n    );\n  }\n\n  /**\n   * 更新配置\n   * @param key\n   * @param value\n   */\n  public setItem<T extends keyof PlayerConfig>(\n    key: T,\n    value: PlayerConfig[T]\n  ): void {\n    this.config.setItem<T>(key, value);\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @returns Promise<void>\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) throw new Error(\"videoEntity undefined\");\n\n    const { images, filename } = videoEntity;\n\n    this.animator!.stop();\n    this.painter.clearSecondary();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 开始播放事件回调\n   * @param frame\n   */\n  public onStart?: PlayerEventCallback;\n  /**\n   * 重新播放事件回调\n   * @param frame\n   */\n  public onResume?: PlayerEventCallback;\n  /**\n   * 暂停播放事件回调\n   * @param frame\n   */\n  public onPause?: PlayerEventCallback;\n  /**\n   * 停止播放事件回调\n   * @param frame\n   */\n  public onStop?: PlayerEventCallback;\n  /**\n   * 播放中事件回调\n   * @param percent\n   * @param frame\n   * @param frames\n   */\n  public onProcess?: PlayerProcessEventCallback;\n  /**\n   * 结束播放事件回调\n   * @param frame\n   */\n  public onEnd?: PlayerEventCallback;\n\n  /**\n   * 开始播放\n   */\n  public start(): void {\n    this.startAnimation();\n    this.onStart?.();\n  }\n\n  /**\n   * 重新播放\n   */\n  public resume(): void {\n    if (this.animator.resume()) {\n      this.onResume?.();\n    }\n  }\n\n  /**\n   * 暂停播放\n   */\n  public pause(): void {\n    if (this.animator.pause()) {\n      this.onPause?.();\n    }\n  }\n\n  /**\n   * 停止播放\n   */\n  public stop(): void {\n    this.animator.stop();\n    this.painter.clearContainer();\n    this.painter.clearSecondary();\n    this.onStop?.();\n  }\n\n  /**\n   * 销毁实例\n   */\n  public destroy(): void {\n    this.animator.stop();\n    this.painter.destroy();\n    this.renderer?.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n\n  /**\n   * 跳转到指定帧\n   * @param frame 目标帧\n   * @param andPlay 是否立即播放\n   */\n  public stepToFrame(frame: number, andPlay = false) {\n    if (!this.entity || frame < 0 || frame >= this.entity.frames) return;\n\n    this.pause();\n    this.config.loopStartFrame = frame;\n    if (andPlay) {\n      this.start();\n    }\n  }\n\n  /**\n   * 跳转到指定百分比\n   * @param percent 目标百分比\n   * @param andPlay 是否立即播放\n   */\n  public stepToPercentage(percent: number, andPlay: boolean = false) {\n    if (!this.entity) return;\n\n    const { frames } = this.entity;\n    let frame = percent < 0 ? 0 : Math.round(percent * frames);\n\n    if (frame >= frames) {\n      frame = frames - 1;\n    }\n\n    debugger;\n    this.stepToFrame(frame, andPlay);\n  }\n\n  /**\n   * 开始绘制动画\n   */\n  private startAnimation(): void {\n    const { entity, config, animator, painter, renderer, resource } = this;\n    const { W, H } = painter;\n    const { fillMode, playMode, contentMode } = config;\n    const {\n      currFrame,\n      startFrame,\n      endFrame,\n      totalFrame,\n      spriteCount,\n      aniConfig,\n    } = config.getConfig(entity!);\n    const { duration, loopStart, loop, fillValue } = aniConfig;\n    const isReverseMode = playMode === PLAYER_PLAY_MODE.FALLBACKS;\n\n    // 当前帧\n    let currentFrame = currFrame;\n    // 片段绘制结束位置\n    let tail = 0;\n    let nextTail: number;\n    // 上一帧\n    let latestFrame: number;\n    // 下一帧\n    let nextFrame: number;\n    // 精确帧\n    let exactFrame: number;\n    // 当前已完成的百分比\n    let percent: number;\n    // 是否还有剩余时间\n    let hasRemained: boolean;\n\n    // 更新动画基础信息\n    animator.setConfig(duration, loopStart, loop, fillValue);\n    renderer!.resize(contentMode, entity!.size, { width: W, height: H });\n\n    // 分段渲染函数\n    const MAX_DRAW_TIME_PER_FRAME = 8;\n    const MAX_ACCELERATE_DRAW_TIME_PER_FRAME = 3;\n    const MAX_DYNAMIC_CHUNK_SIZE = 34;\n    const MIN_DYNAMIC_CHUNK_SIZE = 1;\n    // 动态调整每次绘制的块大小\n    let dynamicChunkSize = 4; // 初始块大小\n    let startTime: number;\n    let chunk: number;\n    let elapsed: number;\n    // 使用`指数退避算法`平衡渲染速度和流畅度\n    const patchDraw = (before: () => void) => {\n      startTime = platform.now();\n      before();\n\n      while (tail < spriteCount) {\n        // 根据当前块大小计算nextTail\n        chunk = Math.min(dynamicChunkSize, spriteCount - tail);\n        nextTail = (tail + chunk) | 0;\n        renderer!.render(\n          entity!,\n          resource!.materials,\n          resource!.dynamicMaterials,\n          currentFrame,\n          tail,\n          nextTail\n        );\n        tail = nextTail;\n        // 动态调整块大小\n        elapsed = platform.now() - startTime;\n\n        if (elapsed < MAX_ACCELERATE_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.min(\n            dynamicChunkSize * 2,\n            MAX_DYNAMIC_CHUNK_SIZE\n          ); // 加快绘制\n        } else if (elapsed > MAX_DRAW_TIME_PER_FRAME) {\n          dynamicChunkSize = Math.max(\n            dynamicChunkSize / 2,\n            MIN_DYNAMIC_CHUNK_SIZE\n          ); // 减慢绘制\n          break;\n        }\n      }\n    };\n\n    // 动画绘制过程\n    animator.onUpdate = (timePercent: number) => {\n      patchDraw(() => {\n        percent = isReverseMode ? 1 - timePercent : timePercent;\n        exactFrame = percent * totalFrame;\n\n        if (isReverseMode) {\n          nextFrame =\n            (timePercent === 0 ? endFrame : Math.ceil(exactFrame)) - 1;\n          // FIXME: 倒序会有一帧的偏差，需要校准当前帧\n          percent = currentFrame / totalFrame;\n        } else {\n          nextFrame = timePercent === 1 ? startFrame : Math.floor(exactFrame);\n        }\n\n        hasRemained = currentFrame === nextFrame;\n      });\n\n      if (hasRemained) return;\n\n      painter.clearContainer();\n      painter.stick();\n      painter.clearSecondary();\n      latestFrame = currentFrame;\n      currentFrame = nextFrame;\n      tail = 0;\n      this.onProcess?.(~~(percent * 100) / 100, latestFrame);\n    };\n    animator.onStart = () => {\n      entity!.locked = true;\n    };\n    animator.onEnd = () => {\n      entity!.locked = false;\n      // 如果不保留最后一帧渲染，则清空画布\n      if (fillMode === PLAYER_FILL_MODE.NONE) {\n        painter.clearContainer();\n      }\n\n      this.onEnd?.();\n    };\n    animator.start();\n  }\n}\n","import { Renderer2D } from \"../../extensions\";\nimport { ResourceManager } from \"../../helper\";\nimport { Painter } from \"../painter\";\nimport {\n  type PlatformVideo,\n  type PosterConfig,\n  type PosterConfigOptions,\n  PLAYER_CONTENT_MODE,\n} from \"../../types\";\n\nexport class Poster {\n  /**\n   * SVGA 元数据\n   * Video Entity\n   */\n  private entity: PlatformVideo.Video | undefined;\n\n  /**\n   * 海报配置项\n   */\n  private readonly config: PosterConfig = {\n    /**\n     * 主屏，绘制海报的 Canvas 元素\n     */\n    container: \"\",\n    /**\n     * 填充模式，类似于 content-mode。\n     */\n    contentMode: PLAYER_CONTENT_MODE.FILL,\n    /**\n     * 绘制成海报的帧，默认是0。\n     */\n    frame: 0,\n  };\n\n  /**\n   * 是否配置完成\n   */\n  private isConfigured = false;\n\n  /**\n   * 刷头实例\n   */\n  public readonly painter: Painter;\n\n  /**\n   * 资源管理器\n   */\n  public resource: ResourceManager | null = null;\n\n  /**\n   * 渲染器实例\n   */\n  private renderer: Renderer2D | null = null;\n\n  constructor(width: number, height: number) {\n    this.painter = new Painter(\"poster\", width, height);\n  }\n\n  /**\n   * 注册 SVGA 海报\n   * @param selector 容器选择器\n   * @param component 组件\n   */\n  private async register(\n    selector: string = \"\",\n    component?: any\n  ): Promise<void> {\n    await this.painter.register(selector, \"\", component);\n    this.renderer = new Renderer2D(this.painter.YC!);\n    this.resource = new ResourceManager(this.painter);\n  }\n\n  /**\n   * 设置配置项\n   * @param options 可配置项\n   */\n  public async setConfig(\n    options: string | PosterConfigOptions = {},\n    component?: any\n  ): Promise<void> {\n    if (typeof options === \"string\") {\n      this.config.container = options;\n    } else {\n      Object.assign(this.config, options);\n    }\n\n    this.isConfigured = true;\n    await this.register(this.config.container, component);\n  }\n\n  /**\n   * 修改内容模式\n   * @param contentMode\n   */\n  public setContentMode(contentMode: PLAYER_CONTENT_MODE): void {\n    this.config.contentMode = contentMode;\n  }\n\n  /**\n   * 设置当前帧\n   * @param frame\n   */\n  public setFrame(frame: number): void {\n    this.config.frame = frame;\n  }\n\n  /**\n   * 装载 SVGA 数据元\n   * @param videoEntity SVGA 数据源\n   * @param currFrame\n   * @returns\n   */\n  public async mount(videoEntity: PlatformVideo.Video): Promise<void> {\n    if (!videoEntity) {\n      throw new Error(\"videoEntity undefined\");\n    }\n\n    if (!this.isConfigured) {\n      await this.register();\n      this.isConfigured = true;\n    }\n\n    const { images, filename } = videoEntity;\n\n    this.painter.clearContainer();\n    this.resource!.release();\n    this.entity = videoEntity;\n\n    await this.resource!.loadImagesWithRecord(images, filename);\n  }\n\n  /**\n   * 绘制海报\n   */\n  public draw(): void {\n    if (!this.entity) return;\n\n    const { painter, renderer, resource, entity, config } = this;\n\n    renderer!.resize(config.contentMode, entity!.size, painter.X!);\n    renderer!.render(\n      entity!,\n      resource!.materials,\n      resource!.dynamicMaterials,\n      config.frame,\n      0,\n      entity!.sprites.length\n    );\n  }\n\n  /**\n   * 获取海报的 ImageData 数据\n   */\n  public toImageData(): ImageData {\n    const { XC: context, W: width, H: height } = this.painter;\n\n    return context!.getImageData(0, 0, width, height);\n  }\n\n  /**\n   * 销毁海报\n   */\n  public destroy(): void {\n    this.painter.destroy();\n    this.renderer?.destroy();\n    this.resource?.release();\n    this.resource?.cleanup();\n    this.entity = undefined;\n  }\n}\n","/**\n * 检查数据是否为zlib压缩格式\n * @param data 待检查的二进制数据\n * @returns 是否为zlib压缩格式\n */\nexport function isZlibCompressed(data: Uint8Array): boolean {\n  // 检查数据长度是否足够（至少需要2字节头部和4字节ADLER-32校验和）\n  if (data.length < 6) {\n    return false\n  }\n\n  // 获取CMF和FLG字节\n  const cmf = data[0]\n  const flg = data[1]\n\n  // 检查CMF的压缩方法（低4位为8表示DEFLATE）\n  // eslint-disable-next-line no-bitwise\n  if ((cmf & 0x0F) !== 8) {\n    return false\n  }\n\n  // 检查窗口大小（高4位通常为7，但不是严格要求）\n  // 这里不强制检查，因为理论上可以是其他值\n\n  // 验证头部校验（CMF * 256 + FLG必须是31的倍数）\n  if (((cmf * 256 + flg) % 31) !== 0) {\n    return false\n  }\n\n  // 检查字典标志位（如果设置了字典，需要额外验证，但这种情况很少见）\n  // eslint-disable-next-line no-bitwise\n  const fdict = (flg & 0x20) !== 0\n  if (fdict) {\n    // 标准zlib压缩通常不使用预定义字典\n    // 这里假设不使用字典，若检测到字典标志则认为不是标准zlib格式\n    return false\n  }\n\n  // 尝试提取ADLER-32校验和并验证其格式\n  // 虽然无法验证校验和值（需要解压后计算），但可以检查其是否为合理的数值\n  const adler32Bytes = data.slice(-4)\n\n  if (adler32Bytes.length !== 4) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  const adler32 = (adler32Bytes[0] << 24) | (adler32Bytes[1] << 16) | (adler32Bytes[2] << 8) | adler32Bytes[3]\n\n  // 有效的ADLER-32值应大于0（除非是空数据）\n  if (data.length > 2 && adler32 === 0) {\n    return false\n  }\n\n  // 所有检查都通过，数据可能是zlib压缩格式\n  return true\n}\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","SuppressedError","noop","EnhancedPlatform","_OctopusPlatform","_this","_classCallCheck","_callSuper","this","pluginSelector","pluginCanvas","pluginOfsCanvas","pluginDecode","pluginDownload","pluginFsm","pluginImage","pluginNow","pluginPath","pluginRAF","__VERSION__","init","_inherits","_createClass","key","plugin","installPlugin","platform","dataViewPool","currentViewIndex","readFloatLE","Array","fill","map","DataView","ArrayBuffer","buf","pos","length","RangeError","view","u8","Uint8Array","buffer","getFloat32","Preflight","caches","Map","count","get","size","reader","end","startPos","endPos","Math","min","len","buff","start","hash","i","toString","calculateHash","max","floor","hit","has","set","clear","Reader","preflight","writeLength","byte","shift","indexOutOfRange","undefined","readVarint32Slow","uint32","_this$getBytesRange2","_slicedToArray","getBytesRange","EMPTY_UINT8ARRAY","subarray","_this$getBytesRange4","decode","utf8","Error","wireType","skip","skipType","Layout","x","y","width","height","calculate","tag","message","float","format","_message$x","_message$y","_message$width","_message$height","Transform","a","b","c","d","tx","ty","ShapeArgs","string","RectArgs","cornerRadius","EllipseArgs","radiusX","radiusY","RGBAColor","r","g","concat","ShapeStyle","stroke","strokeWidth","lineCap","lineJoin","miterLimit","lineDashI","lineDashII","lineDashIII","int32","lineDash","push","ShapeEntity","type","shape","rect","ellipse","styles","transform","path","FrameEntity","shapes","alpha","layout","clipPath","HIDDEN_FRAME","SpriteEntity","frames","imageKey","matteKey","MovieParams","viewBoxWidth","viewBoxHeight","fps","MovieEntity","version","params","images","sprites","end2","tag2","EMPTY_U8","bytes","_message$params","filename","locked","dynamicElements","PointPool","pool","pop","x1","y1","x2","y2","point","Renderer2D","context","pointPool","lastResizeKey","globalTransform","currentPoint","acquire","save","resetShapeStyles","setTransform","beginPath","_step","_iterator","_createForOfIteratorHelper","parseSVGPath","s","n","_step$value","command","args","SVG_PATH","drawBezierElement","split","filter","Boolean","err","f","fillOrStroke","release","restore","method","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","closePath","w","h","kappa","ox","oy","xe","ye","xm","ym","radius","arcTo","drawBezier","drawEllipse","_a","_b","_c","_d","drawRect","_e","_f","_g","_h","_j","frame","bitmap","dynamicElement","_ref","_ref$a","_ref$b","_ref$c","_ref$d","_ref$tx","_ref$ty","globalAlpha","drawImage","drawShape","contentMode","videoSize","canvasSize","canvasWidth","canvasHeight","videoWidth","videoHeight","resizeKey","lastTransform","scale","scaleX","scaleY","translateX","translateY","calculateScale","videoEntity","materials","dynamicMaterials","currentFrame","head","tail","sprite","drawSprite","SVG_LETTER_REGEXP","currentIndex","state","currentCommand","currentArgs","char","test","trim","strokeStyle","lineWidth","fillStyle","setLineDash","imageRatio","viewRatio","isAspectFit","createTransform","Set","Animator","isRunning","startTime","duration","loopStart","pauseTime","loopDuration","onAnimate","onStart","onUpdate","onEnd","loop","fillValue","now","doFrame","doDeltaTime","deltaTime","percent","ended","stop","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","j","_freb","fl","revfl","_freb2","fd","revfd","rev","hMap","cd","mb","l","co","le","rvb","sv","v","m","flt","fdt","flm","flrm","fdm","fdrm","bits","p","o","bits16","shft","slc","ec","ind","msg","nt","code","captureStackTrace","wbits","wbits16","hTree","t","t2","slice","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","dt","lft","cst","lc","cl","cli","cln","cls","clen","cf","wfblk","out","dat","wblk","final","syms","lf","df","li","bs","bl","_hTree","dlt","mlb","_hTree2","ddt","mdb","_lc","lclt","nlc","_lc2","lcdt","ndc","lcfreq","_hTree3","lct","mlcb","nlcc","lm","ll","dm","dl","flen","ftlen","dtlen","llm","lcts","it","clct","sym","dst","deo","adler","dopt","opt","pre","post","st","dictionary","dict","newDat","lvl","plvl","z","ceil","lst","msk","prev","bs1","bs2","hsh","wi","hv","imod","pimod","rem","ch","dif","maxn","maxd","ml","nl","mmd","md","ti","lin","din","dflt","level","mem","log","wbytes","zlibSync","data","opts","lv","zlh","unzlibSync","sl","noBuf","resize","noSt","cbuf","nbuf","bt","lbt","dbt","tbts","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","lms","dms","lpos","add","dsym","dend","inflt","CRC32","TypeError","bytesToString","crc","WHITE_COLOR","table","Uint32Array","from","_","PNGEncoder","crc32","setUint32","chunkType","charCodeAt","partialChunk","ihdrData","setUint8","createChunk","startIdx","srcStart","validRowSize","rowSize","pixelsData","pixel","pixels","setPixel","iHDRChunk","createIHDRChunk","iDATChunk","createIDATChunk","iENDChunk","pngData","offset","BitBuffer","lengthInBits","bufIndex","num","putBit","bit","QRMode","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","BitByte","parsedData","byteArray","flat","unshift","put","RS_BLOCK_TABLE","RSBlock","typeNumber","errorCorrectLevel","rsBlock","getRSBlockTable","list","totalCount","dataCount","EXP_TABLE","LOG_TABLE","QRMath","Polynomial","glog","gexp","getAt","ratio","mod","PATTERN_POSITION_TABLE","genBCHDigit","log2","BCH_G15","BCH_G18","Util","maskPattern","_i","errorCorrectLength","multiply","mode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","qr","moduleCount","getModuleCount","lostPoint","row","col","dark","isDark","sameCount","nRow","nCol","darkCount","abs","pow","QRCode","modules","dataCache","dataList","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","nr","nc","minLostPoint","pattern","makeImpl","rsBlocks","getRSBlocks","write","totalDataCount","createBytes","maskFunc","inc","bitIndex","byteIndex","bitBuffer","dcdata","ecdata","maxDcCount","maxEcCount","dcCount","ecCount","rsPoly","modPoly","modIndex","totalCodeCount","index","getBestMaskPattern","Parser","url","video","createVideoEntity","decompress","globals","remote","local","env","supportLocal","filepath","is","_context","exists","read","fetch","_t","console","error","_callee","_context2","download","_t3","_t4","_t2","parseVideo","call","_callee2","Painter","arguments","X","XC","Y","YC","model","clearContainer","clearSecondary","dpr","W","navigator","userAgent","includes","selector","ofsSelector","component","getCanvas","getOfsCanvas","globalThis","_getOfsCanvas","canvas","setModel","_yield$getCanvas","clearRect","stick","ofsResult","_getOfsCanvas2","Config","fillMode","playMode","startFrame","endFrame","loopStartFrame","config","register","_defineProperty","entity","spriteCount","frameDuration","currFrame","extFrame","totalFrame","aniConfig","Infinity","generateImageBufferFromCode","options","_parseOptions","correctLevel","codeColor","backgroundColor","parseOptions","addData","make","callee","_calcCellSizeAndPaddi","cellSize","padding","calcCellSizeAndPadding","CODE_COLOR","replace","BACKGROUND_COLOR","png","flush","getBufferFromImageData","imageData","VideoManager","loadMode","maxRemain","remainStart","remainEnd","buckets","preprocess","bucket","origin","postprocess","cleanup","forEach","remove","Object","assign","bucket_1","needParse","_regenerator","needDownloadAndParse","promise","downloadAndParseVideo","includeRemainRange","urls_1","urls","_this2","_callee3","preloadBucket","_context3","updateRemainRange","createBucket","all","_context4","_this3","_callee4","_context5","_this4","_callee5","_this5","needRemoveFiles","_callee6","_context6","VideoEditor","painter","resource","key_1","value_1","loadImagesWithRecord","hasOwn","prototype","hasOwnProperty","source","loadExtImage","getImageData","startsWith","_t5","_t6","ResourceManager","img","image","create","isBitmap","load","createImage","inertBitmapIntoCaches","images_1","filename_1","imageAwaits","imageFilename","entries","_ref2","name","byteLength","releaseOne","tidyUp","ImageBitmap","close","src","USER_DATA_PATH","Player","animator","renderer","container","secondary","rAF","bind","setItem","startAnimation","resume","onResume","pause","onPause","onStop","destroy","andPlay","round","stepToFrame","nextTail","latestFrame","nextFrame","exactFrame","hasRemained","_config$getConfig","getConfig","isReverseMode","setConfig","chunk","elapsed","dynamicChunkSize","timePercent","before","render","patchDraw","onProcess","Poster","isConfigured","_this$painter","exports","generateImageFromCode","toDataURL","getDataURLFromImageData","isZlibCompressed","cmf","flg","adler32Bytes","adler32","defineProperty"],"mappings":"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I,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI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","x_google_ignoreList":[0]}