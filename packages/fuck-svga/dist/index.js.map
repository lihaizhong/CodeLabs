{"version":3,"file":"index.js","sources":["../../../node_modules/.pnpm/fflate@0.8.2/node_modules/fflate/esm/browser.js","../../fuck-protobuf/dist/index.js","../src/polyfill/app.ts","../src/polyfill/bridge.ts","../src/benchmark/index.ts","../src/polyfill/fsm.ts","../src/polyfill/download.ts","../src/parser/video-entity.ts","../src/parser/index.ts","../src/polyfill/ratio.ts","../src/polyfill/canvas.ts","../src/polyfill/decode.ts","../src/polyfill/loadImage.ts","../src/polyfill/noop.ts","../src/polyfill/system.ts","../src/polyfill/time.ts","../src/player/render.ts","../src/player/brush.ts","../src/player/animator.ts","../src/player/index.ts","../src/poster/index.ts"],"sourcesContent":["// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","function t(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}var e,r;var s,i=t(function(){if(r)return e;function t(t){return\"undefined\"!=typeof Float32Array?function(){var e=new Float32Array([-0]),r=new Uint8Array(e.buffer),s=128===r[3];function i(t,s,i){e[0]=t,s[i]=r[0],s[i+1]=r[1],s[i+2]=r[2],s[i+3]=r[3]}function n(t,s,i){e[0]=t,s[i]=r[3],s[i+1]=r[2],s[i+2]=r[1],s[i+3]=r[0]}function o(t,s){return r[0]=t[s],r[1]=t[s+1],r[2]=t[s+2],r[3]=t[s+3],e[0]}function a(t,s){return r[3]=t[s],r[2]=t[s+1],r[1]=t[s+2],r[0]=t[s+3],e[0]}t.writeFloatLE=s?i:n,t.writeFloatBE=s?n:i,t.readFloatLE=s?o:a,t.readFloatBE=s?a:o}():function(){function e(t,e,r,s){var i=e<0?1:0;if(i&&(e=-e),0===e)t(1/e>0?0:2147483648,r,s);else if(isNaN(e))t(2143289344,r,s);else if(e>34028234663852886e22)t((i<<31|2139095040)>>>0,r,s);else if(e<11754943508222875e-54)t((i<<31|Math.round(e/1401298464324817e-60))>>>0,r,s);else{var n=Math.floor(Math.log(e)/Math.LN2);t((i<<31|n+127<<23|8388607&Math.round(e*Math.pow(2,-n)*8388608))>>>0,r,s)}}function r(t,e,r){var s=t(e,r),i=2*(s>>31)+1,n=s>>>23&255,o=8388607&s;return 255===n?o?NaN:i*(1/0):0===n?1401298464324817e-60*i*o:i*Math.pow(2,n-150)*(o+8388608)}t.writeFloatLE=e.bind(null,s),t.writeFloatBE=e.bind(null,i),t.readFloatLE=r.bind(null,n),t.readFloatBE=r.bind(null,o)}(),\"undefined\"!=typeof Float64Array?function(){var e=new Float64Array([-0]),r=new Uint8Array(e.buffer),s=128===r[7];function i(t,s,i){e[0]=t,s[i]=r[0],s[i+1]=r[1],s[i+2]=r[2],s[i+3]=r[3],s[i+4]=r[4],s[i+5]=r[5],s[i+6]=r[6],s[i+7]=r[7]}function n(t,s,i){e[0]=t,s[i]=r[7],s[i+1]=r[6],s[i+2]=r[5],s[i+3]=r[4],s[i+4]=r[3],s[i+5]=r[2],s[i+6]=r[1],s[i+7]=r[0]}function o(t,s){return r[0]=t[s],r[1]=t[s+1],r[2]=t[s+2],r[3]=t[s+3],r[4]=t[s+4],r[5]=t[s+5],r[6]=t[s+6],r[7]=t[s+7],e[0]}function a(t,s){return r[7]=t[s],r[6]=t[s+1],r[5]=t[s+2],r[4]=t[s+3],r[3]=t[s+4],r[2]=t[s+5],r[1]=t[s+6],r[0]=t[s+7],e[0]}t.writeDoubleLE=s?i:n,t.writeDoubleBE=s?n:i,t.readDoubleLE=s?o:a,t.readDoubleBE=s?a:o}():function(){function e(t,e,r,s,i,n){var o=s<0?1:0;if(o&&(s=-s),0===s)t(0,i,n+e),t(1/s>0?0:2147483648,i,n+r);else if(isNaN(s))t(0,i,n+e),t(2146959360,i,n+r);else if(s>17976931348623157e292)t(0,i,n+e),t((o<<31|2146435072)>>>0,i,n+r);else{var a;if(s<22250738585072014e-324)t((a=s/5e-324)>>>0,i,n+e),t((o<<31|a/4294967296)>>>0,i,n+r);else{var l=Math.floor(Math.log(s)/Math.LN2);1024===l&&(l=1023),t(4503599627370496*(a=s*Math.pow(2,-l))>>>0,i,n+e),t((o<<31|l+1023<<20|1048576*a&1048575)>>>0,i,n+r)}}}function r(t,e,r,s,i){var n=t(s,i+e),o=t(s,i+r),a=2*(o>>31)+1,l=o>>>20&2047,h=4294967296*(1048575&o)+n;return 2047===l?h?NaN:a*(1/0):0===l?5e-324*a*h:a*Math.pow(2,l-1075)*(h+4503599627370496)}t.writeDoubleLE=e.bind(null,s,0,4),t.writeDoubleBE=e.bind(null,i,4,0),t.readDoubleLE=r.bind(null,n,0,4),t.readDoubleBE=r.bind(null,o,4,0)}(),t}function s(t,e,r){e[r]=255&t,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}function i(t,e,r){e[r]=t>>>24,e[r+1]=t>>>16&255,e[r+2]=t>>>8&255,e[r+3]=255&t}function n(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function o(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}return r=1,e=t(t)}()),n={};var o=(s||(s=1,function(){var t=n;t.length=function(t){for(var e=0,r=0,s=0;s<t.length;++s)(r=t.charCodeAt(s))<128?e+=1:r<2048?e+=2:55296==(64512&r)&&56320==(64512&t.charCodeAt(s+1))?(++s,e+=4):e+=3;return e},t.read=function(t,e,r){if(r-e<1)return\"\";for(var s,i=null,n=[],o=0;e<r;)(s=t[e++])<128?n[o++]=s:s>191&&s<224?n[o++]=(31&s)<<6|63&t[e++]:s>239&&s<365?(s=((7&s)<<18|(63&t[e++])<<12|(63&t[e++])<<6|63&t[e++])-65536,n[o++]=55296+(s>>10),n[o++]=56320+(1023&s)):n[o++]=(15&s)<<12|(63&t[e++])<<6|63&t[e++],o>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,n)),o=0);return i?(o&&i.push(String.fromCharCode.apply(String,n.slice(0,o))),i.join(\"\")):String.fromCharCode.apply(String,n.slice(0,o))},t.write=function(t,e,r){for(var s,i,n=r,o=0;o<t.length;++o)(s=t.charCodeAt(o))<128?e[r++]=s:s<2048?(e[r++]=s>>6|192,e[r++]=63&s|128):55296==(64512&s)&&56320==(64512&(i=t.charCodeAt(o+1)))?(s=65536+((1023&s)<<10)+(1023&i),++o,e[r++]=s>>18|240,e[r++]=s>>12&63|128,e[r++]=s>>6&63|128,e[r++]=63&s|128):(e[r++]=s>>12|224,e[r++]=s>>6&63|128,e[r++]=63&s|128);return r-n}}()),n),a=t(o);class l{static create(t){if(t instanceof l)return t;if(t instanceof Uint8Array)return new l(t);throw Error(\"illegal buffer\")}buf;pos;len;constructor(t){this.buf=t,this.pos=0,this.len=t.length}slice(t,e,r){return t.subarray(e,r)}indexOutOfRange(t,e){return RangeError(\"index out of range: \"+t.pos+\" + \"+(e||1)+\" > \"+t.len)}uint32(){let t=4294967295;if(t=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return t;if((this.pos+=5)>this.len)throw this.pos=this.len,this.indexOutOfRange(this,10);return t}int32(){return 0|this.uint32()}float(){if(this.pos+4>this.len)throw this.indexOutOfRange(this,4);const t=i.readFloatLE(this.buf,this.pos);return this.pos+=4,t}bytes(){const t=this.uint32(),e=this.pos,r=this.pos+t;if(r>this.len)throw this.indexOutOfRange(this,t);return this.pos+=t,e==r?new Uint8Array(0):this.slice(this.buf,e,r)}string(){const t=this.bytes();return a.read(t,0,t.length)}skip(t){if(\"number\"==typeof t){if(this.pos+t>this.len)throw this.indexOutOfRange(this,t);this.pos+=t}else do{if(this.pos>=this.len)throw this.indexOutOfRange(this)}while(128&this.buf[this.pos++]);return this}skipType(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(t=7&this.uint32());)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error(\"invalid wire type \"+t+\" at offset \"+this.pos)}return this}}class h{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new h;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.x=t.float();break;case 2:s.y=t.float();break;case 3:s.width=t.float();break;case 4:s.height=t.float();break;default:t.skipType(7&e)}}return s}x=0;y=0;width=0;height=0;constructor(t){t&&(null!=t.x&&(this.x=t.x),null!=t.y&&(this.y=t.y),null!=t.width&&(this.width=t.width),null!=t.height&&(this.height=t.height))}}class u{static decode(t,e){t=l.create(t);let r=void 0===e?t.len:t.pos+e,s=new u;for(;t.pos<r;){let e=t.uint32();switch(e>>>3){case 1:s.a=t.float();break;case 2:s.b=t.float();break;case 3:s.c=t.float();break;case 4:s.d=t.float();break;case 5:s.tx=t.float();break;case 6:s.ty=t.float();break;default:t.skipType(7&e)}}return s}a=0;b=0;c=0;d=0;tx=0;ty=0;constructor(t){t&&(null!=t.a&&(this.a=t.a),null!=t.b&&(this.b=t.b),null!=t.c&&(this.c=t.c),null!=t.d&&(this.d=t.d),null!=t.tx&&(this.tx=t.tx),null!=t.ty&&(this.ty=t.ty))}}class c{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new c;for(;t.pos<r;){const e=t.uint32();if(e>>>3==1)s.d=t.string();else t.skipType(7&e)}return s}d=\"\";constructor(t){t&&null!=t.d&&(this.d=t.d)}}class f{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new f;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.x=t.float();break;case 2:s.y=t.float();break;case 3:s.width=t.float();break;case 4:s.height=t.float();break;case 5:s.cornerRadius=t.float();break;default:t.skipType(7&e)}}return s}x=0;y=0;width=0;height=0;cornerRadius=0;constructor(t){t&&(null!=t.x&&(this.x=t.x),null!=t.y&&(this.y=t.y),null!=t.width&&(this.width=t.width),null!=t.height&&(this.height=t.height),null!=t.cornerRadius&&(this.cornerRadius=t.cornerRadius))}}class d{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new d;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.x=t.float();break;case 2:s.y=t.float();break;case 3:s.radiusX=t.float();break;case 4:s.radiusY=t.float();break;default:t.skipType(7&e)}}return s}x=0;y=0;radiusX=0;radiusY=0;constructor(t){t&&(null!=t.x&&(this.x=t.x),null!=t.y&&(this.y=t.y),null!=t.radiusX&&(this.radiusX=t.radiusX),null!=t.radiusY&&(this.radiusY=t.radiusY))}}class p{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new p;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.r=t.float();break;case 2:s.g=t.float();break;case 3:s.b=t.float();break;case 4:s.a=t.float();break;default:t.skipType(7&e)}}return s}r=0;g=0;b=0;a=0;constructor(t){t&&(null!=t.r&&(this.r=t.r),null!=t.g&&(this.g=t.g),null!=t.b&&(this.b=t.b),null!=t.a&&(this.a=t.a))}}class g{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new g;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.fill=p.decode(t,t.uint32());break;case 2:s.stroke=p.decode(t,t.uint32());break;case 3:s.strokeWidth=t.float();break;case 4:s.lineCap=t.int32();break;case 5:s.lineJoin=t.int32();break;case 6:s.miterLimit=t.float();break;case 7:s.lineDashI=t.float();break;case 8:s.lineDashII=t.float();break;case 9:s.lineDashIII=t.float();break;default:t.skipType(7&e)}}return s}fill=null;stroke=null;strokeWidth=0;lineCap=0;lineJoin=0;miterLimit=0;lineDashI=0;lineDashII=0;lineDashIII=0;constructor(t){t&&(null!=t.fill&&(this.fill=t.fill),null!=t.lineCap&&(this.lineCap=t.lineCap),null!=t.lineDashI&&(this.lineDashI=t.lineDashI),null!=t.lineDashII&&(this.lineDashII=t.lineDashII),null!=t.lineDashIII&&(this.lineDashIII=t.lineDashIII),null!=t.lineJoin&&(this.lineJoin=t.lineJoin),null!=t.miterLimit&&(this.miterLimit=t.miterLimit),null!=t.stroke&&(this.stroke=t.stroke),null!=t.strokeWidth&&(this.strokeWidth=t.strokeWidth))}}class b{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new b;for(;t.pos<r;){let e=t.uint32();switch(e>>>3){case 1:s.type=t.int32();break;case 2:s.shape=c.decode(t,t.uint32());break;case 3:s.rect=f.decode(t,t.uint32());break;case 4:s.ellipse=d.decode(t,t.uint32());break;case 10:s.styles=g.decode(t,t.uint32());break;case 11:s.transform=u.decode(t,t.uint32());break;default:t.skipType(7&e)}}return s}type=0;shape=null;rect=null;ellipse=null;styles=null;transform=null;$oneOfFields=[\"shape\",\"rect\",\"ellipse\"];$fieldMap={};get args(){const t=Object.keys(this);for(let e=t.length-1;e>-1;--e){const r=t[e],s=this[r];if(1===this.$fieldMap[r]&&null!=s)return r}return\"\"}set args(t){for(var e=0;e<this.$oneOfFields.length;++e){const r=this.$oneOfFields[e];r!==t&&delete this[r]}}constructor(t){t&&(null!=t.type&&(this.type=t.type),null!=t.ellipse&&(this.ellipse=t.ellipse),null!=t.rect&&(this.rect=t.rect),null!=t.shape&&(this.shape=t.shape),null!=t.styles&&(this.styles=t.styles),null!=t.transform&&(this.transform=t.transform));for(var e=0;e<this.$oneOfFields.length;++e)this.$fieldMap[this.$oneOfFields[e]]=1}}class w{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new w;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.alpha=t.float();break;case 2:s.layout=h.decode(t,t.uint32());break;case 3:s.transform=u.decode(t,t.uint32());break;case 4:s.clipPath=t.string();break;case 5:s.shapes&&s.shapes.length||(s.shapes=[]),s.shapes.push(b.decode(t,t.uint32()));break;default:t.skipType(7&e)}}return s}shapes=[];alpha=0;layout=null;transform=null;clipPath=\"\";constructor(t){t&&(null!=t.alpha&&(this.alpha=t.alpha),null!=t.clipPath&&(this.clipPath=t.clipPath),null!=t.layout&&(this.layout=t.layout),null!=t.shapes&&(this.shapes=t.shapes),null!=t.transform&&(this.transform=t.transform))}}class y{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new y;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.imageKey=t.string();break;case 2:s.frames&&s.frames.length||(s.frames=[]),s.frames.push(w.decode(t,t.uint32()));break;case 3:s.matteKey=t.string();break;default:t.skipType(7&e)}}return s}frames=[];imageKey=\"\";matteKey=\"\";constructor(t){t&&(null!=t.frames&&(this.frames=t.frames),null!=t.imageKey&&(this.imageKey=t.imageKey),null!=t.matteKey&&(this.matteKey=t.matteKey))}}class m{static decode(t,e){t=l.create(t);let r=void 0===e?t.len:t.pos+e,s=new m;for(;t.pos<r;){let e=t.uint32();switch(e>>>3){case 1:s.viewBoxWidth=t.float();break;case 2:s.viewBoxHeight=t.float();break;case 3:s.fps=t.int32();break;case 4:s.frames=t.int32();break;default:t.skipType(7&e)}}return s}viewBoxWidth=0;viewBoxHeight=0;fps=0;frames=0;constructor(t){t&&(null!=t.viewBoxWidth&&(this.viewBoxWidth=t.viewBoxWidth),null!=t.viewBoxHeight&&(this.viewBoxHeight=t.viewBoxHeight),null!=t.fps&&(this.fps=t.fps),null!=t.frames&&(this.frames=t.frames))}}const k=Object.freeze({});class B{static decode(t,e){t=l.create(t);const r=void 0===e?t.len:t.pos+e,s=new B;let i,n;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:s.version=t.string();break;case 2:s.params=m.decode(t,t.uint32());break;case 3:{s.images===k&&(s.images={});const e=t.uint32()+t.pos;for(i=\"\",n=[];t.pos<e;){let e=t.uint32();switch(e>>>3){case 1:i=t.string();break;case 2:n=t.bytes();break;default:t.skipType(7&e)}}s.images[i]=n;break}case 4:s.sprites&&s.sprites.length||(s.sprites=[]),s.sprites.push(y.decode(t,t.uint32()));break;default:t.skipType(7&e)}}return s}version=\"\";params=null;images=k;sprites=[];constructor(t){t&&(null!=t.version&&(this.version=t.version),null!=t.images&&(this.images=t.images),null!=t.params&&(this.params=t.params),null!=t.sprites&&(this.sprites=t.sprites))}}class E{buffer=[];lengthInBits=0;getAt(t){const e=~~(t/8);return 1==(this.buffer[e]>>>7-t%8&1)}put(t,e){for(let r=0;r<e;r++)this.putBit(1==(t>>>e-r-1&1))}putBit(t){const{lengthInBits:e,buffer:r}=this,s=~~(e/8);r.length<=s&&r.push(0),t&&(r[s]|=128>>>e%8),this.lengthInBits+=1}}const C={MODE_NUMBER:1,MODE_ALPHA_NUM:2,MODE_8BIT_BYTE:4,MODE_KANJI:8},A={L:1,M:0,Q:3,H:2},T={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};class D{bytes;constructor(t){let e=[];for(let r=0;r<t.length;r++){const s=[],i=t.charCodeAt(r);i>65536?(s[0]=240|(1835008&i)>>>18,s[1]=128|(258048&i)>>>12,s[2]=128|(4032&i)>>>6,s[3]=128|63&i):i>2048?(s[0]=224|(61440&i)>>>12,s[1]=128|(4032&i)>>>6,s[2]=128|63&i):i>128?(s[0]=192|(1984&i)>>>6,s[1]=128|63&i):s[0]=i,e.push(s)}this.bytes=[].concat(...e);const{bytes:r}=this;r.length!=t.length&&(r.unshift(191),r.unshift(187),r.unshift(239))}get mode(){return C.MODE_8BIT_BYTE}get length(){return this.bytes.length}write(t){const{bytes:e}=this;for(let r=0;r<e.length;r++)t.put(e[r],8)}}const v=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];class I{getRSBlockTable(t,e){const{L:r,M:s,Q:i,H:n}=A,o=4*(t-1);switch(e){case r:return v[o+0];case s:return v[o+1];case i:return v[o+2];case n:return v[o+3]}}getRSBlocks(t,e){const r=this.getRSBlockTable(t,e);if(void 0===r)throw new Error(`bad rs block @ typeNumber:${t}/errorCorrectLevel: ${e}`);const s=r.length/3,i=[];for(let t=0;t<s;t++){const e=r[3*t],s=r[3*t+1],n=r[3*t+2];for(let t=0;t<e;t++)i.push({totalCount:s,dataCount:n})}return i}}class x{out;bit=0;bitlen=0;constructor(t){this.out=t}write(t,e){if(t>>>e!=0)throw new Error(\"length over\");for(;this.bitlen+e>=8;)this.out.writeByte(255&(t<<this.bitlen|this.bit)),e-=8-this.bitlen,t>>>=8-this.bitlen,this.bit=this.bitlen=0;this.bit=t<<this.bitlen|this.bit,this.bitlen+=e}flush(){this.bitlen>0&&this.out.writeByte(this.bit)}}class P{bytes=[];writeByte(t){this.bytes.push(255&t)}writeBytes(t,e,r){const s=e||0,i=r||t.length;for(let e=0;e<i;e++)this.writeByte(t[e+s])}writeShort(t){this.writeByte(t),this.writeByte(t>>>8)}writeString(t){for(let e=0;e<t.length;e++)this.writeByte(t.charCodeAt(e))}toByteArray(){return this.bytes}toString(){return`[${this.bytes.join(\",\")}]`}}class N{map=new Map;get size(){return this.map.size}add(t){if(this.map.has(t))throw new Error(`dup key: ${t}`);this.map.set(t,this.map.size)}indexOf(t){return this.map.get(t)??-1}contains(t){return this.map.has(t)}}class ${buffer=0;buflen=0;length=0;base64=\"\";encode(t){if(t<26)return 65+t;if(t<52)return t-26+97;if(t<62)return t-52+48;if(62==t)return 43;if(63==t)return 47;throw new Error(`n: ${t}`)}writeEncoded(t){this.base64+=String.fromCharCode(this.encode(63&t))}writeByte(t){for(this.buffer=this.buffer<<8|255&t,this.buflen+=8,this.length+=1;this.buflen>=6;)this.writeEncoded(this.buffer>>>this.buflen-6),this.buflen-=6}flush(){if(this.buflen>0&&(this.writeEncoded(this.buflen<<6-this.buflen),this.buffer=0,this.buflen=0),this.length%3!=0){const t=3-this.length%3;for(let e=0;e<t;e++)this.base64+=\"=\"}}toString(){return this.base64}}class M{width;height;signature=\"GIF87a\";data;constructor(t,e){this.width=t,this.height=e,this.data=new Array(t*e)}getLZWRaster(t){const e=1<<t,r=1+(1<<t);let s=t+1;const i=new N,n=t=>String.fromCharCode(t);for(let t=0;t<e;t+=1)i.add(n(t));i.add(n(e)),i.add(n(r));const o=new P,a=new x(o);a.write(e,s);let l=0,h=n(this.data[l++]);for(;l<this.data.length;){const t=n(this.data[l++]);i.contains(h+t)?h+=t:(a.write(i.indexOf(h),s),i.size<4095&&(i.size==1<<s&&s++,i.add(h+t)),h=t)}return a.write(i.indexOf(h),s),a.write(r,s),a.flush(),o.toByteArray()}setPixel(t,e,r){this.data[e*this.width+t]=r}write(t,e=\"#000000\",r=\"#ffffff\"){const{width:s,height:i,signature:n}=this;t.writeString(n),t.writeShort(s),t.writeShort(i),t.writeByte(128),t.writeByte(0),t.writeByte(0);const o=e.split(\"\");t.writeByte(parseInt(`${o[1]}${o[2]}`,16)),t.writeByte(parseInt(`${o[3]}${o[4]}`,16)),t.writeByte(parseInt(`${o[5]}${o[6]}`,16));const a=r.split(\"\");t.writeByte(parseInt(`${a[1]}${a[2]}`,16)),t.writeByte(parseInt(`${a[3]}${a[4]}`,16)),t.writeByte(parseInt(`${a[5]}${a[6]}`,16)),t.writeString(\",\"),t.writeShort(0),t.writeShort(0),t.writeShort(s),t.writeShort(i),t.writeByte(0);const l=this.getLZWRaster(2);t.writeByte(2);let h=0;for(;l.length-h>255;)t.writeByte(255),t.writeBytes(l,h,255),h+=255;const u=l.length-h;t.writeByte(u),t.writeBytes(l,h,u),t.writeByte(0),t.writeString(\";\")}}function L(t,e,r,s,i){const n=new M(t,e);for(let s=0;s<e;s++)for(let e=0;e<t;e++)n.setPixel(e,s,r(e,s));const o=new P;n.write(o,s,i);const a=new $,l=o.toByteArray();for(let t=0;t<l.length;t++)a.writeByte(l[t]);return a.flush(),`data:image/gif;base64,${a}`}class R{data;pos=0;buffer=0;buflen=0;constructor(t){this.data=t}decode(t){if(t>=65&&t<=90)return t-65;if(t>=97&&t<=122)return t-97+26;if(t>=48&&t<=57)return t-48+52;if(43==t)return 62;if(47==t)return 63;throw new Error(`c: ${t}`)}read(){const{buffer:t,buflen:e,pos:r,data:s}=this;for(;e<8;){if(r>=s.length){if(0==e)return-1;throw new Error(`unexpected end of file./${e}`)}const i=s.charAt(r);if(this.pos++,\"=\"==i)return this.buflen=0,-1;i.match(/^\\s$/)||(this.buffer=t<<6|this.decode(i.charCodeAt(0)),this.buflen+=6)}const i=t>>>e-8&255;return this.buflen-=8,i}}const O=new Array(256),S=new Array(256);for(let t=0;t<8;t++)O[t]=1<<t;for(let t=8;t<256;t++)O[t]=O[t-4]^O[t-5]^O[t-6]^O[t-8];for(let t=0;t<255;t++)S[O[t]]=t;const F={glog(t){if(t<1)throw new Error(`glog(${t})`);return S[t]},gexp(t){for(;t<0;)t+=255;for(;t>=256;)t-=255;return O[t]}};class _{num;constructor(t,e){const{length:r}=t;if(void 0===r)throw new Error(`${r}/${e}`);let s=0;for(;s<r&&0==t[s];)s++;const i=r-s;this.num=new Array(i+e);for(let e=0;e<i;e++)this.num[e]=t[e+s]}get length(){return this.num.length}getAt(t){return this.num[t]}multiply(t){const e=new Array(this.length+t.length-1);for(let r=0;r<this.length;r++)for(let s=0;s<t.length;s++)e[r+s]^=F.gexp(F.glog(this.getAt(r))+F.glog(t.getAt(s)));return new _(e,0)}mod(t){if(this.length-t.length<0)return this;const e=F.glog(this.getAt(0))-F.glog(t.getAt(0)),r=new Array(this.length);for(var s=0;s<this.length;s++)r[s]=this.getAt(s);for(s=0;s<t.length;s++)r[s]^=F.gexp(F.glog(t.getAt(s))+e);return new _(r,0).mod(t)}}const z=[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],H={gen(t){let e=0,r=t;for(;0!=r;)e++,r>>>=1;return e}},K=H.gen(1335),W=H.gen(7973),U={getBCHTypeInfo(t){let e=t<<10;for(;H.gen(e)-K>=0;)e^=1335<<H.gen(e)-K;return 21522^(t<<10|e)},getBCHTypeNumber(t){let e=t<<12;for(;H.gen(e)-W>=0;)e^=7973<<H.gen(e)-W;return t<<12|e},getPatternPosition:t=>z[t-1],getMaskFunction(t){const{PATTERN000:e,PATTERN001:r,PATTERN010:s,PATTERN011:i,PATTERN100:n,PATTERN101:o,PATTERN110:a,PATTERN111:l}=T;switch(t){case e:return(t,e)=>(t+e)%2==0;case r:return t=>t%2==0;case s:return(t,e)=>e%3==0;case i:return(t,e)=>(t+e)%3==0;case n:return(t,e)=>(~~(t/2)+~~(e/3))%2==0;case o:return(t,e)=>t*e%2+t*e%3==0;case a:return(t,e)=>(t*e%2+t*e%3)%2==0;case l:return(t,e)=>(t*e%3+(t+e)%2)%2==0;default:throw new Error(`bad maskPattern: ${t}`)}},getErrorCorrectPolynomial(t){let e=new _([1],0);for(let r=0;r<t;r++)e=e.multiply(new _([1,F.gexp(r)],0));return e},getLengthInBits(t,e){const{MODE_NUMBER:r,MODE_ALPHA_NUM:s,MODE_8BIT_BYTE:i,MODE_KANJI:n}=C;if(e<1||e>40)throw new Error(`type: ${e}`);if(e>=1&&e<10)switch(t){case r:return 10;case s:return 9;case i:case n:return 8}if(e<27)switch(t){case r:return 12;case s:return 11;case i:return 16;case n:return 10}if(e<=40)switch(t){case r:return 14;case s:return 13;case i:return 16;case n:return 12}throw new Error(`mode: ${t}`)},getLostPoint(t){const e=t.getModuleCount();let r=0;for(let s=0;s<e;s++)for(let i=0;i<e;i++){const n=t.isDark(s,i);let o=0;for(let r=-1;r<=1;r++){const a=s+r;if(!(a<0||e<=a))for(let s=-1;s<=1;s++){const l=i+s;l<0||e<=l||(0==r&&0==s||n==t.isDark(a,l)&&o++)}}o>5&&(r+=o+3-5)}for(let s=0;s<e-1;s++)for(let i=0;i<e-1;i++){let e=0;t.isDark(s,i)&&e++,t.isDark(s+1,i)&&e++,t.isDark(s,i+1)&&e++,t.isDark(s+1,i+1)&&e++,0!=e&&4!=e||(r+=3)}for(let s=0;s<e;s++)for(let i=0;i<e-6;i++)t.isDark(s,i)&&!t.isDark(s,i+1)&&t.isDark(s,i+2)&&t.isDark(s,i+3)&&t.isDark(s,i+4)&&!t.isDark(s,i+5)&&t.isDark(s,i+6)&&(r+=40);for(let s=0;s<e;s++)for(let i=0;i<e-6;i++)t.isDark(i,s)&&!t.isDark(i+1,s)&&t.isDark(i+2,s)&&t.isDark(i+3,s)&&t.isDark(i+4,s)&&!t.isDark(i+5,s)&&t.isDark(i+6,s)&&(r+=40);let s=0;for(let r=0;r<e;r++)for(let i=0;i<e;i++)t.isDark(i,r)&&s++;return r+10*(Math.abs(100*s/Math.pow(e,2)-50)/5)}};class Y{static stringToBytes(t){const e=[];for(let r=0;r<t.length;r++)e.push(255&t.charCodeAt(r));return e}static createStringToBytes(t,e){const r=(()=>{const r=new R(t),s=()=>{const t=r.read();if(-1==t)throw new Error(\"character defect!\");return t},i={};let n=0;for(;;){const t=r.read();if(-1==t)break;const e=s(),o=s()<<8|s();i[String.fromCharCode(t<<8|e)]=o,n+=1}if(n!=e)throw new Error(`${n} != ${e}`);return i})(),s=\"?\".charCodeAt(0);return t=>{const e=[];for(let i=0;i<t.length;i++){const n=t.charCodeAt(i);if(n<128)e.push(n);else{const n=r[t.charAt(i)];\"number\"==typeof n?(255&n)==n?e.push(n):(e.push(n>>>8),e.push(255&n)):e.push(s)}}return e}}typeNumber;errorCorrectLevel;modules=[];moduleCount=0;dataCache=null;dataList=[];constructor(t,e){this.typeNumber=t,this.errorCorrectLevel=A[e]}makeImpl(t,e){this.moduleCount=4*this.typeNumber+17,this.modules=(t=>{const e=new Array(t);for(let r=0;r<t;r++){e[r]=new Array(t);for(let s=0;s<t;s++)e[r][s]=null}return e})(this.moduleCount);const r=this.moduleCount-7;this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(r,0),this.setupPositionProbePattern(0,r),this.setupPositionAdjustPattern(),this.setupTimingPattern(),this.setupTypeInfo(t,e),this.typeNumber>=7&&this.setupTypeNumber(t),null==this.dataCache&&(this.dataCache=this.createData(this.typeNumber,this.errorCorrectLevel,this.dataList)),this.mapData(this.dataCache,e)}setupPositionProbePattern(t,e){const{modules:r,moduleCount:s}=this;for(let i=-1;i<=7;i++){const n=t+i;if(!(n<=-1||s<=n))for(let t=-1;t<=7;t++){const o=e+t;o<=-1||s<=o||(r[n][o]=i>=0&&i<=6&&(0==t||6==t)||t>=0&&t<=6&&(0==i||6==i)||i>=2&&i<=4&&t>=2&&t<=4)}}}setupPositionAdjustPattern(){const{typeNumber:t,modules:e}=this,r=U.getPatternPosition(t),{length:s}=r;for(let t=0;t<s;t++)for(let i=0;i<s;i++){const s=r[t],n=r[i];if(null==e[s][n])for(let t=-2;t<=2;t++)for(let r=-2;r<=2;r++)e[s+t][n+r]=-2==t||2==t||-2==r||2==r||0==t&&0==r}}setupTimingPattern(){const{moduleCount:t,modules:e}=this,r=t-8;for(let t=8;t<r;t++)null==e[t][6]&&(e[t][6]=t%2==0);for(let t=8;t<r;t++)null==e[6][t]&&(e[6][t]=t%2==0)}setupTypeInfo(t,e){const{errorCorrectLevel:r,modules:s,moduleCount:i}=this,n=r<<3|e,o=U.getBCHTypeInfo(n);for(let e=0;e<15;e++){const r=!t&&1==(o>>e&1);e<6?s[e][8]=r:e<8?s[e+1][8]=r:s[i-15+e][8]=r}for(let e=0;e<15;e++){const r=!t&&1==(o>>e&1);e<8?s[8][i-e-1]=r:e<9?s[8][15-e]=r:s[8][15-e-1]=r}s[i-8][8]=!t}getBestMaskPattern(){let t=0,e=0;for(let r=0;r<8;r++){this.makeImpl(!0,r);const s=U.getLostPoint(this);(0==r||t>s)&&(t=s,e=r)}return e}setupTypeNumber(t){const{typeNumber:e,modules:r,moduleCount:s}=this,i=U.getBCHTypeNumber(e);for(let e=0;e<18;e++){const n=!t&&1==(i>>e&1);r[~~(e/3)][e%3+s-8-3]=n,r[e%3+s-8-3][~~(e/3)]=n}}createData(t,e,r){const s=(new I).getRSBlocks(t,e),i=new E;for(let e=0;e<r.length;e++){const s=r[e];i.put(s.mode,4),i.put(s.length,U.getLengthInBits(s.mode,t)),s.write(i)}let n=0;for(let t=0;t<s.length;t++)n+=s[t].dataCount;const o=8*n;if(i.lengthInBits>o)throw new Error(`code length overflow. (${i.lengthInBits} > ${o})`);for(i.lengthInBits+4<=o&&i.put(0,4);i.lengthInBits%8!=0;)i.putBit(!1);for(;!(i.lengthInBits>=o||(i.put(236,8),i.lengthInBits>=o));)i.put(17,8);return this.createBytes(i,s)}mapData(t,e){const{modules:r,moduleCount:s}=this,i=U.getMaskFunction(e);let n=-1,o=s-1,a=7,l=0;for(let e=o;e>0;e-=2)for(6==e&&(e-=1);;){for(let s=0;s<2;s++)if(null==r[o][e-s]){let n=!1;l<t.length&&(n=1==(t[l]>>>a&1)),i(o,e-s)&&(n=!n),r[o][e-s]=n,a--,-1==a&&(l++,a=7)}if(o+=n,o<0||s<=o){o-=n,n=-n;break}}}createBytes(t,e){const r=new Array(e.length),s=new Array(e.length);let i=0,n=0,o=0;for(let a=0;a<e.length;a++){const l=e[a].dataCount,h=e[a].totalCount-l;n=Math.max(n,l),o=Math.max(o,h),r[a]=new Array(l);for(let e=0;e<r[a].length;e++)r[a][e]=255&t.buffer[e+i];i+=l;const u=U.getErrorCorrectPolynomial(h),c=new _(r[a],u.length-1).mod(u);s[a]=new Array(u.length-1);for(let t=0;t<s[a].length;t++){const e=t+c.length-s[a].length;s[a][t]=e>=0?c.getAt(e):0}}let a=0;for(let t=0;t<e.length;t++)a+=e[t].totalCount;const l=new Array(a);let h=0;for(let t=0;t<n;t++)for(let s=0;s<e.length;s++)t<r[s].length&&(l[h]=r[s][t],h++);for(let t=0;t<o;t++)for(let r=0;r<e.length;r++)t<s[r].length&&(l[h]=s[r][t],h++);return l}isDark(t,e){const{moduleCount:r}=this;if(t<0||r<=t||e<0||r<=e)throw new Error(`${t}, ${e}`);return this.modules[t][e]}addData(t){this.dataList.push(new D(t)),this.dataCache=null}getModuleCount(){return this.moduleCount}make(){this.makeImpl(!1,this.getBestMaskPattern())}}function j(t={}){const e={...t};return{typeNumber:e.typeNumber??4,errorCorrectLevel:e.errorCorrectLevel??\"M\",size:e.size??500,black:e.black??\"#000000\",white:e.white??\"#FFFFFF\"}}const J=(t,e)=>({margin:~~(e-t*~~(e/t))/2,cellSize:~~(e/t)||2});function X(t,e){const{typeNumber:r,errorCorrectLevel:s,size:i,black:n,white:o}=j(e);let a;try{a=new Y(r,s),a.addData(t),a.make()}catch(e){if(r>=40)throw new Error(\"Text too long to encode\");return arguments.callee(t,{size:i,errorCorrectLevel:s,typeNumber:r+1,black:n,white:o})}const l=a.getModuleCount(),{margin:h,cellSize:u}=J(l,i),c=l*u+h;return L(i,i,((t,e)=>{if(h<=t&&t<c&&h<=e&&e<c){const r=~~((t-h)/u),s=~~((e-h)/u);return a.isDark(s,r)?0:1}return 1}),n,o)}function Q(t,e){const{typeNumber:r,errorCorrectLevel:s,size:i,black:n,white:o}=j(e);let a;try{a=new Y(r,s),a.addData(t),a.make()}catch(e){if(r>=40)throw new Error(\"Text too long to encode\");return arguments.callee(t,{size:i,errorCorrectLevel:s,typeNumber:r+1,black:n,white:o})}const l=a.getModuleCount(),{margin:h,cellSize:u}=J(l,i),c=\"border-width: 0px; border-style: none; border-collapse: collapse; padding: 0px;\";let f=`<table style=\"${c} margin: ${h}px;\"><tbody>`;for(let t=0;t<l;t++){f+=\"<tr>\";for(let e=0;e<l;e++)f+=`<td style=\"${c} margin: 0px; width: ${u}px; height: ${u}px; background-color: ${a.isDark(t,e)?\"#000000\":\"#ffffff\"};\"/>`;f+=\"</tr>\"}return f+\"</tbody></table>\"}export{M as GifImage,B as MovieEntity,Y as QRCode,L as createGifTag,X as createQRCodeToGIF,Q as createQRCodeToHTML};\n//# sourceMappingURL=index.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["u8","Uint8Array","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","fd","rev","x","hMap","cd","mb","s","length","l","co","le","rvb","sv","r_1","v","m","flt","fdt","flrm","fdrm","max","a","bits","d","p","o","bits16","shft","ec","err","ind","msg","nt","e","Error","code","captureStackTrace","inflt","dat","st","buf","dict","sl","f","noBuf","resize","noSt","cbuf","bl","nbuf","Math","set","final","pos","bt","lm","dm","lbt","dbt","n","tbts","type","t","subarray","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","c","lt","dt","lms","dms","lpos","sym","add","dsym","end","shift","dend","min","slc","et","unzlibSync","data","opts","zls","td","TextDecoder","decode","stream","__esModule","Object","prototype","hasOwnProperty","call","default","Float32Array","buffer","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","isNaN","round","floor","log","LN2","pow","NaN","bind","Float64Array","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","h","charCodeAt","read","push","String","fromCharCode","apply","slice","join","write","create","len","constructor","this","indexOutOfRange","RangeError","uint32","int32","float","bytes","string","skip","skipType","undefined","y","width","height","u","tx","ty","cornerRadius","radiusX","radiusY","g","fill","stroke","strokeWidth","lineCap","lineJoin","miterLimit","lineDashI","lineDashII","lineDashIII","shape","rect","ellipse","styles","transform","$oneOfFields","$fieldMap","args","keys","w","alpha","layout","clipPath","shapes","imageKey","frames","matteKey","viewBoxWidth","viewBoxHeight","fps","k","freeze","B","version","params","images","sprites","O","Array","S","SP","app","window","tt","my","wx","br","stopwatch","increment","label","getCount","time","console","timeEnd","clearTime","isLock","lock","unlock","benchmark","count","callback","beforeCallback","afterCallback","lockTime","unlockTime","line","size","repeat","message","USER_DATA_PATH","getEnvInfoSync","common","env","download","url","test","fetch","then","response","ok","arrayBuffer","status","statusText","Promise","resolve","reject","request","dataType","responseType","enableCache","success","res","fail","readRemoteFile","filePath","fs","getFileSystemManager","access","path","readFile","VideoEntity","filename","replaceElements","dynamicElements","movie","formatSprites","mSprites","map","mSprite","formatFrames","mFrames","lastShapes","mFrame","FL","FT","FA","L","T","formatShapes","llx","lrx","lbx","rbx","lly","lry","lby","rby","nx","ny","CP","maskPath","lineDash","mShapes","mShape","mStyles","LD1","LD2","LD3","StF","StS","SS","ShF","ST","Parser","parseVideoEntity","header","u8a","toString","entity","inflateData","movieData","MovieEntity","substring","lastIndexOf","load","dpr","getCanvas","selector","component","initCanvas","canvas","ctx","getContext","scale","document","querySelector","style","parseFloat","query","createSelectorQuery","in","select","fields","node","exec","getOffscreenCanvas","options","OffscreenCanvas","createOffscreenCanvas","toBase64","toBuffer","b64","btoa","arrayBufferToBase64","byteOffset","byteLength","async","genImageSource","prefix","isIDE","writeFile","writeTmpFile","genFilePath","ex","warn","loadImage","brush","createImageBitmap","Blob","toBitmap","ImageBitmap","img","createImage","onload","src","startsWith","unlink","removeTmpFile","onerror","devicePixelRatio","getWindowInfo","pixelRatio","getSystemInfoSync","noop","UA","navigator","userAgent","getDeviceBaseInfo","platform","getDeviceInfoSync","getDeviceInfo","toLocaleUpperCase","now","performance","Date","drawSprite","context","sprite","currentFrame","bitmap","replaceElement","dynamicElement","frame","save","globalAlpha","drawBezier","clip","drawImage","drawShape","restore","resetShapeStyles","kappa","ox","oy","xe","ye","xm","ym","beginPath","moveTo","bezierCurveTo","drawEllipse","radius","arcTo","closePath","drawRect","strokeStyle","lineWidth","fillStyle","setLineDash","currentPoint","x1","y1","x2","y2","segments","replace","split","segment","firstLetter","includes","drawBezierElement","trim","method","lineTo","quadraticCurveTo","Brush","mode","X","XC","Y","YC","W","H","model","materials","Map","setModel","clear","render","register","ofsSelector","ofsResult","clearFront","clearRect","clearBack","stick","imageData","getImageData","putImageData","setRect","imageArr","key","all","Image","getImage","encoderOptions","toDataURL","flush","cb","requestAnimationFrame","draw","videoEntity","head","tail","get","destroy","Animator","isRunning","startTime","startValue","endValue","duration","loopStart","loopDuration","fillRule","onStart","onUpdate","onEnd","setRange","setConfig","loop","doFrame","stop","doDeltaTime","DT","D","LS","LD","SV","EV","FR","CF","Player","currFrame","config","fillMode","playMode","startFrame","endFrame","loopStartFrame","animator","container","assign","secondary","mount","onResume","onPause","onStop","onProcess","startAnimation","resume","pause","stepToFrame","andPlay","stepToPercentage","percentage","spriteCount","lastFrame","frameDuration","Infinity","value","spendValue","hasRemained","tmp","Poster","setReplaceElement","element","setReplaceElementByUrl","setDynamicElement","setDynamicElementByUrl"],"mappings":"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","x_google_ignoreList":[0]}