{"version":3,"file":"index.js","sources":["../../../node_modules/.pnpm/fflate@0.8.2/node_modules/fflate/esm/browser.js","../../fuck-protobuf/dist/index.js","../src/polyfill/app.ts","../src/polyfill/bridge.ts","../src/benchmark/index.ts","../src/polyfill/fsm.ts","../src/polyfill/download.ts","../src/parser/video-entity.ts","../src/parser/index.ts","../src/polyfill/ratio.ts","../src/polyfill/canvas.ts","../src/polyfill/decode.ts","../src/polyfill/loadImage.ts","../src/polyfill/noop.ts","../src/polyfill/system.ts","../src/polyfill/time.ts","../src/player/render.ts","../src/player/brush.ts","../src/player/animator.ts","../src/player/index.ts","../src/poster/index.ts"],"sourcesContent":["// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","function t(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,\"default\")?t.default:t}var e,r;var n,s=t(function(){if(r)return e;function t(t){return\"undefined\"!=typeof Float32Array?function(){var e=new Float32Array([-0]),r=new Uint8Array(e.buffer),n=128===r[3];function s(t,n,s){e[0]=t,n[s]=r[0],n[s+1]=r[1],n[s+2]=r[2],n[s+3]=r[3]}function i(t,n,s){e[0]=t,n[s]=r[3],n[s+1]=r[2],n[s+2]=r[1],n[s+3]=r[0]}function o(t,n){return r[0]=t[n],r[1]=t[n+1],r[2]=t[n+2],r[3]=t[n+3],e[0]}function a(t,n){return r[3]=t[n],r[2]=t[n+1],r[1]=t[n+2],r[0]=t[n+3],e[0]}t.writeFloatLE=n?s:i,t.writeFloatBE=n?i:s,t.readFloatLE=n?o:a,t.readFloatBE=n?a:o}():function(){function e(t,e,r,n){var s=e<0?1:0;if(s&&(e=-e),0===e)t(1/e>0?0:2147483648,r,n);else if(isNaN(e))t(2143289344,r,n);else if(e>34028234663852886e22)t((s<<31|2139095040)>>>0,r,n);else if(e<11754943508222875e-54)t((s<<31|Math.round(e/1401298464324817e-60))>>>0,r,n);else{var i=Math.floor(Math.log(e)/Math.LN2);t((s<<31|i+127<<23|8388607&Math.round(e*Math.pow(2,-i)*8388608))>>>0,r,n)}}function r(t,e,r){var n=t(e,r),s=2*(n>>31)+1,i=n>>>23&255,o=8388607&n;return 255===i?o?NaN:s*(1/0):0===i?1401298464324817e-60*s*o:s*Math.pow(2,i-150)*(o+8388608)}t.writeFloatLE=e.bind(null,n),t.writeFloatBE=e.bind(null,s),t.readFloatLE=r.bind(null,i),t.readFloatBE=r.bind(null,o)}(),\"undefined\"!=typeof Float64Array?function(){var e=new Float64Array([-0]),r=new Uint8Array(e.buffer),n=128===r[7];function s(t,n,s){e[0]=t,n[s]=r[0],n[s+1]=r[1],n[s+2]=r[2],n[s+3]=r[3],n[s+4]=r[4],n[s+5]=r[5],n[s+6]=r[6],n[s+7]=r[7]}function i(t,n,s){e[0]=t,n[s]=r[7],n[s+1]=r[6],n[s+2]=r[5],n[s+3]=r[4],n[s+4]=r[3],n[s+5]=r[2],n[s+6]=r[1],n[s+7]=r[0]}function o(t,n){return r[0]=t[n],r[1]=t[n+1],r[2]=t[n+2],r[3]=t[n+3],r[4]=t[n+4],r[5]=t[n+5],r[6]=t[n+6],r[7]=t[n+7],e[0]}function a(t,n){return r[7]=t[n],r[6]=t[n+1],r[5]=t[n+2],r[4]=t[n+3],r[3]=t[n+4],r[2]=t[n+5],r[1]=t[n+6],r[0]=t[n+7],e[0]}t.writeDoubleLE=n?s:i,t.writeDoubleBE=n?i:s,t.readDoubleLE=n?o:a,t.readDoubleBE=n?a:o}():function(){function e(t,e,r,n,s,i){var o=n<0?1:0;if(o&&(n=-n),0===n)t(0,s,i+e),t(1/n>0?0:2147483648,s,i+r);else if(isNaN(n))t(0,s,i+e),t(2146959360,s,i+r);else if(n>17976931348623157e292)t(0,s,i+e),t((o<<31|2146435072)>>>0,s,i+r);else{var a;if(n<22250738585072014e-324)t((a=n/5e-324)>>>0,s,i+e),t((o<<31|a/4294967296)>>>0,s,i+r);else{var l=Math.floor(Math.log(n)/Math.LN2);1024===l&&(l=1023),t(4503599627370496*(a=n*Math.pow(2,-l))>>>0,s,i+e),t((o<<31|l+1023<<20|1048576*a&1048575)>>>0,s,i+r)}}}function r(t,e,r,n,s){var i=t(n,s+e),o=t(n,s+r),a=2*(o>>31)+1,l=o>>>20&2047,h=4294967296*(1048575&o)+i;return 2047===l?h?NaN:a*(1/0):0===l?5e-324*a*h:a*Math.pow(2,l-1075)*(h+4503599627370496)}t.writeDoubleLE=e.bind(null,n,0,4),t.writeDoubleBE=e.bind(null,s,4,0),t.readDoubleLE=r.bind(null,i,0,4),t.readDoubleBE=r.bind(null,o,4,0)}(),t}function n(t,e,r){e[r]=255&t,e[r+1]=t>>>8&255,e[r+2]=t>>>16&255,e[r+3]=t>>>24}function s(t,e,r){e[r]=t>>>24,e[r+1]=t>>>16&255,e[r+2]=t>>>8&255,e[r+3]=255&t}function i(t,e){return(t[e]|t[e+1]<<8|t[e+2]<<16|t[e+3]<<24)>>>0}function o(t,e){return(t[e]<<24|t[e+1]<<16|t[e+2]<<8|t[e+3])>>>0}return r=1,e=t(t)}()),i={};var o=(n||(n=1,function(){var t=i;t.length=function(t){for(var e=0,r=0,n=0;n<t.length;++n)(r=t.charCodeAt(n))<128?e+=1:r<2048?e+=2:55296==(64512&r)&&56320==(64512&t.charCodeAt(n+1))?(++n,e+=4):e+=3;return e},t.read=function(t,e,r){if(r-e<1)return\"\";for(var n,s=null,i=[],o=0;e<r;)(n=t[e++])<128?i[o++]=n:n>191&&n<224?i[o++]=(31&n)<<6|63&t[e++]:n>239&&n<365?(n=((7&n)<<18|(63&t[e++])<<12|(63&t[e++])<<6|63&t[e++])-65536,i[o++]=55296+(n>>10),i[o++]=56320+(1023&n)):i[o++]=(15&n)<<12|(63&t[e++])<<6|63&t[e++],o>8191&&((s||(s=[])).push(String.fromCharCode.apply(String,i)),o=0);return s?(o&&s.push(String.fromCharCode.apply(String,i.slice(0,o))),s.join(\"\")):String.fromCharCode.apply(String,i.slice(0,o))},t.write=function(t,e,r){for(var n,s,i=r,o=0;o<t.length;++o)(n=t.charCodeAt(o))<128?e[r++]=n:n<2048?(e[r++]=n>>6|192,e[r++]=63&n|128):55296==(64512&n)&&56320==(64512&(s=t.charCodeAt(o+1)))?(n=65536+((1023&n)<<10)+(1023&s),++o,e[r++]=n>>18|240,e[r++]=n>>12&63|128,e[r++]=n>>6&63|128,e[r++]=63&n|128):(e[r++]=n>>12|224,e[r++]=n>>6&63|128,e[r++]=63&n|128);return r-i}}()),i),a=t(o);class l{static create(t){if(t instanceof l)return t;if(t instanceof Uint8Array)return new l(t);throw Error(\"illegal buffer\")}buf;pos;len;constructor(t){this.buf=t,this.pos=0,this.len=t.length}slice(t,e,r){return t.subarray(e,r)}indexOutOfRange(t,e){return RangeError(\"index out of range: \"+t.pos+\" + \"+(e||1)+\" > \"+t.len)}uint32(){let t=4294967295;if(t=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return t;if(t=(t|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return t;if((this.pos+=5)>this.len)throw this.pos=this.len,this.indexOutOfRange(this,10);return t}int32(){return 0|this.uint32()}float(){if(this.pos+4>this.len)throw this.indexOutOfRange(this,4);const t=s.readFloatLE(this.buf,this.pos);return this.pos+=4,t}bytes(){const t=this.uint32(),e=this.pos,r=this.pos+t;if(r>this.len)throw this.indexOutOfRange(this,t);return this.pos+=t,e==r?new Uint8Array(0):this.slice(this.buf,e,r)}string(){const t=this.bytes();return a.read(t,0,t.length)}skip(t){if(\"number\"==typeof t){if(this.pos+t>this.len)throw this.indexOutOfRange(this,t);this.pos+=t}else do{if(this.pos>=this.len)throw this.indexOutOfRange(this)}while(128&this.buf[this.pos++]);return this}skipType(t){switch(t){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(t=7&this.uint32());)this.skipType(t);break;case 5:this.skip(4);break;default:throw Error(\"invalid wire type \"+t+\" at offset \"+this.pos)}return this}}class h{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new h;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.x=t.float();break;case 2:n.y=t.float();break;case 3:n.width=t.float();break;case 4:n.height=t.float();break;default:t.skipType(7&e)}}return n}x=0;y=0;width=0;height=0;constructor(t){t&&(null!=t.x&&(this.x=t.x),null!=t.y&&(this.y=t.y),null!=t.width&&(this.width=t.width),null!=t.height&&(this.height=t.height))}}class u{static decode(t,e){t=l.create(t);let r=null==e?t.len:t.pos+e,n=new u;for(;t.pos<r;){let e=t.uint32();switch(e>>>3){case 1:n.a=t.float();break;case 2:n.b=t.float();break;case 3:n.c=t.float();break;case 4:n.d=t.float();break;case 5:n.tx=t.float();break;case 6:n.ty=t.float();break;default:t.skipType(7&e)}}return n}a=0;b=0;c=0;d=0;tx=0;ty=0;constructor(t){t&&(null!=t.a&&(this.a=t.a),null!=t.b&&(this.b=t.b),null!=t.c&&(this.c=t.c),null!=t.d&&(this.d=t.d),null!=t.tx&&(this.tx=t.tx),null!=t.ty&&(this.ty=t.ty))}}class c{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new c;for(;t.pos<r;){const e=t.uint32();if(e>>>3==1)n.d=t.string();else t.skipType(7&e)}return n}d=\"\";constructor(t){t&&null!=t.d&&(this.d=t.d)}}class f{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new f;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.x=t.float();break;case 2:n.y=t.float();break;case 3:n.width=t.float();break;case 4:n.height=t.float();break;case 5:n.cornerRadius=t.float();break;default:t.skipType(7&e)}}return n}x=0;y=0;width=0;height=0;cornerRadius=0;constructor(t){t&&(null!=t.x&&(this.x=t.x),null!=t.y&&(this.y=t.y),null!=t.width&&(this.width=t.width),null!=t.height&&(this.height=t.height),null!=t.cornerRadius&&(this.cornerRadius=t.cornerRadius))}}class d{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new d;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.x=t.float();break;case 2:n.y=t.float();break;case 3:n.radiusX=t.float();break;case 4:n.radiusY=t.float();break;default:t.skipType(7&e)}}return n}x=0;y=0;radiusX=0;radiusY=0;constructor(t){t&&(null!=t.x&&(this.x=t.x),null!=t.y&&(this.y=t.y),null!=t.radiusX&&(this.radiusX=t.radiusX),null!=t.radiusY&&(this.radiusY=t.radiusY))}}class p{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new p;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.r=t.float();break;case 2:n.g=t.float();break;case 3:n.b=t.float();break;case 4:n.a=t.float();break;default:t.skipType(7&e)}}return n}r=0;g=0;b=0;a=0;constructor(t){t&&(null!=t.r&&(this.r=t.r),null!=t.g&&(this.g=t.g),null!=t.b&&(this.b=t.b),null!=t.a&&(this.a=t.a))}}class w{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new w;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.fill=p.decode(t,t.uint32());break;case 2:n.stroke=p.decode(t,t.uint32());break;case 3:n.strokeWidth=t.float();break;case 4:n.lineCap=t.int32();break;case 5:n.lineJoin=t.int32();break;case 6:n.miterLimit=t.float();break;case 7:n.lineDashI=t.float();break;case 8:n.lineDashII=t.float();break;case 9:n.lineDashIII=t.float();break;default:t.skipType(7&e)}}return n}fill=null;stroke=null;strokeWidth=0;lineCap=0;lineJoin=0;miterLimit=0;lineDashI=0;lineDashII=0;lineDashIII=0;constructor(t){t&&(null!=t.fill&&(this.fill=t.fill),null!=t.lineCap&&(this.lineCap=t.lineCap),null!=t.lineDashI&&(this.lineDashI=t.lineDashI),null!=t.lineDashII&&(this.lineDashII=t.lineDashII),null!=t.lineDashIII&&(this.lineDashIII=t.lineDashIII),null!=t.lineJoin&&(this.lineJoin=t.lineJoin),null!=t.miterLimit&&(this.miterLimit=t.miterLimit),null!=t.stroke&&(this.stroke=t.stroke),null!=t.strokeWidth&&(this.strokeWidth=t.strokeWidth))}}class b{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new b;for(;t.pos<r;){let e=t.uint32();switch(e>>>3){case 1:n.type=t.int32();break;case 2:n.shape=c.decode(t,t.uint32());break;case 3:n.rect=f.decode(t,t.uint32());break;case 4:n.ellipse=d.decode(t,t.uint32());break;case 10:n.styles=w.decode(t,t.uint32());break;case 11:n.transform=u.decode(t,t.uint32());break;default:t.skipType(7&e)}}return n}type=0;shape=null;rect=null;ellipse=null;styles=null;transform=null;$oneOfFields=[\"shape\",\"rect\",\"ellipse\"];$fieldMap={};get args(){const t=Object.keys(this);for(let e=t.length-1;e>-1;--e){const r=t[e],n=this[r];if(1==this.$fieldMap[r]&&null!=n)return r}return\"\"}set args(t){for(var e=0;e<this.$oneOfFields.length;++e){const r=this.$oneOfFields[e];r!=t&&delete this[r]}}constructor(t){t&&(null!=t.type&&(this.type=t.type),null!=t.ellipse&&(this.ellipse=t.ellipse),null!=t.rect&&(this.rect=t.rect),null!=t.shape&&(this.shape=t.shape),null!=t.styles&&(this.styles=t.styles),null!=t.transform&&(this.transform=t.transform));for(var e=0;e<this.$oneOfFields.length;++e)this.$fieldMap[this.$oneOfFields[e]]=1}}class g{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new g;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.alpha=t.float();break;case 2:n.layout=h.decode(t,t.uint32());break;case 3:n.transform=u.decode(t,t.uint32());break;case 4:n.clipPath=t.string();break;case 5:n.shapes&&n.shapes.length||(n.shapes=[]),n.shapes.push(b.decode(t,t.uint32()));break;default:t.skipType(7&e)}}return n}shapes=[];alpha=0;layout=null;transform=null;clipPath=\"\";constructor(t){t&&(null!=t.alpha&&(this.alpha=t.alpha),null!=t.clipPath&&(this.clipPath=t.clipPath),null!=t.layout&&(this.layout=t.layout),null!=t.shapes&&(this.shapes=t.shapes),null!=t.transform&&(this.transform=t.transform))}}class y{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new y;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.imageKey=t.string();break;case 2:n.frames&&n.frames.length||(n.frames=[]),n.frames.push(g.decode(t,t.uint32()));break;case 3:n.matteKey=t.string();break;default:t.skipType(7&e)}}return n}frames=[];imageKey=\"\";matteKey=\"\";constructor(t){t&&(null!=t.frames&&(this.frames=t.frames),null!=t.imageKey&&(this.imageKey=t.imageKey),null!=t.matteKey&&(this.matteKey=t.matteKey))}}class m{static decode(t,e){t=l.create(t);let r=null==e?t.len:t.pos+e,n=new m;for(;t.pos<r;){let e=t.uint32();switch(e>>>3){case 1:n.viewBoxWidth=t.float();break;case 2:n.viewBoxHeight=t.float();break;case 3:n.fps=t.int32();break;case 4:n.frames=t.int32();break;default:t.skipType(7&e)}}return n}viewBoxWidth=0;viewBoxHeight=0;fps=0;frames=0;constructor(t){t&&(null!=t.viewBoxWidth&&(this.viewBoxWidth=t.viewBoxWidth),null!=t.viewBoxHeight&&(this.viewBoxHeight=t.viewBoxHeight),null!=t.fps&&(this.fps=t.fps),null!=t.frames&&(this.frames=t.frames))}}const k=Object.freeze({});class T{static decode(t,e){t=l.create(t);const r=null==e?t.len:t.pos+e,n=new T;let s,i;for(;t.pos<r;){const e=t.uint32();switch(e>>>3){case 1:n.version=t.string();break;case 2:n.params=m.decode(t,t.uint32());break;case 3:{n.images==k&&(n.images={});const e=t.uint32()+t.pos;for(s=\"\",i=[];t.pos<e;){let e=t.uint32();switch(e>>>3){case 1:s=t.string();break;case 2:i=t.bytes();break;default:t.skipType(7&e)}}n.images[s]=i;break}case 4:n.sprites&&n.sprites.length||(n.sprites=[]),n.sprites.push(y.decode(t,t.uint32()));break;default:t.skipType(7&e)}}return n}version=\"\";params=null;images=k;sprites=[];constructor(t){t&&(null!=t.version&&(this.version=t.version),null!=t.images&&(this.images=t.images),null!=t.params&&(this.params=t.params),null!=t.sprites&&(this.sprites=t.sprites))}}class v{buffer=[];lengthInBits=0;getAt(t){const e=~~(t/8);return 1==(this.buffer[e]>>>7-t%8&1)}put(t,e){for(let r=0;r<e;r++)this.putBit(1==(t>>>e-r-1&1))}putBit(t){const{lengthInBits:e,buffer:r}=this,n=~~(e/8);r.length<=n&&r.push(0),t&&(r[n]|=128>>>e%8),this.lengthInBits+=1}}const B={MODE_NUMBER:1,MODE_ALPHA_NUM:2,MODE_8BIT_BYTE:4,MODE_KANJI:8},A={L:1,M:0,Q:3,H:2},C={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};class E{bytes;constructor(t){let e=[];for(let r=0;r<t.length;r++){const n=[],s=t.charCodeAt(r);s>65536?(n[0]=240|(1835008&s)>>>18,n[1]=128|(258048&s)>>>12,n[2]=128|(4032&s)>>>6,n[3]=128|63&s):s>2048?(n[0]=224|(61440&s)>>>12,n[1]=128|(4032&s)>>>6,n[2]=128|63&s):s>128?(n[0]=192|(1984&s)>>>6,n[1]=128|63&s):n[0]=s,e.push(n)}this.bytes=e.flat(1);const{bytes:r}=this;r.length!=t.length&&(r.unshift(191),r.unshift(187),r.unshift(239))}get mode(){return B.MODE_8BIT_BYTE}get length(){return this.bytes.length}write(t){const{bytes:e}=this;for(let r=0;r<e.length;r++)t.put(e[r],8)}}const I=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];class D{getRSBlockTable(t,e){const{L:r,M:n,Q:s,H:i}=A,o=4*(t-1);switch(e){case r:return I[o+0];case n:return I[o+1];case s:return I[o+2];case i:return I[o+3];default:throw new Error(`bad rs block @ typeNumber:${t}/errorCorrectLevel: ${e}`)}}getRSBlocks(t,e){const r=this.getRSBlockTable(t,e),n=r.length/3,s=[];for(let t=0;t<n;t++){const e=r[3*t],n=r[3*t+1],i=r[3*t+2];for(let t=0;t<e;t++)s.push({totalCount:n,dataCount:i})}return s}}class x{data;pos=0;buffer=0;buflen=0;constructor(t){this.data=t}decode(t){if(t>=65&&t<=90)return t-65;if(t>=97&&t<=122)return t-97+26;if(t>=48&&t<=57)return t-48+52;if(43==t)return 62;if(47==t)return 63;throw new Error(`c: ${t}`)}read(){for(;this.buflen<8;){if(this.pos>=this.data.length){if(0==this.buflen)return-1;throw new Error(`unexpected end of file./${this.buflen}`)}const t=this.data.charAt(this.pos);if(this.pos++,\"=\"==t)return this.buflen=0,-1;t.match(/^\\s$/)||(this.buffer=this.buffer<<6|this.decode(t.charCodeAt(0)),this.buflen+=6)}this.buflen-=8;return this.buffer>>>this.buflen&255}}const M=new Array(256),P=new Array(256);for(let t=0;t<8;t++)M[t]=1<<t;for(let t=8;t<256;t++)M[t]=M[t-4]^M[t-5]^M[t-6]^M[t-8];for(let t=0;t<255;t++)P[M[t]]=t;const N={glog(t){if(t<1)throw new Error(`glog(${t})`);return P[t]},gexp:t=>(t<0?t=255+t%255:t>255&&(t%=255),M[t])};class ${num;constructor(t,e){const{length:r}=t;if(void 0===r)throw new Error(`${r}/${e}`);let n=0;for(;n<r&&0==t[n];)n++;const s=r-n;this.num=new Array(s+e);for(let e=0;e<s;e++)this.num[e]=t[e+n]}get length(){return this.num.length}getAt(t){return this.num[t]}multiply(t){const{glog:e,gexp:r}=N,n=[];for(let s=0;s<this.length;s++)for(let i=0;i<t.length;i++)n[s+i]^=r(e(this.getAt(s))+e(t.getAt(i)));return new $(n,0)}mod(t){if(this.length-t.length<0)return this;const{glog:e,gexp:r}=N,n=e(this.getAt(0))-e(t.getAt(0)),s=[];for(var i=0;i<this.length;i++){const o=this.getAt(i);s[i]=i<t.length?o^r(e(t.getAt(i))+n):o}return new $(s,0).mod(t)}}const L=[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],R=t=>0==t?0:Math.log2(t),S=R(1335),O=R(7973),F={getBCHTypeInfo(t){let e=t<<10;for(;R(e)-S>=0;)e^=1335<<R(e)-S;return 21522^(t<<10|e)},getBCHTypeNumber(t){let e=t<<12;for(;R(e)-O>=0;)e^=7973<<R(e)-O;return t<<12|e},getPatternPosition:t=>L[t-1],getMaskFunction(t){const{PATTERN000:e,PATTERN001:r,PATTERN010:n,PATTERN011:s,PATTERN100:i,PATTERN101:o,PATTERN110:a,PATTERN111:l}=C;switch(t){case e:return(t,e)=>(t+e)%2==0;case r:return t=>t%2==0;case n:return(t,e)=>e%3==0;case s:return(t,e)=>(t+e)%3==0;case i:return(t,e)=>(~~(t/2)+~~(e/3))%2==0;case o:return(t,e)=>t*e%2+t*e%3==0;case a:return(t,e)=>(t*e%2+t*e%3)%2==0;case l:return(t,e)=>(t*e%3+(t+e)%2)%2==0;default:throw new Error(`bad maskPattern: ${t}`)}},getErrorCorrectPolynomial(t){let e=new $([1],0);for(let r=0;r<t;r++)e=e.multiply(new $([1,N.gexp(r)],0));return e},getLengthInBits(t,e){const{MODE_NUMBER:r,MODE_ALPHA_NUM:n,MODE_8BIT_BYTE:s,MODE_KANJI:i}=B;if(e<1||e>40)throw new Error(`type: ${e}`);if(e>=1&&e<10)switch(t){case r:return 10;case n:return 9;case s:case i:return 8}if(e<27)switch(t){case r:return 12;case n:return 11;case s:return 16;case i:return 10}if(e<=40)switch(t){case r:return 14;case n:return 13;case s:return 16;case i:return 12}throw new Error(`mode: ${t}`)},getLostPoint(t){const e=t.getModuleCount();let r=0;for(let n=0;n<e;n++)for(let s=0;s<e;s++){const i=t.isDark(n,s);let o=0;for(let r=-1;r<=1;r++){const a=n+r;if(!(a<0||e<=a))for(let n=-1;n<=1;n++){const l=s+n;l<0||e<=l||(0==r&&0==n||i==t.isDark(a,l)&&o++)}}o>5&&(r+=o+3-5)}for(let n=0;n<e-1;n++)for(let s=0;s<e-1;s++){let e=0;t.isDark(n,s)&&e++,t.isDark(n+1,s)&&e++,t.isDark(n,s+1)&&e++,t.isDark(n+1,s+1)&&e++,0!=e&&4!=e||(r+=3)}for(let n=0;n<e;n++)for(let s=0;s<e-6;s++)t.isDark(n,s)&&!t.isDark(n,s+1)&&t.isDark(n,s+2)&&t.isDark(n,s+3)&&t.isDark(n,s+4)&&!t.isDark(n,s+5)&&t.isDark(n,s+6)&&(r+=40);for(let n=0;n<e;n++)for(let s=0;s<e-6;s++)t.isDark(s,n)&&!t.isDark(s+1,n)&&t.isDark(s+2,n)&&t.isDark(s+3,n)&&t.isDark(s+4,n)&&!t.isDark(s+5,n)&&t.isDark(s+6,n)&&(r+=40);let n=0;for(let r=0;r<e;r++)for(let s=0;s<e;s++)t.isDark(s,r)&&n++;return r+10*(Math.abs(100*n/Math.pow(e,2)-50)/5)}};class U{typeNumber;static stringToBytes(t){const e=[];for(let r=0;r<t.length;r++)e.push(255&t.charCodeAt(r));return e}static createStringToBytes(t,e){const r=(()=>{const r=new x(t),n=()=>{const t=r.read();if(-1==t)throw new Error(\"character defect!\");return t},s={};let i=0;for(;;){const t=r.read();if(-1==t)break;const e=n(),o=n()<<8|n();s[String.fromCharCode(t<<8|e)]=o,i+=1}if(i!=e)throw new Error(`${i} != ${e}`);return s})(),n=\"?\".charCodeAt(0);return t=>{const e=[];for(let s=0;s<t.length;s++){const i=t.charCodeAt(s);if(i<128)e.push(i);else{const i=r[t.charAt(s)];\"number\"==typeof i?(255&i)==i?e.push(i):(e.push(i>>>8),e.push(255&i)):e.push(n)}}return e}}errorCorrectLevel;modules=[];moduleCount=0;dataCache=null;dataList=[];constructor(t,e){this.typeNumber=t,this.errorCorrectLevel=A[e]}makeImpl(t,e){this.moduleCount=4*this.typeNumber+17,this.modules=(t=>{const e=[];for(let r=0;r<t;r++){e[r]=[];for(let n=0;n<t;n++)e[r][n]=null}return e})(this.moduleCount);const r=this.moduleCount-7;this.setupPositionProbePattern(0,0),this.setupPositionProbePattern(r,0),this.setupPositionProbePattern(0,r),this.setupPositionAdjustPattern(),this.setupTimingPattern(),this.setupTypeInfo(t,e),this.typeNumber>=7&&this.setupTypeNumber(t),null==this.dataCache&&(this.dataCache=this.createData(this.typeNumber,this.errorCorrectLevel,this.dataList)),this.mapData(this.dataCache,e)}setupPositionProbePattern(t,e){const{modules:r,moduleCount:n}=this;for(let s=-1;s<=7;s++){const i=t+s;if(!(i<=-1||n<=i))for(let t=-1;t<=7;t++){const o=e+t;o<=-1||n<=o||(r[i][o]=s>=0&&s<=6&&(0==t||6==t)||t>=0&&t<=6&&(0==s||6==s)||s>=2&&s<=4&&t>=2&&t<=4)}}}setupPositionAdjustPattern(){const{typeNumber:t,modules:e}=this,r=F.getPatternPosition(t),{length:n}=r;for(let t=0;t<n;t++)for(let s=0;s<n;s++){const n=r[t],i=r[s];if(null==e[n][i])for(let t=-2;t<=2;t++)for(let r=-2;r<=2;r++)e[n+t][i+r]=-2==t||2==t||-2==r||2==r||0==t&&0==r}}setupTimingPattern(){const{moduleCount:t,modules:e}=this,r=t-8;for(let t=8;t<r;t++)null==e[t][6]&&(e[t][6]=t%2==0);for(let t=8;t<r;t++)null==e[6][t]&&(e[6][t]=t%2==0)}setupTypeInfo(t,e){const{errorCorrectLevel:r,modules:n,moduleCount:s}=this,i=r<<3|e,o=F.getBCHTypeInfo(i);for(let e=0;e<15;e++){const r=!t&&1==(o>>e&1);e<6?n[e][8]=r:e<8?n[e+1][8]=r:n[s-15+e][8]=r}for(let e=0;e<15;e++){const r=!t&&1==(o>>e&1);e<8?n[8][s-e-1]=r:e<9?n[8][15-e]=r:n[8][15-e-1]=r}n[s-8][8]=!t}getBestMaskPattern(){let t=0,e=0;for(let r=0;r<8;r++){this.makeImpl(!0,r);const n=F.getLostPoint(this);(0==r||t>n)&&(t=n,e=r)}return e}setupTypeNumber(t){const{typeNumber:e,modules:r,moduleCount:n}=this,s=F.getBCHTypeNumber(e);for(let e=0;e<18;e++){const i=!t&&1==(s>>e&1);r[~~(e/3)][e%3+n-8-3]=i,r[e%3+n-8-3][~~(e/3)]=i}}createData(t,e,r){const n=(new D).getRSBlocks(t,e),s=new v;for(let e=0;e<r.length;e++){const n=r[e];s.put(n.mode,4),s.put(n.length,F.getLengthInBits(n.mode,t)),n.write(s)}let i=0;for(let t=0;t<n.length;t++)i+=n[t].dataCount;const o=8*i;if(s.lengthInBits>o)throw new Error(`code length overflow. (${s.lengthInBits} > ${o})`);for(s.lengthInBits+4<=o&&s.put(0,4);s.lengthInBits%8!=0;)s.putBit(!1);for(;!(s.lengthInBits>=o||(s.put(236,8),s.lengthInBits>=o));)s.put(17,8);return this.createBytes(s,n)}mapData(t,e){const{modules:r,moduleCount:n}=this,s=F.getMaskFunction(e);let i=-1,o=n-1,a=7,l=0;for(let e=o;e>0;e-=2)for(6==e&&(e-=1);;){for(let n=0;n<2;n++)if(null==r[o][e-n]){let i=!1;l<t.length&&(i=1==(t[l]>>>a&1)),s(o,e-n)&&(i=!i),r[o][e-n]=i,a--,-1==a&&(l++,a=7)}if(o+=i,o<0||n<=o){o-=i,i=-i;break}}}createBytes(t,e){const r=[],n=[];let s=0,i=0,o=0;for(let a=0;a<e.length;a++){const l=e[a].dataCount,h=e[a].totalCount-l;i=Math.max(i,l),o=Math.max(o,h),r[a]=[];for(let e=0;e<l;e++)r[a][e]=255&t.buffer[e+s];s+=l;const u=F.getErrorCorrectPolynomial(h),c=new $(r[a],u.length-1).mod(u);n[a]=new Array(u.length-1);for(let t=0;t<n[a].length;t++){const e=t+c.length-n[a].length;n[a][t]=e>=0?c.getAt(e):0}}let a=0;for(let t=0;t<e.length;t++)a+=e[t].totalCount;const l=new Array(a);let h=0;for(let t=0;t<i;t++)for(let n=0;n<e.length;n++)t<r[n].length&&(l[h++]=r[n][t]);for(let t=0;t<o;t++)for(let r=0;r<e.length;r++)t<n[r].length&&(l[h++]=n[r][t]);return l}isDark(t,e){const{moduleCount:r}=this;if(t<0||r<=t||e<0||r<=e)throw new Error(`${t}, ${e}`);return this.modules[t][e]}addData(t){this.dataList.push(new E(t)),this.dataCache=null}getModuleCount(){return this.moduleCount}make(){this.makeImpl(!1,this.getBestMaskPattern())}}class z{out;bit=0;bitlen=0;constructor(t){this.out=t}write(t,e){if(t>>>e!=0)throw new Error(\"length over\");for(;this.bitlen+e>=8;)this.out.writeByte(255&(t<<this.bitlen|this.bit)),e-=8-this.bitlen,t>>>=8-this.bitlen,this.bit=this.bitlen=0;this.bit=t<<this.bitlen|this.bit,this.bitlen+=e}flush(){this.bitlen>0&&this.out.writeByte(this.bit)}}class _{bytes=[];writeByte(t){this.bytes.push(255&t)}writeBytes(t,e,r){const n=e||0,s=r||t.length;for(let e=0;e<s;e++)this.writeByte(t[e+n])}writeShort(t){this.writeByte(t),this.writeByte(t>>>8)}writeString(t){for(let e=0;e<t.length;e++)this.writeByte(t.charCodeAt(e))}toByteArray(){return this.bytes}toString(){return`[${this.bytes.join(\",\")}]`}}class H{map={};mapSize=0;get size(){return this.mapSize}add(t){if(this.contains(t))throw new Error(`dup key: ${t}`);this.map[t]=this.mapSize,this.mapSize++}indexOf(t){return this.map[t]??-1}contains(t){return null!=this.map[t]}}class K{buffer=0;buflen=0;length=0;base64=\"\";encode(t){if(t<26)return 65+t;if(t<52)return t-26+97;if(t<62)return t-52+48;if(62==t)return 43;if(63==t)return 47;throw new Error(`n: ${t}`)}writeEncoded(t){this.base64+=String.fromCharCode(this.encode(63&t))}writeByte(t){for(this.buffer=this.buffer<<8|255&t,this.buflen+=8,this.length+=1;this.buflen>=6;)this.buflen-=6,this.writeEncoded(this.buffer>>>this.buflen)}flush(){const{buffer:t,buflen:e,length:r}=this;if(e>0&&(this.writeEncoded(t<<6-e),this.buffer=0,this.buflen=0),r%3!=0){const t=3-r%3;for(let e=0;e<t;e++)this.base64+=\"=\"}}toString(){return this.base64}}class W{width;height;data=[];constructor(t,e){this.width=t,this.height=e}getLZWRaster(t){const{data:e}=this,r=1<<t,n=r+1;let s=t+1;const i=new H,o=t=>String.fromCharCode(t);for(let t=0;t<r;t+=1)i.add(o(t));i.add(o(r)),i.add(o(n));const a=new _,l=new z(a);l.write(r,s);let h=0,u=o(e[h++]);for(;h<e.length;){const t=o(e[h++]);i.contains(u+t)?u+=t:(l.write(i.indexOf(u),s),i.size<4095&&(i.size==1<<s&&s++,i.add(u+t)),u=t)}return l.write(i.indexOf(u),s),l.write(n,s),l.flush(),a.toByteArray()}setPixel(t,e,r){this.data[e*this.width+t]=r}write(t,e=\"#000000\",r=\"#ffffff\"){const{width:n,height:s}=this;t.writeString(\"GIF87a\"),t.writeShort(n),t.writeShort(s),t.writeByte(128),t.writeByte(0),t.writeByte(0);const i=e.split(\"\");t.writeByte(parseInt(`${i[1]}${i[2]}`,16)),t.writeByte(parseInt(`${i[3]}${i[4]}`,16)),t.writeByte(parseInt(`${i[5]}${i[6]}`,16));const o=r.split(\"\");t.writeByte(parseInt(`${o[1]}${o[2]}`,16)),t.writeByte(parseInt(`${o[3]}${o[4]}`,16)),t.writeByte(parseInt(`${o[5]}${o[6]}`,16)),t.writeString(\",\"),t.writeShort(0),t.writeShort(0),t.writeShort(n),t.writeShort(s),t.writeByte(0);const a=this.getLZWRaster(2);t.writeByte(2);let l=0;for(;a.length-l>255;)t.writeByte(255),t.writeBytes(a,l,255),l+=255;const h=a.length-l;t.writeByte(h),t.writeBytes(a,l,h),t.writeByte(0),t.writeString(\";\")}}function Y(t,e,r,n,s){const i=new W(t,e);for(let n=0;n<e;n++)for(let e=0;e<t;e++)i.setPixel(e,n,r(e,n));const o=new _;i.write(o,n,s);const a=new K,l=o.toByteArray();for(let t=0;t<l.length;t++)a.writeByte(l[t]);return a.flush(),`data:image/gif;base64,${a}`}var j=Uint8Array,J=Uint16Array,X=Int32Array,Q=new j([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),V=new j([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Z=new j([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),G=function(t,e){for(var r=new J(31),n=0;n<31;++n)r[n]=e+=1<<t[n-1];var s=new X(r[30]);for(n=1;n<30;++n)for(var i=r[n];i<r[n+1];++i)s[i]=i-r[n]<<5|n;return{b:r,r:s}},q=G(Q,2),tt=q.b,et=q.r;tt[28]=258,et[258]=28;for(var rt=G(V,0).r,nt=new J(32768),st=0;st<32768;++st){var it=(43690&st)>>1|(21845&st)<<1;it=(61680&(it=(52428&it)>>2|(13107&it)<<2))>>4|(3855&it)<<4,nt[st]=((65280&it)>>8|(255&it)<<8)>>1}var ot=function(t,e,r){for(var n=t.length,s=0,i=new J(e);s<n;++s)t[s]&&++i[t[s]-1];var o,a=new J(e);for(s=1;s<e;++s)a[s]=a[s-1]+i[s-1]<<1;if(r){o=new J(1<<e);var l=15-e;for(s=0;s<n;++s)if(t[s])for(var h=s<<4|t[s],u=e-t[s],c=a[t[s]-1]++<<u,f=c|(1<<u)-1;c<=f;++c)o[nt[c]>>l]=h}else for(o=new J(n),s=0;s<n;++s)t[s]&&(o[s]=nt[a[t[s]-1]++]>>15-t[s]);return o},at=new j(288);for(st=0;st<144;++st)at[st]=8;for(st=144;st<256;++st)at[st]=9;for(st=256;st<280;++st)at[st]=7;for(st=280;st<288;++st)at[st]=8;var lt=new j(32);for(st=0;st<32;++st)lt[st]=5;var ht=ot(at,9,0),ut=ot(lt,5,0),ct=function(t){return(t+7)/8|0},ft=function(t,e,r){r<<=7&e;var n=e/8|0;t[n]|=r,t[n+1]|=r>>8},dt=function(t,e,r){r<<=7&e;var n=e/8|0;t[n]|=r,t[n+1]|=r>>8,t[n+2]|=r>>16},pt=function(t,e){for(var r=[],n=0;n<t.length;++n)t[n]&&r.push({s:n,f:t[n]});var s=r.length,i=r.slice();if(!s)return{t:Tt,l:0};if(1==s){var o=new j(r[0].s+1);return o[r[0].s]=1,{t:o,l:1}}r.sort((function(t,e){return t.f-e.f})),r.push({s:-1,f:25001});var a=r[0],l=r[1],h=0,u=1,c=2;for(r[0]={s:-1,f:a.f+l.f,l:a,r:l};u!=s-1;)a=r[r[h].f<r[c].f?h++:c++],l=r[h!=u&&r[h].f<r[c].f?h++:c++],r[u++]={s:-1,f:a.f+l.f,l:a,r:l};var f=i[0].s;for(n=1;n<s;++n)i[n].s>f&&(f=i[n].s);var d=new J(f+1),p=wt(r[u-1],d,0);if(p>e){n=0;var w=0,b=p-e,g=1<<b;for(i.sort((function(t,e){return d[e.s]-d[t.s]||t.f-e.f}));n<s;++n){var y=i[n].s;if(!(d[y]>e))break;w+=g-(1<<p-d[y]),d[y]=e}for(w>>=b;w>0;){var m=i[n].s;d[m]<e?w-=1<<e-d[m]++-1:++n}for(;n>=0&&w;--n){var k=i[n].s;d[k]==e&&(--d[k],++w)}p=e}return{t:new j(d),l:p}},wt=function(t,e,r){return-1==t.s?Math.max(wt(t.l,e,r+1),wt(t.r,e,r+1)):e[t.s]=r},bt=function(t){for(var e=t.length;e&&!t[--e];);for(var r=new J(++e),n=0,s=t[0],i=1,o=function(t){r[n++]=t},a=1;a<=e;++a)if(t[a]==s&&a!=e)++i;else{if(!s&&i>2){for(;i>138;i-=138)o(32754);i>2&&(o(i>10?i-11<<5|28690:i-3<<5|12305),i=0)}else if(i>3){for(o(s),--i;i>6;i-=6)o(8304);i>2&&(o(i-3<<5|8208),i=0)}for(;i--;)o(s);i=1,s=t[a]}return{c:r.subarray(0,n),n:e}},gt=function(t,e){for(var r=0,n=0;n<e.length;++n)r+=t[n]*e[n];return r},yt=function(t,e,r){var n=r.length,s=ct(e+2);t[s]=255&n,t[s+1]=n>>8,t[s+2]=255^t[s],t[s+3]=255^t[s+1];for(var i=0;i<n;++i)t[s+i+4]=r[i];return 8*(s+4+n)},mt=function(t,e,r,n,s,i,o,a,l,h,u){ft(e,u++,r),++s[256];for(var c=pt(s,15),f=c.t,d=c.l,p=pt(i,15),w=p.t,b=p.l,g=bt(f),y=g.c,m=g.n,k=bt(w),T=k.c,v=k.n,B=new J(19),A=0;A<y.length;++A)++B[31&y[A]];for(A=0;A<T.length;++A)++B[31&T[A]];for(var C=pt(B,7),E=C.t,I=C.l,D=19;D>4&&!E[Z[D-1]];--D);var x,M,P,N,$=h+5<<3,L=gt(s,at)+gt(i,lt)+o,R=gt(s,f)+gt(i,w)+o+14+3*D+gt(B,E)+2*B[16]+3*B[17]+7*B[18];if(l>=0&&$<=L&&$<=R)return yt(e,u,t.subarray(l,l+h));if(ft(e,u,1+(R<L)),u+=2,R<L){x=ot(f,d,0),M=f,P=ot(w,b,0),N=w;var S=ot(E,I,0);ft(e,u,m-257),ft(e,u+5,v-1),ft(e,u+10,D-4),u+=14;for(A=0;A<D;++A)ft(e,u+3*A,E[Z[A]]);u+=3*D;for(var O=[y,T],F=0;F<2;++F){var U=O[F];for(A=0;A<U.length;++A){var z=31&U[A];ft(e,u,S[z]),u+=E[z],z>15&&(ft(e,u,U[A]>>5&127),u+=U[A]>>12)}}}else x=ht,M=at,P=ut,N=lt;for(A=0;A<a;++A){var _=n[A];if(_>255){dt(e,u,x[(z=_>>18&31)+257]),u+=M[z+257],z>7&&(ft(e,u,_>>23&31),u+=Q[z]);var H=31&_;dt(e,u,P[H]),u+=N[H],H>3&&(dt(e,u,_>>5&8191),u+=V[H])}else dt(e,u,x[_]),u+=M[_]}return dt(e,u,x[256]),u+M[256]},kt=new X([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),Tt=new j(0),vt=function(t,e,r,n,s,i){var o=i.z||t.length,a=new j(n+o+5*(1+Math.ceil(o/7e3))+s),l=a.subarray(n,a.length-s),h=i.l,u=7&(i.r||0);if(e){u&&(l[0]=i.r>>3);for(var c=kt[e-1],f=c>>13,d=8191&c,p=(1<<r)-1,w=i.p||new J(32768),b=i.h||new J(p+1),g=Math.ceil(r/3),y=2*g,m=function(e){return(t[e]^t[e+1]<<g^t[e+2]<<y)&p},k=new X(25e3),T=new J(288),v=new J(32),B=0,A=0,C=i.i||0,E=0,I=i.w||0,D=0;C+2<o;++C){var x=m(C),M=32767&C,P=b[x];if(w[M]=P,b[x]=M,I<=C){var N=o-C;if((B>7e3||E>24576)&&(N>423||!h)){u=mt(t,l,0,k,T,v,A,E,D,C-D,u),E=B=A=0,D=C;for(var $=0;$<286;++$)T[$]=0;for($=0;$<30;++$)v[$]=0}var L=2,R=0,S=d,O=M-P&32767;if(N>2&&x==m(C-O))for(var F=Math.min(f,N)-1,U=Math.min(32767,C),z=Math.min(258,N);O<=U&&--S&&M!=P;){if(t[C+L]==t[C+L-O]){for(var _=0;_<z&&t[C+_]==t[C+_-O];++_);if(_>L){if(L=_,R=O,_>F)break;var H=Math.min(O,_-2),K=0;for($=0;$<H;++$){var W=C-O+$&32767,Y=W-w[W]&32767;Y>K&&(K=Y,P=W)}}}O+=(M=P)-(P=w[M])&32767}if(R){k[E++]=268435456|et[L]<<18|rt[R];var Z=31&et[L],G=31&rt[R];A+=Q[Z]+V[G],++T[257+Z],++v[G],I=C+L,++B}else k[E++]=t[C],++T[t[C]]}}for(C=Math.max(C,I);C<o;++C)k[E++]=t[C],++T[t[C]];u=mt(t,l,h,k,T,v,A,E,D,C-D,u),h||(i.r=7&u|l[u/8|0]<<3,u-=7,i.h=b,i.p=w,i.i=C,i.w=I)}else{for(C=i.w||0;C<o+h;C+=65535){var q=C+65535;q>=o&&(l[u/8|0]=h,q=o),u=yt(l,u+1,t.subarray(C,q))}i.i=o}return function(t,e,r){return(null==r||r>t.length)&&(r=t.length),new j(t.subarray(e,r))}(a,0,n+ct(u)+s)};function Bt(t,e){return function(t,e,r,n,s){if(!s&&(s={l:1},e.dictionary)){var i=e.dictionary.subarray(-32768),o=new j(i.length+t.length);o.set(i),o.set(t,i.length),t=o,s.w=i.length}return vt(t,null==e.level?6:e.level,null==e.mem?s.l?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(t.length)))):20:12+e.mem,r,n,s)}(t,{},0,0)}var At=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{At.decode(Tt,{stream:!0})}catch(t){}class Ct{buf;static table=null;constructor(t){if(this.buf=t,null==Ct.table){const t=this.signedCRCTable(),e=this.sliceBy16Tables(t);Ct.table={T0:t,T1:e[0],T2:e[1],T3:e[2],T4:e[3],T5:e[4],T6:e[5],T7:e[6],T8:e[7],T9:e[8],Ta:e[9],Tb:e[10],Tc:e[11],Td:e[12],Te:e[13],Tf:e[14]}}}signedCRCTable(){let t=0,e=new Array(256);for(let r=0;r<256;r++){t=r;for(let e=0;e<8;e++)t=1&t?-306674912^t>>>1:t>>>1;e[r]=t}return e}sliceBy16Tables(t){let e=0,r=0,n=0;const s=new Array(4096);for(n=0;n<256;n++)s[n]=t[n];for(n=0;n<256;n++)for(r=t[n],e=256+n;e<4096;e+=256)r=s[e]=r>>>8^t[255&r];const i=[];for(n=1;n<16;n++)i[n-1]=s.slice(256*n,256*n+256);return i}read(){const{buf:t}=this,{T0:e,T1:r,T2:n,T3:s,T4:i,T5:o,T6:a,T7:l,T8:h,T9:u,Ta:c,Tb:f,Tc:d,Td:p,Te:w,Tf:b}=Ct.table;let g=-1,y=t.length-15,m=0;for(;m<y;)g=b[t[m++]^255&g]^w[t[m++]^g>>8&255]^p[t[m++]^g>>16&255]^d[t[m++]^g>>>24]^f[t[m++]]^c[t[m++]]^u[t[m++]]^h[t[m++]]^l[t[m++]]^a[t[m++]]^o[t[m++]]^i[t[m++]]^s[t[m++]]^n[t[m++]]^r[t[m++]]^e[t[m++]];for(y+=15;m<y;)g=g>>>8^e[255&(g^t[m++])];return~g}}class Et{width;height;data;constructor(t,e){this.width=t,this.height=e,this.data=new Uint32Array(t*e)}toInt8(t){const e=new ArrayBuffer(1);return new DataView(e).setUint8(0,t),e}toInt32(t){const e=new ArrayBuffer(4);return new DataView(e).setUint32(0,t,!1),e}createChunk(t,e,r=[]){const n=new Uint8Array(e);return new Uint8Array([...new Uint8Array(this.toInt32(t)),...n,...r,...new Uint8Array(this.toInt32(new Ct([...n,...r]).read()))])}get length(){return this.data.length}setPixel(t,e,r){this.data[e*this.width+t]=r}write(t){const{width:e,height:r}=this;t.writeBytes([137,80,78,71,13,10,26,10]);const n=this.createChunk(13,[73,72,68,82],new Uint8Array([...new Uint8Array(this.toInt32(e)),...new Uint8Array(this.toInt32(r)),...new Uint8Array(this.toInt8(1)),...new Uint8Array(this.toInt8(0)),...new Uint8Array(this.toInt8(0)),...new Uint8Array(this.toInt8(0)),...new Uint8Array(this.toInt8(0))]));t.writeBytes(n);const s=Bt(new Uint8Array(this.data.buffer)),i=this.createChunk(s.length,[73,68,65,84],s);t.writeBytes(i);const o=this.createChunk(0,[73,69,78,68]);t.writeBytes(o)}}function It(t,e,r){const n=new Et(t,e);for(let e=0;e<n.length;e++){const s=e%t,i=Math.floor(e/t);n.setPixel(s,i,r(s,i))}const s=new _;n.write(s);const i=new K,o=s.toByteArray();for(let t=0;t<o.length;t++)i.writeByte(o[t]);return i.flush(),`data:image/png;base64,${i}`}function Dt(t={}){const e={...t};return{typeNumber:e.typeNumber??4,errorCorrectLevel:e.errorCorrectLevel??\"M\",size:e.size??500,black:e.black??\"#000000FF\",white:e.white??\"#FFFFFFFF\"}}const xt=(t,e)=>{const r=~~(e/t);return{margin:~~((e-t*r)/2),cellSize:r||2}};function Mt(t,e){const{typeNumber:r,errorCorrectLevel:n,size:s,black:i,white:o}=Dt(e);let a;try{a=new U(r,n),a.addData(t),a.make()}catch(e){if(r>=40)throw new Error(\"Text too long to encode\");return arguments.callee(t,{size:s,errorCorrectLevel:n,typeNumber:r+1,black:i,white:o})}const l=a.getModuleCount(),{margin:h,cellSize:u}=xt(l,s),c=l*u+h;return Y(s,s,((t,e)=>{if(h<=t&&t<c&&h<=e&&e<c){const r=~~((t-h)/u),n=~~((e-h)/u);return a.isDark(n,r)?0:1}return 1}),i,o)}function Pt(t,e){const{typeNumber:r,errorCorrectLevel:n,size:s,black:i,white:o}=Dt(e);let a;try{a=new U(r,n),a.addData(t),a.make()}catch(e){if(r>=40)throw new Error(\"Text too long to encode\");return arguments.callee(t,{size:s,errorCorrectLevel:n,typeNumber:r+1,black:i,white:o})}const l=a.getModuleCount(),{margin:h,cellSize:u}=xt(l,s),c=l*u+h,f=+i.replace(\"#\",\"0x\"),d=+o.replace(\"#\",\"0x\");return It(s,s,((t,e)=>{if(h<=t&&t<c&&h<=e&&e<c){const r=~~((t-h)/u),n=~~((e-h)/u);return a.isDark(n,r)?f:d}return d}))}function Nt(t,e){const{typeNumber:r,errorCorrectLevel:n,size:s,black:i,white:o}=Dt(e);let a;try{a=new U(r,n),a.addData(t),a.make()}catch(e){if(r>=40)throw new Error(\"Text too long to encode\");return arguments.callee(t,{size:s,errorCorrectLevel:n,typeNumber:r+1,black:i,white:o})}const l=a.getModuleCount(),{margin:h,cellSize:u}=xt(l,s),c=\"border-width: 0px; border-style: none; border-collapse: collapse; padding: 0px;\";let f=`<table style=\"${c} margin: ${h}px;\"><tbody>`;for(let t=0;t<l;t++){f+=\"<tr>\";for(let e=0;e<l;e++)f+=`<td style=\"${c} margin: 0px; width: ${u}px; height: ${u}px; background-color: ${a.isDark(t,e)?\"#000000\":\"#ffffff\"};\"/>`;f+=\"</tr>\"}return f+\"</tbody></table>\"}export{W as GifImage,T as MovieEntity,Et as PngImage,U as QRCode,Y as createGifTag,It as createPngTag,Mt as createQRCodeToGIF,Nt as createQRCodeToHTML,Pt as createQRCodeToPNG};\n//# sourceMappingURL=index.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["i","et","p","tt","MovieEntity"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAqBA;AACA,IAAI,EAAE,GAAG,UAAU,EAAE,GAAG,GAAG,WAAW,EAAE,GAAG,GAAG,UAAU;AACxD;AACA,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACjJ;AACA,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;AACxI;AACA,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACrF;AACA,IAAI,IAAI,GAAG,UAAU,EAAE,EAAE,KAAK,EAAE;AAChC,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC;AACvB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;AACjC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;AACtC;AACA;AACA,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AAC1B,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;AACjC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE;AAC9C,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;AACxC;AACA;AACA,IAAI,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACzB,CAAC;AACD,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC;AAC/C;AACA,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;AAC1B,IAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACjC;AACA,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC;AACxB,KAAK,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,KAAK,EAAE,EAAEA,GAAC,EAAE;AAChC;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,CAACA,GAAC,GAAG,MAAM,KAAK,CAAC,KAAK,CAACA,GAAC,GAAG,MAAM,KAAK,CAAC,CAAC;AACrD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,CAAC;AACjD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,CAAC;AACjD,IAAI,GAAG,CAACA,GAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,KAAK,CAAC,CAAC,KAAK,CAAC;AAC7D;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;AACjC,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM;AACrB;AACA,IAAI,IAAI,CAAC,GAAG,CAAC;AACb;AACA,IAAI,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC;AACvB;AACA,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AACvB,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC;AACjB,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1B;AACA;AACA,IAAI,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC;AACxB,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;AAC7B,QAAQ,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AAC3C;AACA,IAAI,IAAI,EAAE;AACV,IAAI,IAAI,CAAC,EAAE;AACX;AACA,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AAC7B;AACA,QAAQ,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE;AACzB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAChC;AACA,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;AACvB;AACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACzC;AACA,gBAAgB,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACpC;AACA,gBAAgB,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG;AAC9C;AACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAChE;AACA,oBAAoB,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;AACvB,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;AAChC,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;AACvB,gBAAgB,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5D;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,CAAC,CAAC;AACF;AACA,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC;AACrB,KAAK,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,GAAG,EAAE,EAAEA,GAAC;AAC5B,IAAI,GAAG,CAACA,GAAC,CAAC,GAAG,CAAC;AACd,KAAK,IAAIA,GAAC,GAAG,GAAG,EAAEA,GAAC,GAAG,GAAG,EAAE,EAAEA,GAAC;AAC9B,IAAI,GAAG,CAACA,GAAC,CAAC,GAAG,CAAC;AACd,KAAK,IAAIA,GAAC,GAAG,GAAG,EAAEA,GAAC,GAAG,GAAG,EAAE,EAAEA,GAAC;AAC9B,IAAI,GAAG,CAACA,GAAC,CAAC,GAAG,CAAC;AACd,KAAK,IAAIA,GAAC,GAAG,GAAG,EAAEA,GAAC,GAAG,GAAG,EAAE,EAAEA,GAAC;AAC9B,IAAI,GAAG,CAACA,GAAC,CAAC,GAAG,CAAC;AACd;AACA,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC;AACpB,KAAK,IAAIA,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,EAAE,EAAE,EAAEA,GAAC;AAC3B,IAAI,GAAG,CAACA,GAAC,CAAC,GAAG,CAAC;AACd;AACG,IAAsC,IAAI,iBAAiB,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;AAC5E;AACG,IAAsC,IAAI,iBAAiB,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;AAC5E;AACA,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE;AACvB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAChB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACvC,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;AACpB,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,IAAI,OAAO,CAAC;AACZ,CAAC;AACD;AACA,IAAI,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC9B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AACvB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AACpD,CAAC;AACD;AACA,IAAI,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;AAC7B,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;AACvB,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAClE,CAAC;AACD;AACA,IAAI,IAAI,GAAG,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;AACrD;AACA;AACA,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAG7B,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;AACjC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM;AACpB;AACA,IAAI,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC,CAAC;AAqBD;AACA,IAAI,EAAE,GAAG;AACT,IAAI,gBAAgB;AACpB,IAAI,oBAAoB;AACxB,IAAI,wBAAwB;AAC5B,IAAI,kBAAkB;AACtB,IAAI,iBAAiB;AACrB,IAAI,mBAAmB;AACvB;AACA,IAAI,aAAa;AACjB,IAAI,oBAAoB;AACxB,IAAI,sBAAsB;AAC1B,IAAI,6BAA6B;AACjC,IAAI,mBAAmB;AACvB,IAAI,kBAAkB;AACtB,IAAI;AACJ;AACA,CAAC;AAED,IAAI,GAAG,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;AAClC,IAAI,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AACrC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG;AAChB,IAAI,IAAI,KAAK,CAAC,iBAAiB;AAC/B,QAAQ,KAAK,CAAC,iBAAiB,CAAC,CAAC,EAAE,GAAG,CAAC;AACvC,IAAI,IAAI,CAAC,EAAE;AACX,QAAQ,MAAM,CAAC;AACf,IAAI,OAAO,CAAC;AACZ,CAAC;AACD;AACA,IAAI,KAAK,GAAG,UAAU,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE;AAC1C;AACA,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,EAAE,EAAE,GAAwB,CAAC;AACpD,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC5B,QAAQ,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC;AAC/B,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG;AACpB;AACA,IAAI,IAAI,MAAM,GAAG,KAAK,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;AACnC;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC;AACnB;AACA,IAAI,IAAI,KAAK;AACb,QAAQ,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5B;AACA,IAAI,IAAI,IAAI,GAAG,UAAU,CAAC,EAAE;AAC5B,QAAQ,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM;AAC3B;AACA,QAAQ,IAAI,CAAC,GAAG,EAAE,EAAE;AACpB;AACA,YAAY,IAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAClD,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACzB,YAAY,GAAG,GAAG,IAAI;AACtB;AACA,KAAK;AACL;AACA,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;AACxG;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,CAAC;AACrB,IAAI,GAAG;AACP,QAAQ,IAAI,CAAC,EAAE,EAAE;AACjB;AACA,YAAY,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC;AACA,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;AAC5C,YAAY,GAAG,IAAI,CAAC;AACpB,YAAY,IAAI,CAAC,IAAI,EAAE;AACvB;AACA,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC;AACpF,gBAAgB,IAAI,CAAC,GAAG,EAAE,EAAE;AAC5B,oBAAoB,IAAI,IAAI;AAC5B,wBAAwB,GAAG,CAAC,CAAC,CAAC;AAC9B,oBAAoB;AACpB;AACA;AACA,gBAAgB,IAAI,MAAM;AAC1B,oBAAoB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAChC;AACA,gBAAgB,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAC/C;AACA,gBAAgB,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,KAAK;AAChE,gBAAgB;AAChB;AACA,iBAAiB,IAAI,IAAI,IAAI,CAAC;AAC9B,gBAAgB,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC;AACtD,iBAAiB,IAAI,IAAI,IAAI,CAAC,EAAE;AAChC;AACA,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,EAAE,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC;AACxF,gBAAgB,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC;AAC1D,gBAAgB,GAAG,IAAI,EAAE;AACzB;AACA,gBAAgB,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC;AACpC;AACA,gBAAgB,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC;AACpC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE;AAChD;AACA,oBAAoB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AAC5D;AACA,gBAAgB,GAAG,IAAI,KAAK,GAAG,CAAC;AAChC;AACA,gBAAgB,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3D;AACA,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;AAC3C,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG;AACzC,oBAAoB,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AACvD;AACA,oBAAoB,GAAG,IAAI,CAAC,GAAG,EAAE;AACjC;AACA,oBAAoB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AAClC;AACA,oBAAoB,IAAI,CAAC,GAAG,EAAE,EAAE;AAChC,wBAAwB,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AACpC;AACA,yBAAyB;AACzB;AACA,wBAAwB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC;AACxC,wBAAwB,IAAI,CAAC,IAAI,EAAE;AACnC,4BAA4B,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/E,6BAA6B,IAAI,CAAC,IAAI,EAAE;AACxC,4BAA4B,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC;AAC/D,6BAA6B,IAAI,CAAC,IAAI,EAAE;AACxC,4BAA4B,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC;AAClE,wBAAwB,OAAO,CAAC,EAAE;AAClC,4BAA4B,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;AACxC;AACA;AACA;AACA,gBAAgB,IAAI,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;AACvE;AACA,gBAAgB,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;AAC7B;AACA,gBAAgB,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;AAC7B,gBAAgB,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC,gBAAgB,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC;AACrC;AACA;AACA,gBAAgB,GAAG,CAAC,CAAC,CAAC;AACtB,YAAY,IAAI,GAAG,GAAG,IAAI,EAAE;AAC5B,gBAAgB,IAAI,IAAI;AACxB,oBAAoB,GAAG,CAAC,CAAC,CAAC;AAC1B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,QAAQ,IAAI,MAAM;AAClB,YAAY,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AACtD,QAAQ,IAAI,IAAI,GAAG,GAAG;AACtB,QAAQ,QAAQ,IAAI,GAAG,GAAG,EAAE;AAC5B;AACA,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;AAC5D,YAAY,GAAG,IAAI,CAAC,GAAG,EAAE;AACzB,YAAY,IAAI,GAAG,GAAG,IAAI,EAAE;AAC5B,gBAAgB,IAAI,IAAI;AACxB,oBAAoB,GAAG,CAAC,CAAC,CAAC;AAC1B,gBAAgB;AAChB;AACA,YAAY,IAAI,CAAC,CAAC;AAClB,gBAAgB,GAAG,CAAC,CAAC,CAAC;AACtB,YAAY,IAAI,GAAG,GAAG,GAAG;AACzB,gBAAgB,GAAG,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG;AAC/B,iBAAiB,IAAI,GAAG,IAAI,GAAG,EAAE;AACjC,gBAAgB,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,IAAI;AACrC,gBAAgB;AAChB;AACA,iBAAiB;AACjB,gBAAgB,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG;AACnC;AACA,gBAAgB,IAAI,GAAG,GAAG,GAAG,EAAE;AAC/B;AACA,oBAAoB,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;AAClD,oBAAoB,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9D,oBAAoB,GAAG,IAAI,CAAC;AAC5B;AACA;AACA,gBAAgB,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC;AACjE,gBAAgB,IAAI,CAAC,CAAC;AACtB,oBAAoB,GAAG,CAAC,CAAC,CAAC;AAC1B,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE;AAC7B,gBAAgB,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;AACjC,gBAAgB,IAAI,IAAI,GAAG,CAAC,EAAE;AAC9B,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;AACtC,oBAAoB,EAAE,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC;AACnE;AACA,gBAAgB,IAAI,GAAG,GAAG,IAAI,EAAE;AAChC,oBAAoB,IAAI,IAAI;AAC5B,wBAAwB,GAAG,CAAC,CAAC,CAAC;AAC9B,oBAAoB;AACpB;AACA,gBAAgB,IAAI,MAAM;AAC1B,oBAAoB,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC;AACrC,gBAAgB,IAAI,GAAG,GAAG,EAAE,GAAG,GAAG;AAClC,gBAAgB,IAAI,EAAE,GAAG,EAAE,EAAE;AAC7B,oBAAoB,IAAI,KAAK,GAAG,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC;AACjE,oBAAoB,IAAI,KAAK,GAAG,EAAE,GAAG,CAAC;AACtC,wBAAwB,GAAG,CAAC,CAAC,CAAC;AAC9B,oBAAoB,OAAO,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE;AAC1C,wBAAwB,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAClD;AACA,gBAAgB,OAAO,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE;AACrC,oBAAoB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;AAC1C;AACA;AACA,QAAQ,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,KAAK;AACvD,QAAQ,IAAI,EAAE;AACd,YAAY,KAAK,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG;AACxD,KAAK,QAAQ,CAAC,KAAK;AACnB;AACA,IAAI,OAAO,EAAE,IAAI,GAAG,CAAC,MAAM,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;AAC5E,CAAC;AAmOD;AACA,IAAIC,IAAE,iBAAiB,IAAI,EAAE,CAAC,CAAC,CAAC;AAgYhC;AACA,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE,IAAI,EAAE;AAC7B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACxE,QAAQ,GAAG,CAAC,CAAC,EAAE,mBAAmB,CAAC;AACnC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAM;AACjC,QAAQ,GAAG,CAAC,CAAC,EAAE,qBAAqB,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,MAAM,GAAG,YAAY,CAAC,GAAG,aAAa,CAAC;AAC3F,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;AAC9B,CAAC;AAmfD;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE;AACvC,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAA6B,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,IAAgB,EAAE,IAAuB,CAAC;AAC5H;AAgIA;AACA,IAAI,EAAE,GAAG,OAAO,WAAW,IAAI,WAAW,kBAAkB,IAAI,WAAW,EAAE;AAC7E;AACA,IAAI,GAAG,GAAG,CAAC;AACX,IAAI;AACJ,IAAI,EAAE,CAAC,MAAM,CAACA,IAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AACnC,IAAI,GAAG,GAAG,CAAC;AACX;AACA,OAAO,CAAC,EAAE;;ACxnDV,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,WAAW,EAAE,OAAO,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,C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CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,YAAY,UAAU,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,UAAU,CAAC,sBAAseAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,QAAQ,MAAM,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,CAAC,WAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAACC,GAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAACA,GAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,OAAM,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,MAAM,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,CAAC,CAA60J,MAAM,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA6vspF,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAurD,IAAI,EAAE,CAAC,WAAW,EAAE,OAAO,WAAW,EAAE,IAAI,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,MAAM,CAAC,CAAC;;ACA7xkC;;;AAGG;AACI,MAAM,EAAE,GAAG;AAChB,IAAA,MAAM,EAAE,CAAC;AACT,IAAA,MAAM,EAAE,CAAC;AACT,IAAA,MAAM,EAAE,CAAC;AACT,IAAA,EAAE,EAAE;CACL;AAED,IAAI,GAAW;AAEf;AACA,IAAI,OAAO,MAAM,IAAI,WAAW,EAAE;AAChC,IAAA,GAAG,GAAG,EAAE,CAAC,EAAE;AACb;AAAO,KAAA,IAAI,OAAO,EAAE,IAAI,WAAW,EAAE;AACnC,IAAA,GAAG,GAAG,EAAE,CAAC,MAAM;AACjB;AAAO,KAAA,IAAI,OAAO,EAAE,IAAI,WAAW,EAAE;AACnC,IAAA,GAAG,GAAG,EAAE,CAAC,MAAM;AACjB;AAAO,KAAA,IAAI,OAAO,EAAE,IAAI,WAAW,EAAE;AACnC,IAAA,GAAG,GAAG,EAAE,CAAC,MAAM;AACjB;KAAO;AACL,IAAA,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC;AACpC;;ACtBA,IAAI,EAAE,GAAQ,IAAI;AAElB,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAChB,EAAE,GAAG,MAAM;AACb;AAAO,KAAA,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE;IAC3B,EAAE,GAAG,EAAE;AACT;AAAO,KAAA,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE;IAC3B,EAAE,GAAG,EAAE;AACT;AAAO,KAAA,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE;IAC3B,EAAE,GAAG,EAAE;AACT;;ACZA;AACA,MAAM,SAAS,GAAG;;AAEhB,IAAA,CAAC,EAAE,EAA6B;AAChC,IAAA,CAAC,EAAE,EAA4B;AAC/B,IAAA,SAAS,CAAC,KAAa,EAAA;QACrB,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,SAAS,EAAE;AACnC,YAAA,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;;AAGxB,QAAA,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;KACrB;AACD,IAAA,QAAQ,CAAC,KAAa,EAAA;QACpB,OAAO,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;KAC/B;AACD,IAAA,IAAI,CAAC,KAAa,EAAA;AAChB,QAAA,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;KACtB;AACD,IAAA,OAAO,CAAC,KAAa,EAAA;AACnB,QAAA,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;KACzB;AACD,IAAA,SAAS,CAAC,KAAa,EAAA;AACrB,QAAA,OAAO,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;KAC1B;AACD,IAAA,MAAM,CAAC,KAAa,EAAA;QAClB,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;KAC5B;AACD,IAAA,IAAI,CAAC,KAAa,EAAA;AAChB,QAAA,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI;KAC1B;AACD,IAAA,MAAM,CAAC,KAAa,EAAA;AAClB,QAAA,OAAO,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC;KAC1B;CACF;AAED,gBAAe;AACb,IAAA,KAAK,EAAE,EAAE;AACT,IAAA,KAAK,CAAC,KAAa,EAAA;AACjB,QAAA,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAI,CACF,KAAa,EACb,QAAiC,EACjC,cAAiD,EACjD,aAAgD,EAAA;AAEhD,QAAA,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC;QAE1B,MAAM,KAAK,GAAG,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC;QACvC,IAAI,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;YACtE,QAAQ,CAAC,KAAK,CAAC;;aACV;AACL,YAAA,cAAc,GAAG,KAAK,CAAC;AACvB,YAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;YACrB,QAAQ,CAAC,KAAK,CAAC;AACf,YAAA,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC;AACxB,YAAA,aAAa,GAAG,KAAK,CAAC;;KAEzB;AACD,IAAA,SAAS,CAAC,KAAa,EAAA;AACrB,QAAA,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC;KAC3B;AACD,IAAA,QAAQ,CAAC,KAAa,EAAA;AACpB,QAAA,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;KACtB;AACD,IAAA,UAAU,CAAC,KAAa,EAAA;AACtB,QAAA,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;KACxB;IACD,IAAI,CAAC,OAAe,EAAE,EAAA;QACpB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC9B;IACD,GAAG,CAAC,GAAG,OAAc,EAAA;QACnB,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,OAAO,CAAC;KACvC;CACF;;ACtED,MAAM,EAAE,cAAc,EAAE,GACtB,GAAG,IAAI,EAAE,CAAC;AACR,MAAE;AACF,MAAE,GAAG,IAAI,EAAE,CAAC;AACZ;AACE,YAAA,EAAE,CAAC,cAAc,EAAE,CAAC;AACtB,UAAE,EAAE,CAAC,GAAG;AAEI,SAAA,WAAW,CAAC,QAAgB,EAAE,MAAe,EAAA;AAC3D,IAAA,OAAO,GAAG,cAAc,CAAA,CAAA,EAAI,MAAM,GAAG,CAAA,EAAG,MAAM,CAAA,CAAA,CAAG,GAAG,EAAE,CAAG,EAAA,QAAQ,EAAE;AACrE;AAEA;;;;;AAKG;AACa,SAAA,YAAY,CAC1B,IAAiB,EACjB,QAAgB,EAAA;AAEhB,IAAA,MAAM,EAAE,GAAG,EAAE,CAAC,oBAAoB,EAAE;AAEpC,IAAA,SAAS,CAAC,GAAG,CAAC,eAAe,QAAQ,CAAA,CAAE,CAAC;IACxC,OAAO,IAAI,OAAO,CAAS,CAAC,OAAO,EAAE,MAAM,KAAI;QAC7C,EAAE,CAAC,MAAM,CAAC;AACR,YAAA,IAAI,EAAE,QAAQ;YACd,OAAO,GAAA;gBACL,OAAO,CAAC,QAAQ,CAAC;aAClB;YACD,IAAI,GAAA;gBACF,EAAE,CAAC,SAAS,CAAC;oBACX,QAAQ;oBACR,IAAI;oBACJ,OAAO,GAAA;wBACL,OAAO,CAAC,QAAQ,CAAC;qBAClB;AACD,oBAAA,IAAI,CAAC,GAAQ,EAAA;wBACX,SAAS,CAAC,GAAG,CAAC,CAAA,YAAA,EAAe,QAAQ,CAAE,CAAA,EAAE,GAAG,CAAC;wBAC7C,MAAM,CAAC,GAAG,CAAC;qBACZ;AACF,iBAAA,CAAC;aACH;AACF,SAAA,CAAC;AACJ,KAAC,CAAC;AACJ;AAEA;;;;AAIG;AACG,SAAU,aAAa,CAAC,QAAgB,EAAA;AAC5C,IAAA,MAAM,EAAE,GAAG,EAAE,CAAC,oBAAoB,EAAE;AAEpC,IAAA,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,KAAI;QAC7B,EAAE,CAAC,MAAM,CAAC;AACR,YAAA,IAAI,EAAE,QAAQ;YACd,OAAO,GAAA;AACL,gBAAA,SAAS,CAAC,GAAG,CAAC,gBAAgB,QAAQ,CAAA,CAAE,CAAC;gBACzC,EAAE,CAAC,MAAM,CAAC;oBACR,QAAQ;AACR,oBAAA,OAAO,EAAE,MAAM,OAAO,EAAE;AACxB,oBAAA,IAAI,CAAC,GAAQ,EAAA;wBACX,SAAS,CAAC,GAAG,CAAC,CAAA,aAAA,EAAgB,QAAQ,CAAE,CAAA,EAAE,GAAG,CAAC;AAC9C,wBAAA,OAAO,EAAE;qBACV;AACF,iBAAA,CAAC;aACH;AACD,YAAA,IAAI,CAAC,GAAQ,EAAA;gBACX,SAAS,CAAC,GAAG,CAAC,CAAA,aAAA,EAAgB,QAAQ,CAAE,CAAA,EAAE,GAAG,CAAC;AAC9C,gBAAA,OAAO,EAAE;aACV;AACF,SAAA,CAAC;AACJ,KAAC,CAAC;AACJ;AAEA;;;;AAIG;AACG,SAAU,QAAQ,CAAC,QAAgB,EAAA;AACvC,IAAA,MAAM,EAAE,GAAG,EAAE,CAAC,oBAAoB,EAAE;IAEpC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;QACrC,EAAE,CAAC,MAAM,CAAC;AACR,YAAA,IAAI,EAAE,QAAQ;YACd,OAAO,GAAA;gBACL,EAAE,CAAC,QAAQ,CAAC;oBACV,QAAQ;oBACR,OAAO,EAAE,CAAC,GAAQ,KAAK,OAAO,CAAC,GAAG,CAAC,IAAmB,CAAC;AACvD,oBAAA,IAAI,EAAE,MAAM;AACb,iBAAA,CAAC;aACH;AACD,YAAA,IAAI,EAAE,MAAM;AACb,SAAA,CAAC;AACJ,KAAC,CAAC;AACJ;;ACnGA;;;;AAIG;AACH,SAAS,cAAc,CAAC,GAAW,EAAA;;AAEjC,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAChB,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,KAAI;AAClC,YAAA,IAAI,QAAQ,CAAC,EAAE,EAAE;AACf,gBAAA,OAAO,QAAQ,CAAC,WAAW,EAAE;;iBACxB;AACL,gBAAA,MAAM,IAAI,KAAK,CACb,CAAA,mBAAA,EAAsB,QAAQ,CAAC,MAAM,CAAA,aAAA,EAAgB,QAAQ,CAAC,UAAU,CAAA,CAAE,CAC3E;;AAEL,SAAC,CAAC;;;IAIJ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;QACrC,EAAE,CAAC,OAAO,CAAC;YACT,GAAG;;AAEH,YAAA,QAAQ,EAAE,aAAa;AACvB,YAAA,YAAY,EAAE,aAAa;AAC3B,YAAA,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,CAAC,GAAQ,KAAK,OAAO,CAAC,GAAG,CAAC,IAAmB,CAAC;AACvD,YAAA,IAAI,EAAE,MAAM;AACb,SAAA,CAAC;AACJ,KAAC,CAAC;AACJ;AAEA;;;;AAIG;AACG,SAAU,QAAQ,CAAC,GAAW,EAAA;;AAElC,IAAA,IAAI,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAC9B,QAAA,OAAO,cAAc,CAAC,GAAG,CAAC;;;AAI5B,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAChB,QAAA,OAAO,QAAQ,CAAC,GAAG,CAAC;;AAGtB,IAAA,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;AAC9B;;MCrCa,WAAW,CAAA;AACtB;;AAEG;AACI,IAAA,OAAO;AACd;;AAEG;AACI,IAAA,QAAQ;AACf;;AAEG;IACI,IAAI,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE;AACrC;;AAEG;IACI,GAAG,GAAW,EAAE;AACvB;;AAEG;IACI,MAAM,GAAW,CAAC;AACzB;;AAEG;IACI,MAAM,GAAc,EAAE;AAC7B;;AAEG;IACI,eAAe,GAAoB,EAAE;AAC5C;;AAEG;IACI,eAAe,GAAoB,EAAE;AAC5C;;AAEG;IACI,OAAO,GAAkB,EAAE;IAElC,WAAY,CAAA,KAAkB,EAAE,QAAgB,EAAA;AAC9C,QAAA,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,MAAO;AAElE,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO;AAC5B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;AACxB,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,YAAY;AAC9B,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,aAAa;AAChC,QAAA,IAAI,CAAC,GAAG,GAAG,GAAG;AACd,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE;AAChC,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,IAAI,EAAE,CAAC;;AAGxD;;;;AAIG;AACK,IAAA,aAAa,CAAC,QAAwB,EAAA;QAC5C,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,MAAM;YAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,MAAM,EAAE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;AAChD,SAAA,CAAC,CAAC;;AAGL;;;;AAIG;AACK,IAAA,YAAY,CAAC,OAAsB,EAAA;AACzC,QAAA,IAAI,UAAwC;AAE5C,QAAA,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,KAAI;AAC5B,YAAA,MAAM,EAAE,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,GAAG,MAAM;;AAEvD,YAAA,MAAM,CAAC,GAAG;gBACR,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE,GAAG,GAAG,IAAI,CAAC;gBACrB,CAAC,EAAE,CAAC,EAAE,EAAE,CAAE,GAAG,GAAG,IAAI,CAAC;gBACrB,KAAK,EAAE,CAAC,EAAE,EAAE,KAAM,GAAG,GAAG,IAAI,CAAC;gBAC7B,MAAM,EAAE,CAAC,EAAE,EAAE,MAAO,GAAG,GAAG,IAAI,CAAC;aAChC;;AAGD,YAAA,MAAM,CAAC,GAAG;AACR,gBAAA,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,GAAG;AACf,gBAAA,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,GAAG;AACf,gBAAA,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,GAAG;AACf,gBAAA,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,GAAG;AACf,gBAAA,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG;AACjB,gBAAA,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG;aAClB;AAED,YAAA,IAAI,MAAM,GAAqB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC;AAErE,YAAA,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,UAAU,EAAE;gBAC7C,MAAM,GAAG,UAAU;;iBACd;gBACL,UAAU,GAAG,MAAM;;YAGrB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YACpD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;AACrD,YAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;YACjE,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YACxC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YACpD,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;AACrD,YAAA,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;YACjE,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;YACnD,MAAM,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;AAEnD,YAAA,MAAM,EAAE,GAAG,MAAM,CAAC,QAAQ,IAAI,EAAE;AAChC,YAAA,MAAM,QAAQ,GACZ,EAAE,CAAC,MAAM,GAAG;AACV,kBAAE;AACE,oBAAA,CAAC,EAAE,EAAE;AACL,oBAAA,SAAS,EAAE,SAAS;AACpB,oBAAA,MAAM,EAAE;AACN,wBAAA,IAAI,EAAE,kBAAsC;AAC5C,wBAAA,MAAM,EAAE,IAAI;AACZ,wBAAA,WAAW,EAAE,IAAI;AACjB,wBAAA,OAAO,EAAE,IAAI;AACb,wBAAA,QAAQ,EAAE,IAAI;AACd,wBAAA,UAAU,EAAE,IAAI;AAChB,wBAAA,QAAQ,EAAE,IAAI;AACf,qBAAA;AACF;kBACD,IAAI;YAEV,OAAO;gBACL,KAAK,EAAE,EAAE,IAAI,CAAC;AACd,gBAAA,MAAM,EAAE,CAAC;AACT,gBAAA,SAAS,EAAE,CAAC;AACZ,gBAAA,QAAQ,EAAE,EAAE;gBACZ,MAAM;gBACN,EAAE;gBACF,EAAE;gBACF,QAAQ;aACT;AACH,SAAC,CAAC;;AAGJ;;;;AAIG;AACK,IAAA,YAAY,CAAC,OAAsB,EAAA;QACzC,MAAM,MAAM,GAAqB,EAAE;AAEnC,QAAA,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;AAC1B,YAAA,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM;AAE7B,YAAA,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB;;YAGF,MAAM,QAAQ,GAAa,EAAE;AAC7B,YAAA,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,GAAG,OAAO;AACrE,YAAA,IAAI,GAAG,GAAG,CAAC,EAAE;AACX,gBAAA,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;;AAGpB,YAAA,IAAI,GAAG,GAAG,CAAC,EAAE;AACX,gBAAA,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACvB,oBAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;AAElB,gBAAA,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;;AAGpB,YAAA,IAAI,GAAG,GAAG,CAAC,EAAE;AACX,gBAAA,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACvB,oBAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAChB,oBAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;AAElB,gBAAA,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG;;YAGnB,IAAI,OAAO,GAAyB,IAAI;AACxC,YAAA,QAAQ,OAAO,CAAC,OAAO;AACrB,gBAAA,KAAK,CAAC;oBACJ,OAAO,GAAG,MAAM;oBAChB;AACF,gBAAA,KAAK,CAAC;oBACJ,OAAO,GAAG,OAAO;oBACjB;AACF,gBAAA,KAAK,CAAC;oBACJ,OAAO,GAAG,QAAQ;oBAClB;;YAGJ,IAAI,QAAQ,GAA0B,IAAI;AAC1C,YAAA,QAAQ,OAAO,CAAC,QAAQ;AACtB,gBAAA,KAAK,CAAC;oBACJ,QAAQ,GAAG,OAAO;oBAClB;AACF,gBAAA,KAAK,CAAC;oBACJ,QAAQ,GAAG,OAAO;oBAClB;AACF,gBAAA,KAAK,CAAC;oBACJ,QAAQ,GAAG,OAAO;oBAClB;;YAGJ,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,OAAO;YAC1C,IAAI,IAAI,GAAgD,IAAI;YAC5D,IAAI,GAAG,EAAE;AACP,gBAAA,IAAI,GAAG,CAAQ,KAAA,EAAA,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA,EAAA,EAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CACpD,EAAA,EAAA,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAClB,CAAA,EAAA,EAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG;;YAGzB,IAAI,MAAM,GAAgD,IAAI;YAC9D,IAAI,GAAG,EAAE;AACP,gBAAA,MAAM,GAAG,CAAQ,KAAA,EAAA,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAA,EAAA,EAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CACtD,EAAA,EAAA,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAClB,CAAA,EAAA,EAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG;;AAGzB,YAAA,MAAM,EAAE,GAAG;gBACT,QAAQ;gBACR,IAAI;gBACJ,MAAM;gBACN,OAAO;gBACP,QAAQ;gBACR,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,UAAU,EAAE,OAAO,CAAC,UAAU;aAC/B;AACD,YAAA,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM;AACvD,YAAA,MAAM,EAAE,GAAG;AACT,gBAAA,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG;AAChB,gBAAA,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG;AAChB,gBAAA,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG;AAChB,gBAAA,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG;AAChB,gBAAA,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG;AAClB,gBAAA,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG;aACnB;YAED,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE;gBAC7B,MAAM,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAkB,OAAA;AACtB,oBAAA,IAAI,EAAE,KAAK;AACX,oBAAA,MAAM,EAAE,EAAE;AACV,oBAAA,SAAS,EAAE,EAAE;AACd,iBAAA,CAAC;;iBACG,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;gBACnC,MAAM,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAiB,MAAA;AACrB,oBAAA,IAAI,EAAE,IAAI;AACV,oBAAA,MAAM,EAAE,EAAE;AACV,oBAAA,SAAS,EAAE,EAAE;AACd,iBAAA,CAAC;;iBACG,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,OAAO,EAAE;gBACtC,MAAM,CAAC,IAAI,CAAC;AACV,oBAAA,IAAI,EAAoB,SAAA;AACxB,oBAAA,IAAI,EAAE,OAAO;AACb,oBAAA,MAAM,EAAE,EAAE;AACV,oBAAA,SAAS,EAAE,EAAE;AACd,iBAAA,CAAC;;;AAIN,QAAA,OAAO,MAAM;;AAEhB;;ACjRD;;AAEG;MACU,MAAM,CAAA;AACjB;;;;;AAKG;AACH,IAAA,OAAO,gBAAgB,CAAC,IAAiB,EAAE,GAAW,EAAA;QACpD,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;AACzC,QAAA,MAAM,GAAG,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC;AAEhC,QAAA,IAAI,MAAM,CAAC,QAAQ,EAAE,IAAI,WAAW,EAAE;AACpC,YAAA,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC;;AAGhE,QAAA,IAAI,MAAmB;AACvB,QAAA,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,MAAK;AAChC,YAAA,MAAM,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC;YACnC,MAAM,SAAS,GAAGC,CAAW,CAAC,MAAM,CAAC,WAAW,CAAC;YAEjD,MAAM,GAAG,IAAI,WAAW,CACtB,SAAU,EACV,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACxC;AACH,SAAC,CAAC;AAEF,QAAA,OAAO,MAAO;;;AAKhB;;;;AAIG;IACH,MAAM,IAAI,CAAC,GAAW,EAAA;AACpB,QAAA,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,GAAG,CAAC;AAEhC,QAAA,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;QACpB,SAAS,CAAC,IAAI,EAAE;QAChB,OAAO,MAAM,CAAC,gBAAgB,CAAC,IAAK,EAAE,GAAG,CAAC;;AAE7C;;AClDD;;AAEG;AACH,IAAI,GAAG,GAAW,CAAC;AAEnB,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAChB,IAAA,GAAG,GAAG,MAAM,CAAC,gBAAgB;AAC/B;AAAO,KAAA,IAAI,eAAe,IAAI,EAAE,EAAE;AAChC,IAAA,GAAG,GAAI,EAAU,CAAC,aAAa,EAAE,CAAC,UAAU;AAC9C;AAAO,KAAA,IAAI,mBAAmB,IAAI,EAAE,EAAE;AACpC,IAAA,GAAG,GAAI,EAA2B,CAAC,iBAAiB,EAAE,CAAC,UAAU;AACnE;;ACJA;;;;;AAKG;AACa,SAAA,SAAS,CACvB,QAAgB,EAChB,SAA8D,EAAA;IAE9D,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;;QAErC,MAAM,UAAU,GAAG,CACjB,MAAuB,EACvB,KAAgB,GAAA,CAAC,EACjB,MAAA,GAAiB,CAAC,KAChB;YACF,IAAI,CAAC,MAAM,EAAE;AACX,gBAAA,MAAM,CAAC,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC;gBACtC;;YAEF,MAAM,GAAG,GAAG,MAAO,CAAC,UAAU,CAAC,IAAI,CAAC;AACpC,YAAA,MAAO,CAAC,KAAK,GAAG,KAAK,GAAG,GAAG;AAC3B,YAAA,MAAO,CAAC,MAAM,GAAG,MAAM,GAAG,GAAG;AAC7B,YAAA,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC;AACnB,YAAA,OAAO,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC1B,SAAC;AAED,QAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAChB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAsB;YACpE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK;AAEtC,YAAA,UAAU,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;;aACpD;AACL,YAAA,IAAI,KAAK,GAAI,EAA2B,CAAC,mBAAmB,EAAE;YAE9D,IAAI,SAAS,EAAE;AACb,gBAAA,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC;;YAG7B;iBACG,MAAM,CAAC,QAAQ;AACf,iBAAA,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,GAAG,KAAI;gBAC1C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,GAAG,IAAI,EAAE;AAEzC,gBAAA,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,CAAC;AACjC,aAAC;AACA,iBAAA,IAAI,EAAE;;AAEb,KAAC,CAAC;AACJ;AAEA;;;;AAIG;AACH,SAAS,qBAAqB,CAC5B,OAAsD,EAAA;AAEtD,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAChB,OAAO,IAAI,eAAe,CACxB,OAAO,CAAC,KAAe,EACvB,OAAO,CAAC,MAAgB,CACzB;;AAGH,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE;QACpB,OAAO,EAAE,CAAC,qBAAqB,CAAC;YAC9B,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,MAAM,EAAE,OAAO,CAAC,MAAM;AACvB,SAAA,CAAC;;AAGJ,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE;AACpB,QAAA,MAAM,MAAM,GAAI,EAAU,CAAC,qBAAqB,EAAE;AAClD,QAAA,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK;AAC5B,QAAA,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM;AAE9B,QAAA,OAAO,MAAM;;IAGf,OAAO,EAAE,CAAC,qBAAqB,CAAC;AAC9B,QAAA,GAAG,OAAO;AACV,QAAA,IAAI,EAAE,IAAI;AACX,KAAA,CAAC;AACJ;AAOA;;;;AAIG;AACG,SAAU,kBAAkB,CAChC,OAAsD,EAAA;AAEtD,IAAA,MAAM,MAAM,GAAG,qBAAqB,CAAC,OAAO,CAAC;IAC7C,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;AAEnC,IAAA,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE;AACxB;;AC5BA;;;;AAIG;AACG,SAAU,QAAQ,CAAC,IAAgB,EAAA;AACvC,IAAA,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC1B,IAAA,IAAI,GAAW;AAEf,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAChB,QAAA,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;;SAClD;;AAEL,QAAA,GAAG,GAAG,EAAE,CAAC,mBAAmB,CAAC,GAAG,CAAC;;IAGnC,OAAO,CAAA,sBAAA,EAAyB,GAAG,CAAA,CAAE;AACvC;AAEA;;;;;AAKG;AACG,SAAU,QAAQ,CAAC,IAAgB,EAAA;AACvC,IAAA,OAAO,iBAAiB,CAAC,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtD;AAEA;;;;AAIG;AACG,SAAU,QAAQ,CAAC,IAAgB,EAAA;AACvC,IAAA,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CACtB,IAAI,CAAC,UAAU,EACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CACnB;AAClB;;ACxHA;;;;AAIG;AACH,eAAe,cAAc,CAC3B,IAAyB,EACzB,QAAgB,EAChB,MAAe,EAAA;AAEf,IAAA,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;AAC3B,QAAA,OAAO,IAAI;;;AAIb,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,KAAK,GAAG,IAAI,EAAE,CAAC,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC,EAAE;AAClD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC;;AAGvB,IAAA,IAAI;;AAEF,QAAA,OAAO,MAAM,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,WAAW,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;;IACxE,OAAO,EAAO,EAAE;QAChB,OAAO,CAAC,IAAI,CAAC,CAAA,OAAA,EAAU,EAAE,CAAC,OAAO,CAAE,CAAA,CAAC;AACpC,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC;;AAEzB;AAEA;;;;;;;AAOG;AACG,SAAU,SAAS,CACvB,KAA2C,EAC3C,IAAuC,EACvC,QAAgB,EAChB,MAAe,EAAA;AAEf,IAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;;QAEhB,IAAI,IAAI,YAAY,UAAU,IAAI,mBAAmB,IAAI,MAAM,EAAE;AAC/D,YAAA,OAAO,QAAQ,CAAC,IAAI,CAAC;;AAGvB,QAAA,IAAI,IAAI,YAAY,WAAW,EAAE;AAC/B,YAAA,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;;;IAIhC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACrC,QAAA,MAAM,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE;AAE/B,QAAA,GAAG,CAAC,MAAM,GAAG,MAAK;;AAEhB,YAAA,IAAI,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,OAAO,IAAI,IAAI,QAAQ,EAAE;gBAC1D,OAAO,CAAC,GAAG,CAAC;;iBACP;AACL,gBAAA,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC;;AAEnD,SAAC;AACD,QAAA,GAAG,CAAC,OAAO,GAAG,MAAM,MAAM,CAAC,IAAI,KAAK,CAAC,yBAAyB,GAAG,CAAC,GAAG,CAAE,CAAA,CAAC,CAAC;QAEzE,cAAc,CAAC,IAA2B,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,IAAI,CAChE,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CACzB;AACH,KAAC,CAAC;AACJ;;AC5EO,MAAM,IAAI,GAAG,MAAK,GAAG;;ACG5B,IAAI,CAAS;AAEb,QAAQ,GAAG;AACT,IAAA,KAAK,EAAE,CAAC,EAAE,EAAE;AACV,QAAA,MAAM,EAAE,GAAG,SAAS,CAAC,SAAS;AAE9B,QAAA,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YACzB,CAAC,GAAG,SAAS;;AACR,aAAA,IAAI,yBAAyB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YAC7C,CAAC,GAAG,KAAK;;AACJ,aAAA,IAAI,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YAC3C,CAAC,GAAG,aAAa;;aACZ;YACL,CAAC,GAAG,SAAS;;QAEf;;IAEF,KAAK,EAAE,CAAC,MAAM;AACZ,QAAA,CAAC,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC,QAAkB;QAC7C;IACF,KAAK,EAAE,CAAC,MAAM;AACZ,QAAA,CAAC,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC,QAAkB;QAC7C;IACF,KAAK,EAAE,CAAC,MAAM;AACZ,QAAA,CAAC,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC,QAAkB;QACzC;AACF,IAAA;QACE,CAAC,GAAG,SAAS;AACjB;AAEO,MAAM,QAAQ,GAAG,CAAC,CAAC,iBAAiB,EAAE;;ACjCtC,MAAM,GAAG,GAAG,MAAK;;AAEtB,IAAA,IAAI,OAAO,WAAW,IAAI,WAAW,EAAE;AACrC,QAAA,OAAO,WAAW,CAAC,GAAG,EAAE;;AAG1B,IAAA,OAAO,IAAI,CAAC,GAAG,EAAE;AACnB,CAAC;;ACcD;;;;;;;;;;;;;;;;AAgBG;AACH,MAAM,YAAY,GAAG,kBAAkB;AAEvC,SAAS,MAAM,CACb,OAAqE,EACrE,SAA8B,EAC9B,WAAkB,EAClB,YAAoB,EACpB,IAAY,EACZ,IAAY,EAAA;IAEZ,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,GAAG,WAAW;AAEjE,IAAA,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAChC,QAAA,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC;AACzB,QAAA,MAAM,EAAE,QAAQ,EAAE,GAAG,MAAM;QAC3B,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC;AACtC,QAAA,MAAM,cAAc,GAAG,eAAe,CAAC,QAAQ,CAAC;AAChD,QAAA,MAAM,cAAc,GAAG,eAAe,CAAC,QAAQ,CAAC;AAEhD,QAAA,UAAU,CACR,OAAO,EACP,MAAM,EACN,YAAY,EACZ,MAAM,EACN,cAAc,EACd,cAAc,CACf;;AAEL;AAEA,SAAS,UAAU,CACjB,OAAqE,EACrE,MAAmB,EACnB,YAAoB,EACpB,MAA0B,EAC1B,cAA0C,EAC1C,cAA0C,EAAA;IAE1C,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;AAEzC,IAAA,IAAI,KAAK,CAAC,KAAK,GAAG,IAAI;QAAE;IAExB,OAAO,CAAC,IAAI,EAAE;AACd,IAAA,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC,KAAK;IAEjC,OAAO,CAAC,SAAS,CACf,KAAK,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,EACvB,KAAK,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,EACvB,KAAK,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,EACvB,KAAK,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,EACvB,KAAK,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,EACxB,KAAK,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,CACzB;IAED,IAAI,MAAM,EAAE;AACV,QAAA,IAAI,KAAK,CAAC,QAAQ,EAAE;YAClB,UAAU,CACR,OAAO,EACP,KAAK,CAAC,QAAQ,CAAC,CAAC,EAChB,KAAK,CAAC,QAAQ,CAAC,SAAS,EACxB,KAAK,CAAC,QAAQ,CAAC,MAAM,CACtB;YACD,OAAO,CAAC,IAAI,EAAE;;QAEhB,OAAO,CAAC,SAAS,EACd,cAAc,IAAI,MAAM,GACzB,CAAC,EACD,CAAC,EACD,KAAK,CAAC,MAAM,CAAC,KAAK,EAClB,KAAK,CAAC,MAAM,CAAC,MAAM,CACpB;;IAGH,IAAI,cAAc,EAAE;AAClB,QAAA,OAAO,CAAC,SAAS,CACf,cAA8C,EAC9C,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,KAAK,IAAI,CAAC,EAC/C,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,cAAc,CAAC,MAAM,IAAI,CAAC,CAClD;;AAGH,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC5C,SAAS,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;;IAGrC,OAAO,CAAC,OAAO,EAAE;AACnB;AAEA,SAAS,SAAS,CAChB,OAAqE,EACrE,KAAsB,EAAA;AAEtB,IAAA,QAAQ,KAAK,CAAC,IAAI;AAChB,QAAA,KAAA,OAAA;AACE,YAAA,UAAU,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,CAAC;YAChE;AACF,QAAA,KAAA,SAAA;AACE,YAAA,WAAW,CACT,OAAO,EACP,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,EACnB,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,EACnB,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,EACzB,KAAK,CAAC,IAAI,CAAC,OAAO,IAAI,GAAG,EACzB,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,MAAM,CACb;YACD;AACF,QAAA,KAAA,MAAA;YACE,QAAQ,CACN,OAAO,EACP,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,EACnB,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,EACnB,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,GAAG,EACvB,KAAK,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,EACxB,KAAK,CAAC,IAAI,CAAC,YAAY,IAAI,GAAG,EAC9B,KAAK,CAAC,SAAS,EACf,KAAK,CAAC,MAAM,CACb;YACD;;AAEN;AAEA,SAAS,gBAAgB,CACvB,OAAqE,EACrE,MAA+B,EAAA;IAE/B,IAAI,CAAC,MAAM,EAAE;QACX;;IAGF,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,IAAI,aAAa;AAEpD,IAAA,IAAI,MAAM,CAAC,WAAY,GAAG,CAAC,EAAE;AAC3B,QAAA,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,WAAY;;AAGzC,IAAA,IAAI,MAAM,CAAC,UAAW,GAAG,CAAC,EAAE;AAC1B,QAAA,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,UAAW;;AAGzC,IAAA,IAAI,MAAM,CAAC,OAAO,EAAE;AAClB,QAAA,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO;;AAElC,IAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAA,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ;;IAGpC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,IAAI,aAAa;AAEhD,IAAA,IAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,QAAA,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC;;AAExC;AAEA,SAAS,UAAU,CACjB,OAAqE,EACrE,CAAqB,EACrB,SAAgC,EAChC,MAAmB,EAAA;IAEnB,OAAO,CAAC,IAAI,EAAE;AACd,IAAA,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC;IACjC,IAAI,SAAS,EAAE;QACb,OAAO,CAAC,SAAS,CACf,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,EAAE,EACZ,SAAS,CAAC,EAAE,CACb;;IAEH,MAAM,YAAY,GAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;IAC7E,OAAO,CAAC,SAAS,EAAE;IACnB,IAAI,CAAC,EAAE;QACL,MAAM,QAAQ,GAAG;AACd,aAAA,OAAO,CAAC,aAAa,EAAE,QAAQ;AAC/B,aAAA,OAAO,CAAC,IAAI,EAAE,GAAG;aACjB,KAAK,CAAC,KAAK,CAAC;AAEf,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,YAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC;AAC3B,YAAA,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;gBACvB;;YAGF,MAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3C,YAAA,IAAI,YAAY,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;gBACtC,iBAAiB,CACf,OAAO,EACP,YAAY,EACZ,WAAW,EACX,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CACvC;;;;AAIP,IAAA,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,OAAO,CAAC,IAAI,EAAE;;AAEhB,IAAA,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO,CAAC,MAAM,EAAE;;IAElB,OAAO,CAAC,OAAO,EAAE;AACnB;AAEA,SAAS,iBAAiB,CACxB,OAAqE,EACrE,YAA0B,EAC1B,MAAc,EACd,IAAc,EAAA;IAEd,QAAQ,MAAM;AACZ,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YAC9C;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,OAAO,CAAC,aAAa,CACnB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;YACD;AACF,QAAA,KAAK,GAAG;AACN,YAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,YAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,YAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,YAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3C,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,OAAO,CAAC,aAAa,CACnB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;YACD;AACF,QAAA,KAAK,GAAG;AACN,YAAA,IACE,YAAY,CAAC,EAAE,IAAI,SAAS;gBAC5B,YAAY,CAAC,EAAE,IAAI,SAAS;gBAC5B,YAAY,CAAC,EAAE,IAAI,SAAS;AAC5B,gBAAA,YAAY,CAAC,EAAE,IAAI,SAAS,EAC5B;AACA,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC;AACnE,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC;gBACnE,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzB,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,aAAa,CACnB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;;iBACI;gBACL,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACzB,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACzB,gBAAA,OAAO,CAAC,gBAAgB,CACtB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;;YAEH;AACF,QAAA,KAAK,GAAG;AACN,YAAA,IACE,YAAY,CAAC,EAAE,IAAI,SAAS;gBAC5B,YAAY,CAAC,EAAE,IAAI,SAAS;gBAC5B,YAAY,CAAC,EAAE,IAAI,SAAS;AAC5B,gBAAA,YAAY,CAAC,EAAE,IAAI,SAAS,EAC5B;AACA,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC;AACnE,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC;AACnE,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3C,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,aAAa,CACnB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;;iBACI;AACL,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,gBAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC3C,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1B,gBAAA,OAAO,CAAC,gBAAgB,CACtB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;;YAEH;AACF,QAAA,KAAK,GAAG;YACN,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YACzB,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACzB,YAAA,OAAO,CAAC,gBAAgB,CACtB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;YACD;AACF,QAAA,KAAK,GAAG;AACN,YAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,YAAA,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3C,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC1B,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1B,YAAA,OAAO,CAAC,gBAAgB,CACtB,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,EAAE,EACf,YAAY,CAAC,CAAC,EACd,YAAY,CAAC,CAAC,CACf;YACD;AACF,QAAA,KAAK,GAAG;AACR,QAAA,KAAK,GAAG;YACN,OAAO,CAAC,SAAS,EAAE;YACnB;;AAIN;AAEA,SAAS,WAAW,CAClB,OAAqE,EACrE,CAAS,EACT,CAAS,EACT,OAAe,EACf,OAAe,EACf,SAAgC,EAChC,MAAmB,EAAA;IAEnB,OAAO,CAAC,IAAI,EAAE;AACd,IAAA,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC;IACjC,IAAI,SAAS,EAAE;QACb,OAAO,CAAC,SAAS,CACf,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,EAAE,EACZ,SAAS,CAAC,EAAE,CACb;;AAEH,IAAA,CAAC,GAAG,CAAC,GAAG,OAAO;AACf,IAAA,CAAC,GAAG,CAAC,GAAG,OAAO;AACf,IAAA,MAAM,CAAC,GAAG,OAAO,GAAG,CAAC;AACrB,IAAA,MAAM,CAAC,GAAG,OAAO,GAAG,CAAC;IACrB,MAAM,KAAK,GAAG,SAAS;IACvB,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK;IAC1B,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK;AAC1B,IAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC;AAChB,IAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC;AAChB,IAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;AACpB,IAAA,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;IACpB,OAAO,CAAC,SAAS,EAAE;AACnB,IAAA,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;AACrB,IAAA,OAAO,CAAC,aAAa,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACpD,IAAA,OAAO,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACtD,IAAA,OAAO,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACvD,IAAA,OAAO,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;AACrD,IAAA,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,OAAO,CAAC,IAAI,EAAE;;AAEhB,IAAA,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO,CAAC,MAAM,EAAE;;IAElB,OAAO,CAAC,OAAO,EAAE;AACnB;AAEA,SAAS,QAAQ,CACf,OAAqE,EACrE,CAAS,EACT,CAAS,EACT,KAAa,EACb,MAAc,EACd,YAAoB,EACpB,SAAgC,EAChC,MAAmB,EAAA;IAEnB,OAAO,CAAC,IAAI,EAAE;AACd,IAAA,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC;IACjC,IAAI,SAAS,EAAE;QACb,OAAO,CAAC,SAAS,CACf,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,CAAC,EACX,SAAS,CAAC,EAAE,EACZ,SAAS,CAAC,EAAE,CACb;;IAEH,IAAI,MAAM,GAAG,YAAY;AACzB,IAAA,IAAI,KAAK,GAAG,CAAC,GAAG,MAAM,EAAE;AACtB,QAAA,MAAM,GAAG,KAAK,GAAG,CAAC;;AAEpB,IAAA,IAAI,MAAM,GAAG,CAAC,GAAG,MAAM,EAAE;AACvB,QAAA,MAAM,GAAG,MAAM,GAAG,CAAC;;IAErB,OAAO,CAAC,SAAS,EAAE;IACnB,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC;AAC7B,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC;AAC1D,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,MAAM,CAAC;AAC3D,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;AAC1C,IAAA,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC;IACzC,OAAO,CAAC,SAAS,EAAE;AACnB,IAAA,IAAI,MAAM,CAAC,IAAI,EAAE;QACf,OAAO,CAAC,IAAI,EAAE;;AAEhB,IAAA,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO,CAAC,MAAM,EAAE;;IAElB,OAAO,CAAC,OAAO,EAAE;AACnB;;MC9da,KAAK,CAAA;AAyCa,IAAA,IAAA;AAxC7B;;;AAGG;IACK,CAAC,GAA0B,IAAI;AACvC;;;AAGG;IACK,EAAE,GAAoC,IAAI;AAClD;;;AAGG;IACK,CAAC,GAAoD,IAAI;AACjE;;;AAGG;IACK,EAAE,GAGC,IAAI;AACf;;AAEG;IACK,CAAC,GAAW,CAAC;AACrB;;AAEG;IACK,CAAC,GAAW,CAAC;AACrB;;AAEG;IACK,KAAK,GAAgB,EAAiB;AAC9C;;AAEG;AACI,IAAA,SAAS,GAAwB,IAAI,GAAG,EAAE;AAEjD,IAAA,WAAA,CAA6B,OAAmB,QAAQ,EAAA;QAA3B,IAAI,CAAA,IAAA,GAAJ,IAAI;;AAEzB,IAAA,QAAQ,CAAC,IAAe,EAAA;AAC9B,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI;;AAGtB,QAAA,KAAK,CAAC,IAAI,GAAG,IAAI;;QAGjB,IACE,IAAI,IAAI,GAAG;;YAEX,GAAG,IAAI,EAAE,CAAC,EAAE;YACZ,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,EACvC;AACA,YAAA,KAAK,CAAC,KAAK,GAAG,IAAI;;AACb,aAAA,IAAI,CAAC,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,KAAK,GAAG,IAAI,EAAE,CAAC,MAAM,EAAE;AAChE,YAAA,KAAK,CAAC,KAAK,GAAG,IAAI;;aACb;AACL,YAAA,KAAK,CAAC,KAAK,GAAG,IAAI;;;QAIpB,IACE,CAAC,IAAI,IAAI,GAAG;AACV,aAAC,GAAG,IAAI,EAAE,CAAC,MAAM,KAAK,QAAQ,IAAI,KAAK,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC;aAC9D,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,EACjC;AACA,YAAA,KAAK,CAAC,MAAM,GAAG,IAAI;;aACd;AACL,YAAA,KAAK,CAAC,MAAM,GAAG,IAAI;;AAGrB,QAAA,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACjB,SAAS,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,IAAI,CAAC;QACvC,SAAS,CAAC,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC,KAAK,CAAC;QACzC,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,MAAM,CAAC;AAC3C,QAAA,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;AAGnB;;;;;AAKG;AACI,IAAA,MAAM,QAAQ,CACnB,QAAgB,EAChB,WAAoB,EACpB,SAA8D,EAAA;AAE9D,QAAA,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI;;;AAG5B,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC;AAC5D,QAAA,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM;;AAEhC,QAAA,IAAI,CAAC,CAAC,GAAG,MAAM;AACf,QAAA,IAAI,CAAC,EAAE,GAAG,GAAG;AACb,QAAA,IAAI,CAAC,CAAC,GAAG,KAAK;AACd,QAAA,IAAI,CAAC,CAAC,GAAG,MAAM;;;;AAKf,QAAA,IAAI,IAAI,IAAI,QAAQ,EAAE;AACpB,YAAA,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;AACf,YAAA,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;AACjB,YAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;;aACb;AACL,YAAA,IAAI,SAAS;YAEb,IAAI,OAAO,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,EAAE,EAAE;gBACvD,SAAS,GAAG,MAAM,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC;AACnD,gBAAA,SAAS,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK;AAC9B,gBAAA,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM;AAChC,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;;iBACb;gBACL,SAAS,GAAG,kBAAkB,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;AACjD,gBAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;;AAGpB,YAAA,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM;AACzB,YAAA,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,GAAG;;;;;;AAOzB,QAAA,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI,EAAE;AACvB,YAAA,IAAI,CAAC,UAAU,GAAG,MAAK;AACrB,gBAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;AACrB,gBAAA,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAChC,aAAC;;aACI;AACL,YAAA,IAAI,CAAC,UAAU,GAAG,MAAK;AACrB,gBAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;AACrB,gBAAA,IAAI,CAAC,CAAE,CAAC,KAAK,GAAG,CAAC;AACjB,gBAAA,IAAI,CAAC,CAAE,CAAC,MAAM,GAAG,CAAC;AACpB,aAAC;;;AAKH,QAAA,IAAI,IAAI,IAAI,QAAQ,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI;;aAC7B;;;AAGL,YAAA,QAAQ,KAAK,CAAC,KAAK;AACjB,gBAAA,KAAK,IAAI;AACP,oBAAA,IAAI,CAAC,SAAS,GAAG,MAAK;AACpB,wBAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;;AAErB,wBAAA,MAAM,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,kBAAkB,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;AACnE,wBAAA,IAAI,CAAC,CAAC,GAAG,MAAM;AACf,wBAAA,IAAI,CAAC,EAAE,GAAG,GAAG;AACf,qBAAC;oBACD;AACF,gBAAA,KAAK,IAAI;AACP,oBAAA,IAAI,CAAC,SAAS,GAAG,MAAK;AACpB,wBAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;;AAErB,wBAAA,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAChC,qBAAC;oBACD;AACF,gBAAA;AACE,oBAAA,IAAI,CAAC,SAAS,GAAG,MAAK;wBACpB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;AACxB,wBAAA,CAAE,CAAC,KAAK,GAAG,CAAC;AACZ,wBAAA,CAAE,CAAC,MAAM,GAAG,CAAC;AACf,qBAAC;;;;;AAML,YAAA,QAAQ,KAAK,CAAC,MAAM;AAClB,gBAAA,KAAK,IAAI;AACP,oBAAA,IAAI,CAAC,KAAK,GAAG,MAAK;AAChB,wBAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;;AAErB,wBAAA,IAAI,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAsB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC7D,qBAAC;oBACD;AACF,gBAAA,KAAK,IAAI;AACP,oBAAA,IAAI,CAAC,KAAK,GAAG,MAAK;AAChB,wBAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;;AAErB,wBAAA,MAAM,SAAS,GAAG,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACnD,wBAAA,IAAI,CAAC,EAAG,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACpD,qBAAC;oBACD;;;;;AAOR;;;;AAIG;IACI,OAAO,CAAC,KAAa,EAAE,MAAc,EAAA;AAC1C,QAAA,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI;AAErB,QAAA,CAAE,CAAC,KAAK,GAAG,CAAE,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK;AACpC,QAAA,CAAE,CAAC,MAAM,GAAG,CAAE,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM;;AAGzC;;;;;AAKG;IACI,SAAS,CAAC,MAAiB,EAAE,QAAgB,EAAA;QAClD,IAAI,QAAQ,GAAoB,EAAE;AAElC,QAAA,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC;AACjC,QAAA,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,MAAK;AAChC,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACtB,YAAA,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;gBACtB,MAAM,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,KAAI;oBACjE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;AAC9B,iBAAC,CAAC;AAEF,gBAAA,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEpB,SAAC,CAAC;AAEF,QAAA,OAAO,OAAO,CAAC,GAAG,CAAO,QAAQ,CAAC;;AAGpC;;;AAGG;IACI,WAAW,GAAA;AAChB,QAAA,IAAI,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAChB,OAAO,IAAI,KAAK,EAAE;;AAGpB,QAAA,OAAQ,IAAI,CAAC,CAA8B,CAAC,WAAW,EAAE;;AAG3D;;;;;AAKG;AACI,IAAA,QAAQ,CAAC,IAAA,GAAe,WAAW,EAAE,iBAAyB,IAAI,EAAA;QACvE,OAAO,IAAI,CAAC,CAAE,CAAC,SAAS,CAAC,IAAI,EAAE,cAAc,CAAC;;AAGhD;;;AAGG;AACI,IAAA,KAAK,CAAC,EAAc,EAAA;QACzB,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,qBAAqB,CAAC,EAAE,CAAC;;IAGjD,UAAU,GAAe,IAAI;IAE7B,SAAS,GAAe,IAAI;AAEnC;;;;;;AAMG;AACI,IAAA,IAAI,CACT,WAAkB,EAClB,YAAoB,EACpB,KAAa,EACb,GAAW,EAAA;AAEX,QAAA,MAAM,CAAC,IAAI,CAAC,EAAG,EAAE,IAAI,CAAC,SAAS,EAAE,WAAW,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,CAAC;;IAGlE,KAAK,GAAe,IAAI;AAE/B;;AAEG;IACI,OAAO,GAAA;QACZ,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,SAAS,EAAE;AAChB,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;AACtB,QAAA,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI;AAC1C,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI;;AAEvD;;MCxUY,QAAQ,CAAA;AAyCU,IAAA,KAAA;AAxC7B;;AAEG;IACK,SAAS,GAAG,KAAK;AACzB;;AAEG;IACK,SAAS,GAAG,CAAC;AACrB;;AAEG;IACK,UAAU,GAAW,CAAC;AAC9B;;AAEG;IACK,QAAQ,GAAW,CAAC;AAC5B;;AAEG;IACK,QAAQ,GAAW,CAAC;AAC5B;;AAEG;IACK,SAAS,GAAW,CAAC;AAC7B;;AAEG;IACK,YAAY,GAAW,CAAC;AAChC;;;;AAIG;IACK,QAAQ,GAAW,CAAC;;IAGrB,OAAO,GAAe,IAAI;IAC1B,QAAQ,GAAuD,IAAI;IACnE,KAAK,GAAe,IAAI;AAE/B,IAAA,WAAA,CAA6B,KAAY,EAAA;QAAZ,IAAK,CAAA,KAAA,GAAL,KAAK;;AAElC;;;;AAIG;IACI,QAAQ,CAAC,UAAkB,EAAE,QAAgB,EAAA;AAClD,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU;AAC5B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;;AAG1B;;;;;;;AAOG;AACI,IAAA,SAAS,CACd,QAAgB,EAChB,SAAiB,EACjB,IAAY,EACZ,QAAgB,EAAA;AAEhB,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;AACxB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS;AAC1B,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;AACxB,QAAA,IAAI,CAAC,YAAY,GAAG,SAAS,GAAG,CAAC,QAAQ,GAAG,SAAS,IAAI,IAAI;;IAGxD,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,GAAG,EAAE;QACtB,IAAI,CAAC,OAAO,EAAE;QACd,IAAI,CAAC,OAAO,EAAE;;IAGT,IAAI,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;;IAGhB,OAAO,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;AACxC,YAAA,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,gBAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;;;;AAKpC,IAAA,WAAW,CAAC,EAAU,EAAA;QAC5B,MAAM,EACJ,QAAQ,EAAE,CAAC,EACX,SAAS,EAAE,EAAE,EACb,YAAY,EAAE,EAAE,EAChB,UAAU,EAAE,EAAE,EACd,QAAQ,EAAE,EAAE,EACZ,QAAQ,EAAE,EAAE,GACb,GAAG,IAAI;;AAER,QAAA,IAAI,EAAU;;AAEd,QAAA,IAAI,EAAE,IAAI,EAAE,EAAE;;YAEZ,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG;AACnB,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK;;aACjB;;AAEL,YAAA,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;;AAG3D,QAAA,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC;AAC7C,QAAA,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,KAAK,EAAE;;;AAGjB;;AC9GD;;AAEG;MACU,MAAM,CAAA;AACjB;;AAEG;IACK,SAAS,GAAW,CAAC;AAC7B;;;AAGG;IACK,MAAM,GAAsB,SAAS;AAE7C;;AAEG;AACc,IAAA,MAAM,GAAiB,MAAM,CAAC,MAAM,CAAC;AACpD,QAAA,IAAI,EAAE,CAAC;AACP,QAAA,QAAQ,EAA2B,UAAA;AACnC,QAAA,QAAQ,EAA2B,UAAA;AACnC,QAAA,UAAU,EAAE,CAAC;AACb,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,cAAc,EAAE,CAAC;;AAElB,KAAA,CAAC;AAEM,IAAA,KAAK,GAAG,IAAI,KAAK,EAAE;IACnB,QAAQ,GAAoB,IAAI;;;AAIxC;;AAEG;IACK,IAAI,GAAW,CAAC;AACxB;;AAEG;IACK,IAAI,GAAW,CAAC;AAExB;;;AAGG;AACI,IAAA,MAAM,SAAS,CACpB,OAAqC,EACrC,SAA8D,EAAA;AAE9D,QAAA,IAAI,MAA2B;AAE/B,QAAA,IAAI,OAAO,OAAO,IAAI,QAAQ,EAAE;AAC9B,YAAA,MAAM,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;;aAC1B;YACL,MAAM,GAAG,OAAO;;AAGlB,QAAA,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,MAAM;QACvC,IAAI,UAAU,IAAI,SAAS,IAAI,QAAQ,IAAI,SAAS,EAAE;;;;;;;AASpD,YAAA,IAAI,UAAU,GAAG,QAAQ,EAAE;AACzB,gBAAA,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC;;;AAI9D,QAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;AACzB,YAAA,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC;AACtB,YAAA,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAA6B,UAAA;AACtD,YAAA,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAA6B,UAAA;YACtD,UAAU,EAAE,UAAU,IAAI,CAAC;YAC3B,QAAQ,EAAE,QAAQ,IAAI,CAAC;AACvB,YAAA,cAAc,EAAE,MAAM,CAAC,cAAc,IAAI,CAAC;AAC3C,SAAA,CAAC;AACF,QAAA,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC;;;;;QAKxE,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;AACxC,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;;;;;;;;;;;;;;;;;AAmB1D;;;;AAIG;AACI,IAAA,KAAK,CAAC,WAAkB,EAAA;QAC7B,IAAI,CAAC,WAAW,EAAE;AAChB,YAAA,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;;AAG1C,QAAA,IAAI,CAAC,QAAS,CAAC,IAAI,EAAE;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC;AAClB,QAAA,IAAI,CAAC,MAAM,GAAG,WAAW;AACzB,QAAA,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC;AAC7B,QAAA,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;AAC3B,QAAA,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC;QAE5B,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,WAAW;AAE9C,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;QAEtB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;;AAG/C;;AAEG;AACI,IAAA,OAAO;AACd;;AAEG;AACI,IAAA,QAAQ;AACf;;AAEG;AACI,IAAA,OAAO;AACd;;AAEG;AACI,IAAA,MAAM;AACb;;AAEG;AACI,IAAA,SAAS;AAChB;;AAEG;AACI,IAAA,KAAK;AAEZ;;AAEG;IACI,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;QACvB,IAAI,CAAC,cAAc,EAAE;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;;AAGhC;;AAEG;IACI,MAAM,GAAA;QACX,IAAI,CAAC,cAAc,EAAE;QACrB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;;AAGjC;;AAEG;IACI,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,QAAS,CAAC,IAAI,EAAE;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;;AAGhC;;AAEG;IACI,IAAI,GAAA;AACT,QAAA,IAAI,CAAC,QAAS,CAAC,IAAI,EAAE;AACrB,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC;AAClB,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;QACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;;AAG/B;;AAEG;IACI,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;;AAGzB;;AAEG;IACI,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,QAAS,CAAC,IAAI,EAAE;AACrB,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AACpB,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACpB,QAAA,IAAI,CAAC,MAAM,GAAG,SAAS;;AAGlB,IAAA,WAAW,CAAC,KAAa,EAAE,OAAO,GAAG,KAAK,EAAA;QAC/C,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;AAClB,QAAA,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,KAAK,GAAG,CAAC,EAAE;YAC5C;;QAEF,IAAI,CAAC,KAAK,EAAE;AACZ,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;QACtB,IAAI,OAAO,EAAE;YACX,IAAI,CAAC,cAAc,EAAE;;;AAIlB,IAAA,gBAAgB,CAAC,UAAkB,EAAE,OAAA,GAAmB,KAAK,EAAA;QAClE,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;AAElB,QAAA,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM;AAC9B,QAAA,IAAI,KAAK,GAAG,UAAU,GAAG,MAAM;QAE/B,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,GAAG,CAAC,EAAE;AAChC,YAAA,KAAK,GAAG,MAAM,GAAG,CAAC;;AAGpB,QAAA,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC;;AAGlC;;AAEG;IACK,cAAc,GAAA;AACpB,QAAA,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,GACtE,IAAI,CAAC,MAAM;QACb,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,MAAO;AAC3C,QAAA,MAAM,WAAW,GAAG,OAAO,CAAC,MAAM;AAClC,QAAA,MAAM,SAAS,GAAG,MAAM,GAAG,CAAC;AAC5B,QAAA,MAAM,KAAK,GAAG,UAAU,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC;AAC7C,QAAA,MAAM,GAAG,GAAG,QAAQ,GAAG,CAAC,GAAG,QAAQ,GAAG,SAAS;;AAG/C,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,EAAE;AAC/B,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK;;;QAIxB,IAAI,QAAQ,IAA6B,UAAA,kCAAE;YACzC,IAAI,CAAC,QAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC;;aAC9B;YACL,IAAI,CAAC,QAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC;;;QAIrC,IAAI,QAAQ,GAAG,CAAC,IAAI,QAAQ,GAAG,UAAU,EAAE;AACzC,YAAA,MAAM,GAAG,QAAQ,GAAG,UAAU;;aACzB,IAAI,QAAQ,IAAI,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;YAC1C,MAAM,IAAI,UAAU;;;AAItB,QAAA,MAAM,aAAa,GAAG,IAAI,GAAG,GAAG;;QAEhC,IAAI,CAAC,QAAS,CAAC,SAAS;;AAEtB,QAAA,MAAM,GAAG,aAAa;;AAEtB,QAAA,cAAc,GAAG;AACf,cAAE,CAAC,cAAc,GAAG,UAAU,IAAI;cAChC,CAAC,EACL,IAAI,IAAI,CAAC,GAAG,QAAQ,GAAG,IAAI,EAC3B,EAAE,QAAQ,IAAA,WAAA,kCAA+B,CAC1C;;QAED,IAAI,CAAC,QAAS,CAAC,QAAQ,GAAG,CAAC,KAAa,EAAE,UAAkB,KAAI;;AAE9D,YAAA,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,IAAI,KAAK;;AAE3C,YAAA,IAAI,IAAI,CAAC,IAAI,IAAI,WAAW,EAAE;;gBAE5B,MAAM,GAAG,GAAG;AACV,sBAAE,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,UAAU,GAAG,GAAG,GAAG,CAAC,EAAE,WAAW,CAAC,IAAI;sBAC7D,WAAW;AAEf,gBAAA,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE;AACnB,oBAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI;AACrB,oBAAA,IAAI,CAAC,IAAI,GAAG,GAAG;AACf,oBAAA,SAAS,CAAC,IAAI,CAAC,CAAM,IAAA,CAAA,EAAE,MAAK;wBAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC;AACrE,qBAAC,CAAC;;;YAIN,IAAI,WAAW,EAAE;gBACf;;AAGF,YAAA,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;YACvB,SAAS,CAAC,IAAI,CACZ,QAAQ,EACR,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EACxB,IAAI,EACJ,CAAC,KAAK,KAAI;AACR,gBAAA,SAAS,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC;AACpC,gBAAA,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;AAClB,gBAAA,IAAI,KAAK,GAAG,SAAS,CAAC,KAAK,EAAE;AAC3B,oBAAA,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC;;qBACtB;AACL,oBAAA,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;;AAE9B,aAAC,CACF;AACD,YAAA,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAChC,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK;AACtB,YAAA,IAAI,CAAC,IAAI,GAAG,CAAC;AACf,SAAC;AAED,QAAA,IAAI,CAAC,QAAS,CAAC,KAAK,EAAE;;AAEzB;;MC1UY,MAAM,CAAA;AACjB;;;AAGG;IACK,MAAM,GAAsB,SAAS;IAErC,SAAS,GAAW,CAAC;AAErB,IAAA,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC;AAEnC;;;AAGG;IACI,SAAS,CACd,SAAiB,EACjB,SAA8D,EAAA;AAE9D,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,EAAE,SAAS,CAAC;;AAGtD;;;;;AAKG;IACI,KAAK,CAAC,WAAkB,EAAE,SAAkB,EAAA;QACjD,IAAI,CAAC,WAAW,EAAE;AAChB,YAAA,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC;;QAG1C,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,WAAW;AAE9C,QAAA,IAAI,CAAC,MAAM,GAAG,WAAW;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS,IAAI,CAAC;AAC/B,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC;AAC3C,QAAA,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;AACtB,QAAA,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC;QAE7B,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;;AAG/C;;AAEG;AACI,IAAA,OAAO;AAEd;;AAEG;AACI,IAAA,KAAK;AAEZ;;;;;AAKG;IACI,iBAAiB,CAAC,GAAW,EAAE,OAAuB,EAAA;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;QAElB,IAAI,CAAC,MAAO,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,OAAO;;AAG7C;;;;;AAKG;AACI,IAAA,MAAM,sBAAsB,CAAC,GAAW,EAAE,GAAW,EAAA;QAC1D,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;AAElB,QAAA,IAAI,CAAC,MAAO,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;;AAG3E;;;;;AAKG;IACI,iBAAiB,CAAC,GAAW,EAAE,OAAuB,EAAA;QAC3D,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;QAElB,IAAI,CAAC,MAAO,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,OAAO;;AAG7C;;;;;AAKG;AACI,IAAA,MAAM,sBAAsB,CAAC,GAAW,EAAE,GAAW,EAAA;QAC1D,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE;AAElB,QAAA,IAAI,CAAC,MAAO,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;;AAG3E;;AAEG;IACI,IAAI,GAAA;AACT,QAAA,SAAS,CAAC,IAAI,CACZ,QAAQ,EACR,MAAK;AACH,YAAA,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAO,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,MAAO,CAAC,OAAO,CAAC,MAAM,CAAC;AAC7E,YAAA,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AACpB,SAAC,CACF;;AAGH;;AAEG;IACI,KAAK,GAAA;AACV,QAAA,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;;AAGzB;;AAEG;IACI,OAAO,GAAA;AACZ,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AACpB,QAAA,IAAI,CAAC,MAAM,GAAG,SAAS;;AAGzB;;;;;AAKG;IACI,SAAS,CAAC,IAAa,EAAE,cAAuB,EAAA;QACrD,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,cAAc,CAAC;;AAEnD;;;;","x_google_ignoreList":[0]}