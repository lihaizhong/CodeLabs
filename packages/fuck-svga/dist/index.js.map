{"version":3,"file":"index.js","sources":["../../../node_modules/.pnpm/fflate@0.8.2/node_modules/fflate/esm/browser.js","../../fuck-protobuf/dist/index.js","../src/polyfill/app.ts","../src/polyfill/bridge.ts","../src/test/benchmark.ts","../src/polyfill/fsm.ts","../src/polyfill/download.ts","../src/parser/video-entity.ts","../src/parser/index.ts","../src/polyfill/ratio.ts","../src/polyfill/canvas.ts","../src/polyfill/decode.ts","../src/polyfill/loadImage.ts","../src/polyfill/noop.ts","../src/polyfill/system.ts","../src/polyfill/time.ts","../src/player/animator.ts","../src/player/render.ts","../src/player/brush.ts","../src/player/index.ts"],"sourcesContent":["// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n","function e(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var t,s;var i,n=e(function(){if(s)return t;function e(e){return\"undefined\"!=typeof Float32Array?function(){var t=new Float32Array([-0]),s=new Uint8Array(t.buffer),i=128===s[3];function n(e,i,n){t[0]=e,i[n]=s[0],i[n+1]=s[1],i[n+2]=s[2],i[n+3]=s[3]}function a(e,i,n){t[0]=e,i[n]=s[3],i[n+1]=s[2],i[n+2]=s[1],i[n+3]=s[0]}function r(e,i){return s[0]=e[i],s[1]=e[i+1],s[2]=e[i+2],s[3]=e[i+3],t[0]}function l(e,i){return s[3]=e[i],s[2]=e[i+1],s[1]=e[i+2],s[0]=e[i+3],t[0]}e.writeFloatLE=i?n:a,e.writeFloatBE=i?a:n,e.readFloatLE=i?r:l,e.readFloatBE=i?l:r}():function(){function t(e,t,s,i){var n=t<0?1:0;if(n&&(t=-t),0===t)e(1/t>0?0:2147483648,s,i);else if(isNaN(t))e(2143289344,s,i);else if(t>34028234663852886e22)e((n<<31|2139095040)>>>0,s,i);else if(t<11754943508222875e-54)e((n<<31|Math.round(t/1401298464324817e-60))>>>0,s,i);else{var a=Math.floor(Math.log(t)/Math.LN2);e((n<<31|a+127<<23|8388607&Math.round(t*Math.pow(2,-a)*8388608))>>>0,s,i)}}function s(e,t,s){var i=e(t,s),n=2*(i>>31)+1,a=i>>>23&255,r=8388607&i;return 255===a?r?NaN:n*(1/0):0===a?1401298464324817e-60*n*r:n*Math.pow(2,a-150)*(r+8388608)}e.writeFloatLE=t.bind(null,i),e.writeFloatBE=t.bind(null,n),e.readFloatLE=s.bind(null,a),e.readFloatBE=s.bind(null,r)}(),\"undefined\"!=typeof Float64Array?function(){var t=new Float64Array([-0]),s=new Uint8Array(t.buffer),i=128===s[7];function n(e,i,n){t[0]=e,i[n]=s[0],i[n+1]=s[1],i[n+2]=s[2],i[n+3]=s[3],i[n+4]=s[4],i[n+5]=s[5],i[n+6]=s[6],i[n+7]=s[7]}function a(e,i,n){t[0]=e,i[n]=s[7],i[n+1]=s[6],i[n+2]=s[5],i[n+3]=s[4],i[n+4]=s[3],i[n+5]=s[2],i[n+6]=s[1],i[n+7]=s[0]}function r(e,i){return s[0]=e[i],s[1]=e[i+1],s[2]=e[i+2],s[3]=e[i+3],s[4]=e[i+4],s[5]=e[i+5],s[6]=e[i+6],s[7]=e[i+7],t[0]}function l(e,i){return s[7]=e[i],s[6]=e[i+1],s[5]=e[i+2],s[4]=e[i+3],s[3]=e[i+4],s[2]=e[i+5],s[1]=e[i+6],s[0]=e[i+7],t[0]}e.writeDoubleLE=i?n:a,e.writeDoubleBE=i?a:n,e.readDoubleLE=i?r:l,e.readDoubleBE=i?l:r}():function(){function t(e,t,s,i,n,a){var r=i<0?1:0;if(r&&(i=-i),0===i)e(0,n,a+t),e(1/i>0?0:2147483648,n,a+s);else if(isNaN(i))e(0,n,a+t),e(2146959360,n,a+s);else if(i>17976931348623157e292)e(0,n,a+t),e((r<<31|2146435072)>>>0,n,a+s);else{var l;if(i<22250738585072014e-324)e((l=i/5e-324)>>>0,n,a+t),e((r<<31|l/4294967296)>>>0,n,a+s);else{var o=Math.floor(Math.log(i)/Math.LN2);1024===o&&(o=1023),e(4503599627370496*(l=i*Math.pow(2,-o))>>>0,n,a+t),e((r<<31|o+1023<<20|1048576*l&1048575)>>>0,n,a+s)}}}function s(e,t,s,i,n){var a=e(i,n+t),r=e(i,n+s),l=2*(r>>31)+1,o=r>>>20&2047,c=4294967296*(1048575&r)+a;return 2047===o?c?NaN:l*(1/0):0===o?5e-324*l*c:l*Math.pow(2,o-1075)*(c+4503599627370496)}e.writeDoubleLE=t.bind(null,i,0,4),e.writeDoubleBE=t.bind(null,n,4,0),e.readDoubleLE=s.bind(null,a,0,4),e.readDoubleBE=s.bind(null,r,4,0)}(),e}function i(e,t,s){t[s]=255&e,t[s+1]=e>>>8&255,t[s+2]=e>>>16&255,t[s+3]=e>>>24}function n(e,t,s){t[s]=e>>>24,t[s+1]=e>>>16&255,t[s+2]=e>>>8&255,t[s+3]=255&e}function a(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function r(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}return s=1,t=e(e)}()),a={};var r=(i||(i=1,function(){var e=a;e.length=function(e){for(var t=0,s=0,i=0;i<e.length;++i)(s=e.charCodeAt(i))<128?t+=1:s<2048?t+=2:55296==(64512&s)&&56320==(64512&e.charCodeAt(i+1))?(++i,t+=4):t+=3;return t},e.read=function(e,t,s){if(s-t<1)return\"\";for(var i,n=null,a=[],r=0;t<s;)(i=e[t++])<128?a[r++]=i:i>191&&i<224?a[r++]=(31&i)<<6|63&e[t++]:i>239&&i<365?(i=((7&i)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,a[r++]=55296+(i>>10),a[r++]=56320+(1023&i)):a[r++]=(15&i)<<12|(63&e[t++])<<6|63&e[t++],r>8191&&((n||(n=[])).push(String.fromCharCode.apply(String,a)),r=0);return n?(r&&n.push(String.fromCharCode.apply(String,a.slice(0,r))),n.join(\"\")):String.fromCharCode.apply(String,a.slice(0,r))},e.write=function(e,t,s){for(var i,n,a=s,r=0;r<e.length;++r)(i=e.charCodeAt(r))<128?t[s++]=i:i<2048?(t[s++]=i>>6|192,t[s++]=63&i|128):55296==(64512&i)&&56320==(64512&(n=e.charCodeAt(r+1)))?(i=65536+((1023&i)<<10)+(1023&n),++r,t[s++]=i>>18|240,t[s++]=i>>12&63|128,t[s++]=i>>6&63|128,t[s++]=63&i|128):(t[s++]=i>>12|224,t[s++]=i>>6&63|128,t[s++]=63&i|128);return s-a}}()),a),l=e(r);class o{static create(e){if(e instanceof Uint8Array)return new o(e);throw Error(\"illegal buffer\")}buf;pos;len;constructor(e){this.buf=e,this.pos=0,this.len=e.length}slice(e,t,s){return e.subarray(t,s)}indexOutOfRange(e,t){return RangeError(\"index out of range: \"+e.pos+\" + \"+(t||1)+\" > \"+e.len)}uint32(){let e=4294967295;if(e=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return e;if(e=(e|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return e;if((this.pos+=5)>this.len)throw this.pos=this.len,this.indexOutOfRange(this,10);return e}int32(){return 0|this.uint32()}float(){if(this.pos+4>this.len)throw this.indexOutOfRange(this,4);const e=n.readFloatLE(this.buf,this.pos);return this.pos+=4,e}bytes(){const e=this.uint32(),t=this.pos,s=this.pos+e;if(s>this.len)throw this.indexOutOfRange(this,e);return this.pos+=e,t===s?new Uint8Array(0):this.slice(this.buf,t,s)}string(){const e=this.bytes();return l.read(e,0,e.length)}skip(e){if(\"number\"==typeof e){if(this.pos+e>this.len)throw this.indexOutOfRange(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw this.indexOutOfRange(this)}while(128&this.buf[this.pos++]);return this}skipType(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error(\"invalid wire type \"+e+\" at offset \"+this.pos)}return this}}class c{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new u;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.x=e.float();break;case 2:i.y=e.float();break;case 3:i.width=e.float();break;case 4:i.height=e.float();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class u{static create(e){return new u(e)}x=0;y=0;width=0;height=0;constructor(e){e&&(null!=e.x&&(this.x=e.x),null!=e.y&&(this.y=e.y),null!=e.width&&(this.width=e.width),null!=e.height&&(this.height=e.height))}}class h{static decode(e,t){e instanceof o||(e=o.create(e));let s=void 0===t?e.len:e.pos+t,i=new d;for(;e.pos<s;){let t=e.uint32();switch(t>>>3){case 1:i.a=e.float();break;case 2:i.b=e.float();break;case 3:i.c=e.float();break;case 4:i.d=e.float();break;case 5:i.tx=e.float();break;case 6:i.ty=e.float();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class d{static create(e){return new d(e)}a=0;b=0;c=0;d=0;tx=0;ty=0;constructor(e){e&&(null!=e.a&&(this.a=e.a),null!=e.b&&(this.b=e.b),null!=e.c&&(this.c=e.c),null!=e.d&&(this.d=e.d),null!=e.tx&&(this.tx=e.tx),null!=e.ty&&(this.ty=e.ty))}}class f{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new p;for(;e.pos<s;){const t=e.uint32();if(t>>>3==1)i.d=e.string();else e.skipType(7&t)}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class p{static create(e){return new p(e)}d=\"\";constructor(e){e&&null!=e.d&&(this.d=e.d)}}class b{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new w;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.x=e.float();break;case 2:i.y=e.float();break;case 3:i.width=e.float();break;case 4:i.height=e.float();break;case 5:i.cornerRadius=e.float();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class w{static create(e){return new w(e)}x=0;y=0;width=0;height=0;cornerRadius=0;constructor(e){e&&(null!=e.x&&(this.x=e.x),null!=e.y&&(this.y=e.y),null!=e.width&&(this.width=e.width),null!=e.height&&(this.height=e.height),null!=e.cornerRadius&&(this.cornerRadius=e.cornerRadius))}}class k{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new y;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.x=e.float();break;case 2:i.y=e.float();break;case 3:i.radiusX=e.float();break;case 4:i.radiusY=e.float();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class y{static create(e){return new y(e)}x=0;y=0;radiusX=0;radiusY=0;constructor(e){e&&(null!=e.x&&(this.x=e.x),null!=e.y&&(this.y=e.y),null!=e.radiusX&&(this.radiusX=e.radiusX),null!=e.radiusY&&(this.radiusY=e.radiusY))}}class m{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new g;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.r=e.float();break;case 2:i.g=e.float();break;case 3:i.b=e.float();break;case 4:i.a=e.float();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class g{static create(e){return new g(e)}r=0;g=0;b=0;a=0;constructor(e){e&&(null!=e.r&&(this.r=e.r),null!=e.g&&(this.g=e.g),null!=e.b&&(this.b=e.b),null!=e.a&&(this.a=e.a))}}class v{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new x;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.fill=m.decode(e,e.uint32());break;case 2:i.stroke=m.decode(e,e.uint32());break;case 3:i.strokeWidth=e.float();break;case 4:i.lineCap=e.int32();break;case 5:i.lineJoin=e.int32();break;case 6:i.miterLimit=e.float();break;case 7:i.lineDashI=e.float();break;case 8:i.lineDashII=e.float();break;case 9:i.lineDashIII=e.float();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class x{static create(e){return new x(e)}fill=null;stroke=null;strokeWidth=0;lineCap=0;lineJoin=0;miterLimit=0;lineDashI=0;lineDashII=0;lineDashIII=0;constructor(e){e&&(null!=e.fill&&(this.fill=e.fill),null!=e.lineCap&&(this.lineCap=e.lineCap),null!=e.lineDashI&&(this.lineDashI=e.lineDashI),null!=e.lineDashII&&(this.lineDashII=e.lineDashII),null!=e.lineDashIII&&(this.lineDashIII=e.lineDashIII),null!=e.lineJoin&&(this.lineJoin=e.lineJoin),null!=e.miterLimit&&(this.miterLimit=e.miterLimit),null!=e.stroke&&(this.stroke=e.stroke),null!=e.strokeWidth&&(this.strokeWidth=e.strokeWidth))}}class D{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new I;for(;e.pos<s;){let t=e.uint32();switch(t>>>3){case 1:i.type=e.int32();break;case 2:i.shape=f.decode(e,e.uint32());break;case 3:i.rect=b.decode(e,e.uint32());break;case 4:i.ellipse=k.decode(e,e.uint32());break;case 10:i.styles=v.decode(e,e.uint32());break;case 11:i.transform=h.decode(e,e.uint32());break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class I{static create(e){return new I(e)}type=0;shape=null;rect=null;ellipse=null;styles=null;transform=null;$oneOfFields=[\"shape\",\"rect\",\"ellipse\"];$fieldMap={};get args(){const e=Object.keys(this);for(let t=e.length-1;t>-1;--t){const s=e[t],i=this[s];if(1===this.$fieldMap[s]&&null!=i)return s}return\"\"}set args(e){for(var t=0;t<this.$oneOfFields.length;++t){const s=this.$oneOfFields[t];s!==e&&delete this[s]}}constructor(e){e&&(null!=e.type&&(this.type=e.type),null!=e.ellipse&&(this.ellipse=e.ellipse),null!=e.rect&&(this.rect=e.rect),null!=e.shape&&(this.shape=e.shape),null!=e.styles&&(this.styles=e.styles),null!=e.transform&&(this.transform=e.transform));for(var t=0;t<this.$oneOfFields.length;++t)this.$fieldMap[this.$oneOfFields[t]]=1}}class O{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new E;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.alpha=e.float();break;case 2:i.layout=c.decode(e,e.uint32());break;case 3:i.transform=h.decode(e,e.uint32());break;case 4:i.clipPath=e.string();break;case 5:i.shapes&&i.shapes.length||(i.shapes=[]),i.shapes.push(D.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class E{static create(e){return new E(e)}shapes=[];alpha=0;layout=null;transform=null;clipPath=\"\";constructor(e){e&&(null!=e.alpha&&(this.alpha=e.alpha),null!=e.clipPath&&(this.clipPath=e.clipPath),null!=e.layout&&(this.layout=e.layout),null!=e.shapes&&(this.shapes=e.shapes),null!=e.transform&&(this.transform=e.transform))}}class B{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new F;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.imageKey=e.string();break;case 2:i.frames&&i.frames.length||(i.frames=[]),i.frames.push(O.decode(e,e.uint32()));break;case 3:i.matteKey=e.string();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class F{static create(e){return new F(e)}frames=[];imageKey=\"\";matteKey=\"\";constructor(e){e&&(null!=e.frames&&(this.frames=e.frames),null!=e.imageKey&&(this.imageKey=e.imageKey),null!=e.matteKey&&(this.matteKey=e.matteKey))}}class L{static decode(e,t){e instanceof o||(e=o.create(e));let s=void 0===t?e.len:e.pos+t,i=new M;for(;e.pos<s;){let t=e.uint32();switch(t>>>3){case 1:i.viewBoxWidth=e.float();break;case 2:i.viewBoxHeight=e.float();break;case 3:i.fps=e.int32();break;case 4:i.frames=e.int32();break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class M{static create(e){return new M(e)}viewBoxWidth=0;viewBoxHeight=0;fps=0;frames=0;constructor(e){e&&(null!=e.viewBoxWidth&&(this.viewBoxWidth=e.viewBoxWidth),null!=e.viewBoxHeight&&(this.viewBoxHeight=e.viewBoxHeight),null!=e.fps&&(this.fps=e.fps),null!=e.frames&&(this.frames=e.frames))}}const C=Object.freeze({});class T{static decode(e,t){e instanceof o||(e=o.create(e));const s=void 0===t?e.len:e.pos+t,i=new A;let n,a;for(;e.pos<s;){const t=e.uint32();switch(t>>>3){case 1:i.version=e.string();break;case 2:i.params=L.decode(e,e.uint32());break;case 3:{i.images===C&&(i.images={});const t=e.uint32()+e.pos;for(n=\"\",a=[];e.pos<t;){let t=e.uint32();switch(t>>>3){case 1:n=e.string();break;case 2:a=e.bytes();break;default:e.skipType(7&t)}}i.images[n]=a;break}case 4:i.sprites&&i.sprites.length||(i.sprites=[]),i.sprites.push(B.decode(e,e.uint32()));break;default:e.skipType(7&t)}}return i}static decodeDelimited(e){return e instanceof o||(e=new o(e)),this.decode(e,e.uint32())}}class A{static create(e){return new A(e)}version=\"\";params=null;images=C;sprites=[];constructor(e){e&&(null!=e.version&&(this.version=e.version),null!=e.images&&(this.images=e.images),null!=e.params&&(this.params=e.params),null!=e.sprites&&(this.sprites=e.sprites))}}export{T as MovieEntityReader};\n//# sourceMappingURL=index.js.map\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["u8","Uint8Array","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","fd","rev","x","hMap","cd","mb","s","length","l","co","le","rvb","sv","r_1","v","m","flt","fdt","flrm","fdrm","max","a","bits","d","p","o","bits16","shft","ec","err","ind","msg","nt","e","Error","code","captureStackTrace","inflt","dat","st","buf","dict","sl","f","noBuf","resize","noSt","cbuf","bl","nbuf","Math","set","final","pos","bt","lm","dm","lbt","dbt","n","tbts","type","t","subarray","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","c","lt","dt","lms","dms","lpos","sym","add","dsym","end","shift","dend","min","slc","et","unzlibSync","data","opts","zls","td","TextDecoder","decode","stream","__esModule","Object","prototype","hasOwnProperty","call","default","Float32Array","buffer","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","isNaN","round","floor","log","LN2","pow","NaN","bind","Float64Array","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","charCodeAt","read","push","String","fromCharCode","apply","slice","join","write","create","len","constructor","this","indexOutOfRange","RangeError","uint32","int32","float","bytes","string","skip","skipType","undefined","u","y","width","height","decodeDelimited","h","tx","ty","p$1","w","cornerRadius","k","radiusX","radiusY","g","fill","stroke","strokeWidth","lineCap","lineJoin","miterLimit","lineDashI","lineDashII","lineDashIII","D","I","shape","rect","ellipse","styles","transform","$oneOfFields","$fieldMap","args","keys","O","E","alpha","layout","clipPath","shapes","B","F","imageKey","frames","matteKey","L","M","viewBoxWidth","viewBoxHeight","fps","C","freeze","T","A","version","params","images","sprites","SP","app","window","tt","my","wx","br","stopwatch","increment","label","getCount","time","console","timeEnd","clearTime","isLock","lock","unlock","benchmark","count","callback","beforeCallback","afterCallback","lockTime","unlockTime","line","size","repeat","message","USER_DATA_PATH","getEnvInfoSync","common","env","download","url","test","fetch","then","response","ok","arrayBuffer","status","statusText","Promise","resolve","reject","request","dataType","responseType","enableCache","success","res","fail","readRemoteFile","filePath","fs","getFileSystemManager","access","path","readFile","VideoEntity","filename","replaceElements","dynamicElements","movie","formatSprites","mSprites","map","mSprite","formatFrames","mFrames","lastShapes","mFrame","FL","FT","FA","formatShapes","llx","lrx","lbx","rbx","lly","lry","lby","rby","nx","ny","CP","maskPath","lineDash","mShapes","mShape","mStyles","LD1","LD2","LD3","StF","StS","SS","ShF","ST","Parser","parseVideoEntity","header","u8a","toString","entity","inflateData","movieData","MovieEntityReader","substring","lastIndexOf","load","dpr","getCanvas","selector","component","initCanvas","canvas","ctx","getContext","scale","document","querySelector","style","parseFloat","query","createSelectorQuery","in","select","fields","node","exec","getOffscreenCanvas","options","OffscreenCanvas","createOffscreenCanvas","toBase64","toBuffer","b64","btoa","arrayBufferToBase64","byteOffset","byteLength","async","genImageSource","prefix","isIDE","writeFile","writeTmpFile","genFilePath","ex","error","loadImage","brush","createImageBitmap","Blob","toBitmap","ImageBitmap","img","createImage","onload","src","startsWith","unlink","removeTmpFile","onerror","devicePixelRatio","getWindowInfo","pixelRatio","getSystemInfoSync","noop","UA","navigator","userAgent","getDeviceBaseInfo","platform","getDeviceInfoSync","getDeviceInfo","toLocaleUpperCase","now","performance","Date","Animator","isRunning","startTime","startValue","endValue","duration","loopStart","loopDuration","fillRule","onStart","onUpdate","onEnd","setRange","setConfig","loop","doFrame","stop","doDeltaTime","flush","DT","LS","LD","SV","EV","FR","CF","drawSprite","context","sprite","currentFrame","bitmap","replaceElement","dynamicElement","frame","save","globalAlpha","drawBezier","clip","drawImage","drawShape","restore","resetShapeStyles","kappa","ox","oy","xe","ye","xm","ym","beginPath","moveTo","bezierCurveTo","drawEllipse","radius","arcTo","closePath","drawRect","strokeStyle","lineWidth","fillStyle","setLineDash","currentPoint","x1","y1","x2","y2","segments","replace","split","segment","firstLetter","includes","drawBezierElement","trim","method","lineTo","quadraticCurveTo","Brush","X","XC","Y","YC","W","H","mode","materials","Map","setMode","clear","render","register","ofsSelector","ofsResult","clearFront","clearRect","clearBack","stick","imageData","getImageData","putImageData","setRect","imageArr","key","all","Image","cb","requestAnimationFrame","draw","videoEntity","head","tail","get","destroy","Player","currFrame","config","fillMode","playMode","startFrame","endFrame","loopStartFrame","animator","container","assign","secondary","mount","onResume","onPause","onStop","onProcess","startAnimation","resume","pause","spriteCount","lastFrame","frameDuration","Infinity","value","spendValue","hasRemained","tmp"],"mappings":"AA8BA,IAAIA,EAAKC,WAAYC,EAAMC,YAAaC,EAAMC,WAE1CC,EAAO,IAAIN,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAgB,EAAG,EAAoB,IAE1IO,EAAO,IAAIP,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAiB,EAAG,IAEjIQ,EAAO,IAAIR,EAAG,CAAC,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAE7ES,EAAO,SAAUC,EAAIC,GAErB,IADA,IAAIC,EAAI,IAAIV,EAAI,IACPW,EAAI,EAAGA,EAAI,KAAMA,EACtBD,EAAEC,GAAKF,GAAS,GAAKD,EAAGG,EAAI,GAGhC,IAAIC,EAAI,IAAIV,EAAIQ,EAAE,KAClB,IAASC,EAAI,EAAGA,EAAI,KAAMA,EACtB,IAAK,IAAIE,EAAIH,EAAEC,GAAIE,EAAIH,EAAEC,EAAI,KAAME,EAC/BD,EAAEC,GAAOA,EAAIH,EAAEC,IAAO,EAAKA,EAGnC,MAAO,CAAED,EAAGA,EAAGE,EAAGA,EACtB,EACIE,EAAKP,EAAKH,EAAM,GAAIW,EAAKD,EAAGJ,EAAGM,EAAQF,EAAGF,EAE9CG,EAAG,IAAM,IAAKC,EAAM,KAAO,GAI3B,IAHG,IAAqBC,EAAfV,EAAKF,EAAM,GAAYK,EAE5BQ,EAAM,IAAIlB,EAAI,OACTW,EAAI,EAAGA,EAAI,QAASA,EAAG,CAE5B,IAAIQ,GAAU,MAAJR,IAAe,GAAW,MAAJA,IAAe,EAE/CQ,GAAU,OADVA,GAAU,MAAJA,IAAe,GAAW,MAAJA,IAAe,KACtB,GAAW,KAAJA,IAAe,EAC3CD,EAAIP,KAAY,MAAJQ,IAAe,GAAW,IAAJA,IAAe,IAAO,CAC5D,CAIA,IAAIC,WAAkBC,EAAIC,EAAIV,GAO1B,IANA,IAAIW,EAAIF,EAAGG,OAEPb,EAAI,EAEJc,EAAI,IAAIzB,EAAIsB,GAETX,EAAIY,IAAKZ,EACRU,EAAGV,MACDc,EAAEJ,EAAGV,GAAK,GAGpB,IAIIe,EAJAC,EAAK,IAAI3B,EAAIsB,GACjB,IAAKX,EAAI,EAAGA,EAAIW,IAAMX,EAClBgB,EAAGhB,GAAMgB,EAAGhB,EAAI,GAAKc,EAAEd,EAAI,IAAO,EAGtC,GAAIC,EAAG,CAEHc,EAAK,IAAI1B,EAAI,GAAKsB,GAElB,IAAIM,EAAM,GAAKN,EACf,IAAKX,EAAI,EAAGA,EAAIY,IAAKZ,EAEjB,GAAIU,EAAGV,GAQH,IANA,IAAIkB,EAAMlB,GAAK,EAAKU,EAAGV,GAEnBmB,EAAMR,EAAKD,EAAGV,GAEdoB,EAAIJ,EAAGN,EAAGV,GAAK,MAAQmB,EAElBE,EAAID,GAAM,GAAKD,GAAO,EAAIC,GAAKC,IAAKD,EAEzCL,EAAGR,EAAIa,IAAMH,GAAOC,CAIxC,MAGQ,IADAH,EAAK,IAAI1B,EAAIuB,GACRZ,EAAI,EAAGA,EAAIY,IAAKZ,EACbU,EAAGV,KACHe,EAAGf,GAAKO,EAAIS,EAAGN,EAAGV,GAAK,OAAU,GAAKU,EAAGV,IAIrD,OAAOe,CACV,EAEGO,EAAM,IAAInC,EAAG,KACjB,IAASa,EAAI,EAAGA,EAAI,MAAOA,EACvBsB,EAAItB,GAAK,EACb,IAASA,EAAI,IAAKA,EAAI,MAAOA,EACzBsB,EAAItB,GAAK,EACb,IAASA,EAAI,IAAKA,EAAI,MAAOA,EACzBsB,EAAItB,GAAK,EACb,IAASA,EAAI,IAAKA,EAAI,MAAOA,EACzBsB,EAAItB,GAAK,EAEb,IAAIuB,EAAM,IAAIpC,EAAG,IACjB,IAASa,EAAI,EAAGA,EAAI,KAAMA,EACtBuB,EAAIvB,GAAK,EAEV,IAAsCwB,EAAqBf,EAAKa,EAAK,EAAG,GAElCG,EAAqBhB,EAAKc,EAAK,EAAG,GAEvEG,EAAM,SAAUC,GAEhB,IADA,IAAIN,EAAIM,EAAE,GACD3B,EAAI,EAAGA,EAAI2B,EAAEd,SAAUb,EACxB2B,EAAE3B,GAAKqB,IACPA,EAAIM,EAAE3B,IAEd,OAAOqB,CACX,EAEIO,EAAO,SAAUC,EAAGC,EAAGT,GACvB,IAAIU,EAAKD,EAAI,EAAK,EAClB,OAASD,EAAEE,GAAMF,EAAEE,EAAI,IAAM,KAAY,EAAJD,GAAUT,CACnD,EAEIW,EAAS,SAAUH,EAAGC,GACtB,IAAIC,EAAKD,EAAI,EAAK,EAClB,OAASD,EAAEE,GAAMF,EAAEE,EAAI,IAAM,EAAMF,EAAEE,EAAI,IAAM,MAAa,EAAJD,EAC5D,EAEIG,EAAO,SAAUH,GAAK,OAASA,EAAI,GAAK,EAAK,CAAI,EAgCjDI,EAAK,CACL,iBACA,qBACA,yBACA,mBACA,kBACA,oBACJ,CACI,cACA,qBACA,uBACA,8BACA,oBACA,mBACA,oBAIAC,EAAM,SAAUC,EAAKC,EAAKC,GAC1B,IAAIC,EAAI,IAAIC,MAAMH,GAAOH,EAAGE,IAI5B,GAHAG,EAAEE,KAAOL,EACLI,MAAME,mBACNF,MAAME,kBAAkBH,EAAGJ,IAC1BG,EACD,MAAMC,EACV,OAAOA,CACX,EAEII,EAAQ,SAAUC,EAAKC,EAAIC,EAAKC,GAEhC,IAAIC,EAAKJ,EAAI/B,OACb,IAAKmC,GAAMH,EAAGI,IAAMJ,EAAG/B,EACnB,OAAOgC,GAAO,IAAI3D,EAAG,GACzB,IAAI+D,GAASJ,EAETK,EAASD,GAAiB,GAARL,EAAG7C,EAErBoD,EAAOP,EAAG7C,EAEVkD,IACAJ,EAAM,IAAI3D,EAAQ,EAAL6D,IAEjB,IAAIK,EAAO,SAAUvC,GACjB,IAAIwC,EAAKR,EAAIjC,OAEb,GAAIC,EAAIwC,EAAI,CAER,IAAIC,EAAO,IAAIpE,EAAGqE,KAAK9B,IAAS,EAAL4B,EAAQxC,IACnCyC,EAAKE,IAAIX,GACTA,EAAMS,CAClB,CACK,EAEGG,EAAQb,EAAGI,GAAK,EAAGU,EAAMd,EAAGf,GAAK,EAAG8B,EAAKf,EAAG9C,GAAK,EAAG8D,EAAKhB,EAAG/B,EAAGgD,EAAKjB,EAAGhB,EAAGkC,EAAMlB,EAAGxB,EAAG2C,EAAMnB,EAAGoB,EAE/FC,EAAY,EAALlB,EACX,EAAG,CACC,IAAKa,EAAI,CAELH,EAAQ9B,EAAKgB,EAAKe,EAAK,GAEvB,IAAIQ,EAAOvC,EAAKgB,EAAKe,EAAM,EAAG,GAE9B,GADAA,GAAO,GACFQ,EAAM,CAEP,IAAuBrD,EAAI8B,GAAvBhC,EAAIqB,EAAK0B,GAAO,GAAe,GAAMf,EAAIhC,EAAI,IAAM,EAAIwD,EAAIxD,EAAIE,EACnE,GAAIsD,EAAIpB,EAAI,CACJI,GACAjB,EAAI,GACR,KACpB,CAEoBgB,GACAE,EAAKO,EAAK9C,GAEdgC,EAAIW,IAAIb,EAAIyB,SAASzD,EAAGwD,GAAIR,GAE5Bf,EAAG9C,EAAI6D,GAAM9C,EAAG+B,EAAGf,EAAI6B,EAAU,EAAJS,EAAOvB,EAAGI,EAAIS,EAC3C,QAChB,CACiB,GAAY,GAARS,EACLN,EAAKrC,EAAMsC,EAAKrC,EAAMsC,EAAM,EAAGC,EAAM,OACpC,GAAY,GAARG,EAAW,CAEhB,IAAIG,EAAO1C,EAAKgB,EAAKe,EAAK,IAAM,IAAKY,EAAQ3C,EAAKgB,EAAKe,EAAM,GAAI,IAAM,EACnEa,EAAKF,EAAO1C,EAAKgB,EAAKe,EAAM,EAAG,IAAM,EACzCA,GAAO,GAKP,IAHA,IAAIc,EAAM,IAAItF,EAAGqF,GAEbE,EAAM,IAAIvF,EAAG,IACRa,EAAI,EAAGA,EAAIuE,IAASvE,EAEzB0E,EAAI/E,EAAKK,IAAM4B,EAAKgB,EAAKe,EAAU,EAAJ3D,EAAO,GAE1C2D,GAAe,EAARY,EAEP,IAAII,EAAMjD,EAAIgD,GAAME,GAAU,GAAKD,GAAO,EAEtCE,EAAMpE,EAAKiE,EAAKC,EAAK,GACzB,IAAS3E,EAAI,EAAGA,EAAIwE,GAAK,CACrB,IAII5D,EAJAX,EAAI4E,EAAIjD,EAAKgB,EAAKe,EAAKiB,IAM3B,GAJAjB,GAAW,GAAJ1D,GAEHW,EAAIX,GAAK,GAEL,GACJwE,EAAIzE,KAAOY,MAEV,CAED,IAAIkE,EAAI,EAAGb,EAAI,EAOf,IANS,IAALrD,GACAqD,EAAI,EAAIrC,EAAKgB,EAAKe,EAAK,GAAIA,GAAO,EAAGmB,EAAIL,EAAIzE,EAAI,IACvC,IAALY,GACLqD,EAAI,EAAIrC,EAAKgB,EAAKe,EAAK,GAAIA,GAAO,GACxB,IAAL/C,IACLqD,EAAI,GAAKrC,EAAKgB,EAAKe,EAAK,KAAMA,GAAO,GAClCM,KACHQ,EAAIzE,KAAO8E,CACvC,CACA,CAEgB,IAAIC,EAAKN,EAAIJ,SAAS,EAAGC,GAAOU,EAAKP,EAAIJ,SAASC,GAElDP,EAAMrC,EAAIqD,GAEVf,EAAMtC,EAAIsD,GACVnB,EAAKpD,EAAKsE,EAAIhB,EAAK,GACnBD,EAAKrD,EAAKuE,EAAIhB,EAAK,EACnC,MAEgB7B,EAAI,GACR,GAAIwB,EAAMO,EAAM,CACRd,GACAjB,EAAI,GACR,KAChB,CACA,CAGYgB,GACAE,EAAKO,EAAK,QAGd,IAFA,IAAIqB,GAAO,GAAKlB,GAAO,EAAGmB,GAAO,GAAKlB,GAAO,EACzCmB,EAAOxB,GACHwB,EAAOxB,EAAK,CAEhB,IAAoCyB,GAAhCN,EAAIjB,EAAG7B,EAAOY,EAAKe,GAAOsB,KAAiB,EAE/C,IADAtB,GAAW,GAAJmB,GACGZ,EAAM,CACRd,GACAjB,EAAI,GACR,KAChB,CAGY,GAFK2C,GACD3C,EAAI,GACJiD,EAAM,IACNtC,EAAIc,KAAQwB,MACX,IAAW,KAAPA,EAAY,CACjBD,EAAOxB,EAAKE,EAAK,KACjB,KAChB,CAEgB,IAAIwB,EAAMD,EAAM,IAEhB,GAAIA,EAAM,IAAK,CAEX,IAAmBrF,GAAIN,EAAnBO,EAAIoF,EAAM,KACdC,EAAMzD,EAAKgB,EAAKe,GAAM,GAAK5D,IAAK,GAAKK,EAAGJ,GACxC2D,GAAO5D,EAC3B,CAEgB,IAAI8B,GAAIiC,EAAG9B,EAAOY,EAAKe,GAAOuB,GAAMI,GAAOzD,IAAK,EAC3CA,IACDM,EAAI,GACRwB,GAAW,GAAJ9B,GACHmD,EAAK1E,EAAGgF,IACZ,GAAIA,GAAO,EAAG,CACNvF,GAAIL,EAAK4F,IACbN,GAAMhD,EAAOY,EAAKe,IAAQ,GAAK5D,IAAK,EAAG4D,GAAO5D,EAClE,CACgB,GAAI4D,EAAMO,EAAM,CACRd,GACAjB,EAAI,GACR,KACpB,CACoBgB,GACAE,EAAKO,EAAK,QACd,IAAI2B,GAAM3B,EAAKyB,EACf,GAAIzB,EAAKoB,EAAI,CACT,IAAIQ,GAjK2B,EAiKdR,EAAIS,GAAOjC,KAAKkC,IAAIV,EAAIO,IAGzC,IAFIC,GAAQ5B,EAAK,GACbzB,EAAI,GACDyB,EAAK6B,KAAQ7B,EAChBd,EAAIc,GAAMb,EAAKyC,GAAQ5B,EAC/C,CACgB,KAAOA,EAAK2B,KAAO3B,EACfd,EAAIc,GAAMd,EAAIc,EAAKoB,EACvC,CACA,CACQnC,EAAG/B,EAAI+C,EAAIhB,EAAGf,EAAIqD,EAAMtC,EAAG9C,EAAI6D,EAAIf,EAAGI,EAAIS,EACtCG,IACAH,EAAQ,EAAGb,EAAGxB,EAAI0C,EAAKlB,EAAGhB,EAAIiC,EAAIjB,EAAGoB,EAAID,EAChD,QAASN,GAEV,OAAOE,GAAMd,EAAIjC,QAAUqC,EA3OrB,SAAU9B,EAAGR,EAAG2B,GAMtB,OAHS,MAALA,GAAaA,EAAInB,EAAEP,UACnB0B,EAAInB,EAAEP,QAEH,IAAI1B,EAAGiC,EAAEiD,SAASzD,EAAG2B,GAChC,CAoOuCoD,CAAI7C,EAAK,EAAGc,GAAMd,EAAIuB,SAAS,EAAGT,EACzE,EAoOIgC,EAAmB,IAAIzG,EAAG,GAg4BvB,SAAS0G,EAAWC,EAAMC,GAC7B,OAAOpD,EAAMmD,EAAKzB,SAhgBZ,SAAUxC,GAKhB,OAJmB,IAAP,GAAPA,EAAE,KAAkBA,EAAE,IAAM,EAAK,IAAOA,EAAE,IAAM,EAAIA,EAAE,IAAM,KAC7DM,EAAI,EAAG,qBACY,IAAlBN,EAAE,IAAM,EAAI,IACbM,EAAI,EAAG,uBAAgC,GAAPN,EAAE,GAAU,OAAS,cAAgB,eAChD,GAAjBA,EAAE,IAAM,EAAI,EACxB,CA0f+BmE,CAAIF,OAAqC,CAAE9F,EAAG,GAAK+F,EAAkBA,EACpG,CAiIA,ICjnDwG3B,EAAExD,EDinDtGqF,EAA2B,oBAAfC,aAA4C,IAAIA,YAGhE,IACID,EAAGE,OAAOP,EAAI,CAAEQ,QAAQ,GAE5B,CACA,MAAO7D,GAAG,CCxnDV,SAASA,EAAEA,GAAG,OAAOA,GAAGA,EAAE8D,YAAYC,OAAOC,UAAUC,eAAeC,KAAKlE,EAAE,WAAWA,EAAEmE,QAAQnE,CAAC,CAAS,IAAIvC,EAAEiE,EAAE1B,EAAE,WAAW,GAAG3B,EAAE,OAAOwD,EAAE,SAAS7B,EAAEA,GAAG,MAAM,oBAAoBoE,aAAa,WAAW,IAAIvC,EAAE,IAAIuC,aAAa,MAAM/F,EAAE,IAAIxB,WAAWgF,EAAEwC,QAAQ5G,EAAE,MAAMY,EAAE,GAAG,SAASqD,EAAE1B,EAAEvC,EAAEiE,GAAGG,EAAE,GAAG7B,EAAEvC,EAAEiE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,EAAE,CAAC,SAASe,EAAEY,EAAEvC,EAAEiE,GAAGG,EAAE,GAAG7B,EAAEvC,EAAEiE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,EAAE,CAAC,SAASX,EAAEsC,EAAEvC,GAAG,OAAOY,EAAE,GAAG2B,EAAEvC,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGoE,EAAE,EAAE,CAAC,SAAStD,EAAEyB,EAAEvC,GAAG,OAAOY,EAAE,GAAG2B,EAAEvC,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGoE,EAAE,EAAE,CAAC7B,EAAEsE,aAAa7G,EAAEiE,EAAEtC,EAAEY,EAAEuE,aAAa9G,EAAE2B,EAAEsC,EAAE1B,EAAEwE,YAAY/G,EAAEC,EAAEa,EAAEyB,EAAEyE,YAAYhH,EAAEc,EAAEb,CAAC,CAAnc,GAAuc,WAAW,SAASmE,EAAE7B,EAAE6B,EAAExD,EAAEZ,GAAG,IAAIiE,EAAEG,EAAE,EAAE,EAAE,EAAE,GAAGH,IAAIG,GAAGA,GAAG,IAAIA,EAAE7B,EAAE,EAAE6B,EAAE,EAAE,EAAE,WAAWxD,EAAEZ,QAAQ,GAAGiH,MAAM7C,GAAG7B,EAAE,WAAW3B,EAAEZ,QAAQ,GAAGoE,EAAE,qBAAqB7B,GAAG0B,GAAG,GAAG,cAAc,EAAErD,EAAEZ,QAAQ,GAAGoE,EAAE,sBAAsB7B,GAAG0B,GAAG,GAAGT,KAAK0D,MAAM9C,EAAE,yBAAyB,EAAExD,EAAEZ,OAAO,CAAC,IAAI2B,EAAE6B,KAAK2D,MAAM3D,KAAK4D,IAAIhD,GAAGZ,KAAK6D,KAAK9E,GAAG0B,GAAG,GAAGtC,EAAE,KAAK,GAAG,QAAQ6B,KAAK0D,MAAM9C,EAAEZ,KAAK8D,IAAI,GAAG3F,GAAG,YAAY,EAAEf,EAAEZ,EAAE,CAAC,CAAC,SAASY,EAAE2B,EAAE6B,EAAExD,GAAG,IAAIZ,EAAEuC,EAAE6B,EAAExD,GAAGqD,EAAE,GAAGjE,GAAG,IAAI,EAAE2B,EAAE3B,IAAI,GAAG,IAAIC,EAAE,QAAQD,EAAE,OAAO,MAAM2B,EAAE1B,EAAEsH,IAAItD,GAAG,KAAK,IAAItC,EAAE,qBAAqBsC,EAAEhE,EAAEgE,EAAET,KAAK8D,IAAI,EAAE3F,EAAE,MAAM1B,EAAE,QAAQ,CAACsC,EAAEsE,aAAazC,EAAEoD,KAAK,KAAKxH,GAAGuC,EAAEuE,aAAa1C,EAAEoD,KAAK,KAAKvD,GAAG1B,EAAEwE,YAAYnG,EAAE4G,KAAK,KAAK7F,GAAGY,EAAEyE,YAAYpG,EAAE4G,KAAK,KAAKvH,EAAE,CAA9pB,GAAkqB,oBAAoBwH,aAAa,WAAW,IAAIrD,EAAE,IAAIqD,aAAa,MAAM7G,EAAE,IAAIxB,WAAWgF,EAAEwC,QAAQ5G,EAAE,MAAMY,EAAE,GAAG,SAASqD,EAAE1B,EAAEvC,EAAEiE,GAAGG,EAAE,GAAG7B,EAAEvC,EAAEiE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,EAAE,CAAC,SAASe,EAAEY,EAAEvC,EAAEiE,GAAGG,EAAE,GAAG7B,EAAEvC,EAAEiE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,GAAGZ,EAAEiE,EAAE,GAAGrD,EAAE,EAAE,CAAC,SAASX,EAAEsC,EAAEvC,GAAG,OAAOY,EAAE,GAAG2B,EAAEvC,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGoE,EAAE,EAAE,CAAC,SAAStD,EAAEyB,EAAEvC,GAAG,OAAOY,EAAE,GAAG2B,EAAEvC,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGY,EAAE,GAAG2B,EAAEvC,EAAE,GAAGoE,EAAE,EAAE,CAAC7B,EAAEmF,cAAc1H,EAAEiE,EAAEtC,EAAEY,EAAEoF,cAAc3H,EAAE2B,EAAEsC,EAAE1B,EAAEqF,aAAa5H,EAAEC,EAAEa,EAAEyB,EAAEsF,aAAa7H,EAAEc,EAAEb,CAAC,CAAvoB,GAA2oB,WAAW,SAASmE,EAAE7B,EAAE6B,EAAExD,EAAEZ,EAAEiE,EAAEtC,GAAG,IAAI1B,EAAED,EAAE,EAAE,EAAE,EAAE,GAAGC,IAAID,GAAGA,GAAG,IAAIA,EAAEuC,EAAE,EAAE0B,EAAEtC,EAAEyC,GAAG7B,EAAE,EAAEvC,EAAE,EAAE,EAAE,WAAWiE,EAAEtC,EAAEf,QAAQ,GAAGqG,MAAMjH,GAAGuC,EAAE,EAAE0B,EAAEtC,EAAEyC,GAAG7B,EAAE,WAAW0B,EAAEtC,EAAEf,QAAQ,GAAGZ,EAAE,sBAAsBuC,EAAE,EAAE0B,EAAEtC,EAAEyC,GAAG7B,GAAGtC,GAAG,GAAG,cAAc,EAAEgE,EAAEtC,EAAEf,OAAO,CAAC,IAAIE,EAAE,GAAGd,EAAE,uBAAuBuC,GAAGzB,EAAEd,EAAE,UAAU,EAAEiE,EAAEtC,EAAEyC,GAAG7B,GAAGtC,GAAG,GAAGa,EAAE,cAAc,EAAEmD,EAAEtC,EAAEf,OAAO,CAAC,IAAImB,EAAEyB,KAAK2D,MAAM3D,KAAK4D,IAAIpH,GAAGwD,KAAK6D,KAAK,OAAOtF,IAAIA,EAAE,MAAMQ,EAAE,kBAAkBzB,EAAEd,EAAEwD,KAAK8D,IAAI,GAAGvF,MAAM,EAAEkC,EAAEtC,EAAEyC,GAAG7B,GAAGtC,GAAG,GAAG8B,EAAE,MAAM,GAAG,QAAQjB,EAAE,WAAW,EAAEmD,EAAEtC,EAAEf,EAAE,CAAC,CAAC,CAAC,SAASA,EAAE2B,EAAE6B,EAAExD,EAAEZ,EAAEiE,GAAG,IAAItC,EAAEY,EAAEvC,EAAEiE,EAAEG,GAAGnE,EAAEsC,EAAEvC,EAAEiE,EAAErD,GAAGE,EAAE,GAAGb,GAAG,IAAI,EAAE8B,EAAE9B,IAAI,GAAG,KAAK6E,EAAE,YAAY,QAAQ7E,GAAG0B,EAAE,OAAO,OAAOI,EAAE+C,EAAEyC,IAAIzG,QAAQ,IAAIiB,EAAE,OAAOjB,EAAEgE,EAAEhE,EAAE0C,KAAK8D,IAAI,EAAEvF,EAAE,OAAO+C,EAAE,iBAAiB,CAACvC,EAAEmF,cAActD,EAAEoD,KAAK,KAAKxH,EAAE,EAAE,GAAGuC,EAAEoF,cAAcvD,EAAEoD,KAAK,KAAKvD,EAAE,EAAE,GAAG1B,EAAEqF,aAAahH,EAAE4G,KAAK,KAAK7F,EAAE,EAAE,GAAGY,EAAEsF,aAAajH,EAAE4G,KAAK,KAAKvH,EAAE,EAAE,EAAE,CAAxzB,GAA4zBsC,CAAC,CAAC,SAASvC,EAAEuC,EAAE6B,EAAExD,GAAGwD,EAAExD,GAAG,IAAI2B,EAAE6B,EAAExD,EAAE,GAAG2B,IAAI,EAAE,IAAI6B,EAAExD,EAAE,GAAG2B,IAAI,GAAG,IAAI6B,EAAExD,EAAE,GAAG2B,IAAI,EAAE,CAAC,SAAS0B,EAAE1B,EAAE6B,EAAExD,GAAGwD,EAAExD,GAAG2B,IAAI,GAAG6B,EAAExD,EAAE,GAAG2B,IAAI,GAAG,IAAI6B,EAAExD,EAAE,GAAG2B,IAAI,EAAE,IAAI6B,EAAExD,EAAE,GAAG,IAAI2B,CAAC,CAAC,SAASZ,EAAEY,EAAE6B,GAAG,OAAO7B,EAAE6B,GAAG7B,EAAE6B,EAAE,IAAI,EAAE7B,EAAE6B,EAAE,IAAI,GAAG7B,EAAE6B,EAAE,IAAI,MAAM,CAAC,CAAC,SAASnE,EAAEsC,EAAE6B,GAAG,OAAO7B,EAAE6B,IAAI,GAAG7B,EAAE6B,EAAE,IAAI,GAAG7B,EAAE6B,EAAE,IAAI,EAAE7B,EAAE6B,EAAE,MAAM,CAAC,CAAC,OAAOxD,EAAE,EAAEwD,EAAE7B,EAAEA,EAAE,CAAh9F,IAAq9FZ,EAAE,CAAE,EAAK1B,GAAGD,IAAIA,EAAE,EAAE,WAAW,IAAIuC,EAAEZ,EAAEY,EAAE1B,OAAO,SAAS0B,GAAG,IAAI,IAAI6B,EAAE,EAAExD,EAAE,EAAEZ,EAAE,EAAEA,EAAEuC,EAAE1B,SAASb,GAAGY,EAAE2B,EAAEuF,WAAW9H,IAAI,IAAIoE,GAAG,EAAExD,EAAE,KAAKwD,GAAG,EAAE,QAAQ,MAAMxD,IAAI,QAAQ,MAAM2B,EAAEuF,WAAW9H,EAAE,OAAOA,EAAEoE,GAAG,GAAGA,GAAG,EAAE,OAAOA,CAAC,EAAE7B,EAAEwF,KAAK,SAASxF,EAAE6B,EAAExD,GAAG,GAAGA,EAAEwD,EAAE,EAAE,MAAM,GAAG,IAAI,IAAIpE,EAAEiE,EAAE,KAAKtC,EAAE,GAAG1B,EAAE,EAAEmE,EAAExD,IAAIZ,EAAEuC,EAAE6B,MAAM,IAAIzC,EAAE1B,KAAKD,EAAEA,EAAE,KAAKA,EAAE,IAAI2B,EAAE1B,MAAM,GAAGD,IAAI,EAAE,GAAGuC,EAAE6B,KAAKpE,EAAE,KAAKA,EAAE,KAAKA,IAAI,EAAEA,IAAI,IAAI,GAAGuC,EAAE6B,OAAO,IAAI,GAAG7B,EAAE6B,OAAO,EAAE,GAAG7B,EAAE6B,MAAM,MAAMzC,EAAE1B,KAAK,OAAOD,GAAG,IAAI2B,EAAE1B,KAAK,OAAO,KAAKD,IAAI2B,EAAE1B,MAAM,GAAGD,IAAI,IAAI,GAAGuC,EAAE6B,OAAO,EAAE,GAAG7B,EAAE6B,KAAKnE,EAAE,QAAQgE,IAAIA,EAAE,KAAK+D,KAAKC,OAAOC,aAAaC,MAAMF,OAAOtG,IAAI1B,EAAE,GAAG,OAAOgE,GAAGhE,GAAGgE,EAAE+D,KAAKC,OAAOC,aAAaC,MAAMF,OAAOtG,EAAEyG,MAAM,EAAEnI,KAAKgE,EAAEoE,KAAK,KAAKJ,OAAOC,aAAaC,MAAMF,OAAOtG,EAAEyG,MAAM,EAAEnI,GAAG,EAAEsC,EAAE+F,MAAM,SAAS/F,EAAE6B,EAAExD,GAAG,IAAI,IAAIZ,EAAEiE,EAAEtC,EAAEf,EAAEX,EAAE,EAAEA,EAAEsC,EAAE1B,SAASZ,GAAGD,EAAEuC,EAAEuF,WAAW7H,IAAI,IAAImE,EAAExD,KAAKZ,EAAEA,EAAE,MAAMoE,EAAExD,KAAKZ,GAAG,EAAE,IAAIoE,EAAExD,KAAK,GAAGZ,EAAE,KAAK,QAAQ,MAAMA,IAAI,QAAQ,OAAOiE,EAAE1B,EAAEuF,WAAW7H,EAAE,MAAMD,EAAE,QAAQ,KAAKA,IAAI,KAAK,KAAKiE,KAAKhE,EAAEmE,EAAExD,KAAKZ,GAAG,GAAG,IAAIoE,EAAExD,KAAKZ,GAAG,GAAG,GAAG,IAAIoE,EAAExD,KAAKZ,GAAG,EAAE,GAAG,IAAIoE,EAAExD,KAAK,GAAGZ,EAAE,MAAMoE,EAAExD,KAAKZ,GAAG,GAAG,IAAIoE,EAAExD,KAAKZ,GAAG,EAAE,GAAG,IAAIoE,EAAExD,KAAK,GAAGZ,EAAE,KAAK,OAAOY,EAAEe,CAAC,CAAC,CAA1hC,IAA+hCA,GAAGb,EAAEyB,EAAEtC,GAAG,MAAM8B,EAAE,aAAOwG,CAAOhG,GAAG,GAAGA,aAAanD,WAAW,OAAO,IAAI2C,EAAEQ,GAAG,MAAMC,MAAM,iBAAiB,CAACM,IAAIa,IAAI6E,IAAI,WAAAC,CAAYlG,GAAGmG,KAAK5F,IAAIP,EAAEmG,KAAK/E,IAAI,EAAE+E,KAAKF,IAAIjG,EAAE1B,MAAM,CAAC,KAAAuH,CAAM7F,EAAE6B,EAAExD,GAAG,OAAO2B,EAAE8B,SAASD,EAAExD,EAAE,CAAC,eAAA+H,CAAgBpG,EAAE6B,GAAG,OAAOwE,WAAW,uBAAuBrG,EAAEoB,IAAI,OAAOS,GAAG,GAAG,MAAM7B,EAAEiG,IAAI,CAAC,MAAAK,GAAS,IAAItG,EAAE,WAAW,GAAGA,GAAG,IAAImG,KAAK5F,IAAI4F,KAAK/E,QAAQ,EAAE+E,KAAK5F,IAAI4F,KAAK/E,OAAO,IAAI,OAAOpB,EAAE,GAAGA,GAAGA,GAAG,IAAImG,KAAK5F,IAAI4F,KAAK/E,OAAO,KAAK,EAAE+E,KAAK5F,IAAI4F,KAAK/E,OAAO,IAAI,OAAOpB,EAAE,GAAGA,GAAGA,GAAG,IAAImG,KAAK5F,IAAI4F,KAAK/E,OAAO,MAAM,EAAE+E,KAAK5F,IAAI4F,KAAK/E,OAAO,IAAI,OAAOpB,EAAE,GAAGA,GAAGA,GAAG,IAAImG,KAAK5F,IAAI4F,KAAK/E,OAAO,MAAM,EAAE+E,KAAK5F,IAAI4F,KAAK/E,OAAO,IAAI,OAAOpB,EAAE,GAAGA,GAAGA,GAAG,GAAGmG,KAAK5F,IAAI4F,KAAK/E,OAAO,MAAM,EAAE+E,KAAK5F,IAAI4F,KAAK/E,OAAO,IAAI,OAAOpB,EAAE,IAAImG,KAAK/E,KAAK,GAAG+E,KAAKF,IAAI,MAAME,KAAK/E,IAAI+E,KAAKF,IAAIE,KAAKC,gBAAgBD,KAAK,IAAI,OAAOnG,CAAC,CAAC,KAAAuG,GAAQ,OAAO,EAAEJ,KAAKG,QAAQ,CAAC,KAAAE,GAAQ,GAAGL,KAAK/E,IAAI,EAAE+E,KAAKF,IAAI,MAAME,KAAKC,gBAAgBD,KAAK,GAAG,MAAMnG,EAAE0B,EAAE8C,YAAY2B,KAAK5F,IAAI4F,KAAK/E,KAAK,OAAO+E,KAAK/E,KAAK,EAAEpB,CAAC,CAAC,KAAAyG,GAAQ,MAAMzG,EAAEmG,KAAKG,SAASzE,EAAEsE,KAAK/E,IAAI/C,EAAE8H,KAAK/E,IAAIpB,EAAE,GAAG3B,EAAE8H,KAAKF,IAAI,MAAME,KAAKC,gBAAgBD,KAAKnG,GAAG,OAAOmG,KAAK/E,KAAKpB,EAAE6B,IAAIxD,EAAE,IAAIxB,WAAW,GAAGsJ,KAAKN,MAAMM,KAAK5F,IAAIsB,EAAExD,EAAE,CAAC,MAAAqI,GAAS,MAAM1G,EAAEmG,KAAKM,QAAQ,OAAOlI,EAAEiH,KAAKxF,EAAE,EAAEA,EAAE1B,OAAO,CAAC,IAAAqI,CAAK3G,GAAG,GAAG,iBAAiBA,EAAE,CAAC,GAAGmG,KAAK/E,IAAIpB,EAAEmG,KAAKF,IAAI,MAAME,KAAKC,gBAAgBD,KAAKnG,GAAGmG,KAAK/E,KAAKpB,CAAC,MAAM,GAAG,GAAGmG,KAAK/E,KAAK+E,KAAKF,IAAI,MAAME,KAAKC,gBAAgBD,YAAY,IAAIA,KAAK5F,IAAI4F,KAAK/E,QAAQ,OAAO+E,IAAI,CAAC,QAAAS,CAAS5G,GAAG,OAAOA,GAAG,KAAK,EAAEmG,KAAKQ,OAAO,MAAM,KAAK,EAAER,KAAKQ,KAAK,GAAG,MAAM,KAAK,EAAER,KAAKQ,KAAKR,KAAKG,UAAU,MAAM,KAAK,EAAE,KAAK,IAAItG,EAAE,EAAEmG,KAAKG,WAAWH,KAAKS,SAAS5G,GAAG,MAAM,KAAK,EAAEmG,KAAKQ,KAAK,GAAG,MAAM,QAAQ,MAAM1G,MAAM,qBAAqBD,EAAE,cAAcmG,KAAK/E,KAAK,OAAO+E,IAAI,EAAE,MAAM5D,EAAE,aAAOqB,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAIqJ,EAAE,KAAK9G,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEQ,EAAE+B,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEsJ,EAAE/G,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEuJ,MAAMhH,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEwJ,OAAOjH,EAAEwG,QAAQ,MAAM,QAAQxG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMQ,EAAE,aAAOd,CAAOhG,GAAG,OAAO,IAAI8G,EAAE9G,EAAE,CAAC/B,EAAE,EAAE8I,EAAE,EAAEC,MAAM,EAAEC,OAAO,EAAE,WAAAf,CAAYlG,GAAGA,IAAI,MAAMA,EAAE/B,IAAIkI,KAAKlI,EAAE+B,EAAE/B,GAAG,MAAM+B,EAAE+G,IAAIZ,KAAKY,EAAE/G,EAAE+G,GAAG,MAAM/G,EAAEgH,QAAQb,KAAKa,MAAMhH,EAAEgH,OAAO,MAAMhH,EAAEiH,SAASd,KAAKc,OAAOjH,EAAEiH,QAAQ,EAAE,MAAME,EAAE,aAAOvD,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,IAAI3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAI6B,EAAE,KAAKU,EAAEoB,IAAI/C,GAAG,CAAC,IAAIwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAE2B,EAAEY,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAED,EAAEwC,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE8E,EAAEvC,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE6B,EAAEU,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE2J,GAAGpH,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE4J,GAAGrH,EAAEwG,QAAQ,MAAM,QAAQxG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMhH,EAAE,aAAO0G,CAAOhG,GAAG,OAAO,IAAIV,EAAEU,EAAE,CAACZ,EAAE,EAAE5B,EAAE,EAAE+E,EAAE,EAAEjD,EAAE,EAAE8H,GAAG,EAAEC,GAAG,EAAE,WAAAnB,CAAYlG,GAAGA,IAAI,MAAMA,EAAEZ,IAAI+G,KAAK/G,EAAEY,EAAEZ,GAAG,MAAMY,EAAExC,IAAI2I,KAAK3I,EAAEwC,EAAExC,GAAG,MAAMwC,EAAEuC,IAAI4D,KAAK5D,EAAEvC,EAAEuC,GAAG,MAAMvC,EAAEV,IAAI6G,KAAK7G,EAAEU,EAAEV,GAAG,MAAMU,EAAEoH,KAAKjB,KAAKiB,GAAGpH,EAAEoH,IAAI,MAAMpH,EAAEqH,KAAKlB,KAAKkB,GAAGrH,EAAEqH,IAAI,EAAE,MAAM3G,EAAE,aAAOkD,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAI8B,EAAE,KAAKS,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAYzE,IAAI,GAAG,EAAEpE,EAAE6B,EAAEU,EAAE0G,SAAc1G,EAAE4G,SAAS,EAAE/E,EAAE,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAC,IAAAgB,EAAC,MAAM/H,EAAE,aAAOyG,CAAOhG,GAAG,OAAO,IAAIT,EAAES,EAAE,CAACV,EAAE,GAAG,WAAA4G,CAAYlG,GAAGA,GAAG,MAAMA,EAAEV,IAAI6G,KAAK7G,EAAEU,EAAEV,EAAE,GAAE,MAAM9B,EAAE,aAAOoG,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAI8J,EAAE,KAAKvH,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEQ,EAAE+B,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEsJ,EAAE/G,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEuJ,MAAMhH,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEwJ,OAAOjH,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE+J,aAAaxH,EAAEwG,QAAQ,MAAM,QAAQxG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMiB,EAAE,aAAOvB,CAAOhG,GAAG,OAAO,IAAIuH,EAAEvH,EAAE,CAAC/B,EAAE,EAAE8I,EAAE,EAAEC,MAAM,EAAEC,OAAO,EAAEO,aAAa,EAAE,WAAAtB,CAAYlG,GAAGA,IAAI,MAAMA,EAAE/B,IAAIkI,KAAKlI,EAAE+B,EAAE/B,GAAG,MAAM+B,EAAE+G,IAAIZ,KAAKY,EAAE/G,EAAE+G,GAAG,MAAM/G,EAAEgH,QAAQb,KAAKa,MAAMhH,EAAEgH,OAAO,MAAMhH,EAAEiH,SAASd,KAAKc,OAAOjH,EAAEiH,QAAQ,MAAMjH,EAAEwH,eAAerB,KAAKqB,aAAaxH,EAAEwH,cAAc,EAAE,MAAMC,EAAE,aAAO7D,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAIsJ,EAAE,KAAK/G,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEQ,EAAE+B,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEsJ,EAAE/G,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEiK,QAAQ1H,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEkK,QAAQ3H,EAAEwG,QAAQ,MAAM,QAAQxG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMS,EAAE,aAAOf,CAAOhG,GAAG,OAAO,IAAI+G,EAAE/G,EAAE,CAAC/B,EAAE,EAAE8I,EAAE,EAAEW,QAAQ,EAAEC,QAAQ,EAAE,WAAAzB,CAAYlG,GAAGA,IAAI,MAAMA,EAAE/B,IAAIkI,KAAKlI,EAAE+B,EAAE/B,GAAG,MAAM+B,EAAE+G,IAAIZ,KAAKY,EAAE/G,EAAE+G,GAAG,MAAM/G,EAAE0H,UAAUvB,KAAKuB,QAAQ1H,EAAE0H,SAAS,MAAM1H,EAAE2H,UAAUxB,KAAKwB,QAAQ3H,EAAE2H,SAAS,EAAE,MAAM7I,EAAE,aAAO8E,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAImK,EAAE,KAAK5H,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEC,EAAEsC,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEmK,EAAE5H,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAED,EAAEwC,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE2B,EAAEY,EAAEwG,QAAQ,MAAM,QAAQxG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMsB,EAAE,aAAO5B,CAAOhG,GAAG,OAAO,IAAI4H,EAAE5H,EAAE,CAACtC,EAAE,EAAEkK,EAAE,EAAEpK,EAAE,EAAE4B,EAAE,EAAE,WAAA8G,CAAYlG,GAAGA,IAAI,MAAMA,EAAEtC,IAAIyI,KAAKzI,EAAEsC,EAAEtC,GAAG,MAAMsC,EAAE4H,IAAIzB,KAAKyB,EAAE5H,EAAE4H,GAAG,MAAM5H,EAAExC,IAAI2I,KAAK3I,EAAEwC,EAAExC,GAAG,MAAMwC,EAAEZ,IAAI+G,KAAK/G,EAAEY,EAAEZ,GAAG,EAAE,MAAMP,EAAE,aAAO+E,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAIQ,EAAE,KAAK+B,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEoK,KAAK/I,EAAE8E,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,EAAE7I,EAAEqK,OAAOhJ,EAAE8E,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,EAAE7I,EAAEsK,YAAY/H,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEuK,QAAQhI,EAAEuG,QAAQ,MAAM,KAAK,EAAE9I,EAAEwK,SAASjI,EAAEuG,QAAQ,MAAM,KAAK,EAAE9I,EAAEyK,WAAWlI,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE0K,UAAUnI,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE2K,WAAWpI,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE4K,YAAYrI,EAAEwG,QAAQ,MAAM,QAAQxG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMrI,EAAE,aAAO+H,CAAOhG,GAAG,OAAO,IAAI/B,EAAE+B,EAAE,CAAC6H,KAAK,KAAKC,OAAO,KAAKC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAEC,YAAY,EAAE,WAAAnC,CAAYlG,GAAGA,IAAI,MAAMA,EAAE6H,OAAO1B,KAAK0B,KAAK7H,EAAE6H,MAAM,MAAM7H,EAAEgI,UAAU7B,KAAK6B,QAAQhI,EAAEgI,SAAS,MAAMhI,EAAEmI,YAAYhC,KAAKgC,UAAUnI,EAAEmI,WAAW,MAAMnI,EAAEoI,aAAajC,KAAKiC,WAAWpI,EAAEoI,YAAY,MAAMpI,EAAEqI,cAAclC,KAAKkC,YAAYrI,EAAEqI,aAAa,MAAMrI,EAAEiI,WAAW9B,KAAK8B,SAASjI,EAAEiI,UAAU,MAAMjI,EAAEkI,aAAa/B,KAAK+B,WAAWlI,EAAEkI,YAAY,MAAMlI,EAAE8H,SAAS3B,KAAK2B,OAAO9H,EAAE8H,QAAQ,MAAM9H,EAAE+H,cAAc5B,KAAK4B,YAAY/H,EAAE+H,aAAa,EAAE,MAAMO,EAAE,aAAO1E,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAI8K,EAAE,KAAKvI,EAAEoB,IAAI/C,GAAG,CAAC,IAAIwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEmE,KAAK5B,EAAEuG,QAAQ,MAAM,KAAK,EAAE9I,EAAE+K,MAAM9H,EAAEkD,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,EAAE7I,EAAEgL,KAAKjL,EAAEoG,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,EAAE7I,EAAEiL,QAAQjB,EAAE7D,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,GAAG7I,EAAEkL,OAAO9J,EAAE+E,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,GAAG7I,EAAEmL,UAAUzB,EAAEvD,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,QAAQtG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMiC,EAAE,aAAOvC,CAAOhG,GAAG,OAAO,IAAIuI,EAAEvI,EAAE,CAAC4B,KAAK,EAAE4G,MAAM,KAAKC,KAAK,KAAKC,QAAQ,KAAKC,OAAO,KAAKC,UAAU,KAAKC,aAAa,CAAC,QAAQ,OAAO,WAAWC,UAAU,CAAE,EAAC,QAAIC,GAAO,MAAM/I,EAAE+D,OAAOiF,KAAK7C,MAAM,IAAI,IAAItE,EAAE7B,EAAE1B,OAAO,EAAEuD,GAAI,IAAGA,EAAE,CAAC,MAAMxD,EAAE2B,EAAE6B,GAAGpE,EAAE0I,KAAK9H,GAAG,GAAG,IAAI8H,KAAK2C,UAAUzK,IAAI,MAAMZ,EAAE,OAAOY,CAAC,CAAC,MAAM,EAAE,CAAC,QAAI0K,CAAK/I,GAAG,IAAI,IAAI6B,EAAE,EAAEA,EAAEsE,KAAK0C,aAAavK,SAASuD,EAAE,CAAC,MAAMxD,EAAE8H,KAAK0C,aAAahH,GAAGxD,IAAI2B,UAAUmG,KAAK9H,EAAE,CAAC,CAAC,WAAA6H,CAAYlG,GAAGA,IAAI,MAAMA,EAAE4B,OAAOuE,KAAKvE,KAAK5B,EAAE4B,MAAM,MAAM5B,EAAE0I,UAAUvC,KAAKuC,QAAQ1I,EAAE0I,SAAS,MAAM1I,EAAEyI,OAAOtC,KAAKsC,KAAKzI,EAAEyI,MAAM,MAAMzI,EAAEwI,QAAQrC,KAAKqC,MAAMxI,EAAEwI,OAAO,MAAMxI,EAAE2I,SAASxC,KAAKwC,OAAO3I,EAAE2I,QAAQ,MAAM3I,EAAE4I,YAAYzC,KAAKyC,UAAU5I,EAAE4I,YAAY,IAAI,IAAI/G,EAAE,EAAEA,EAAEsE,KAAK0C,aAAavK,SAASuD,EAAEsE,KAAK2C,UAAU3C,KAAK0C,aAAahH,IAAI,CAAC,EAAE,MAAMoH,GAAE,aAAOrF,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAIyL,GAAE,KAAKlJ,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAE0L,MAAMnJ,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAE2L,OAAO7G,EAAEqB,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,EAAE7I,EAAEmL,UAAUzB,EAAEvD,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,EAAE7I,EAAE4L,SAASrJ,EAAE0G,SAAS,MAAM,KAAK,EAAEjJ,EAAE6L,QAAQ7L,EAAE6L,OAAOhL,SAASb,EAAE6L,OAAO,IAAI7L,EAAE6L,OAAO7D,KAAK6C,EAAE1E,OAAO5D,EAAEA,EAAEsG,WAAW,MAAM,QAAQtG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAM4C,GAAE,aAAOlD,CAAOhG,GAAG,OAAO,IAAIkJ,GAAElJ,EAAE,CAACsJ,OAAO,GAAGH,MAAM,EAAEC,OAAO,KAAKR,UAAU,KAAKS,SAAS,GAAG,WAAAnD,CAAYlG,GAAGA,IAAI,MAAMA,EAAEmJ,QAAQhD,KAAKgD,MAAMnJ,EAAEmJ,OAAO,MAAMnJ,EAAEqJ,WAAWlD,KAAKkD,SAASrJ,EAAEqJ,UAAU,MAAMrJ,EAAEoJ,SAASjD,KAAKiD,OAAOpJ,EAAEoJ,QAAQ,MAAMpJ,EAAEsJ,SAASnD,KAAKmD,OAAOtJ,EAAEsJ,QAAQ,MAAMtJ,EAAE4I,YAAYzC,KAAKyC,UAAU5I,EAAE4I,WAAW,EAAE,MAAMW,GAAE,aAAO3F,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAI+L,GAAE,KAAKxJ,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEgM,SAASzJ,EAAE0G,SAAS,MAAM,KAAK,EAAEjJ,EAAEiM,QAAQjM,EAAEiM,OAAOpL,SAASb,EAAEiM,OAAO,IAAIjM,EAAEiM,OAAOjE,KAAKwD,GAAErF,OAAO5D,EAAEA,EAAEsG,WAAW,MAAM,KAAK,EAAE7I,EAAEkM,SAAS3J,EAAE0G,SAAS,MAAM,QAAQ1G,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMkD,GAAE,aAAOxD,CAAOhG,GAAG,OAAO,IAAIwJ,GAAExJ,EAAE,CAAC0J,OAAO,GAAGD,SAAS,GAAGE,SAAS,GAAG,WAAAzD,CAAYlG,GAAGA,IAAI,MAAMA,EAAE0J,SAASvD,KAAKuD,OAAO1J,EAAE0J,QAAQ,MAAM1J,EAAEyJ,WAAWtD,KAAKsD,SAASzJ,EAAEyJ,UAAU,MAAMzJ,EAAE2J,WAAWxD,KAAKwD,SAAS3J,EAAE2J,UAAU,EAAE,MAAMC,GAAE,aAAOhG,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,IAAI3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAIoM,GAAE,KAAK7J,EAAEoB,IAAI/C,GAAG,CAAC,IAAIwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAEqM,aAAa9J,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEsM,cAAc/J,EAAEwG,QAAQ,MAAM,KAAK,EAAE/I,EAAEuM,IAAIhK,EAAEuG,QAAQ,MAAM,KAAK,EAAE9I,EAAEiM,OAAO1J,EAAEuG,QAAQ,MAAM,QAAQvG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAMuD,GAAE,aAAO7D,CAAOhG,GAAG,OAAO,IAAI6J,GAAE7J,EAAE,CAAC8J,aAAa,EAAEC,cAAc,EAAEC,IAAI,EAAEN,OAAO,EAAE,WAAAxD,CAAYlG,GAAGA,IAAI,MAAMA,EAAE8J,eAAe3D,KAAK2D,aAAa9J,EAAE8J,cAAc,MAAM9J,EAAE+J,gBAAgB5D,KAAK4D,cAAc/J,EAAE+J,eAAe,MAAM/J,EAAEgK,MAAM7D,KAAK6D,IAAIhK,EAAEgK,KAAK,MAAMhK,EAAE0J,SAASvD,KAAKuD,OAAO1J,EAAE0J,QAAQ,EAAE,MAAMO,GAAElG,OAAOmG,OAAO,IAAI,MAAMC,GAAE,aAAOvG,CAAO5D,EAAE6B,GAAG7B,aAAaR,IAAIQ,EAAER,EAAEwG,OAAOhG,IAAI,MAAM3B,OAAEwI,IAAShF,EAAE7B,EAAEiG,IAAIjG,EAAEoB,IAAIS,EAAEpE,EAAE,IAAI2M,GAAE,IAAI1I,EAAEtC,EAAE,KAAKY,EAAEoB,IAAI/C,GAAG,CAAC,MAAMwD,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEpE,EAAE4M,QAAQrK,EAAE0G,SAAS,MAAM,KAAK,EAAEjJ,EAAE6M,OAAOV,GAAEhG,OAAO5D,EAAEA,EAAEsG,UAAU,MAAM,KAAK,EAAE,CAAC7I,EAAE8M,SAASN,KAAIxM,EAAE8M,OAAO,CAAA,GAAI,MAAM1I,EAAE7B,EAAEsG,SAAStG,EAAEoB,IAAI,IAAIM,EAAE,GAAGtC,EAAE,GAAGY,EAAEoB,IAAIS,GAAG,CAAC,IAAIA,EAAE7B,EAAEsG,SAAS,OAAOzE,IAAI,GAAG,KAAK,EAAEH,EAAE1B,EAAE0G,SAAS,MAAM,KAAK,EAAEtH,EAAEY,EAAEyG,QAAQ,MAAM,QAAQzG,EAAE4G,SAAS,EAAE/E,GAAG,CAACpE,EAAE8M,OAAO7I,GAAGtC,EAAE,KAAK,CAAC,KAAK,EAAE3B,EAAE+M,SAAS/M,EAAE+M,QAAQlM,SAASb,EAAE+M,QAAQ,IAAI/M,EAAE+M,QAAQ/E,KAAK8D,GAAE3F,OAAO5D,EAAEA,EAAEsG,WAAW,MAAM,QAAQtG,EAAE4G,SAAS,EAAE/E,GAAG,CAAC,OAAOpE,CAAC,CAAC,sBAAOyJ,CAAgBlH,GAAG,OAAOA,aAAaR,IAAIQ,EAAE,IAAIR,EAAEQ,IAAImG,KAAKvC,OAAO5D,EAAEA,EAAEsG,SAAS,EAAE,MAAM8D,GAAE,aAAOpE,CAAOhG,GAAG,OAAO,IAAIoK,GAAEpK,EAAE,CAACqK,QAAQ,GAAGC,OAAO,KAAKC,OAAON,GAAEO,QAAQ,GAAG,WAAAtE,CAAYlG,GAAGA,IAAI,MAAMA,EAAEqK,UAAUlE,KAAKkE,QAAQrK,EAAEqK,SAAS,MAAMrK,EAAEuK,SAASpE,KAAKoE,OAAOvK,EAAEuK,QAAQ,MAAMvK,EAAEsK,SAASnE,KAAKmE,OAAOtK,EAAEsK,QAAQ,MAAMtK,EAAEwK,UAAUrE,KAAKqE,QAAQxK,EAAEwK,SAAS,ECI1qd,MAAMC,GACH,EADGA,GAEH,EAFGA,GAGH,EAHGA,GAIP,EAGN,IAAIC,GAGJ,GAAsB,oBAAXC,OACTD,GAAMD,QACD,GAAkB,oBAAPG,GAChBF,GAAMD,QACD,GAAkB,oBAAPI,GAChBH,GAAMD,OACD,IAAkB,oBAAPK,GAGhB,MAAM,IAAI7K,MAAM,mBAFhByK,GAAMD,EAGR,CCtBA,IAAIM,GAAU,KAEVL,KAAQD,GACVM,GAAKJ,OACID,KAAQD,GACjBM,GAAKF,GACIH,KAAQD,GACjBM,GAAKH,GACIF,KAAQD,KACjBM,GAAKD,ICVP,MAAME,GAAY,CAEhBzM,EAAG,CAA6B,EAChCsD,EAAG,CAA4B,EAC/B,SAAAoJ,CAAUC,QACmBrE,IAAvBmE,GAAUnJ,EAAEqJ,KACdF,GAAUnJ,EAAEqJ,GAAS,GAGvBF,GAAUnJ,EAAEqJ,IACb,EACDC,SAASD,GACAF,GAAUnJ,EAAEqJ,IAAU,EAE/B,IAAAE,CAAKF,GACHG,QAAQD,OAAOF,EAChB,EACD,OAAAI,CAAQJ,GACNG,QAAQC,UAAUJ,EACnB,EACD,SAAAK,CAAUL,UACDF,GAAUnJ,EAAEqJ,EACpB,EACDM,OAAON,KACIF,GAAUzM,EAAE2M,GAEvB,IAAAO,CAAKP,GACHF,GAAUzM,EAAE2M,IAAS,CACtB,EACD,MAAAQ,CAAOR,UACEF,GAAUzM,EAAE2M,EACpB,GAGH,IAAeS,GAAA,CACbC,MAAO,GACP,KAAAV,CAAMA,GACJG,QAAQxG,IAAIqG,EACb,EACD,IAAAE,CACEF,EACAW,EACAC,EACAC,GAEAf,GAAUC,UAAUC,GAEpB,MAAMU,EAAQZ,GAAUG,SAASD,GAC7BF,GAAUQ,OAAON,IAA0B,IAAf/E,KAAKyF,OAAeA,EAAQzF,KAAKyF,MAC/DC,EAASD,IAETE,IAAiBF,GACjBZ,GAAUI,KAAKF,GACfW,EAASD,GACTZ,GAAUM,QAAQJ,GAClBa,IAAgBH,GAEnB,EACD,SAAAL,CAAUL,GACRF,GAAUO,UAAUL,EACrB,EACD,QAAAc,CAASd,GACPF,GAAUS,KAAKP,EAChB,EACD,UAAAe,CAAWf,GACTF,GAAUU,OAAOR,EAClB,EACD,IAAAgB,CAAKC,EAAe,IAClBd,QAAQxG,IAAI,IAAIuH,OAAOD,GACxB,EACD,GAAAtH,IAAOwH,GACLhB,QAAQxG,IAAI,iBAAkBwH,EAC/B,GCrEH,MAAMC,eAAEA,IACN5B,KAAQD,GACJ,CAAA,EACAC,KAAQD,GAERG,GAAG2B,iBAAiBC,OACpBzB,GAAG0B,ICgCe,SAAAC,GAASC,GAE/B,MAAI,gBAAgBC,KAAKD,GAnC3B,SAAwBA,GAEtB,OAAIjC,KAAQD,GACHoC,MAAMF,GAAKG,MAAMC,IACtB,GAAIA,EAASC,GACX,OAAOD,EAASE,cAEhB,MAAM,IAAIhN,MACR,sBAAsB8M,EAASG,sBAAsBH,EAASI,iBAO/D,IAAIC,SAAQ,CAACC,EAASC,KAC3BvC,GAAGwC,QAAQ,CACTZ,MAEAa,SAAU,cACVC,aAAc,cACdC,aAAa,EACbC,QAAUC,GAAaP,EAAQO,EAAIrK,MACnCsK,KAAMP,GACN,GAEN,CAUWQ,CAAenB,GAIpBjC,KAAQD,GDsCR,SAAmBsD,GACvB,MAAMC,EAAKjD,GAAGkD,uBAEd,OAAO,IAAIb,SAAQ,CAACC,EAASC,KAC3BU,EAAGE,OAAO,CACRC,KAAMJ,EACN,OAAAJ,GACEK,EAAGI,SAAS,CACVL,WACAJ,QAAUC,GAAaP,EAAQO,EAAIrK,MACnCsK,KAAMP,GAET,EACDO,KAAMP,GACN,GAEN,CCrDWc,CAASzB,GAGXS,QAAQC,QAAQ,KACzB,OCrCagB,GAIJhE,QAIAiE,SAIAnC,KAAO,CAAEnF,MAAO,EAAGC,OAAQ,GAI3B+C,IAAc,GAIdN,OAAiB,EAIjBa,OAAoB,CAAE,EAItBgE,gBAAmC,CAAE,EAIrCC,gBAAmC,CAAE,EAIrChE,QAAyB,GAEhC,WAAAtE,CAAYuI,EAAoBH,GAC9B,MAAMxE,aAAEA,EAAYC,cAAEA,EAAaC,IAAEA,EAAGN,OAAEA,GAAW+E,EAAMnE,OAE3DnE,KAAKkE,QAAUoE,EAAMpE,QACrBlE,KAAKmI,SAAWA,EAChBnI,KAAKgG,KAAKnF,MAAQ8C,EAClB3D,KAAKgG,KAAKlF,OAAS8C,EACnB5D,KAAK6D,IAAMA,EACX7D,KAAKuD,OAASA,EACdvD,KAAKoE,OAASkE,EAAMlE,QAAU,CAAE,EAChCpE,KAAKqE,QAAUrE,KAAKuI,cAAcD,EAAMjE,SAAW,IAQ7C,aAAAkE,CAAcC,GACpB,OAAOA,EAASC,KAAKC,IAAa,CAChCpF,SAAUoF,EAAQpF,SAClBC,OAAQvD,KAAK2I,aAAaD,EAAQnF,QAAU,QASxC,YAAAoF,CAAaC,GACnB,IAAIC,EAEJ,OAAOD,EAAQH,KAAKK,IAClB,MAAQ7F,OAAQ8F,EAAItG,UAAWuG,EAAIhG,MAAOiG,GAAOH,EAE3CrF,EAAI,CACR3L,EAAIiR,GAAIjR,EAAK,GAAO,EACpB8I,EAAImI,GAAInI,EAAK,GAAO,EACpBC,MAAQkI,GAAIlI,MAAS,GAAO,EAC5BC,OAASiI,GAAIjI,OAAU,GAAO,GAI1BkD,EAAI,CACR/K,EAAG+P,GAAI/P,GAAK,EACZ5B,EAAG2R,GAAI3R,GAAK,EACZ+E,EAAG4M,GAAI5M,GAAK,EACZjD,EAAG6P,GAAI7P,GAAK,EACZ8H,GAAI+H,GAAI/H,IAAM,EACdC,GAAI8H,GAAI9H,IAAM,GAGhB,IAAIiC,EAA2BnD,KAAKkJ,aAAaJ,EAAO3F,QAAU,IAEnC,IAA3B2F,EAAO3F,OAAO,IAAI1H,MAAcoN,EAClC1F,EAAS0F,EAETA,EAAa1F,EAGf,MAAMgG,EAAMnF,EAAE/K,EAAIwK,EAAE3L,EAAIkM,EAAE5H,EAAIqH,EAAE7C,EAAIoD,EAAE/C,GAChCmI,EAAMpF,EAAE/K,GAAKwK,EAAE3L,EAAI2L,EAAE5C,OAASmD,EAAE5H,EAAIqH,EAAE7C,EAAIoD,EAAE/C,GAC5CoI,EAAMrF,EAAE/K,EAAIwK,EAAE3L,EAAIkM,EAAE5H,GAAKqH,EAAE7C,EAAI6C,EAAE3C,QAAUkD,EAAE/C,GAC7CqI,EAAMtF,EAAE/K,GAAKwK,EAAE3L,EAAI2L,EAAE5C,OAASmD,EAAE5H,GAAKqH,EAAE7C,EAAI6C,EAAE3C,QAAUkD,EAAE/C,GACzDsI,EAAMvF,EAAE3M,EAAIoM,EAAE3L,EAAIkM,EAAE7K,EAAIsK,EAAE7C,EAAIoD,EAAE9C,GAChCsI,EAAMxF,EAAE3M,GAAKoM,EAAE3L,EAAI2L,EAAE5C,OAASmD,EAAE7K,EAAIsK,EAAE7C,EAAIoD,EAAE9C,GAC5CuI,EAAMzF,EAAE3M,EAAIoM,EAAE3L,EAAIkM,EAAE7K,GAAKsK,EAAE7C,EAAI6C,EAAE3C,QAAUkD,EAAE9C,GAC7CwI,EAAM1F,EAAE3M,GAAKoM,EAAE3L,EAAI2L,EAAE5C,OAASmD,EAAE7K,GAAKsK,EAAE7C,EAAI6C,EAAE3C,QAAUkD,EAAE9C,GACzDyI,EAAM7O,KAAKkC,IAAIqM,EAAKC,EAAKH,EAAKC,GAAO,GAAO,EAC5CQ,EAAM9O,KAAKkC,IAAIyM,EAAKC,EAAKH,EAAKC,GAAO,GAAO,EAE5CK,EAAKf,EAAO5F,UAAY,GAkB9B,MAAO,CACLF,MAAOiG,GAAM,EACbhG,OAAQQ,EACRhB,UAAWuB,EACXd,SAAU2G,EACV1G,SACAwG,KACAC,KACAE,SAxBAD,EAAG1R,OAAS,EACR,CACEgB,EAAG0Q,EACHpH,eAAW/B,EACX8B,OAAQ,CACNd,KAAM,mBACNC,OAAQ,KACRC,YAAa,KACbC,QAAS,KACTC,SAAU,KACVC,WAAY,KACZgI,SAAU,OAGd,KAWL,IASG,YAAAb,CAAac,GACnB,MAAM7G,EAA2B,GAEjC,IAAK,IAAI8G,KAAUD,EAAS,CAC1B,MAAME,EAAUD,EAAOzH,OAEvB,GAAgB,OAAZ0H,EACF,SAGF,MAAMH,EAAqB,IACnB/H,UAAWmI,EAAKlI,WAAYmI,EAAKlI,YAAamI,GAAQH,EAC1DC,EAAM,GACRJ,EAASzK,KAAK6K,GAGZC,EAAM,IACJL,EAAS5R,OAAS,GACpB4R,EAASzK,KAAK,GAEhByK,EAASzK,KAAK8K,IAGZC,EAAM,IACJN,EAAS5R,OAAS,IACpB4R,EAASzK,KAAK,GACdyK,EAASzK,KAAK,IAEhByK,EAAS,GAAKM,GAGhB,IAAIxI,EAAgC,KACpC,OAAQqI,EAAQrI,SACd,KAAK,EACHA,EAAU,OACV,MACF,KAAK,EACHA,EAAU,QACV,MACF,KAAK,EACHA,EAAU,SAId,IAAIC,EAAkC,KACtC,OAAQoI,EAAQpI,UACd,KAAK,EACHA,EAAW,QACX,MACF,KAAK,EACHA,EAAW,QACX,MACF,KAAK,EACHA,EAAW,QAIf,MAAQJ,KAAM4I,EAAK3I,OAAQ4I,GAAQL,EACnC,IAAIxI,EAAoD,KACpD4I,IACF5I,EAAO,QAAiB,IAAR4I,EAAI/S,EAAW,MAAe,IAAR+S,EAAI7I,EAAW,MAC1C,IAAR6I,EAAIjT,EAAW,MACJ,EAARiT,EAAIrR,EAAS,MAGrB,IAAI0I,EAAsD,KACtD4I,IACF5I,EAAS,QAAiB,IAAR4I,EAAIhT,EAAW,MAAe,IAARgT,EAAI9I,EAAW,MAC5C,IAAR8I,EAAIlT,EAAW,MACJ,EAARkT,EAAItR,EAAS,MAGrB,MAAMuR,EAAK,CACTT,WACArI,OACAC,SACAE,UACAC,WACAF,YAAasI,EAAQtI,YACrBG,WAAYmI,EAAQnI,aAEdU,UAAWgI,EAAGpI,MAAEA,EAAKC,KAAEA,EAAIC,QAAEA,GAAY0H,EAC3CS,EAAK,CACTzR,EAAGwR,GAAKxR,GAAK,EACb5B,EAAGoT,GAAKpT,GAAK,EACb+E,EAAGqO,GAAKrO,GAAK,EACbjD,EAAGsR,GAAKtR,GAAK,EACb8H,GAAIwJ,GAAKxJ,IAAM,EACfC,GAAIuJ,GAAKvJ,IAAM,GAGG,IAAhB+I,EAAOxO,MAAc4G,EACvBc,EAAO7D,KAAK,CACV7D,KAAsB,QACtBuM,KAAM3F,EACNG,OAAQgI,EACR/H,UAAWiI,IAEY,IAAhBT,EAAOxO,MAAc6G,EAC9Ba,EAAO7D,KAAK,CACV7D,KAAqB,OACrBuM,KAAM1F,EACNE,OAAQgI,EACR/H,UAAWiI,IAEY,IAAhBT,EAAOxO,MAAc8G,GAC9BY,EAAO7D,KAAK,CACV7D,KAAwB,UACxBuM,KAAMzF,EACNC,OAAQgI,EACR/H,UAAWiI,IAKjB,OAAOvH,SC5QEwH,GAOX,uBAAOC,CAAiBxN,EAAmBoJ,GACzC,MAAMqE,EAAS,IAAInU,WAAW0G,EAAM,EAAG,GACjC0N,EAAM,IAAIpU,WAAW0G,GAE3B,GAA0B,cAAtByN,EAAOE,WACT,MAAM,IAAIjR,MAAM,+CAGlB,IAAIkR,EAWJ,OAVAxF,GAAUP,KAAK,cAAc,KAC3B,MAAMgG,EAAc9N,EAAW2N,GACzBI,EAAYC,GAAkB1N,OAAOwN,GAE3CD,EAAS,IAAI9C,GACXgD,EACA1E,EAAI4E,UAAU5E,EAAI6E,YAAY,KAAO,GACtC,IAGIL,EAUT,UAAMM,CAAK9E,GACT,MAAMpJ,QAAamJ,GAASC,GAI5B,OAFAhB,GAAUT,MAAMyB,GAChBhB,GAAUO,OACH4E,GAAOC,iBAAiBxN,EAAOoJ,IC7C1C,IAAI+E,GAAc,ECUF,SAAAC,GACdC,EACAC,GAEA,OAAO,IAAIzE,SAAQ,CAACC,EAASC,KAE3B,MAAMwE,EAAa,CACjBC,EACA/K,EAAgB,EAChBC,EAAiB,KAEjB,IAAK8K,EAEH,YADAzE,EAAO,IAAIrN,MAAM,sBAGnB,MAAM+R,EAAMD,EAAQE,WAAW,MAC/BF,EAAQ/K,MAAQA,EAAQ0K,GACxBK,EAAQ9K,OAASA,EAASyK,GAC1BM,EAAIE,MAAMR,GAAKA,IACfrE,EAAQ,CAAE0E,SAAQC,OAAM,EAG1B,GAAItH,KAAQD,GAAO,CACjB,MAAMsH,EAASI,SAASC,cAAcR,IAChC5K,MAAEA,EAAKC,OAAEA,GAAW8K,EAAOM,MAEjCP,EAAWC,EAAQO,WAAWtL,GAAQsL,WAAWrL,QAC5C,CACL,IAAIsL,EAASxH,GAA4ByH,sBAErCX,IACFU,EAAQA,EAAME,GAAGZ,IAGnBU,EACGG,OAAOd,GACPe,OAAO,CAAEC,MAAM,EAAMzG,MAAM,IAASyB,IACnC,MAAMgF,KAAEA,EAAI5L,MAAEA,EAAKC,OAAEA,GAAW2G,GAAO,CAAE,EAEzCkE,EAAWc,EAAM5L,EAAOC,EAAO,IAEhC4L,UAGT,CAgDM,SAAUC,GACdC,GAEA,MAAMhB,EA5CR,SACEgB,GAEA,GAAIrI,KAAQD,GACV,OAAO,IAAIuI,gBACTD,EAAQ/L,MACR+L,EAAQ9L,QAIZ,GAAIyD,KAAQD,GACV,OAAOI,GAAGoI,sBAAsB,CAC9BjM,MAAO+L,EAAQ/L,MACfC,OAAQ8L,EAAQ9L,SAIpB,GAAIyD,KAAQD,GAAW,CACrB,MAAMsH,EAAUnH,GAAWqI,wBAI3B,OAHAlB,EAAO/K,MAAQ+L,EAAQ/L,MACvB+K,EAAO9K,OAAS8L,EAAQ9L,OAEjB8K,EAGT,OAAOjH,GAAGmI,sBAAsB,IAC3BF,EACHnR,KAAM,MAEV,CAeiBqR,CAAsBF,GAC/Bf,EAAMD,EAAOE,WAAW,MAE9B,MAAO,CAAEF,SAAQC,MACnB,CCxBM,SAAUkB,GAAS3P,GACvB,MAAMhD,EAAM4S,GAAS5P,GACrB,IAAI6P,EASJ,OANEA,EADE1I,KAAQD,GACJ4I,KAAK3N,OAAOC,gBAAgB,IAAI9I,WAAW0D,KAG3CwK,GAAGuI,oBAAoB/S,GAGxB,yBAAyB6S,GAClC,CAiBM,SAAUD,GAAS5P,GACvB,OAAOA,EAAKc,OAAOwB,MACjBtC,EAAKgQ,WACLhQ,EAAKgQ,WAAahQ,EAAKiQ,WAE3B,CClHAC,eAAeC,GACbnQ,EACA+K,EACAqF,GAEA,GAAoB,iBAATpQ,EACT,OAAOA,EAIT,GAAImH,KAAQD,IAAUC,KAAQD,IAAaM,GAAG6I,MAC5C,OAAOV,GAAS3P,GAGlB,IAEE,aPLY,SACdA,EACAwK,GAEA,MAAMC,EAAKjD,GAAGkD,uBAGd,OADAtC,GAAU9G,IAAI,eAAekJ,KACtB,IAAIX,SAAgB,CAACC,EAASC,KACnCU,EAAGE,OAAO,CACRC,KAAMJ,EACN,OAAAJ,GACEN,EAAQU,EACT,EACD,IAAAF,GACEG,EAAG6F,UAAU,CACX9F,WACAxK,OACA,OAAAoK,GACEN,EAAQU,EACT,EACD,IAAAF,CAAKjO,GACH+L,GAAU9G,IAAI,eAAekJ,IAAYnO,GACzC0N,EAAO1N,EACR,GAEJ,GACD,GAEN,COvBiBkU,CAAaX,GAAS5P,GPfvB,SAAY+K,EAAkBqF,GAC5C,MAAO,GAAGrH,MAAkBqH,EAAS,GAAGA,KAAY,KAAKrF,GAC3D,COa8CyF,CAAYzF,EAAUqF,IAChE,MAAOK,GAEP,OADA3I,QAAQ4I,MAAMD,GACPd,GAAS3P,GAEpB,CAQM,SAAU2Q,GACdC,EACA5Q,EACA+K,EACAqF,GAEA,GAAIjJ,KAAQD,GAAO,CAEjB,GAAIlH,aAAgB1G,YAAc,sBAAuB8N,OACvD,OD8DA,SAAmBpH,GACvB,OAAO6Q,kBAAkB,IAAIC,KAAK,CAAClB,GAAS5P,KAC9C,CChEa+Q,CAAS/Q,GAGlB,GAAIA,aAAgBgR,YAClB,OAAOnH,QAAQC,QAAQ9J,GAI3B,OAAO,IAAI6J,SAAQ,CAACC,EAASC,KAC3B,MAAMkH,EAAML,EAAMM,cAElBD,EAAIE,OAAS,KAEPF,EAAIG,IAAIC,WAAW,UAA4B,iBAATrR,EACxC8J,EAAQmH,GPNV,SAAwBzG,GAC5B,MAAMC,EAAKjD,GAAGkD,uBAEd,OAAO,IAAIb,SAASC,IAClBW,EAAGE,OAAO,CACRC,KAAMJ,EACN,OAAAJ,GACEhC,GAAU9G,IAAI,gBAAgBkJ,KAC9BC,EAAG6G,OAAO,CACR9G,WACAJ,QAASN,EACT,IAAAQ,CAAKjO,GACH+L,GAAU9G,IAAI,gBAAgBkJ,IAAYnO,GAC1CyN,GACD,GAEJ,EACD,IAAAQ,CAAKjO,GACH+L,GAAU9G,IAAI,gBAAgBkJ,IAAYnO,GAC1CyN,GACD,GACD,GAEN,COfQyH,CAAcN,EAAIG,KAAK7H,MAAK,IAAMO,EAAQmH,MAG9CA,EAAIO,QAAU,IAAMzH,EAAO,IAAIrN,MAAM,yBAAyBuU,EAAIG,QAElEjB,GAAenQ,EAA6B+K,EAAUqF,GAAQ7G,MAC3D6H,GAASH,EAAIG,IAAMA,GACrB,GAEL,CHlEIjK,KAAQD,GACViH,GAAM/G,OAAOqK,iBACJ,kBAAmBjK,GAC5B2G,GAAO3G,GAAWkK,gBAAgBC,WACzB,sBAAuBnK,KAChC2G,GAAO3G,GAA4BoK,oBAAoBD,YIblD,MAAME,GAAO,OCGpB,IAAI7V,GAEJ,OAAQmL,IACN,KAAKD,GAAO,CACV,MAAM4K,EAAKC,UAAUC,UAGnBhW,GADE,aAAaqN,KAAKyI,GAChB,UACK,0BAA0BzI,KAAKyI,GACpC,MACK,wBAAwBzI,KAAKyI,GAClC,cAEA,UAEN,MAEF,KAAK5K,GACHlL,GAAIwL,GAAGyK,oBAAoBC,SAC3B,MACF,KAAKhL,GACHlL,GAAIwL,GAAG2K,oBAAoBD,SAC3B,MACF,KAAKhL,GACHlL,GAAIwL,GAAG4K,gBAAgBF,SACvB,MACF,QACElW,GAAI,UAGD,MAAMkW,GAAWlW,GAAEqW,oBCjCbC,GAAM,IAEU,oBAAhBC,YACFA,YAAYD,MAGdE,KAAKF,YCHDG,GAyCkB7B,MArCrB8B,WAAY,EAIZC,UAAY,EAIZC,WAAqB,EAIrBC,SAAmB,EAInBC,SAAmB,EAInBC,UAAoB,EAIpBC,aAAuB,EAMvBC,SAAmB,EAGpBC,QAAsBrB,GACtBsB,SAA+DtB,GAC/DuB,MAAoBvB,GAE3B,WAAAlP,CAA6BiO,GAAAhO,KAAKgO,MAALA,EAOtB,QAAAyC,CAAST,EAAoBC,GAClCjQ,KAAKgQ,WAAaA,EAClBhQ,KAAKiQ,SAAWA,EAWX,SAAAS,CACLR,EACAC,EACAQ,EACAN,GAEArQ,KAAKkQ,SAAWA,EAChBlQ,KAAKmQ,UAAYA,EACjBnQ,KAAKqQ,SAAWA,EAChBrQ,KAAKoQ,aAAeD,GAAaD,EAAWC,GAAaQ,EAGpD,KAAAvZ,GACL4I,KAAK8P,WAAY,EACjB9P,KAAK+P,UAAYL,KACjB1P,KAAKsQ,UACLtQ,KAAK4Q,UAGA,IAAAC,GACL7Q,KAAK8P,WAAY,EAGX,OAAAc,GACF5Q,KAAK8P,YACP9P,KAAK8Q,YAAYpB,KAAQ1P,KAAK+P,WAC1B/P,KAAK8P,WACP9P,KAAKgO,MAAM+C,OAAM,IAAM/Q,KAAK4Q,aAK1B,WAAAE,CAAYE,GAClB,MACEd,SAAU/N,EACVgO,UAAWc,EACXb,aAAcc,EACdlB,WAAYmB,EACZlB,SAAUmB,EACVf,SAAUgB,GACRrR,KAEJ,IAAIsR,EAEAN,GAAME,GAERI,EAAKD,EAAK,EAAM,EAChBrR,KAAK8P,WAAY,GAGjBwB,EAAKN,GAAM7O,EAAI6O,EAAK7O,IAAO6O,EAAKC,IAAO9O,EAAI8O,GAAOA,GAAM9O,EAG1DnC,KAAKuQ,UAAWa,EAAKD,GAAMG,EAAKH,EAAO,EAAGG,GACrCtR,KAAK8P,WACR9P,KAAKwQ,SCpEX,SAASe,GACPC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,MAAMC,EAAQL,EAAOlO,OAAOmO,GAE5B,KAAII,EAAM9O,MAAQ,KAAlB,CAEAwO,EAAQO,OACRP,EAAQQ,YAAcF,EAAM9O,MAE5BwO,EAAQ/O,UACNqP,EAAMrP,WAAWxJ,GAAK,EACtB6Y,EAAMrP,WAAWpL,GAAK,EACtBya,EAAMrP,WAAWrG,GAAK,EACtB0V,EAAMrP,WAAWtJ,GAAK,EACtB2Y,EAAMrP,WAAWxB,IAAM,EACvB6Q,EAAMrP,WAAWvB,IAAM,GAGrByQ,IACEG,EAAMhI,WACRmI,GACET,EACAM,EAAMhI,SAAS3Q,EACf2Y,EAAMhI,SAASrH,UACfqP,EAAMhI,SAAStH,QAEjBgP,EAAQU,QAEVV,EAAQW,UACLP,GAAkBD,EACnB,EACA,EACAG,EAAM7O,OAAOpC,MACbiR,EAAM7O,OAAOnC,SAIb+Q,GACFL,EAAQW,UACNN,GACCC,EAAM7O,OAAOpC,MAAQgR,EAAehR,OAAS,GAC7CiR,EAAM7O,OAAOnC,OAAS+Q,EAAe/Q,QAAU,GAIpD,IAAK,IAAIxJ,EAAI,EAAGA,EAAIwa,EAAM3O,OAAOhL,OAAQb,IACvC8a,GAAUZ,EAASM,EAAM3O,OAAO7L,IAGlCka,EAAQa,SA7CgB,CA8C1B,CAEA,SAASD,GACPZ,EACAnP,GAEA,OAAQA,EAAM5G,MACZ,IAAA,QACEwW,GAAWT,EAASnP,EAAM2F,KAAK7O,EAAGkJ,EAAMI,UAAWJ,EAAMG,QACzD,MACF,IAAA,WAkSJ,SACEgP,EACA1Z,EACA8I,EACAW,EACAC,EACAiB,EACAD,GAEAgP,EAAQO,OACRO,GAAiBd,EAAShP,GACtBC,GACF+O,EAAQ/O,UACNA,EAAUxJ,EACVwJ,EAAUpL,EACVoL,EAAUrG,EACVqG,EAAUtJ,EACVsJ,EAAUxB,GACVwB,EAAUvB,IAGdpJ,GAAQyJ,EACRX,GAAQY,EACR,MAAMJ,EAAc,EAAVG,EACJP,EAAc,EAAVQ,EACJ+Q,EAAQ,SACRC,EAAMpR,EAAI,EAAKmR,EACfE,EAAMzR,EAAI,EAAKuR,EACfG,EAAK5a,EAAIsJ,EACTuR,EAAK/R,EAAII,EACT4R,EAAK9a,EAAIsJ,EAAI,EACbyR,EAAKjS,EAAII,EAAI,EACnBwQ,EAAQsB,YACRtB,EAAQuB,OAAOjb,EAAG+a,GAClBrB,EAAQwB,cAAclb,EAAG+a,EAAKJ,EAAIG,EAAKJ,EAAI5R,EAAGgS,EAAIhS,GAClD4Q,EAAQwB,cAAcJ,EAAKJ,EAAI5R,EAAG8R,EAAIG,EAAKJ,EAAIC,EAAIG,GACnDrB,EAAQwB,cAAcN,EAAIG,EAAKJ,EAAIG,EAAKJ,EAAIG,EAAIC,EAAID,GACpDnB,EAAQwB,cAAcJ,EAAKJ,EAAIG,EAAI7a,EAAG+a,EAAKJ,EAAI3a,EAAG+a,GAC9CrQ,EAAOd,MACT8P,EAAQ9P,OAENc,EAAOb,QACT6P,EAAQ7P,SAEV6P,EAAQa,SACV,CA9UMY,CACEzB,EACAnP,EAAM2F,KAAKlQ,GAAK,EAChBuK,EAAM2F,KAAKpH,GAAK,EAChByB,EAAM2F,KAAKzG,SAAW,EACtBc,EAAM2F,KAAKxG,SAAW,EACtBa,EAAMI,UACNJ,EAAMG,QAER,MACF,IAAA,QAsUJ,SACEgP,EACA1Z,EACA8I,EACAC,EACAC,EACAO,EACAoB,EACAD,GAEAgP,EAAQO,OACRO,GAAiBd,EAAShP,GACtBC,GACF+O,EAAQ/O,UACNA,EAAUxJ,EACVwJ,EAAUpL,EACVoL,EAAUrG,EACVqG,EAAUtJ,EACVsJ,EAAUxB,GACVwB,EAAUvB,IAGd,IAAIgS,EAAS7R,EACTR,EAAQ,EAAIqS,IACdA,EAASrS,EAAQ,GAEfC,EAAS,EAAIoS,IACfA,EAASpS,EAAS,GAEpB0Q,EAAQsB,YACRtB,EAAQuB,OAAOjb,EAAIob,EAAQtS,GAC3B4Q,EAAQ2B,MAAMrb,EAAI+I,EAAOD,EAAG9I,EAAI+I,EAAOD,EAAIE,EAAQoS,GACnD1B,EAAQ2B,MAAMrb,EAAI+I,EAAOD,EAAIE,EAAQhJ,EAAG8I,EAAIE,EAAQoS,GACpD1B,EAAQ2B,MAAMrb,EAAG8I,EAAIE,EAAQhJ,EAAG8I,EAAGsS,GACnC1B,EAAQ2B,MAAMrb,EAAG8I,EAAG9I,EAAI+I,EAAOD,EAAGsS,GAClC1B,EAAQ4B,YACJ5Q,EAAOd,MACT8P,EAAQ9P,OAENc,EAAOb,QACT6P,EAAQ7P,SAEV6P,EAAQa,SACV,CAhXMgB,CACE7B,EACAnP,EAAM2F,KAAKlQ,GAAK,EAChBuK,EAAM2F,KAAKpH,GAAK,EAChByB,EAAM2F,KAAKnH,OAAS,EACpBwB,EAAM2F,KAAKlH,QAAU,EACrBuB,EAAM2F,KAAK3G,cAAgB,EAC3BgB,EAAMI,UACNJ,EAAMG,QAId,CAEA,SAAS8P,GACPd,EACAhP,GAEKA,IAILgP,EAAQ8B,YAAc9Q,EAAOb,QAAU,cAEnCa,EAAOZ,YAAe,IACxB4P,EAAQ+B,UAAY/Q,EAAOZ,aAGzBY,EAAOT,WAAc,IACvByP,EAAQzP,WAAaS,EAAOT,YAG1BS,EAAOX,UACT2P,EAAQ3P,QAAUW,EAAOX,SAEvBW,EAAOV,WACT0P,EAAQ1P,SAAWU,EAAOV,UAG5B0P,EAAQgC,UAAYhR,EAAOd,MAAQ,cAE/Bc,EAAOuH,UACTyH,EAAQiC,YAAYjR,EAAOuH,UAE/B,CAEA,SAASkI,GACPT,EACArY,EACAsJ,EACAD,GAEAgP,EAAQO,OACRO,GAAiBd,EAAShP,GACtBC,GACF+O,EAAQ/O,UACNA,EAAUxJ,EACVwJ,EAAUpL,EACVoL,EAAUrG,EACVqG,EAAUtJ,EACVsJ,EAAUxB,GACVwB,EAAUvB,IAGd,MAAMwS,EAA6B,CAAE5b,EAAG,EAAG8I,EAAG,EAAG+S,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAE1E,GADAtC,EAAQsB,YACJ3Z,EAAG,CACL,MAAM4a,EAAW5a,EACd6a,QAAQ,cAAe,UACvBA,QAAQ,KAAM,KACdC,MAAM,OAET,IAAK,IAAI3c,EAAI,EAAGA,EAAIyc,EAAS5b,OAAQb,IAAK,CACxC,MAAM4c,EAAUH,EAASzc,GACzB,GAAuB,IAAnB4c,EAAQ/b,OACV,SAGF,MAAMgc,EAAcD,EAAQ9I,UAAU,EAAG,GA1L1B,qBA2LEgJ,SAASD,IACxBE,GACE7C,EACAkC,EACAS,EACAD,EAAQ9I,UAAU,GAAGkJ,OAAOL,MAAM,OAKtCzR,EAAOd,MACT8P,EAAQ9P,OAENc,EAAOb,QACT6P,EAAQ7P,SAEV6P,EAAQa,SACV,CAEA,SAASgC,GACP7C,EACAkC,EACAa,EACA3R,GAEA,OAAQ2R,GACN,IAAK,IACHb,EAAa5b,GAAK8K,EAAK,GACvB8Q,EAAa9S,GAAKgC,EAAK,GACvB4O,EAAQuB,OAAOW,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAa5b,IAAM8K,EAAK,GACxB8Q,EAAa9S,IAAMgC,EAAK,GACxB4O,EAAQuB,OAAOW,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAa5b,GAAK8K,EAAK,GACvB8Q,EAAa9S,GAAKgC,EAAK,GACvB4O,EAAQgD,OAAOd,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAa5b,IAAM8K,EAAK,GACxB8Q,EAAa9S,IAAMgC,EAAK,GACxB4O,EAAQgD,OAAOd,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAa5b,GAAK8K,EAAK,GACvB4O,EAAQgD,OAAOd,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAa5b,IAAM8K,EAAK,GACxB4O,EAAQgD,OAAOd,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAa9S,GAAKgC,EAAK,GACvB4O,EAAQgD,OAAOd,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAa9S,IAAMgC,EAAK,GACxB4O,EAAQgD,OAAOd,EAAa5b,EAAG4b,EAAa9S,GAC5C,MACF,IAAK,IACH8S,EAAaC,IAAM/Q,EAAK,GACxB8Q,EAAaE,IAAMhR,EAAK,GACxB8Q,EAAaG,IAAMjR,EAAK,GACxB8Q,EAAaI,IAAMlR,EAAK,GACxB8Q,EAAa5b,GAAK8K,EAAK,GACvB8Q,EAAa9S,GAAKgC,EAAK,GACvB4O,EAAQwB,cACNU,EAAaC,GACbD,EAAaE,GACbF,EAAaG,GACbH,EAAaI,GACbJ,EAAa5b,EACb4b,EAAa9S,GAEf,MACF,IAAK,IACH8S,EAAaC,GAAKD,EAAa5b,IAAK8K,EAAK,GACzC8Q,EAAaE,GAAKF,EAAa9S,IAAKgC,EAAK,GACzC8Q,EAAaG,GAAKH,EAAa5b,IAAK8K,EAAK,GACzC8Q,EAAaI,GAAKJ,EAAa9S,IAAKgC,EAAK,GACzC8Q,EAAa5b,IAAM8K,EAAK,GACxB8Q,EAAa9S,IAAMgC,EAAK,GACxB4O,EAAQwB,cACNU,EAAaC,GACbD,EAAaE,GACbF,EAAaG,GACbH,EAAaI,GACbJ,EAAa5b,EACb4b,EAAa9S,GAEf,MACF,IAAK,SAEmBF,IAApBgT,EAAaC,SACOjT,IAApBgT,EAAaE,SACOlT,IAApBgT,EAAaG,SACOnT,IAApBgT,EAAaI,IAEbJ,EAAaC,GAAKD,EAAa5b,EAAI4b,EAAaG,GAAKH,EAAa5b,EAClE4b,EAAaE,GAAKF,EAAa9S,EAAI8S,EAAaI,GAAKJ,EAAa9S,EAClE8S,EAAaG,IAAMjR,EAAK,GACxB8Q,EAAaI,IAAMlR,EAAK,GACxB8Q,EAAa5b,GAAK8K,EAAK,GACvB8Q,EAAa9S,GAAKgC,EAAK,GACvB4O,EAAQwB,cACNU,EAAaC,GACbD,EAAaE,GACbF,EAAaG,GACbH,EAAaI,GACbJ,EAAa5b,EACb4b,EAAa9S,KAGf8S,EAAaC,IAAM/Q,EAAK,GACxB8Q,EAAaE,IAAMhR,EAAK,GACxB8Q,EAAa5b,GAAK8K,EAAK,GACvB8Q,EAAa9S,GAAKgC,EAAK,GACvB4O,EAAQiD,iBACNf,EAAaC,GACbD,EAAaE,GACbF,EAAa5b,EACb4b,EAAa9S,IAGjB,MACF,IAAK,SAEmBF,IAApBgT,EAAaC,SACOjT,IAApBgT,EAAaE,SACOlT,IAApBgT,EAAaG,SACOnT,IAApBgT,EAAaI,IAEbJ,EAAaC,GAAKD,EAAa5b,EAAI4b,EAAaG,GAAKH,EAAa5b,EAClE4b,EAAaE,GAAKF,EAAa9S,EAAI8S,EAAaI,GAAKJ,EAAa9S,EAClE8S,EAAaG,GAAKH,EAAa5b,IAAK8K,EAAK,GACzC8Q,EAAaI,GAAKJ,EAAa9S,IAAKgC,EAAK,GACzC8Q,EAAa5b,IAAM8K,EAAK,GACxB8Q,EAAa9S,IAAMgC,EAAK,GACxB4O,EAAQwB,cACNU,EAAaC,GACbD,EAAaE,GACbF,EAAaG,GACbH,EAAaI,GACbJ,EAAa5b,EACb4b,EAAa9S,KAGf8S,EAAaC,GAAKD,EAAa5b,IAAK8K,EAAK,GACzC8Q,EAAaE,GAAKF,EAAa9S,IAAKgC,EAAK,GACzC8Q,EAAa5b,IAAM8K,EAAK,GACxB8Q,EAAa9S,IAAMgC,EAAK,GACxB4O,EAAQiD,iBACNf,EAAaC,GACbD,EAAaE,GACbF,EAAa5b,EACb4b,EAAa9S,IAGjB,MACF,IAAK,IACH8S,EAAaC,IAAM/Q,EAAK,GACxB8Q,EAAaE,IAAMhR,EAAK,GACxB8Q,EAAa5b,GAAK8K,EAAK,GACvB8Q,EAAa9S,GAAKgC,EAAK,GACvB4O,EAAQiD,iBACNf,EAAaC,GACbD,EAAaE,GACbF,EAAa5b,EACb4b,EAAa9S,GAEf,MACF,IAAK,IACH8S,EAAaC,GAAKD,EAAa5b,IAAK8K,EAAK,GACzC8Q,EAAaE,GAAKF,EAAa9S,IAAKgC,EAAK,GACzC8Q,EAAa5b,IAAM8K,EAAK,GACxB8Q,EAAa9S,IAAMgC,EAAK,GACxB4O,EAAQiD,iBACNf,EAAaC,GACbD,EAAaE,GACbF,EAAa5b,EACb4b,EAAa9S,GAEf,MACF,IAAK,IAEL,IAAK,IACH,MACF,IAAK,IACL,IAAK,IACH4Q,EAAQ4B,YAKd,CCvXc,MAAOsB,GAKXC,EAA2B,KAK3BC,GAAsC,KAKtCC,EAAqD,KAKrDC,GAGG,KAIHC,EAAY,EAIZC,EAAY,EAIZC,KAAmB,CAAgB,EAIpCC,UAAiC,IAAIC,IAEpC,OAAAC,CAAQ3Z,GACd,MAAMwZ,KAAEA,GAASjV,KAGjBiV,EAAKxZ,KAAOA,EAID,MAATA,GAEA8I,KAAQD,IACR6K,UAAUC,UAAUgF,SAAS,WAE7Ba,EAAKI,MAAQ,KAEbJ,EAAKI,MADc,MAAT5Z,GAAgB8I,KAAQD,IAAcC,KAAQD,GAC3C,KAEA,KASb2Q,EAAKK,OAJK,MAAT7Z,IACE8I,KAAQD,IAA2B,QAAbgL,IAAsB/K,KAAQD,KAC7C,MAAT7I,GAAgB8I,KAAQD,GAEX,KAEA,KAGhBkB,GAAUO,KAAK,GACfP,GAAU9G,IAAI,aAAcuW,EAAKxZ,MACjC+J,GAAU9G,IAAI,cAAeuW,EAAKI,OAClC7P,GAAU9G,IAAI,eAAgBuW,EAAKK,QACnC9P,GAAUO,KAAK,GASV,cAAMwP,CACX9J,EACA+J,EACA9J,GAIA,MAAME,OAAEA,EAAMC,IAAEA,SAAcL,GAAUC,EAAUC,IAC5C7K,MAAEA,EAAKC,OAAEA,GAAW8K,EAU1B,IAAI6J,EARJzV,KAAK2U,EAAI/I,EACT5L,KAAK4U,GAAK/I,EACV7L,KAAK+U,EAAIlU,EACTb,KAAKgV,EAAIlU,EAMkB,iBAAhB0U,GAA4C,KAAhBA,GACrCC,QAAkBjK,GAAUgK,EAAa9J,GACzC+J,EAAU7J,OAAO/K,MAAQA,EACzB4U,EAAU7J,OAAO9K,OAASA,EAC1Bd,KAAKoV,QAAQ,OAEbK,EAAY9I,GAAmB,CAAE9L,QAAOC,WACxCd,KAAKoV,QAAQ,MAEfpV,KAAK6U,EAAIY,EAAU7J,OACnB5L,KAAK8U,GAAKW,EAAU5J,IAGpB,MAAMoJ,KAAEA,GAASjV,KAqBjB,OAjBmB,OAAfiV,EAAKI,MACPrV,KAAK0V,WAAa,KAChB,MAAMX,EAAEA,EAACC,EAAEA,GAAMhV,KACjBA,KAAK4U,GAAIe,UAAU,EAAG,EAAGZ,EAAGC,EAAE,EAGhChV,KAAK0V,WAAa,KAChB,MAAMX,EAAEA,EAACC,EAAEA,GAAMhV,KACjBA,KAAK2U,EAAG9T,MAAQkU,EAChB/U,KAAK2U,EAAG7T,OAASkU,CAAC,EAQdC,EAAKI,OACX,IAAK,KACHrV,KAAK4V,UAAY,KACf,MAAMb,EAAEA,EAACC,EAAEA,GAAMhV,MACX4L,OAAEA,EAAMC,IAAEA,GAAQc,GAAmB,CAAE9L,MAAOkU,EAAGjU,OAAQkU,IAC/DhV,KAAK6U,EAAIjJ,EACT5L,KAAK8U,GAAKjJ,CAAG,EAEf,MACF,IAAK,KACH7L,KAAK4V,UAAY,KACf,MAAMb,EAAEA,EAACC,EAAEA,GAAMhV,KAEjBA,KAAK8U,GAAIa,UAAU,EAAG,EAAGZ,EAAGC,EAAE,EAEhC,MACF,QACEhV,KAAK4V,UAAY,KACf,MAAMb,EAAEA,EAACC,EAAEA,EAACH,EAAEA,GAAM7U,KACpB6U,EAAGhU,MAAQkU,EACXF,EAAG/T,OAASkU,CAAC,EAOnB,OAAQC,EAAKK,QACX,IAAK,KACHtV,KAAK6V,MAAQ,KAEX,MAAMd,EAAEA,EAACC,EAAEA,GAAMhV,KACjBA,KAAK4U,GAAIzC,UAAUnS,KAAK6U,EAAwB,EAAG,EAAGE,EAAGC,EAAE,EAE7D,MACF,IAAK,KACHhV,KAAK6V,MAAQ,KACX,MAAMd,EAAEA,EAACC,EAAEA,GAAMhV,KAEX8V,EAAY9V,KAAK8U,GAAIiB,aAAa,EAAG,EAAGhB,EAAGC,GACjDhV,KAAK4U,GAAIoB,aAAaF,EAAW,EAAG,EAAG,EAAG,EAAGf,EAAGC,EAAE,GAanD,OAAAiB,CAAQpV,EAAeC,GAC5B,MAAM6T,EAAEA,EAACE,EAAEA,GAAM7U,KAEjB2U,EAAG9T,MAAQgU,EAAGhU,MAAQb,KAAK+U,EAAIlU,EAC/B8T,EAAG7T,OAAS+T,EAAG/T,OAASd,KAAKgV,EAAIlU,EAS5B,SAAAiN,CAAU3J,EAAmB+D,GAClC,IAAI+N,EAA4B,GAchC,OAZA1Q,GAAUJ,UAAU,cACpBI,GAAUP,KAAK,cAAc,KAC3BjF,KAAKkV,UAAUG,QACf,IAAK,IAAIc,KAAO/R,EAAQ,CACtB,MAAMhL,EAAI2U,GAAU/N,KAAMoE,EAAO+R,GAAMA,EAAKhO,GAAUxB,MAAM0H,IAC1DrO,KAAKkV,UAAUna,IAAIob,EAAK9H,EAAI,IAG9B6H,EAAS5W,KAAKlG,OAIX6N,QAAQmP,IAAUF,GAOpB,WAAA5H,GACL,OAAI/J,KAAQD,GACH,IAAI+R,MAGLrW,KAAK2U,EAA+BrG,cAOvC,KAAAyC,CAAMuF,IACV/R,KAAQD,GAAQM,GAAK5E,KAAK2U,GAAG4B,sBAAsBD,GAG/CZ,WAAyBzG,GAEzB2G,UAAwB3G,GASxB,IAAAuH,CACLC,EACA/E,EACAta,EACAyF,IDxQJ,SACE2U,EACA0D,EACAuB,EACA/E,EACAgF,EACAC,GAEA,MAAMtS,QAAEA,EAAO+D,gBAAEA,EAAeC,gBAAEA,GAAoBoO,EAEtD,IAAK,IAAInf,EAAIof,EAAMpf,EAAIqf,EAAMrf,IAAK,CAChC,MAAMma,EAASpN,EAAQ/M,IACjBgM,SAAEA,GAAamO,EAKrBF,GACEC,EACAC,EACAC,EAPawD,EAAU0B,IAAItT,GACN8E,EAAgB9E,GAChB+E,EAAgB/E,IAW3C,CCgPIgS,CAAOtV,KAAK8U,GAAK9U,KAAKkV,UAAWuB,EAAa/E,EAActa,EAAOyF,GAG9DgZ,MAAoB5G,GAKpB,OAAA4H,GACL7W,KAAK0V,aACL1V,KAAK4V,YACL5V,KAAKkV,UAAUG,QACfrV,KAAK2U,EAAI3U,KAAK4U,GAAK5U,KAAK6U,EAAI7U,KAAK8U,GAAK,YC7R7BgC,GAIHC,UAAoB,EAKpB/L,YAA4BtK,EAKnBsW,OAAuBpZ,OAAOiC,OAAO,CACpD8Q,KAAM,EACNsG,SAAmC,WACnCC,SAAmC,WACnCC,WAAY,EACZC,SAAU,EACVC,eAAgB,IAIVrJ,MAAQ,IAAI0G,GACZ4C,SAA4B,KAO5BZ,KAAe,EAIfC,KAAe,EAMhB,eAAMjG,CACX9D,EACAlB,GAEA,IAAIsL,EAGFA,EADqB,iBAAZpK,EACA,CAAE2K,UAAW3K,GAEbA,EAGX,MAAMuK,WAAEA,EAAUC,SAAEA,GAAaJ,EACjC,QAAmBtW,IAAfyW,QAAyCzW,IAAb0W,GAS1BD,EAAaC,EACf,MAAM,IAAItd,MAAM,2CAIpB8D,OAAO4Z,OAAOxX,KAAKgX,OAAQ,CACzBrG,KAAMqG,EAAOrG,MAAQ,EACrBsG,SAAUD,EAAOC,UAAqC,WACtDC,SAAUF,EAAOE,UAAqC,WACtDC,WAAYA,GAAc,EAC1BC,SAAUA,GAAY,EACtBC,eAAgBL,EAAOK,gBAAkB,UAErCrX,KAAKgO,MAAMuH,SAASyB,EAAOO,UAAWP,EAAOS,UAAW/L,GAK9D1L,KAAKsX,SAAW,IAAIzH,GAAS7P,KAAKgO,OAClChO,KAAKsX,SAAS9G,MAAQ,IAAMxQ,KAAKwQ,UAwB5B,WAAMkH,CAAMjB,GACjB,IAAKA,EACH,MAAM,IAAI3c,MAAM,yBAGlBkG,KAAKsX,SAAUzG,OACf7Q,KAAK+W,UAAY,EACjB/W,KAAKgL,OAASyL,EACdjR,GAAUJ,UAAU,UACpBI,GAAUJ,UAAU,QACpBI,GAAUM,WAAW,QAErB,MAAM1B,OAAEA,EAAM+D,SAAEA,EAAQnC,KAAEA,GAASyQ,EAKnC,OAHAzW,KAAKgO,MAAMiI,QAAQjQ,EAAKnF,MAAOmF,EAAKlF,QACpCd,KAAKgO,MAAM4H,YAEJ5V,KAAKgO,MAAMD,UAAU3J,EAAQ+D,GAM/BmI,QAIAqH,SAIAC,QAIAC,OAIAC,UAIAtH,MAKA,KAAApZ,GACL4I,KAAKgO,MAAM0H,aACX1V,KAAK+X,iBACL/X,KAAKsQ,YAMA,MAAA0H,GACLhY,KAAK+X,iBACL/X,KAAK2X,aAMA,KAAAM,GACLjY,KAAKsX,SAAUzG,OACf7Q,KAAK4X,YAMA,IAAA/G,GACL7Q,KAAKsX,SAAUzG,OACf7Q,KAAK+W,UAAY,EACjB/W,KAAKgO,MAAM0H,aACX1V,KAAK6X,WAMA,KAAAxC,GACLrV,KAAKgO,MAAM0H,aAMN,OAAAmB,GACL7W,KAAKsX,SAAUzG,OACf7Q,KAAKgO,MAAM6I,UACX7W,KAAKsX,SAAW,KAChBtX,KAAKgL,YAAStK,EAMR,cAAAqX,GACN,MAAMb,SAAEA,EAAQG,eAAEA,EAAcF,WAAEA,EAAUC,SAAEA,EAAQH,SAAEA,EAAQtG,KAAEA,GAChE3Q,KAAKgX,OACP,IAAIzT,OAAEA,EAAMM,IAAEA,EAAGQ,QAAEA,GAAYrE,KAAKgL,OACpC,MAAMkN,EAAc7T,EAAQlM,OACtBggB,EAAY5U,EAAS,EACrBnM,EAAQ+f,EAAa,EAAIA,EAAa,EACtCta,EAAMua,EAAW,EAAIA,EAAWe,EAGlCnY,KAAK+W,YAAcoB,IACrBnY,KAAK+W,UAAY3f,GAIuB,aAAtC8f,EACFlX,KAAKsX,SAAU7G,SAASrZ,EAAOyF,GAE/BmD,KAAKsX,SAAU7G,SAAS5T,EAAKzF,GAI3BggB,EAAW,GAAKA,EAAWD,EAC7B5T,EAAS6T,EAAWD,EACXC,GAAY,GAAKD,EAAa,IACvC5T,GAAU4T,GAIZ,MAAMiB,EAAgB,IAAOvU,EAE7B7D,KAAKsX,SAAU5G,UAEbnN,EAAS6U,EAETf,EAAiBF,GACZE,EAAiBF,GAAciB,EAChC,EACJzH,GAAQ,EAAI0H,IAAW1H,IACb,cAARsG,IAGJjX,KAAKsX,SAAU/G,SAAW,CAAC+H,EAAeC,KAExC,MAAMC,EAAcxY,KAAK+W,YAAcuB,EAEvC,GAAItY,KAAK2W,OAASuB,EAAa,CAE7B,MAAMO,EAAMD,EACP1d,KAAKkC,IAAIkb,EAAcK,EAAa,IAAM,EAAGL,GAAiB,EAC/DA,EAEAO,EAAMzY,KAAK2W,OACb3W,KAAK0W,KAAO1W,KAAK2W,KACjB3W,KAAK2W,KAAO8B,EACZjT,GAAUP,KAAK,QAAQ,KACrBjF,KAAKgO,MAAMwI,KAAKxW,KAAKgL,OAAShL,KAAK+W,UAAW/W,KAAK0W,KAAM1W,KAAK2W,KAAK,KAKrE6B,IAIJxY,KAAKgO,MAAM0H,aACXlQ,GAAUP,KACR,UACA,IAAMjF,KAAKgO,MAAM6H,SACjB,MACCpQ,IACCD,GAAU9G,IAAI,eAAgB+G,GAC9BD,GAAUO,KAAK,IACXN,EAAQD,GAAUC,MACpBD,GAAUJ,UAAU,QAEpBI,GAAUK,SAAS,WAIzB7F,KAAKgO,MAAM4H,YACX5V,KAAK8X,cACL9X,KAAK+W,UAAYuB,EACjBtY,KAAK2W,KAAO,EAAC,EAGf3W,KAAKsX,SAAUlgB","x_google_ignoreList":[0]}