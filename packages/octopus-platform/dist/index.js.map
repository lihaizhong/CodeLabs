{"version":3,"file":"index.js","sources":["../src/extensions/noop.ts","../src/extensions/retry.ts","../src/extensions/utf8.ts","../src/platform.ts","../src/definePlugin.ts","../src/plugins/plugin-canvas.ts","../src/plugins/plugin-decode.ts","../src/plugins/plugin-download.ts","../src/plugins/plugin-fsm.ts","../src/plugins/plugin-image.ts","../src/plugins/plugin-now.ts","../src/plugins/plugin-ofs-canvas.ts","../src/plugins/plugin-path.ts","../src/plugins/plugin-raf.ts"],"sourcesContent":["export const noop = () => { };\n","function delay(callback, interval) {\n    return new Promise((resolve) => setTimeout(() => resolve(callback()), interval));\n}\nexport const retry = async (fn, intervals = [], \n/*\n * @private 不建议外部传入\n */\ntimes = 0) => {\n    try {\n        return fn();\n    }\n    catch (err) {\n        if (times >= intervals.length) {\n            throw err;\n        }\n        return delay(() => retry(fn, intervals, ++times), intervals[times]);\n    }\n};\n","/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nexport function utf8(buffer, start, end) {\n    // 边界检查\n    if (start < 0 || end > buffer.length)\n        throw new RangeError(\"Index out of range\");\n    if (end - start < 1)\n        return \"\";\n    const codes = [];\n    const asciiCodes = new Array(1024); // 预分配ASCII缓冲区\n    const { fromCharCode } = String;\n    let asciiPos = 0;\n    for (let i = start; i < end;) {\n        const t = buffer[i++];\n        if (t <= 0x7f) {\n            // ASCII 快速路径\n            asciiCodes[asciiPos++] = t;\n            // 每 1024 个字符或遇到变长编码时提交块\n            if (asciiPos === 1024 || (i < end && buffer[i] > 0x7f)) {\n                codes.push(fromCharCode(...asciiCodes.slice(0, asciiPos)));\n                asciiPos = 0;\n            }\n        }\n        else {\n            // 提交之前的ASCII字符\n            if (asciiPos > 0) {\n                codes.push(fromCharCode(...asciiCodes.slice(0, asciiPos)));\n                asciiPos = 0;\n            }\n            // 变长编码处理\n            let codePoint;\n            if (t >= 0xc0 && t < 0xe0 && i < end) {\n                // 2-byte\n                codePoint = ((t & 0x1f) << 6) | (buffer[i++] & 0x3f);\n            }\n            else if (t >= 0xe0 && t < 0xf0 && i + 1 < end) {\n                // 3-byte\n                codePoint =\n                    ((t & 0xf) << 12) |\n                        ((buffer[i++] & 0x3f) << 6) |\n                        (buffer[i++] & 0x3f);\n            }\n            else if (t >= 0xf0 && t < 0xf8 && i + 2 < end) {\n                // 4-byte\n                codePoint =\n                    (((t & 7) << 18) |\n                        ((buffer[i++] & 0x3f) << 12) |\n                        ((buffer[i++] & 0x3f) << 6) |\n                        (buffer[i++] & 0x3f)) -\n                        0x10000;\n                codes.push(fromCharCode(0xd800 + (codePoint >> 10), 0xdc00 + (codePoint & 0x3ff)));\n                continue;\n            }\n            else {\n                // 无效的UTF-8序列，用替换字符\n                codePoint = 0xFFFD; // Unicode替换字符\n                // 跳过可能的后续字节\n                while (i < end && (buffer[i] & 0xc0) === 0x80)\n                    i++;\n            }\n            codes.push(fromCharCode(codePoint));\n        }\n    }\n    // 提交最后的 ASCII 块\n    if (asciiPos > 0) {\n        codes.push(fromCharCode(...asciiCodes.slice(0, asciiPos)));\n    }\n    // 比使用 String.fromCharCode(...codes) 更安全，避免参数过多错误\n    return codes.join('');\n}\n","import { noop, retry } from \"./extensions\";\nimport { version } from \"../package.json\";\nexport class Platform {\n    /**\n     * 插件列表\n     */\n    plugins = [];\n    globalCanvas = null;\n    /**\n     * 平台版本\n     */\n    platformVersion = version;\n    /**\n     * 应用版本\n     */\n    version = \"\";\n    /**\n     * 全局变量\n     */\n    globals = {\n        env: \"unknown\",\n        br: null,\n        dpr: 1,\n    };\n    noop = noop;\n    retry = retry;\n    constructor(plugins, version) {\n        this.version = version || \"\";\n        this.plugins = plugins;\n        this.globals.env = this.autoEnv();\n    }\n    init() {\n        this.globals.br = this.useBridge();\n        this.globals.dpr = this.usePixelRatio();\n        const plugins = this.plugins.reduce((acc, plugin) => {\n            acc[plugin.name] = plugin;\n            return acc;\n        }, {});\n        const pluginNames = this.plugins.map((plugin) => plugin.name);\n        const installedPlugins = {};\n        this.usePlugins(plugins, pluginNames, installedPlugins);\n    }\n    autoEnv() {\n        // FIXME：由于抖音场景支持wx对象，所以需要放在wx对象之前检查\n        if (typeof window !== \"undefined\") {\n            return \"h5\";\n        }\n        if (typeof tt !== \"undefined\") {\n            return \"tt\";\n        }\n        if (typeof my !== \"undefined\") {\n            return \"alipay\";\n        }\n        if (typeof wx !== \"undefined\") {\n            return \"weapp\";\n        }\n        throw new Error(\"Unsupported app\");\n    }\n    useBridge() {\n        switch (this.globals.env) {\n            case \"h5\":\n                return globalThis;\n            case \"alipay\":\n                return my;\n            case \"tt\":\n                return tt;\n            case \"weapp\":\n                return wx;\n            default:\n        }\n        return {};\n    }\n    usePixelRatio() {\n        const { env, br } = this.globals;\n        if (env === \"h5\") {\n            return devicePixelRatio;\n        }\n        if (\"getWindowInfo\" in br) {\n            return br.getWindowInfo().pixelRatio;\n        }\n        if (\"getSystemInfoSync\" in br) {\n            return br.getSystemInfoSync().pixelRatio;\n        }\n        return 1;\n    }\n    usePlugins(plugins, pluginNames, installedPlugins) {\n        pluginNames.forEach((pluginName) => {\n            const plugin = plugins[pluginName];\n            if (installedPlugins[pluginName]) {\n                return;\n            }\n            if (plugin === undefined) {\n                throw new Error(`Plugin ${pluginName} not found`);\n            }\n            if (Array.isArray(plugin.dependencies)) {\n                for (const dependency of plugin.dependencies) {\n                    if (typeof plugins[dependency]?.install !== \"function\") {\n                        throw new Error(`Plugin ${pluginName} depends on plugin ${dependency}, but ${dependency} is not found`);\n                    }\n                }\n                this.usePlugins(plugins, plugin.dependencies, installedPlugins);\n            }\n            this.installPlugin(plugin);\n            installedPlugins[plugin.name] = true;\n        });\n    }\n    setGlobalCanvas(canvas) {\n        this.globalCanvas = canvas;\n    }\n    getGlobalCanvas() {\n        return this.globalCanvas;\n    }\n    switch(env) {\n        this.globals.env = env;\n        this.init();\n    }\n}\n","export const definePlugin = (plugin) => plugin;\n","import { definePlugin } from \"../definePlugin\";\n/**\n * 通过选择器匹配获取canvas实例\n * @returns\n */\nexport default definePlugin({\n    name: \"getCanvas\",\n    install() {\n        const { retry } = this;\n        const { env, br, dpr } = this.globals;\n        const intervals = [50, 100, 100];\n        function initCanvas(canvas, width, height) {\n            if (!canvas) {\n                throw new Error(\"canvas not found.\");\n            }\n            const MAX_SIZE = 1365;\n            const context = canvas.getContext(\"2d\");\n            let virtualWidth = width * dpr;\n            let virtualHeight = height * dpr;\n            // 微信小程序限制canvas最大尺寸为 1365 * 1365\n            if (env === \"weapp\" &&\n                (virtualWidth > MAX_SIZE || virtualHeight > MAX_SIZE)) {\n                if (virtualWidth > virtualHeight) {\n                    virtualHeight = (virtualHeight / virtualWidth) * MAX_SIZE;\n                    virtualWidth = MAX_SIZE;\n                }\n                else {\n                    virtualWidth = (virtualWidth / virtualHeight) * MAX_SIZE;\n                    virtualHeight = MAX_SIZE;\n                }\n            }\n            canvas.width = virtualWidth;\n            canvas.height = virtualHeight;\n            return { canvas, context };\n        }\n        if (env === \"h5\") {\n            const querySelector = (selector) => document.querySelector(selector);\n            return (selector) => retry(() => {\n                // FIXME: Taro 对 canvas 做了特殊处理，canvas 元素的 id 会被加上 canvas-id 的前缀\n                const canvas = (querySelector(`canvas[canvas-id=${selector.slice(1)}]`) || querySelector(selector));\n                return initCanvas(canvas, canvas?.clientWidth, canvas?.clientHeight);\n            }, intervals);\n        }\n        return (selector, component) => retry(() => new Promise((resolve, reject) => {\n            let query = br.createSelectorQuery();\n            if (component) {\n                query = query.in(component);\n            }\n            query\n                .select(selector)\n                .fields({ node: true, size: true }, (res) => {\n                const { node, width, height } = res || {};\n                try {\n                    resolve(initCanvas(node, width, height));\n                }\n                catch (e) {\n                    reject(e);\n                }\n            })\n                .exec();\n        }), intervals);\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\nimport { utf8 } from \"../extensions/utf8\";\n/**\n * 用于处理数据解码\n * @returns\n */\nexport default definePlugin({\n    name: \"decode\",\n    install() {\n        const { env, br } = this.globals;\n        const b64Wrap = (b64, type = \"image/png\") => `data:${type};base64,${b64}`;\n        const decode = {\n            toBuffer(data) {\n                const { buffer, byteOffset, byteLength } = data;\n                return buffer.slice(byteOffset, byteOffset + byteLength);\n            },\n            bytesToString(data) {\n                const chunkSize = 8192; // 安全的块大小\n                let result = \"\";\n                for (let i = 0; i < data.length; i += chunkSize) {\n                    const chunk = data.slice(i, i + chunkSize);\n                    // 在安全的块上使用 String.fromCharCode\n                    result += String.fromCharCode.apply(null, Array.from(chunk));\n                }\n                return result;\n            },\n        };\n        if (env === \"h5\") {\n            const textDecoder = new TextDecoder('utf-8', { fatal: true });\n            decode.toDataURL = (data) => b64Wrap(btoa(decode.bytesToString(data)));\n            decode.utf8 = (data, start, end) => textDecoder.decode(data.subarray(start, end));\n        }\n        else {\n            decode.toDataURL = (data) => b64Wrap(br.arrayBufferToBase64(decode.toBuffer(data)));\n            decode.utf8 = utf8;\n        }\n        return decode;\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\n/**\n * 用于处理远程文件读取\n * @returns\n */\nexport default definePlugin({\n    name: \"remote\",\n    install() {\n        const { env, br } = this.globals;\n        const isRemote = (url) => /^http(s)?:\\/\\//.test(url);\n        if (env === \"h5\") {\n            return {\n                is: isRemote,\n                fetch: (url) => fetch(url).then((response) => {\n                    if (response.ok) {\n                        return response.arrayBuffer();\n                    }\n                    throw new Error(`HTTP error, status=${response.status}, statusText=${response.statusText}`);\n                }),\n            };\n        }\n        function download(url, enableCache) {\n            return new Promise((resolve, reject) => {\n                br.request({\n                    url,\n                    // @ts-ignore 支付宝小程序必须有该字段\n                    dataType: \"arraybuffer\",\n                    responseType: \"arraybuffer\",\n                    enableCache,\n                    success: (res) => resolve(res.data),\n                    fail: reject,\n                });\n            }).catch((err) => {\n                const errorMessage = err.errMsg || err.errorMessage || err.message;\n                // FIXME: 可能存在写入网络缓存空间失败的情况，此时重新下载\n                if (errorMessage.includes(\"ERR_CACHE_WRITE_FAILURE\") || errorMessage.includes(\"ERR_CACHE_WRITE_FAILED\")) {\n                    return download(url, false);\n                }\n                throw err;\n            });\n        }\n        return {\n            is: isRemote,\n            fetch: (url) => download(url, true),\n        };\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\n/**\n * 用于处理本地文件存储\n * @returns\n */\nexport default definePlugin({\n    name: \"local\",\n    install() {\n        const { env, br } = this.globals;\n        if (env === \"h5\") {\n            return null;\n        }\n        const fsm = br.getFileSystemManager();\n        return {\n            write: (data, filePath) => {\n                return new Promise((resolve, reject) => {\n                    fsm.writeFile({\n                        filePath,\n                        data,\n                        success: () => resolve(filePath),\n                        fail: (err) => reject(err),\n                    });\n                });\n            },\n            read: (filePath) => {\n                return new Promise((resolve, reject) => {\n                    fsm.readFile({\n                        filePath,\n                        success: (res) => resolve(res.data),\n                        fail: (err) => reject(err),\n                    });\n                });\n            },\n            remove: (filePath) => {\n                return new Promise((resolve, reject) => {\n                    fsm.unlink({\n                        filePath,\n                        success: () => resolve(filePath),\n                        fail: (err) => reject(err),\n                    });\n                });\n            }\n        };\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\n/**\n * 图片加载插件\n * @package plugin-fsm 本地文件存储能力\n * @package plugin-path 路径处理能力\n * @package plugin-decode 解码能力\n */\nexport default definePlugin({\n    name: \"image\",\n    dependencies: [\"local\", \"path\", \"decode\"],\n    install() {\n        const { local, path, decode, noop } = this;\n        const { env } = this.globals;\n        const cachedImages = new Set();\n        /**\n         * 加载图片\n         * @param img\n         * @param src\n         * @returns\n         */\n        function loadImage(img, src) {\n            return new Promise((resolve, reject) => {\n                img.onload = () => {\n                    resolve(img);\n                    if (cachedImages.has(src)) {\n                        local\n                            .remove(src)\n                            .catch(noop)\n                            .then(() => cachedImages.delete(src));\n                    }\n                };\n                img.onerror = () => reject(new Error(`SVGA LOADING FAILURE: ${img.src}`));\n                img.src = src;\n            });\n        }\n        if (env === \"h5\") {\n            const createImage = () => new Image();\n            const genImageSource = (data) => {\n                if (typeof data === \"string\") {\n                    return data;\n                }\n                return decode.toDataURL(data);\n            };\n            return {\n                isImage: (data) => data instanceof Image,\n                isImageBitmap: (data) => data instanceof ImageBitmap,\n                create: createImage,\n                load: (data, _filename, _prefix) => {\n                    // 由于ImageBitmap在图片渲染上有优势，故优先使用\n                    if (data instanceof Uint8Array && \"createImageBitmap\" in globalThis) {\n                        return createImageBitmap(new Blob([decode.toBuffer(data)]));\n                    }\n                    if (data instanceof ImageBitmap) {\n                        return Promise.resolve(data);\n                    }\n                    return loadImage(createImage(), genImageSource(data));\n                },\n            };\n        }\n        const createImage = () => {\n            const canvas = this.getGlobalCanvas();\n            if (!canvas) {\n                throw new Error(\"Canvas not found, please use `platform.setCanvas` first!\");\n            }\n            return canvas.createImage();\n        };\n        const genImageSource = async (data, filename, prefix) => {\n            if (typeof data === \"string\") {\n                return data;\n            }\n            // FIXME: 支付宝小程序IDE保存临时文件会失败;抖音最大用户文件大小为10M\n            if (env === \"tt\" || env === \"alipay\") {\n                return decode.toDataURL(data);\n            }\n            try {\n                // FIXME: IOS设备Uint8Array转base64时间较长，使用图片缓存形式速度会更快\n                const filePath = path.resolve(filename, prefix);\n                await local.write(decode.toBuffer(data), filePath);\n                cachedImages.add(filePath);\n                return filePath;\n            }\n            catch (ex) {\n                console.warn(`图片缓存失败：${ex.message}`);\n                return decode.toDataURL(data);\n            }\n        };\n        return {\n            isImage: (data) => !!(data &&\n                data.src !== undefined &&\n                data.width !== undefined &&\n                data.height !== undefined),\n            isImageBitmap: (_) => false,\n            create: createImage,\n            load: async (data, filename, prefix) => {\n                const src = await genImageSource(data, filename, prefix);\n                return loadImage(createImage(), src);\n            },\n        };\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\nexport default definePlugin({\n    name: \"now\",\n    install() {\n        const { env, br } = this.globals;\n        // performance可以提供更高精度的时间测量，且不受系统时间的调整（如更改系统时间或同步时间）的影响\n        const perf = env === \"h5\" ? performance : env === \"tt\" ? br.performance : br.getPerformance();\n        if (typeof perf?.now === \"function\") {\n            // 数值差别大，说明perf.now()获得的是高精度的时间戳\n            if (perf.now() - Date.now() > 0) {\n                // this.global.isPerf = true;\n                // 微信小程序和支付宝小程序的performance.now()获取的是当前时间戳，单位是微秒。\n                return () => perf.now() / 1000;\n            }\n            // H5环境下，performance.now()获取的不是当前时间戳，而是从页面加载开始的时间戳，单位是毫秒。\n            return () => perf.now();\n        }\n        return () => Date.now();\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\n/**\n * 用于创建离屏canvas\n * @returns\n */\nexport default definePlugin({\n    name: \"getOfsCanvas\",\n    install() {\n        const { env } = this.globals;\n        let createOffscreenCanvas;\n        if (env === \"h5\") {\n            createOffscreenCanvas = (options) => new OffscreenCanvas(options.width, options.height);\n        }\n        else if (env === \"alipay\") {\n            createOffscreenCanvas = (options) => my.createOffscreenCanvas({\n                width: options.width,\n                height: options.height,\n            });\n        }\n        else if (env === \"tt\") {\n            createOffscreenCanvas = (options) => {\n                const canvas = tt.createOffscreenCanvas();\n                canvas.width = options.width;\n                canvas.height = options.height;\n                return canvas;\n            };\n        }\n        else {\n            createOffscreenCanvas = (options) => wx.createOffscreenCanvas({\n                ...options,\n                type: \"2d\",\n            });\n        }\n        return (options) => {\n            const canvas = createOffscreenCanvas(options);\n            const context = canvas.getContext(\"2d\");\n            return {\n                canvas,\n                context,\n            };\n        };\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\n/**\n * 用于处理文件路径\n * @returns\n */\nexport default definePlugin({\n    name: \"path\",\n    install() {\n        const { env, br } = this.globals;\n        const filename = (path) => path.substring(path.lastIndexOf('/') + 1);\n        if (env === \"h5\") {\n            return {\n                USER_DATA_PATH: \"\",\n                filename,\n                resolve: (_filename, _prefix) => \"\",\n            };\n        }\n        const { USER_DATA_PATH } = env === \"tt\"\n            ? tt.getEnvInfoSync().common\n            : br.env;\n        return {\n            USER_DATA_PATH,\n            filename,\n            resolve: (filename, prefix) => `${USER_DATA_PATH}/${prefix ? `${prefix}.` : \"\"}${filename}`,\n        };\n    },\n});\n","import { definePlugin } from \"../definePlugin\";\n/**\n * 用于处理requestAnimationFrame\n * @returns\n */\nexport default definePlugin({\n    name: \"rAF\",\n    dependencies: [\"now\"],\n    install() {\n        const { env } = this.globals;\n        function requestAnimationFrameImpl() {\n            return (callback) => setTimeout(callback, Math.max(0, 16 - (Date.now() % 16)));\n        }\n        if (env === \"h5\") {\n            const rAF = \"requestAnimationFrame\" in globalThis\n                ? globalThis.requestAnimationFrame\n                : requestAnimationFrameImpl();\n            return (callback) => rAF(callback);\n        }\n        let canvas = null;\n        return (callback) => {\n            // 检查canvas是否存在\n            if (!canvas) {\n                canvas = this.getGlobalCanvas();\n                if (canvas === null) {\n                    throw new Error(\"requestAnimationFrame is not ready, please call `platform.setGlobalCanvas` first\");\n                }\n            }\n            return canvas.requestAnimationFrame?.(callback);\n        };\n    },\n});\n"],"names":["noop","retry","async","fn","intervals","times","err","length","callback","interval","Promise","resolve","setTimeout","utf8","buffer","start","end","RangeError","codes","asciiCodes","Array","fromCharCode","String","asciiPos","i","t","push","slice","codePoint","join","Platform","plugins","globalCanvas","platformVersion","version","globals","env","br","dpr","constructor","this","autoEnv","init","useBridge","usePixelRatio","reduce","acc","plugin","name","pluginNames","map","usePlugins","window","tt","my","wx","Error","globalThis","devicePixelRatio","getWindowInfo","pixelRatio","getSystemInfoSync","installedPlugins","forEach","pluginName","undefined","isArray","dependencies","dependency","install","installPlugin","setGlobalCanvas","canvas","getGlobalCanvas","definePlugin","pluginCanvas","initCanvas","width","height","MAX_SIZE","context","getContext","virtualWidth","virtualHeight","querySelector","selector","document","clientWidth","clientHeight","component","reject","query","createSelectorQuery","in","select","fields","node","size","res","e","exec","pluginDecode","b64Wrap","b64","type","decode","toBuffer","data","byteOffset","byteLength","bytesToString","result","chunk","apply","from","textDecoder","TextDecoder","fatal","toDataURL","btoa","subarray","arrayBufferToBase64","pluginDownload","isRemote","url","test","is","fetch","then","response","ok","arrayBuffer","status","statusText","download","enableCache","request","dataType","responseType","success","fail","catch","errorMessage","errMsg","message","includes","pluginFsm","fsm","getFileSystemManager","write","filePath","writeFile","read","readFile","remove","unlink","pluginImage","local","path","cachedImages","Set","loadImage","img","src","onload","has","delete","onerror","createImage","Image","genImageSource","isImage","isImageBitmap","ImageBitmap","create","load","_filename","_prefix","Uint8Array","createImageBitmap","Blob","_","filename","prefix","add","ex","console","warn","pluginNow","perf","performance","getPerformance","now","Date","pluginOfsCanvas","createOffscreenCanvas","options","OffscreenCanvas","pluginPath","substring","lastIndexOf","USER_DATA_PATH","getEnvInfoSync","common","pluginRaf","rAF","requestAnimationFrame","Math","max"],"mappings":"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"}