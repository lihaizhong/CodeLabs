{"version":3,"file":"index.js","sources":["../src/extensions/noop.ts","../src/extensions/retry.ts","../src/extensions/utf8.ts","../src/platform.ts","../src/definePlugin.ts","../src/installPlugin.ts","../src/plugins/plugin-selector.ts","../src/plugins/plugin-canvas.ts","../src/plugins/plugin-decode.ts","../src/plugins/plugin-download.ts","../src/plugins/plugin-fsm.ts","../src/plugins/plugin-image.ts","../src/plugins/plugin-now.ts","../src/plugins/plugin-ofs-canvas.ts","../src/plugins/plugin-path.ts","../src/plugins/plugin-raf.ts","../src/plugins/plugin-intersection-observer.ts"],"sourcesContent":["export const noop = (() => {}) as <T = void>() => T;\n","function delay<T>(\n  callback: () => T | Promise<T>,\n  interval: number\n): Promise<T> {\n  return new Promise<T>((resolve) =>\n    setTimeout(() => resolve(callback()), interval)\n  );\n}\n\nexport async function retry<T>(\n  fn: () => T | Promise<T>,\n  intervals: number[] = [],\n  /*\n   * @private 不建议外部传入\n   */\n  times: number = 0\n): Promise<T> {\n  try {\n    return fn();\n  } catch (err) {\n    if (times >= intervals.length) {\n      throw err;\n    }\n\n    return delay<T>(() => retry<T>(fn, intervals, ++times), intervals[times]);\n  }\n}\n","// 使用静态缓冲区，避免重复创建\nconst BUFFER_SIZE = 4096; // 更大的缓冲区，减少字符串拼接次数\nconst STATIC_BUFFER = new Uint16Array(BUFFER_SIZE); // 预分配ASCII缓冲区\n\n/**\n * 优化的 UTF-8 解码函数\n * 主要优化点：\n * 1. 使用静态缓冲区减少内存分配\n * 2. 批量处理 ASCII 字符\n * 3. 优化循环结构和条件判断\n * 4. 使用 Uint16Array 代替普通数组提高性能\n */\nexport function utf8(buffer: Uint8Array, start: number, end: number): string {\n  // 边界检查\n  if (start < 0 || end > buffer.length) throw new RangeError(\"Index out of range\");\n  if (end - start < 1) return \"\";\n  \n  const resultParts: string[] = [];\n  let bufferPos = 0;\n  const appendBuffer = (parts: Uint16Array) => {\n    resultParts.push(String.fromCharCode.apply(null, Array.from(parts)));\n  };\n  \n  // 快速路径：检查是否全是 ASCII\n  let allAscii = true;\n  for (let i = start; i < end; i++) {\n    if (buffer[i] > 0x7F) {\n      allAscii = false;\n      break;\n    }\n  }\n  \n  // 全 ASCII 优化路径\n  if (allAscii) {\n    for (let i = start; i < end; i += BUFFER_SIZE) {\n      const chunkEnd = Math.min(i + BUFFER_SIZE, end);\n      const len = chunkEnd - i;\n      \n      // 直接复制到 Uint16Array\n      for (let j = 0; j < len; j++) {\n        STATIC_BUFFER[j] = buffer[i + j];\n      }\n      \n      appendBuffer(STATIC_BUFFER.subarray(0, len));\n    }\n    return resultParts.join('');\n  }\n  \n  // 混合内容处理\n  for (let i = start; i < end;) {\n    const byte = buffer[i++];\n    \n    // ASCII 字符处理\n    if (byte < 0x80) {\n      STATIC_BUFFER[bufferPos++] = byte;\n      \n      // 如果缓冲区满了，提交并清空\n      if (bufferPos === BUFFER_SIZE) {\n        appendBuffer(STATIC_BUFFER);\n        bufferPos = 0;\n      }\n      continue;\n    }\n    \n    // 提交之前的 ASCII 字符\n    if (bufferPos > 0) {\n      appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n      bufferPos = 0;\n    }\n    \n    // 变长编码处理 - 使用查表法代替多个条件判断\n    let codePoint: number;\n    \n    // 2 字节序列: 110xxxxx 10xxxxxx\n    if ((byte & 0xE0) === 0xC0 && i < end) {\n      codePoint = ((byte & 0x1F) << 6) | (buffer[i++] & 0x3F);\n    }\n    // 3 字节序列: 1110xxxx 10xxxxxx 10xxxxxx\n    else if ((byte & 0xF0) === 0xE0 && i + 1 < end) {\n      codePoint = ((byte & 0x0F) << 12) |\n                 ((buffer[i++] & 0x3F) << 6) |\n                 (buffer[i++] & 0x3F);\n    }\n    // 4 字节序列: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n    else if ((byte & 0xF8) === 0xF0 && i + 2 < end) {\n      codePoint = ((byte & 0x07) << 18) |\n                 ((buffer[i++] & 0x3F) << 12) |\n                 ((buffer[i++] & 0x3F) << 6) |\n                 (buffer[i++] & 0x3F);\n                 \n      // 处理 Unicode 代理对\n      if (codePoint > 0xFFFF) {\n        codePoint -= 0x10000;\n        STATIC_BUFFER[bufferPos++] = 0xD800 + (codePoint >> 10);\n        STATIC_BUFFER[bufferPos++] = 0xDC00 + (codePoint & 0x3FF);\n        \n        // 检查缓冲区是否需要提交\n        if (bufferPos >= BUFFER_SIZE - 2) { // 预留空间给下一个可能的代理对\n          appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n          bufferPos = 0;\n        }\n        continue;\n      }\n    }\n    // 无效的 UTF-8 序列\n    else {\n      codePoint = 0xFFFD; // Unicode 替换字符\n      // 跳过可能的后续字节\n      while (i < end && (buffer[i] & 0xC0) === 0x80) i++;\n    }\n    \n    STATIC_BUFFER[bufferPos++] = codePoint;\n    \n    // 检查缓冲区是否需要提交\n    if (bufferPos >= BUFFER_SIZE - 3) { // 预留空间给下一个可能的多字节字符\n      appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n      bufferPos = 0;\n    }\n  }\n  \n  // 提交剩余字符\n  if (bufferPos > 0) {\n    appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n  }\n  \n  return resultParts.join('');\n}\n","import { noop, retry } from \"./extensions\";\nimport type { OctopusPlatformPluginOptions } from \"./definePlugin\";\nimport type { OctopusPlatformPlugins } from \"./typings\";\n\nexport type OctopusSupportedPlatform =\n  | \"weapp\"\n  | \"alipay\"\n  | \"tt\"\n  | \"h5\"\n  | \"unknown\";\n\nexport interface OctopusPlatformGlobals {\n  env: OctopusSupportedPlatform;\n  br: any;\n  dpr: number;\n  system: string;\n}\n\nexport type OctopusPlatformWithDependencies<\n  N extends keyof OctopusPlatformPlugins,\n  D extends keyof OctopusPlatformPlugins = never\n> = OctopusPlatform<N> & {\n  [K in D]: OctopusPlatformPlugins[K];\n};\n\nexport abstract class OctopusPlatform<\n  N extends keyof OctopusPlatformPlugins\n> {\n  /**\n   * 插件列表\n   */\n  private plugins: OctopusPlatformPluginOptions<N, N>[] = [];\n\n  /**\n   * 平台版本\n   */\n  public platformVersion: string = __VERSION__;\n\n  /**\n   * 应用版本\n   */\n  public version: string = \"\";\n\n  /**\n   * 全局变量\n   */\n  public globals: OctopusPlatformGlobals = {\n    env: \"unknown\",\n    br: null,\n    dpr: 1,\n    system: \"unknown\",\n  };\n\n  public noop = noop;\n\n  public retry = retry;\n\n  constructor(plugins: OctopusPlatformPluginOptions<N, N>[], version?: string) {\n    this.version = version || \"\";\n    this.plugins = plugins;\n    this.globals.env = this.autoEnv();\n  }\n\n  protected init(): void {\n    const { globals, plugins } = this;\n    const collection: Map<N, OctopusPlatformPluginOptions<N, N>> = new Map();\n    const names: N[] = [];\n    const installedPlugins: Set<N> = new Set();\n\n    globals.br = this.useBridge();\n    globals.dpr = this.usePixelRatio();\n    globals.system = this.useSystem();\n\n    for (const plugin of plugins) {\n      names.push(plugin.name);\n      collection.set(plugin.name, plugin);\n    }\n\n    this.usePlugins(collection, names, installedPlugins);\n    installedPlugins.clear();\n  }\n\n  private autoEnv(): OctopusSupportedPlatform | never {\n    // FIXME：由于抖音场景支持wx对象，所以需要放在wx对象之前检查\n    if (typeof window !== \"undefined\") {\n      return \"h5\";\n    }\n\n    if (typeof tt !== \"undefined\") {\n      return \"tt\";\n    }\n\n    if (typeof my !== \"undefined\") {\n      return \"alipay\";\n    }\n\n    if (typeof wx !== \"undefined\") {\n      return \"weapp\";\n    }\n\n    throw new Error(\"Unsupported platform！\");\n  }\n\n  private useBridge() {\n    switch (this.globals.env) {\n      case \"alipay\":\n        return my;\n      case \"tt\":\n        return tt;\n      case \"weapp\":\n        return wx;\n      default:\n    }\n\n    return globalThis;\n  }\n\n  private usePixelRatio(): number {\n    const { env, br } = this.globals;\n\n    if (env === \"h5\") {\n      return devicePixelRatio;\n    }\n\n    if (\"getWindowInfo\" in br) {\n      return (br as any).getWindowInfo().pixelRatio;\n    }\n\n    if (\"getSystemInfoSync\" in br) {\n      return br.getSystemInfoSync().pixelRatio;\n    }\n\n    return 1;\n  }\n\n  private useSystem() {\n    const { env } = this.globals;\n    let system: string;\n\n    switch (env) {\n      case \"weapp\":\n        system = wx.getDeviceInfo().platform as string;\n        break;\n      case \"alipay\":\n        system = my.getDeviceBaseInfo().platform as string;\n        break;\n      case \"tt\":\n        system = tt.getDeviceInfoSync().platform as string;\n        break;\n      default:\n        system = \"unknown\";\n    }\n\n    return system.toLowerCase();\n  }\n\n  private usePlugins(\n    plugins: Map<N, OctopusPlatformPluginOptions<N, N>>,\n    pluginNames: N[],\n    installedPlugins: Set<N>\n  ): void {\n    for (const pluginName of pluginNames) {\n      if (!plugins.has(pluginName)) {\n        throw new Error(`Plugin ${pluginName} not found`);\n      }\n\n      if (installedPlugins.has(pluginName)) {\n        return;\n      }\n\n      const plugin = plugins.get(pluginName) as OctopusPlatformPluginOptions<N, N>;\n\n      // 递归调用依赖\n      if (Array.isArray(plugin.dependencies)) {\n        for (const dependency of plugin.dependencies) {\n          if (typeof plugins.get(dependency)?.install !== \"function\") {\n            throw new Error(\n              `Plugin ${pluginName} depends on plugin ${dependency}, but ${dependency} is not found`\n            );\n          }\n        }\n\n        // 递归加载依赖\n        this.usePlugins(plugins, plugin.dependencies, installedPlugins);\n      }\n\n      this.installPlugin(plugin);\n      installedPlugins.add(pluginName);\n    }\n  }\n\n  abstract installPlugin(plugin: OctopusPlatformPluginOptions<N, N>): void;\n\n  public switch(env: OctopusSupportedPlatform): void {\n    this.globals.env = env;\n    this.init();\n  }\n}\n","import type { OctopusPlatformWithDependencies } from \"./platform\";\nimport type { OctopusPlatformPlugins } from \"./typings\";\n\n/**\n * 平台插件选项接口\n */\nexport interface OctopusPlatformPluginOptions<\n  N extends keyof OctopusPlatformPlugins,\n  D extends keyof OctopusPlatformPlugins = never\n> {\n  name: N;\n  dependencies?: D[];\n  install: (this: OctopusPlatformWithDependencies<N, D>) => OctopusPlatformPlugins[N];\n}\n\n/**\n * 定义平台插件\n */\nexport const definePlugin = <\n  N extends keyof OctopusPlatformPlugins,\n  D extends keyof OctopusPlatformPlugins = never\n>(\n  plugin: OctopusPlatformPluginOptions<N, D>\n) => plugin;\n","import type { OctopusPlatformWithDependencies } from \"./platform\";\nimport type { OctopusPlatformPluginOptions } from \"./definePlugin\";\nimport type { OctopusPlatformPlugins } from \"./typings\";\n\nexport function installPlugin<Props extends keyof OctopusPlatformPlugins>(\n  platform: OctopusPlatformWithDependencies<Props, never>,\n  plugin: OctopusPlatformPluginOptions<Props>\n) {\n  const value = plugin.install.call(platform);\n\n  Object.defineProperty(platform, plugin.name, {\n    get: () => value,\n    enumerable: true,\n    configurable: true,\n  });\n}\n","import { definePlugin } from \"../definePlugin\";\n\nexport default definePlugin<\"getSelector\">({\n  name: \"getSelector\",\n  install() {\n    const { env, br } = this.globals;\n\n    if (env === \"h5\") {\n      return (selector: string) => document.querySelector(selector);\n    }\n\n    return (selector: string, component?: any) =>\n      (component || br)\n        .createSelectorQuery()\n        .select(selector)\n        .fields({ node: true, size: true });\n  },\n});\n","import type { GetCanvasResult, PlatformCanvas } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 通过选择器匹配获取canvas实例\n * @returns\n */\nexport default definePlugin<\"getCanvas\", \"getSelector\">({  \n  name: \"getCanvas\",\n  dependencies: [\"getSelector\"],\n  install() {\n    const { retry, getSelector } = this;\n    const { env, br, dpr } = this.globals;\n    const intervals = [50, 100, 100];\n\n    function initCanvas(\n      canvas: PlatformCanvas | null,\n      width: number,\n      height: number\n    ): GetCanvasResult {\n      if (!canvas) {\n        throw new Error(\"canvas not found.\");\n      }\n\n      // const MAX_SIZE = 1365;\n      const context = canvas!.getContext(\"2d\")!;\n      // let virtualWidth = width * dpr;\n      // let virtualHeight = height * dpr;\n\n      // // 微信小程序限制canvas最大尺寸为 1365 * 1365\n      // if (\n      //   env === \"weapp\" &&\n      //   (virtualWidth > MAX_SIZE || virtualHeight > MAX_SIZE)\n      // ) {\n      //   if (virtualWidth > virtualHeight) {\n      //     virtualHeight = (virtualHeight / virtualWidth) * MAX_SIZE;\n      //     virtualWidth = MAX_SIZE;\n      //   } else {\n      //     virtualWidth = (virtualWidth / virtualHeight) * MAX_SIZE;\n      //     virtualHeight = MAX_SIZE;\n      //   }\n      // }\n\n      // canvas!.width = virtualWidth;\n      // canvas!.height = virtualHeight;\n\n      canvas!.width = width * dpr;\n      canvas!.height = height * dpr;\n\n      return { canvas, context };\n    }\n\n    if (env === \"h5\") {\n      return (selector: string) =>\n        retry<GetCanvasResult>(() => {\n          // FIXME: Taro 对 canvas 做了特殊处理，canvas 元素的 id 会被加上 canvas-id 的前缀\n          const canvas = (getSelector(\n            `canvas[canvas-id=${selector.slice(1)}]`\n          ) || getSelector(selector)) as HTMLCanvasElement;\n\n          return initCanvas(canvas, canvas?.clientWidth, canvas?.clientHeight);\n        }, intervals);\n    }\n\n    return (selector: string, component?: any) =>\n      retry<GetCanvasResult>(\n        () =>\n          new Promise<GetCanvasResult>((resolve, reject) => {\n            let query = getSelector(selector, component);\n\n            query.exec((res: any) => {\n              const { node, width, height } = res[0] || {};\n\n              try {\n                resolve(initCanvas(node, width, height));\n              } catch (e) {\n                reject(e);\n              }\n            });\n          }),\n        intervals\n      );\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\nimport { utf8 } from \"../extensions/utf8\";\n\n/**\n * 用于处理数据解码\n * @returns\n */\nexport default definePlugin<\"decode\">({\n  name: \"decode\",\n  install() {\n    const { env, br } = this.globals;\n    const b64Wrap = (b64: string, type: string = \"image/png\") =>\n      `data:${type};base64,${b64}`;\n    const decode = {\n      toBuffer(data: Uint8Array): ArrayBuffer {\n        const { buffer, byteOffset, byteLength } = data;\n\n        if (buffer instanceof ArrayBuffer) {\n          return buffer.slice(byteOffset, byteOffset + byteLength);\n        }\n\n        const view = new Uint8Array(byteLength);\n\n        view.set(data);\n\n        return view.buffer;\n      },\n      bytesToString(data: Uint8Array): string {\n        const chunkSize = 8192; // 安全的块大小\n        let result = \"\";\n\n        for (let i = 0; i < data.length; i += chunkSize) {\n          const chunk = data.slice(i, i + chunkSize);\n\n          // 在安全的块上使用 String.fromCharCode\n          result += String.fromCharCode.apply(null, Array.from(chunk));\n        }\n\n        return result;\n      },\n    };\n\n    if (env === \"h5\") {\n      const textDecoder = new TextDecoder(\"utf-8\", { fatal: true });\n\n      return {\n        ...decode,\n        toDataURL: (data: Uint8Array) =>\n          b64Wrap(btoa(decode.bytesToString(data))),\n        utf8: (data: Uint8Array, start: number, end: number) =>\n          textDecoder.decode(data.subarray(start, end)),\n      };\n    }\n\n    return {\n      ...decode,\n      toDataURL: (data: Uint8Array) =>\n        b64Wrap((br as any).arrayBufferToBase64(decode.toBuffer(data))),\n      utf8,\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理远程文件读取\n * @returns\n */\nexport default definePlugin<\"remote\">({  \n  name: \"remote\",\n  install() {\n    const { env, br } = this.globals;\n    const isRemote = (url: string) => /^(blob:)?http(s)?:\\/\\//.test(url);\n\n    if (env === \"h5\") {\n      return {\n        is: isRemote,\n        fetch: (url: string) =>\n          fetch(url).then((response) => {\n            if (response.ok) {\n              return response.arrayBuffer();\n            }\n\n            throw new Error(\n              `HTTP error, status=${response.status}, statusText=${response.statusText}`\n            );\n          }),\n      };\n    }\n\n    function download(url: string, enableCache: boolean): Promise<ArrayBuffer> {\n      return new Promise<ArrayBuffer>((resolve, reject) => {\n        br.request({\n          url,\n          // @ts-ignore 支付宝小程序必须有该字段\n          dataType: \"arraybuffer\",\n          responseType: \"arraybuffer\",\n          enableCache,\n          success: (res: any) => resolve(res.data),\n          fail: reject,\n        });\n      }).catch((err) => {\n        const errorMessage = err.errMsg || err.errorMessage || err.message;\n        // FIXME: 可能存在写入网络缓存空间失败的情况，此时重新下载\n        if (\n          errorMessage.includes(\"ERR_CACHE_WRITE_FAILURE\") ||\n          errorMessage.includes(\"ERR_CACHE_WRITE_FAILED\")\n        ) {\n          return download(url, false);\n        }\n\n        throw err;\n      });\n    }\n\n    return {\n      is: isRemote,\n      fetch: (url: string) => download(url, true),\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理本地文件存储\n * @returns\n */\nexport default definePlugin<\"local\">({\n  name: \"local\",\n  install() {\n    const { env, br } = this.globals;\n\n    if (env === \"h5\" || env === \"tt\") {\n      return null;\n    }\n\n    const fsm = br.getFileSystemManager();\n\n    return {\n      exists: (filepath: string) =>\n        new Promise<boolean>((resolve) => {\n          fsm!.access({\n            path: filepath,\n            success: () => resolve(true),\n            fail: () => resolve(false),\n          });\n        }),\n      write: (data: ArrayBufferLike, filePath: string) =>\n        new Promise<string>((resolve, reject) => {\n          fsm!.writeFile({\n            filePath,\n            data,\n            success: () => resolve(filePath),\n            fail: reject,\n          });\n        }),\n      read: (filePath: string) =>\n        new Promise((resolve, reject) => {\n          fsm!.readFile({\n            filePath,\n            success: (res: any) => resolve(res.data),\n            fail: reject,\n          });\n        }),\n      remove: (filePath: string) =>\n        new Promise((resolve, reject) => {\n          fsm!.unlink({\n            filePath,\n            success: () => resolve(filePath),\n            fail: reject,\n          });\n        }),\n    };\n  },\n});\n","import type {\n  MiniProgramCanvas,\n  MiniProgramOffscreenCanvas,\n  PlatformCanvas,\n  PlatformImage,\n  PlatformOffscreenCanvas,\n} from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 图片加载插件\n * @package plugin-fsm 本地文件存储能力\n * @package plugin-path 路径处理能力\n * @package plugin-decode 解码能力\n */\nexport default definePlugin<\"image\", \"local\" | \"decode\">({  \n  name: \"image\",\n  dependencies: [\"local\", \"decode\"],\n  install() {\n    const { local, decode } = this;\n    const { env } = this.globals;\n    let genImageSource: (\n      data: Uint8Array | string,\n      filepath: string\n    ) => Promise<string> | string = (\n      data: Uint8Array | string,\n      _filepath: string\n    ) => (typeof data === \"string\" ? data : decode.toDataURL(data));\n\n    /**\n     * 加载图片\n     * @param img\n     * @param url\n     * @returns\n     */\n    function loadImage(img: PlatformImage, url: string) {\n      return new Promise<PlatformImage>((resolve, reject) => {\n        img.onload = () => resolve(img);\n        img.onerror = () => reject(new Error(`SVGA LOADING FAILURE: ${url}`));\n        img.src = url;\n      });\n    }\n\n    function releaseImage(img: PlatformImage) {\n      img.onload = null;\n      img.onerror = null;\n      img.src = \"\";\n    }\n\n    if (env === \"h5\") {\n      return {\n        create: (_: PlatformCanvas | PlatformOffscreenCanvas) => new Image(),\n        load: (\n          createImage: () => HTMLImageElement,\n          data: ImageBitmap | Uint8Array | string,\n          filepath: string\n        ) => {\n          // 由于ImageBitmap在图片渲染上有优势，故优先使用\n          if (data instanceof Uint8Array && \"createImageBitmap\" in globalThis) {\n            return createImageBitmap(new Blob([decode.toBuffer(data)]));\n          }\n\n          if (data instanceof ImageBitmap) {\n            return Promise.resolve(data);\n          }\n\n          return loadImage(\n            createImage(),\n            genImageSource(data as Uint8Array | string, filepath) as string\n          );\n        },\n        release: releaseImage,\n      };\n    }\n\n    // FIXME: 支付宝小程序IDE保存临时文件会失败;抖音最大用户文件大小为10M\n    if (env === \"weapp\") {\n      genImageSource = async (data: Uint8Array | string, filepath: string) => {\n        if (typeof data === \"string\") {\n          return data;\n        }\n\n        // FIXME: IOS设备 微信小程序 Uint8Array转base64 时间较长，使用图片缓存形式速度会更快\n        return local!\n          .write(decode.toBuffer(data), filepath)\n          .catch((ex: any) => {\n            console.warn(\n              `image write fail: ${ex.errorMessage || ex.errMsg || ex.message}`\n            );\n            return decode.toDataURL(data);\n          });\n      };\n    }\n\n    return {\n      create: (canvas: PlatformCanvas | PlatformOffscreenCanvas) =>\n        (\n          canvas as MiniProgramCanvas | MiniProgramOffscreenCanvas\n        ).createImage(),\n      load: async (\n        createImage: () => HTMLImageElement,\n        data: ImageBitmap | Uint8Array | string,\n        filepath: string\n      ) =>\n        loadImage(\n          createImage(),\n          await genImageSource(data as Uint8Array | string, filepath)\n        ),\n      release: releaseImage,\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\nexport default definePlugin<\"now\">({  \n  name: \"now\",\n  install() {\n    const { env, br } = this.globals;\n    // performance可以提供更高精度的时间测量，且不受系统时间的调整（如更改系统时间或同步时间）的影响\n    const perf =\n      env === \"h5\" || env === \"tt\" ? performance : br.getPerformance();\n\n    if (typeof perf?.now === \"function\") {\n      // 支付宝小程序的performance.now()获取的是当前时间戳，单位是微秒。\n      if (perf.now() - Date.now() > 1) {\n        return () => perf.now() / 1000;\n      }\n\n      // H5环境下，performance.now()获取的不是当前时间戳，而是从页面加载开始的时间戳，单位是毫秒。\n      return () => perf.now();\n    }\n\n    return () => Date.now();\n  },\n});\n","import type { OffscreenCanvasOptions } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于创建离屏canvas\n * @returns\n */\nexport default definePlugin<\"getOfsCanvas\">({  \n  name: \"getOfsCanvas\",\n  install() {\n    const { env } = this.globals;\n    let createOffscreenCanvas;\n\n    if (env === \"h5\") {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => new OffscreenCanvas(options.width, options.height);\n    } else if (env === \"alipay\") {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => my.createOffscreenCanvas(options);\n    } else if (env === \"tt\") {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => {\n        const canvas = tt.createOffscreenCanvas();\n\n        canvas.width = options.width;\n        canvas.height = options.height;\n\n        return canvas;\n      };\n    } else {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => wx.createOffscreenCanvas(options);\n    }\n\n    return (options: OffscreenCanvasOptions) => {\n      const type = options.type || \"2d\";\n      const canvas = createOffscreenCanvas({ ...options, type });\n      const context = canvas.getContext(type);\n\n      return {\n        canvas,\n        context,\n      };\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理文件路径\n * @returns\n */\nexport default definePlugin<\"path\">({  \n  name: \"path\",\n  install() {\n    const { env, br } = this.globals;\n    const filename = (path: string) => {\n      const filepath = path.split(/\\?#/g)[0];\n\n      return filepath.substring(filepath.lastIndexOf(\"/\") + 1)\n    };\n\n    if (env === \"h5\" || env === \"tt\") {\n      return {\n        USER_DATA_PATH: \"\",\n        is: (_: string) => false,\n        filename,\n        resolve: (filename: string, prefix?: string) => \"\",\n      };\n    }\n\n    const { USER_DATA_PATH } = br.env;\n\n    return {\n      USER_DATA_PATH,\n      is: (filepath: string) => filepath?.startsWith(USER_DATA_PATH),\n      filename,\n      resolve: (filename: string, prefix?: string) =>\n        `${USER_DATA_PATH}/${prefix ? `${prefix}__` : \"\"}${filename}`,\n    };\n  },\n});\n","import type { MiniProgramCanvas, PlatformCanvas } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理requestAnimationFrame\n * @returns\n */\nexport default definePlugin<\"rAF\">({  \n  name: \"rAF\",\n  install() {\n    const { env } = this.globals;\n\n    function requestAnimationFrameImpl(): (callback: () => void) => number {\n      return (callback: () => void) =>\n        setTimeout(\n          callback,\n          Math.max(0, 16 - (Date.now() % 16))\n        ) as unknown as number;\n    }\n\n    if (env === \"h5\") {\n      const rAF =\n        \"requestAnimationFrame\" in globalThis\n          ? requestAnimationFrame\n          : requestAnimationFrameImpl();\n\n      return (_: PlatformCanvas, callback: () => void) => rAF(callback);\n    }\n\n    return (canvas: PlatformCanvas, callback: () => void) => {\n      // 检查canvas是否存在\n      try {\n        return (canvas as MiniProgramCanvas).requestAnimationFrame(callback);\n      } catch (error: any) {\n        console.warn(error.message);\n        return requestAnimationFrameImpl()(callback);\n      }\n    };\n  },\n});\n","import type { MiniProgramIntersectionObserver, WalkInOptions } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\nexport default definePlugin<\"walkIn\">({\n  name: \"walkIn\",\n  install() {\n    const { env, br } = this.globals;\n    const thresholds = [0, 0.5, 1];\n\n    if (env === \"h5\") {\n      return (\n        callback: (isBeIntersection: boolean) => void,\n        selector: string,\n        options: WalkInOptions = {}\n      ) => {\n        let observer: IntersectionObserver | null = new IntersectionObserver(\n          (entries) => callback(entries[0].intersectionRatio > 0),\n          {\n            threshold: thresholds,\n            root: options.root ? document.querySelector(options.root) : null,\n          }\n        );\n\n        if (options.observeAll) {\n          document.querySelectorAll(selector)?.forEach((element) => observer!.observe(element));\n        } else {\n          const element = document.querySelector(selector);\n\n          if (element) {\n            observer!.observe(element);\n          }\n        }\n\n        return () => {\n          observer!.disconnect();\n          observer = null;\n        };\n      };\n    }\n\n    return (\n      callback: (isBeIntersection: boolean) => void,\n      selector: string,\n      options: WalkInOptions = {}\n    ) => {\n      let observer: MiniProgramIntersectionObserver | null = br.createIntersectionObserver(options.component, {\n        thresholds,\n        initialRatio: 0,\n        observeAll: options.observeAll,\n        // nativeMode: true,\n      });\n\n      if (options.root) {\n        observer!.relativeTo(options.root);\n      } else {\n        observer!.relativeToViewport();\n      }\n\n      observer!.observe(selector, (res: any) =>\n        callback(res.intersectionRatio > 0)\n      );\n\n      return () => {\n        observer!.disconnect();\n        observer = null;\n      };\n    };\n  },\n});\n"],"names":[],"mappings":"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"}