{"version":3,"file":"index.min.js","sources":["../src/extensions/noop.ts","../src/extensions/retry.ts","../src/extensions/utf8.ts","../src/platform.ts","../src/definePlugin.ts","../src/installPlugin.ts","../src/plugins/plugin-selector.ts","../src/plugins/plugin-canvas.ts","../src/plugins/plugin-decode.ts","../src/plugins/plugin-download.ts","../src/plugins/plugin-fsm.ts","../src/plugins/plugin-image.ts","../src/plugins/plugin-now.ts","../src/plugins/plugin-ofs-canvas.ts","../src/plugins/plugin-path.ts","../src/plugins/plugin-raf.ts","../src/plugins/plugin-intersection-observer.ts"],"sourcesContent":["export const noop = (() => {}) as <T = void>() => T;\n","function delay<T>(\n  callback: () => T | Promise<T>,\n  interval: number\n): Promise<T> {\n  return new Promise<T>((resolve) =>\n    setTimeout(() => resolve(callback()), interval)\n  );\n}\n\nexport async function retry<T>(\n  fn: () => T | Promise<T>,\n  intervals: number[] = [],\n  /*\n   * @private 不建议外部传入\n   */\n  times: number = 0\n): Promise<T> {\n  try {\n    return fn();\n  } catch (err) {\n    if (times >= intervals.length) {\n      throw err;\n    }\n\n    return delay<T>(() => retry<T>(fn, intervals, ++times), intervals[times]);\n  }\n}\n","// 使用静态缓冲区，避免重复创建\nconst BUFFER_SIZE = 4096; // 更大的缓冲区，减少字符串拼接次数\nconst STATIC_BUFFER = new Uint16Array(BUFFER_SIZE); // 预分配ASCII缓冲区\n\n/**\n * 优化的 UTF-8 解码函数\n * 主要优化点：\n * 1. 使用静态缓冲区减少内存分配\n * 2. 批量处理 ASCII 字符\n * 3. 优化循环结构和条件判断\n * 4. 使用 Uint16Array 代替普通数组提高性能\n */\nexport function utf8(buffer: Uint8Array, start: number, end: number): string {\n  // 边界检查\n  if (start < 0 || end > buffer.length) throw new RangeError(\"Index out of range\");\n  if (end - start < 1) return \"\";\n  \n  const resultParts: string[] = [];\n  let bufferPos = 0;\n  const appendBuffer = (parts: Uint16Array) => {\n    resultParts.push(String.fromCharCode.apply(null, Array.from(parts)));\n  };\n  \n  // 快速路径：检查是否全是 ASCII\n  let allAscii = true;\n  for (let i = start; i < end; i++) {\n    if (buffer[i] > 0x7F) {\n      allAscii = false;\n      break;\n    }\n  }\n  \n  // 全 ASCII 优化路径\n  if (allAscii) {\n    for (let i = start; i < end; i += BUFFER_SIZE) {\n      const chunkEnd = Math.min(i + BUFFER_SIZE, end);\n      const len = chunkEnd - i;\n      \n      // 直接复制到 Uint16Array\n      for (let j = 0; j < len; j++) {\n        STATIC_BUFFER[j] = buffer[i + j];\n      }\n      \n      appendBuffer(STATIC_BUFFER.subarray(0, len));\n    }\n    return resultParts.join('');\n  }\n  \n  // 混合内容处理\n  for (let i = start; i < end;) {\n    const byte = buffer[i++];\n    \n    // ASCII 字符处理\n    if (byte < 0x80) {\n      STATIC_BUFFER[bufferPos++] = byte;\n      \n      // 如果缓冲区满了，提交并清空\n      if (bufferPos === BUFFER_SIZE) {\n        appendBuffer(STATIC_BUFFER);\n        bufferPos = 0;\n      }\n      continue;\n    }\n    \n    // 提交之前的 ASCII 字符\n    if (bufferPos > 0) {\n      appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n      bufferPos = 0;\n    }\n    \n    // 变长编码处理 - 使用查表法代替多个条件判断\n    let codePoint: number;\n    \n    // 2 字节序列: 110xxxxx 10xxxxxx\n    if ((byte & 0xE0) === 0xC0 && i < end) {\n      codePoint = ((byte & 0x1F) << 6) | (buffer[i++] & 0x3F);\n    }\n    // 3 字节序列: 1110xxxx 10xxxxxx 10xxxxxx\n    else if ((byte & 0xF0) === 0xE0 && i + 1 < end) {\n      codePoint = ((byte & 0x0F) << 12) |\n                 ((buffer[i++] & 0x3F) << 6) |\n                 (buffer[i++] & 0x3F);\n    }\n    // 4 字节序列: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n    else if ((byte & 0xF8) === 0xF0 && i + 2 < end) {\n      codePoint = ((byte & 0x07) << 18) |\n                 ((buffer[i++] & 0x3F) << 12) |\n                 ((buffer[i++] & 0x3F) << 6) |\n                 (buffer[i++] & 0x3F);\n                 \n      // 处理 Unicode 代理对\n      if (codePoint > 0xFFFF) {\n        codePoint -= 0x10000;\n        STATIC_BUFFER[bufferPos++] = 0xD800 + (codePoint >> 10);\n        STATIC_BUFFER[bufferPos++] = 0xDC00 + (codePoint & 0x3FF);\n        \n        // 检查缓冲区是否需要提交\n        if (bufferPos >= BUFFER_SIZE - 2) { // 预留空间给下一个可能的代理对\n          appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n          bufferPos = 0;\n        }\n        continue;\n      }\n    }\n    // 无效的 UTF-8 序列\n    else {\n      codePoint = 0xFFFD; // Unicode 替换字符\n      // 跳过可能的后续字节\n      while (i < end && (buffer[i] & 0xC0) === 0x80) i++;\n    }\n    \n    STATIC_BUFFER[bufferPos++] = codePoint;\n    \n    // 检查缓冲区是否需要提交\n    if (bufferPos >= BUFFER_SIZE - 3) { // 预留空间给下一个可能的多字节字符\n      appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n      bufferPos = 0;\n    }\n  }\n  \n  // 提交剩余字符\n  if (bufferPos > 0) {\n    appendBuffer(STATIC_BUFFER.subarray(0, bufferPos));\n  }\n  \n  return resultParts.join('');\n}\n","import { noop, retry } from \"./extensions\";\nimport type { OctopusPlatformPluginOptions } from \"./definePlugin\";\nimport type { OctopusPlatformPlugins } from \"./typings\";\n\nexport type OctopusSupportedPlatform =\n  | \"weapp\"\n  | \"alipay\"\n  | \"tt\"\n  | \"h5\"\n  | \"unknown\";\n\nexport interface OctopusPlatformGlobals {\n  env: OctopusSupportedPlatform;\n  br: any;\n  dpr: number;\n  system: string;\n}\n\nexport type OctopusPlatformWithDependencies<\n  N extends keyof OctopusPlatformPlugins,\n  D extends keyof OctopusPlatformPlugins = never\n> = OctopusPlatform<N> & {\n  [K in D]: OctopusPlatformPlugins[K];\n};\n\nexport abstract class OctopusPlatform<\n  N extends keyof OctopusPlatformPlugins\n> {\n  /**\n   * 插件列表\n   */\n  private plugins: OctopusPlatformPluginOptions<N, N>[] = [];\n\n  /**\n   * 平台版本\n   */\n  public platformVersion: string = __VERSION__;\n\n  /**\n   * 应用版本\n   */\n  public version: string = \"\";\n\n  /**\n   * 全局变量\n   */\n  public globals: OctopusPlatformGlobals = {\n    env: \"unknown\",\n    br: null,\n    dpr: 1,\n    system: \"unknown\",\n  };\n\n  public noop = noop;\n\n  public retry = retry;\n\n  constructor(plugins: OctopusPlatformPluginOptions<N, N>[], version?: string) {\n    this.version = version || \"\";\n    this.plugins = plugins;\n    this.globals.env = this.autoEnv();\n  }\n\n  protected init(): void {\n    const { globals, plugins } = this;\n    const collection: Map<N, OctopusPlatformPluginOptions<N, N>> = new Map();\n    const names: N[] = [];\n    const installedPlugins: Set<N> = new Set();\n\n    globals.br = this.useBridge();\n    globals.dpr = this.usePixelRatio();\n    globals.system = this.useSystem();\n\n    for (const plugin of plugins) {\n      names.push(plugin.name);\n      collection.set(plugin.name, plugin);\n    }\n\n    this.usePlugins(collection, names, installedPlugins);\n    installedPlugins.clear();\n  }\n\n  private autoEnv(): OctopusSupportedPlatform | never {\n    // FIXME：由于抖音场景支持wx对象，所以需要放在wx对象之前检查\n    if (typeof window !== \"undefined\") {\n      return \"h5\";\n    }\n\n    if (typeof tt !== \"undefined\") {\n      return \"tt\";\n    }\n\n    if (typeof my !== \"undefined\") {\n      return \"alipay\";\n    }\n\n    if (typeof wx !== \"undefined\") {\n      return \"weapp\";\n    }\n\n    throw new Error(\"Unsupported platform！\");\n  }\n\n  private useBridge() {\n    switch (this.globals.env) {\n      case \"alipay\":\n        return my;\n      case \"tt\":\n        return tt;\n      case \"weapp\":\n        return wx;\n      default:\n    }\n\n    return globalThis;\n  }\n\n  private usePixelRatio(): number {\n    const { env, br } = this.globals;\n\n    if (env === \"h5\") {\n      return devicePixelRatio;\n    }\n\n    if (\"getWindowInfo\" in br) {\n      return (br as any).getWindowInfo().pixelRatio;\n    }\n\n    if (\"getSystemInfoSync\" in br) {\n      return br.getSystemInfoSync().pixelRatio;\n    }\n\n    return 1;\n  }\n\n  private useSystem() {\n    const { env } = this.globals;\n    let system: string;\n\n    switch (env) {\n      case \"weapp\":\n        system = wx.getDeviceInfo().platform as string;\n        break;\n      case \"alipay\":\n        system = my.getDeviceBaseInfo().platform as string;\n        break;\n      case \"tt\":\n        system = tt.getDeviceInfoSync().platform as string;\n        break;\n      default:\n        system = \"unknown\";\n    }\n\n    return system.toLowerCase();\n  }\n\n  private usePlugins(\n    plugins: Map<N, OctopusPlatformPluginOptions<N, N>>,\n    pluginNames: N[],\n    installedPlugins: Set<N>\n  ): void {\n    for (const pluginName of pluginNames) {\n      if (!plugins.has(pluginName)) {\n        throw new Error(`Plugin ${pluginName} not found`);\n      }\n\n      if (installedPlugins.has(pluginName)) {\n        return;\n      }\n\n      const plugin = plugins.get(pluginName) as OctopusPlatformPluginOptions<N, N>;\n\n      // 递归调用依赖\n      if (Array.isArray(plugin.dependencies)) {\n        for (const dependency of plugin.dependencies) {\n          if (typeof plugins.get(dependency)?.install !== \"function\") {\n            throw new Error(\n              `Plugin ${pluginName} depends on plugin ${dependency}, but ${dependency} is not found`\n            );\n          }\n        }\n\n        // 递归加载依赖\n        this.usePlugins(plugins, plugin.dependencies, installedPlugins);\n      }\n\n      this.installPlugin(plugin);\n      installedPlugins.add(pluginName);\n    }\n  }\n\n  abstract installPlugin(plugin: OctopusPlatformPluginOptions<N, N>): void;\n\n  public switch(env: OctopusSupportedPlatform): void {\n    this.globals.env = env;\n    this.init();\n  }\n}\n","import type { OctopusPlatformWithDependencies } from \"./platform\";\nimport type { OctopusPlatformPlugins } from \"./typings\";\n\n/**\n * 平台插件选项接口\n */\nexport interface OctopusPlatformPluginOptions<\n  N extends keyof OctopusPlatformPlugins,\n  D extends keyof OctopusPlatformPlugins = never\n> {\n  name: N;\n  dependencies?: D[];\n  install: (this: OctopusPlatformWithDependencies<N, D>) => OctopusPlatformPlugins[N];\n}\n\n/**\n * 定义平台插件\n */\nexport const definePlugin = <\n  N extends keyof OctopusPlatformPlugins,\n  D extends keyof OctopusPlatformPlugins = never\n>(\n  plugin: OctopusPlatformPluginOptions<N, D>\n) => plugin;\n","import type { OctopusPlatformWithDependencies } from \"./platform\";\nimport type { OctopusPlatformPluginOptions } from \"./definePlugin\";\nimport type { OctopusPlatformPlugins } from \"./typings\";\n\nexport function installPlugin<Props extends keyof OctopusPlatformPlugins>(\n  platform: OctopusPlatformWithDependencies<Props, never>,\n  plugin: OctopusPlatformPluginOptions<Props>\n) {\n  const value = plugin.install.call(platform);\n\n  Object.defineProperty(platform, plugin.name, {\n    get: () => value,\n    enumerable: true,\n    configurable: true,\n  });\n}\n","import { definePlugin } from \"../definePlugin\";\n\nexport default definePlugin<\"getSelector\">({\n  name: \"getSelector\",\n  install() {\n    const { env, br } = this.globals;\n\n    if (env === \"h5\") {\n      return (selector: string) => document.querySelector(selector);\n    }\n\n    return (selector: string, component?: any) =>\n      (component || br)\n        .createSelectorQuery()\n        .select(selector)\n        .fields({ node: true, size: true });\n  },\n});\n","import type { GetCanvasResult, PlatformCanvas } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 通过选择器匹配获取canvas实例\n * @returns\n */\nexport default definePlugin<\"getCanvas\", \"getSelector\">({  \n  name: \"getCanvas\",\n  dependencies: [\"getSelector\"],\n  install() {\n    const { retry, getSelector } = this;\n    const { env, br, dpr } = this.globals;\n    const intervals = [50, 100, 100];\n\n    function initCanvas(\n      canvas: PlatformCanvas | null,\n      width: number,\n      height: number\n    ): GetCanvasResult {\n      if (!canvas) {\n        throw new Error(\"canvas not found.\");\n      }\n\n      // const MAX_SIZE = 1365;\n      const context = canvas!.getContext(\"2d\")!;\n      // let virtualWidth = width * dpr;\n      // let virtualHeight = height * dpr;\n\n      // // 微信小程序限制canvas最大尺寸为 1365 * 1365\n      // if (\n      //   env === \"weapp\" &&\n      //   (virtualWidth > MAX_SIZE || virtualHeight > MAX_SIZE)\n      // ) {\n      //   if (virtualWidth > virtualHeight) {\n      //     virtualHeight = (virtualHeight / virtualWidth) * MAX_SIZE;\n      //     virtualWidth = MAX_SIZE;\n      //   } else {\n      //     virtualWidth = (virtualWidth / virtualHeight) * MAX_SIZE;\n      //     virtualHeight = MAX_SIZE;\n      //   }\n      // }\n\n      // canvas!.width = virtualWidth;\n      // canvas!.height = virtualHeight;\n\n      canvas!.width = width * dpr;\n      canvas!.height = height * dpr;\n\n      return { canvas, context };\n    }\n\n    if (env === \"h5\") {\n      return (selector: string) =>\n        retry<GetCanvasResult>(() => {\n          // FIXME: Taro 对 canvas 做了特殊处理，canvas 元素的 id 会被加上 canvas-id 的前缀\n          const canvas = (getSelector(\n            `canvas[canvas-id=${selector.slice(1)}]`\n          ) || getSelector(selector)) as HTMLCanvasElement;\n\n          return initCanvas(canvas, canvas?.clientWidth, canvas?.clientHeight);\n        }, intervals);\n    }\n\n    return (selector: string, component?: any) =>\n      retry<GetCanvasResult>(\n        () =>\n          new Promise<GetCanvasResult>((resolve, reject) => {\n            let query = getSelector(selector, component);\n\n            query.exec((res: any) => {\n              const { node, width, height } = res[0] || {};\n\n              try {\n                resolve(initCanvas(node, width, height));\n              } catch (e) {\n                reject(e);\n              }\n            });\n          }),\n        intervals\n      );\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\nimport { utf8 } from \"../extensions/utf8\";\n\n/**\n * 用于处理数据解码\n * @returns\n */\nexport default definePlugin<\"decode\">({\n  name: \"decode\",\n  install() {\n    const { env, br } = this.globals;\n    const b64Wrap = (b64: string, type: string = \"image/png\") =>\n      `data:${type};base64,${b64}`;\n    const decode = {\n      toBuffer(data: Uint8Array): ArrayBuffer {\n        const { buffer, byteOffset, byteLength } = data;\n\n        if (buffer instanceof ArrayBuffer) {\n          return buffer.slice(byteOffset, byteOffset + byteLength);\n        }\n\n        const view = new Uint8Array(byteLength);\n\n        view.set(data);\n\n        return view.buffer;\n      },\n      bytesToString(data: Uint8Array): string {\n        const chunkSize = 8192; // 安全的块大小\n        let result = \"\";\n\n        for (let i = 0; i < data.length; i += chunkSize) {\n          const chunk = data.slice(i, i + chunkSize);\n\n          // 在安全的块上使用 String.fromCharCode\n          result += String.fromCharCode.apply(null, Array.from(chunk));\n        }\n\n        return result;\n      },\n    };\n\n    if (env === \"h5\") {\n      const textDecoder = new TextDecoder(\"utf-8\", { fatal: true });\n\n      return {\n        ...decode,\n        toDataURL: (data: Uint8Array) =>\n          b64Wrap(btoa(decode.bytesToString(data))),\n        utf8: (data: Uint8Array, start: number, end: number) =>\n          textDecoder.decode(data.subarray(start, end)),\n      };\n    }\n\n    return {\n      ...decode,\n      toDataURL: (data: Uint8Array) =>\n        b64Wrap((br as any).arrayBufferToBase64(decode.toBuffer(data))),\n      utf8,\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理远程文件读取\n * @returns\n */\nexport default definePlugin<\"remote\">({  \n  name: \"remote\",\n  install() {\n    const { env, br } = this.globals;\n    const isRemote = (url: string) => /^(blob:)?http(s)?:\\/\\//.test(url);\n\n    if (env === \"h5\") {\n      return {\n        is: isRemote,\n        fetch: (url: string) =>\n          fetch(url).then((response) => {\n            if (response.ok) {\n              return response.arrayBuffer();\n            }\n\n            throw new Error(\n              `HTTP error, status=${response.status}, statusText=${response.statusText}`\n            );\n          }),\n      };\n    }\n\n    function download(url: string, enableCache: boolean): Promise<ArrayBuffer> {\n      return new Promise<ArrayBuffer>((resolve, reject) => {\n        br.request({\n          url,\n          // @ts-ignore 支付宝小程序必须有该字段\n          dataType: \"arraybuffer\",\n          responseType: \"arraybuffer\",\n          enableCache,\n          success: (res: any) => resolve(res.data),\n          fail: reject,\n        });\n      }).catch((err) => {\n        const errorMessage = err.errMsg || err.errorMessage || err.message;\n        // FIXME: 可能存在写入网络缓存空间失败的情况，此时重新下载\n        if (\n          errorMessage.includes(\"ERR_CACHE_WRITE_FAILURE\") ||\n          errorMessage.includes(\"ERR_CACHE_WRITE_FAILED\")\n        ) {\n          return download(url, false);\n        }\n\n        throw err;\n      });\n    }\n\n    return {\n      is: isRemote,\n      fetch: (url: string) => download(url, true),\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理本地文件存储\n * @returns\n */\nexport default definePlugin<\"local\">({\n  name: \"local\",\n  install() {\n    const { env, br } = this.globals;\n\n    if (env === \"h5\" || env === \"tt\") {\n      return null;\n    }\n\n    const fsm = br.getFileSystemManager();\n\n    return {\n      exists: (filepath: string) =>\n        new Promise<boolean>((resolve) => {\n          fsm!.access({\n            path: filepath,\n            success: () => resolve(true),\n            fail: () => resolve(false),\n          });\n        }),\n      write: (data: ArrayBufferLike, filePath: string) =>\n        new Promise<string>((resolve, reject) => {\n          fsm!.writeFile({\n            filePath,\n            data,\n            success: () => resolve(filePath),\n            fail: reject,\n          });\n        }),\n      read: (filePath: string) =>\n        new Promise((resolve, reject) => {\n          fsm!.readFile({\n            filePath,\n            success: (res: any) => resolve(res.data),\n            fail: reject,\n          });\n        }),\n      remove: (filePath: string) =>\n        new Promise((resolve, reject) => {\n          fsm!.unlink({\n            filePath,\n            success: () => resolve(filePath),\n            fail: reject,\n          });\n        }),\n    };\n  },\n});\n","import type {\n  MiniProgramCanvas,\n  MiniProgramOffscreenCanvas,\n  PlatformCanvas,\n  PlatformImage,\n  PlatformOffscreenCanvas,\n} from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 图片加载插件\n * @package plugin-fsm 本地文件存储能力\n * @package plugin-path 路径处理能力\n * @package plugin-decode 解码能力\n */\nexport default definePlugin<\"image\", \"local\" | \"decode\">({  \n  name: \"image\",\n  dependencies: [\"local\", \"decode\"],\n  install() {\n    const { local, decode } = this;\n    const { env } = this.globals;\n    let genImageSource: (\n      data: Uint8Array | string,\n      filepath: string\n    ) => Promise<string> | string = (\n      data: Uint8Array | string,\n      _filepath: string\n    ) => (typeof data === \"string\" ? data : decode.toDataURL(data));\n\n    /**\n     * 加载图片\n     * @param img\n     * @param url\n     * @returns\n     */\n    function loadImage(img: PlatformImage, url: string) {\n      return new Promise<PlatformImage>((resolve, reject) => {\n        img.onload = () => resolve(img);\n        img.onerror = () => reject(new Error(`SVGA LOADING FAILURE: ${url}`));\n        img.src = url;\n      });\n    }\n\n    function releaseImage(img: PlatformImage) {\n      img.onload = null;\n      img.onerror = null;\n      img.src = \"\";\n    }\n\n    if (env === \"h5\") {\n      return {\n        create: (_: PlatformCanvas | PlatformOffscreenCanvas) => new Image(),\n        load: (\n          createImage: () => HTMLImageElement,\n          data: ImageBitmap | Uint8Array | string,\n          filepath: string\n        ) => {\n          // 由于ImageBitmap在图片渲染上有优势，故优先使用\n          if (data instanceof Uint8Array && \"createImageBitmap\" in globalThis) {\n            return createImageBitmap(new Blob([decode.toBuffer(data)]));\n          }\n\n          if (data instanceof ImageBitmap) {\n            return Promise.resolve(data);\n          }\n\n          return loadImage(\n            createImage(),\n            genImageSource(data as Uint8Array | string, filepath) as string\n          );\n        },\n        release: releaseImage,\n      };\n    }\n\n    // FIXME: 支付宝小程序IDE保存临时文件会失败;抖音最大用户文件大小为10M\n    if (env === \"weapp\") {\n      genImageSource = async (data: Uint8Array | string, filepath: string) => {\n        if (typeof data === \"string\") {\n          return data;\n        }\n\n        // FIXME: IOS设备 微信小程序 Uint8Array转base64 时间较长，使用图片缓存形式速度会更快\n        return local!\n          .write(decode.toBuffer(data), filepath)\n          .catch((ex: any) => {\n            console.warn(\n              `image write fail: ${ex.errorMessage || ex.errMsg || ex.message}`\n            );\n            return decode.toDataURL(data);\n          });\n      };\n    }\n\n    return {\n      create: (canvas: PlatformCanvas | PlatformOffscreenCanvas) =>\n        (\n          canvas as MiniProgramCanvas | MiniProgramOffscreenCanvas\n        ).createImage(),\n      load: async (\n        createImage: () => HTMLImageElement,\n        data: ImageBitmap | Uint8Array | string,\n        filepath: string\n      ) =>\n        loadImage(\n          createImage(),\n          await genImageSource(data as Uint8Array | string, filepath)\n        ),\n      release: releaseImage,\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\nexport default definePlugin<\"now\">({  \n  name: \"now\",\n  install() {\n    const { env, br } = this.globals;\n    // performance可以提供更高精度的时间测量，且不受系统时间的调整（如更改系统时间或同步时间）的影响\n    const perf =\n      env === \"h5\" || env === \"tt\" ? performance : br.getPerformance();\n\n    if (typeof perf?.now === \"function\") {\n      // 支付宝小程序的performance.now()获取的是当前时间戳，单位是微秒。\n      if (perf.now() - Date.now() > 1) {\n        return () => perf.now() / 1000;\n      }\n\n      // H5环境下，performance.now()获取的不是当前时间戳，而是从页面加载开始的时间戳，单位是毫秒。\n      return () => perf.now();\n    }\n\n    return () => Date.now();\n  },\n});\n","import type { OffscreenCanvasOptions } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于创建离屏canvas\n * @returns\n */\nexport default definePlugin<\"getOfsCanvas\">({  \n  name: \"getOfsCanvas\",\n  install() {\n    const { env } = this.globals;\n    let createOffscreenCanvas;\n\n    if (env === \"h5\") {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => new OffscreenCanvas(options.width, options.height);\n    } else if (env === \"alipay\") {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => my.createOffscreenCanvas(options);\n    } else if (env === \"tt\") {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => {\n        const canvas = tt.createOffscreenCanvas();\n\n        canvas.width = options.width;\n        canvas.height = options.height;\n\n        return canvas;\n      };\n    } else {\n      createOffscreenCanvas = (\n        options: OffscreenCanvasOptions\n      ) => wx.createOffscreenCanvas(options);\n    }\n\n    return (options: OffscreenCanvasOptions) => {\n      const type = options.type || \"2d\";\n      const canvas = createOffscreenCanvas({ ...options, type });\n      const context = canvas.getContext(type);\n\n      return {\n        canvas,\n        context,\n      };\n    };\n  },\n});\n","import { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理文件路径\n * @returns\n */\nexport default definePlugin<\"path\">({  \n  name: \"path\",\n  install() {\n    const { env, br } = this.globals;\n    const filename = (path: string) => {\n      const filepath = path.split(/\\?#/g)[0];\n\n      return filepath.substring(filepath.lastIndexOf(\"/\") + 1)\n    };\n\n    if (env === \"h5\" || env === \"tt\") {\n      return {\n        USER_DATA_PATH: \"\",\n        is: (_: string) => false,\n        filename,\n        resolve: (filename: string, prefix?: string) => \"\",\n      };\n    }\n\n    const { USER_DATA_PATH } = br.env;\n\n    return {\n      USER_DATA_PATH,\n      is: (filepath: string) => filepath?.startsWith(USER_DATA_PATH),\n      filename,\n      resolve: (filename: string, prefix?: string) =>\n        `${USER_DATA_PATH}/${prefix ? `${prefix}__` : \"\"}${filename}`,\n    };\n  },\n});\n","import type { MiniProgramCanvas, PlatformCanvas } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\n/**\n * 用于处理requestAnimationFrame\n * @returns\n */\nexport default definePlugin<\"rAF\">({  \n  name: \"rAF\",\n  install() {\n    const { env } = this.globals;\n\n    function requestAnimationFrameImpl(): (callback: () => void) => number {\n      return (callback: () => void) =>\n        setTimeout(\n          callback,\n          Math.max(0, 16 - (Date.now() % 16))\n        ) as unknown as number;\n    }\n\n    if (env === \"h5\") {\n      const rAF =\n        \"requestAnimationFrame\" in globalThis\n          ? requestAnimationFrame\n          : requestAnimationFrameImpl();\n\n      return (_: PlatformCanvas, callback: () => void) => rAF(callback);\n    }\n\n    return (canvas: PlatformCanvas, callback: () => void) => {\n      // 检查canvas是否存在\n      try {\n        return (canvas as MiniProgramCanvas).requestAnimationFrame(callback);\n      } catch (error: any) {\n        console.warn(error.message);\n        return requestAnimationFrameImpl()(callback);\n      }\n    };\n  },\n});\n","import type { MiniProgramIntersectionObserver, WalkInOptions } from \"../typings\";\nimport { definePlugin } from \"../definePlugin\";\n\nexport default definePlugin<\"walkIn\">({\n  name: \"walkIn\",\n  install() {\n    const { env, br } = this.globals;\n    const thresholds = [0, 0.5, 1];\n\n    if (env === \"h5\") {\n      return (\n        callback: (isBeIntersection: boolean) => void,\n        selector: string,\n        options: WalkInOptions = {}\n      ) => {\n        let observer: IntersectionObserver | null = new IntersectionObserver(\n          (entries) => callback(entries[0].intersectionRatio > 0),\n          {\n            threshold: thresholds,\n            root: options.root ? document.querySelector(options.root) : null,\n          }\n        );\n\n        if (options.observeAll) {\n          document.querySelectorAll(selector)?.forEach((element) => observer!.observe(element));\n        } else {\n          const element = document.querySelector(selector);\n\n          if (element) {\n            observer!.observe(element);\n          }\n        }\n\n        return () => {\n          observer!.disconnect();\n          observer = null;\n        };\n      };\n    }\n\n    return (\n      callback: (isBeIntersection: boolean) => void,\n      selector: string,\n      options: WalkInOptions = {}\n    ) => {\n      let observer: MiniProgramIntersectionObserver | null = br.createIntersectionObserver(options.component, {\n        thresholds,\n        initialRatio: 0,\n        observeAll: options.observeAll,\n        // nativeMode: true,\n      });\n\n      if (options.root) {\n        observer!.relativeTo(options.root);\n      } else {\n        observer!.relativeToViewport();\n      }\n\n      observer!.observe(selector, (res: any) =>\n        callback(res.intersectionRatio > 0)\n      );\n\n      return () => {\n        observer!.disconnect();\n        observer = null;\n      };\n    };\n  },\n});\n"],"names":["noop","async","retry","fn","intervals","times","err","length","callback","interval","Promise","resolve","setTimeout","BUFFER_SIZE","STATIC_BUFFER","Uint16Array","utf8","buffer","start","end","RangeError","resultParts","bufferPos","appendBuffer","parts","push","String","fromCharCode","apply","Array","from","allAscii","i","len","Math","min","j","subarray","join","byte","codePoint","OctopusPlatform","plugins","platformVersion","version","globals","env","br","dpr","system","constructor","this","autoEnv","init","collection","Map","names","installedPlugins","Set","useBridge","usePixelRatio","useSystem","plugin","name","set","usePlugins","clear","window","tt","my","wx","Error","globalThis","devicePixelRatio","getWindowInfo","pixelRatio","getSystemInfoSync","getDeviceInfo","platform","getDeviceBaseInfo","getDeviceInfoSync","toLowerCase","pluginNames","pluginName","has","get","isArray","dependencies","dependency","install","installPlugin","add","definePlugin","value","call","Object","defineProperty","enumerable","configurable","pluginSelector","selector","document","querySelector","component","createSelectorQuery","select","fields","node","size","pluginCanvas","getSelector","initCanvas","canvas","width","height","context","getContext","slice","clientWidth","clientHeight","reject","exec","res","e","pluginDecode","b64Wrap","b64","type","decode","toBuffer","data","byteOffset","byteLength","ArrayBuffer","view","Uint8Array","bytesToString","result","chunk","textDecoder","TextDecoder","fatal","toDataURL","btoa","arrayBufferToBase64","pluginDownload","isRemote","url","test","is","fetch","then","response","ok","arrayBuffer","status","statusText","download","enableCache","request","dataType","responseType","success","fail","catch","errorMessage","errMsg","message","includes","pluginFsm","fsm","getFileSystemManager","exists","filepath","access","path","write","filePath","writeFile","read","readFile","remove","unlink","pluginImage","local","genImageSource","_filepath","loadImage","img","onload","onerror","src","releaseImage","create","_","Image","load","createImage","createImageBitmap","Blob","ImageBitmap","release","ex","console","warn","pluginNow","perf","performance","getPerformance","now","Date","pluginOfsCanvas","createOffscreenCanvas","options","OffscreenCanvas","pluginPath","filename","split","substring","lastIndexOf","USER_DATA_PATH","prefix","startsWith","pluginRaf","requestAnimationFrameImpl","max","rAF","requestAnimationFrame","error","pluginIntersectionObserver","thresholds","observer","IntersectionObserver","entries","intersectionRatio","threshold","root","observeAll","querySelectorAll","forEach","element","observe","disconnect","createIntersectionObserver","initialRatio","relativeTo","relativeToViewport"],"mappings":"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"}