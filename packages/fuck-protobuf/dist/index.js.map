{"version":3,"file":"index.js","sources":["../../../node_modules/.pnpm/@protobufjs+float@1.0.2/node_modules/@protobufjs/float/index.js","../../../node_modules/.pnpm/@protobufjs+utf8@1.1.0/node_modules/@protobufjs/utf8/index.js","../src/serialization/Reader.ts","../src/protos/svga-proto/Layout.ts","../src/protos/svga-proto/Transform.ts","../src/protos/svga-proto/ShapeArgs.ts","../src/protos/svga-proto/RectArgs.ts","../src/protos/svga-proto/EllipseArgs.ts","../src/protos/svga-proto/RGBAColor.ts","../src/protos/svga-proto/ShapeStyle.ts","../src/protos/svga-proto/ShapeEntity.ts","../src/protos/svga-proto/FrameEntity.ts","../src/protos/svga-proto/SpriteEntity.ts","../src/protos/svga-proto/MovieParams.ts","../src/utils/index.ts","../src/protos/svga-proto/MovieEntity.ts","../src/qr-code/bit-buffer.ts","../src/qr-code/constants.ts","../src/qr-code/bit-byte.ts","../src/qr-code/block.ts","../src/qr-code/extensions/basic/Base64DecodeInputStream.ts","../src/qr-code/math.ts","../src/qr-code/polynomial.ts","../src/qr-code/util.ts","../src/qr-code/index.ts","../src/qr-code/extensions/basic/BitOutputStream.ts","../src/qr-code/extensions/basic/ByteArrayOutputStream.ts","../src/qr-code/extensions/gif/LZWTable.ts","../src/qr-code/extensions/basic/Base64EncodeOutputStream.ts","../src/qr-code/extensions/gif/index.ts","../../../node_modules/.pnpm/fflate@0.8.2/node_modules/fflate/esm/browser.js","../src/qr-code/extensions/png/CRC32.ts","../src/qr-code/extensions/png/index.ts","../src/qr-code/helper.ts"],"sourcesContent":["\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new i32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return { b: b, r: r };\n};\nvar _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b.b, revfd = _b.r;\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >> 8) | ((x & 0x00FF) << 8)) >> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 1; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    return new u8(v.subarray(s, e));\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, st, buf, dict) {\n    // source length       dict length\n    var sl = dat.length, dl = dict ? dict.length : 0;\n    if (!sl || st.f && !st.l)\n        return buf || new u8(0);\n    var noBuf = !buf;\n    // have to estimate size\n    var resize = noBuf || st.i != 2;\n    // no state\n    var noSt = st.i;\n    // Assumes roughly 33% compression ratio average\n    if (noBuf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (resize)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17\n        if (resize)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (resize)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                if (bt < dt) {\n                    var shift = dl - dt, dend = Math.min(dt, end);\n                    if (shift + bt < 0)\n                        err(3);\n                    for (; bt < dend; ++bt)\n                        buf[bt] = dict[shift + bt];\n                }\n                for (; bt < end; ++bt)\n                    buf[bt] = buf[bt - dt];\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    // don't reallocate for streams or user buffers\n    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >> 8;\n    d[o + 2] |= v >> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return { t: et, l: 0 };\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return { t: v, l: 1 };\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return { t: new u8(tr), l: mbt };\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return { c: cl.subarray(0, cli), n: s };\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a.t, mlb = _a.l;\n    var _b = hTree(df, 15), ddt = _b.t, mdb = _b.l;\n    var _c = lc(dlt), lclt = _c.c, nlc = _c.n;\n    var _d = lc(ddt), lcdt = _d.c, ndc = _d.n;\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        ++lcfreq[lclt[i] & 31];\n    for (var i = 0; i < lcdt.length; ++i)\n        ++lcfreq[lcdt[i] & 31];\n    var _e = hTree(lcfreq, 7), lct = _e.t, mlcb = _e.l;\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + 2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18];\n    if (bs >= 0 && flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >> 5) & 127), p += clct[i] >> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        var sym = syms[i];\n        if (sym > 255) {\n            var len = (sym >> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (sym >> 23) & 31), p += fleb[len];\n            var dst = sym & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (sym >> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[sym]), p += ll[sym];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new i32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, st) {\n    var s = st.z || dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var lst = st.l;\n    var pos = (st.r || 0) & 7;\n    if (lvl) {\n        if (pos)\n            w[0] = st.r >> 3;\n        var opt = deo[lvl - 1];\n        var n = opt >> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = st.p || new u16(32768), head = st.h || new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new i32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index          l/lind  waitdx          blkpos\n        var lc_1 = 0, eb = 0, i = st.i || 0, li = 0, wi = st.w || 0, bs = 0;\n        for (; i + 2 < s; ++i) {\n            // hash value\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && (rem > 423 || !lst)) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = imod - pimod & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = i - dif + j & 32767;\n                                    var pti = prev[ti];\n                                    var cd = ti - pti & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += imod - pimod & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one int32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        for (i = Math.max(i, wi); i < s; ++i) {\n            syms[li++] = dat[i];\n            ++lf[dat[i]];\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        if (!lst) {\n            st.r = (pos & 7) | w[(pos / 8) | 0] << 3;\n            // shft(pos) now 1 less if pos & 7 != 0\n            pos -= 7;\n            st.h = head, st.p = prev, st.i = i, st.w = wi;\n        }\n    }\n    else {\n        for (var i = st.w || 0; i < s + lst; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[(pos / 8) | 0] = lst;\n                e = s;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n        st.i = s;\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Adler32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a & 0xFF00) << 8 | (b & 255) << 8 | (b >> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    if (!st) {\n        st = { l: 1 };\n        if (opt.dictionary) {\n            var dict = opt.dictionary.subarray(-32768);\n            var newDat = new u8(dict.length + dat.length);\n            newDat.set(dict);\n            newDat.set(dat, dict.length);\n            dat = newDat;\n            st.w = dict.length;\n        }\n    }\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? (st.l ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 20) : (12 + opt.mem), pre, post, st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return fnStr;\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            fnStr = wcln(fns[i], fnStr, td_1);\n        ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };\n    }\n    var td = mrg({}, ch[id].e);\n    return wk(ch[id].c + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt]; };\nvar bDflt = function () { return [u8, u16, i32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zls]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get opts\nvar gopt = function (o) { return o && {\n    out: o.size && new u8(o.size),\n    dictionary: o.dictionary\n}; };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) {\n        if (ev.data.length) {\n            strm.push(ev.data[0], ev.data[1]);\n            postMessage([ev.data[0].length]);\n        }\n        else\n            strm.flush();\n    };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id, flush, ext) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else if (!Array.isArray(dat))\n            ext(dat);\n        else if (dat.length == 1) {\n            strm.queuedSize -= dat[0];\n            if (strm.ondrain)\n                strm.ondrain(dat[0]);\n        }\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.queuedSize = 0;\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        strm.queuedSize += d.length;\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n    if (flush) {\n        strm.flush = function () { w.postMessage([]); };\n    }\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += (d[10] | d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + (o.filename ? o.filename.length + 1 : 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (o.dictionary && 32);\n    c[1] |= 31 - ((c[0] << 8) | c[1]) % 31;\n    if (o.dictionary) {\n        var h = adler();\n        h.p(o.dictionary);\n        wbytes(c, 2, h.d());\n    }\n};\n// zlib start\nvar zls = function (d, dict) {\n    if ((d[0] & 15) != 8 || (d[0] >> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if ((d[1] >> 5 & 1) == +!dict)\n        err(6, 'invalid zlib data: ' + (d[1] & 32 ? 'need' : 'unexpected') + ' dictionary');\n    return (d[1] >> 3 & 4) + 2;\n};\nfunction StrmOpt(opts, cb) {\n    if (typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n        this.s = { l: 0, i: 32768, w: 32768, z: 32768 };\n        // Buffer length must always be 0 mod 32768 for index calculations to be correct when modifying head and prev\n        // 98304 = 32768 (lookback) + 65536 (common chunk size)\n        this.b = new u8(98304);\n        if (this.o.dictionary) {\n            var dict = this.o.dictionary.subarray(-32768);\n            this.b.set(dict, 32768 - dict.length);\n            this.s.i = 32768 - dict.length;\n        }\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, this.s), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        var endLen = chunk.length + this.s.z;\n        if (endLen > this.b.length) {\n            if (endLen > 2 * this.b.length - 32768) {\n                var newBuf = new u8(endLen & -32768);\n                newBuf.set(this.b.subarray(0, this.s.z));\n                this.b = newBuf;\n            }\n            var split = this.b.length - this.s.z;\n            this.b.set(chunk.subarray(0, split), this.s.z);\n            this.s.z = this.b.length;\n            this.p(this.b, false);\n            this.b.set(this.b.subarray(-32768));\n            this.b.set(chunk.subarray(split), 32768);\n            this.s.z = chunk.length - split + 32768;\n            this.s.i = 32766, this.s.w = 32768;\n        }\n        else {\n            this.b.set(chunk, this.s.z);\n            this.s.z += chunk.length;\n        }\n        this.s.l = final & 1;\n        if (this.s.z > this.s.w + 8191 || final) {\n            this.p(this.b, final || false);\n            this.s.w = this.s.i, this.s.i -= 2;\n        }\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * deflated output for small inputs.\n     */\n    Deflate.prototype.flush = function () {\n        if (!this.ondata)\n            err(5);\n        if (this.s.l)\n            err(4);\n        this.p(this.b, false);\n        this.s.w = this.s.i, this.s.i -= 2;\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6, 1);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    function Inflate(opts, cb) {\n        // no StrmOpt here to avoid adding to workerizer\n        if (typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);\n        this.s = { i: 0, b: dict ? dict.length : 0 };\n        this.o = new u8(32768);\n        this.p = new u8(0);\n        if (dict)\n            this.o.set(dict);\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        if (!this.p.length)\n            this.p = c;\n        else if (c.length) {\n            var n = new u8(this.p.length + c.length);\n            n.set(this.p), n.set(c, this.p.length), this.p = n;\n        }\n    };\n    Inflate.prototype.c = function (final) {\n        this.s.i = +(this.d = final || false);\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.s, this.o);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    function AsyncInflate(opts, cb) {\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Inflate(ev.data);\n            onmessage = astrm(strm);\n        }, 7, 0);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gopt(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, opts) {\n    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        this.l += chunk.length;\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, this.s);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * GZIPped output for small inputs.\n     */\n    Gzip.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8, 1);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming single or multi-member GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    function Gunzip(opts, cb) {\n        this.v = 1;\n        this.r = 0;\n        Inflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        this.r += chunk.length;\n        if (this.v) {\n            var p = this.p.subarray(this.v - 1);\n            var s = p.length > 3 ? gzs(p) : 4;\n            if (s > p.length) {\n                if (!final)\n                    return;\n            }\n            else if (this.v > 1 && this.onmember) {\n                this.onmember(this.r - p.length);\n            }\n            this.p = p.subarray(s), this.v = 0;\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n        // process concatenated GZIP\n        if (this.s.f && !this.s.l && !final) {\n            this.v = shft(this.s.p) + 9;\n            this.s = { i: 0 };\n            this.o = new u8(0);\n            this.push(new u8(0), final);\n        }\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming single or multi-member GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    function AsyncGunzip(opts, cb) {\n        var _this = this;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Gunzip(ev.data);\n            strm.onmember = function (offset) { return postMessage(offset); };\n            onmessage = astrm(strm);\n        }, 9, 0, function (offset) { return _this.onmember && _this.onmember(offset); });\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0], ev.data[1])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, opts) {\n    var st = gzs(data);\n    if (st + 8 > data.length)\n        err(6, 'invalid gzip data');\n    return inflt(data.subarray(st, -8), { i: 2 }, opts && opts.out || new u8(gzl(data)), opts && opts.dictionary);\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        this.c.p(chunk);\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        var raw = dopt(c, this.o, this.v && (this.o.dictionary ? 6 : 2), f && 4, this.s);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    /**\n     * Flushes buffered uncompressed data. Useful to immediately retrieve the\n     * zlibbed output for small inputs.\n     */\n    Zlib.prototype.flush = function () {\n        Deflate.prototype.flush.call(this);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10, 1);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, opts.dictionary ? 6 : 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    function Unzlib(opts, cb) {\n        Inflate.call(this, opts, cb);\n        this.v = opts && opts.dictionary ? 2 : 1;\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 6 && !final)\n                return;\n            this.p = this.p.subarray(zls(this.p, this.v - 1)), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    function AsyncUnzlib(opts, cb) {\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, StrmOpt.call(this, opts, cb), function (ev) {\n            var strm = new Unzlib(ev.data);\n            onmessage = astrm(strm);\n        }, 11, 0);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gopt(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, opts) {\n    return inflt(data.subarray(zls(data, opts && opts.dictionary), -4), { i: 2 }, opts && opts.out, opts && opts.dictionary);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    function Decompress(opts, cb) {\n        this.o = StrmOpt.call(this, opts, cb) || {};\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n    }\n    // init substream\n    // overriden by AsyncDecompress\n    Decompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (dat, final) {\n            _this.ondata(dat, final);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(this.o)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(this.o)\n                        : new this.Z(this.o);\n                this.i();\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    function AsyncDecompress(opts, cb) {\n        Decompress.call(this, opts, cb);\n        this.queuedSize = 0;\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n    }\n    AsyncDecompress.prototype.i = function () {\n        var _this = this;\n        this.s.ondata = function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        };\n        this.s.ondrain = function (size) {\n            _this.queuedSize -= size;\n            if (_this.ondrain)\n                _this.ondrain(size);\n        };\n    };\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        this.queuedSize += chunk.length;\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param opts The decompression options\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, opts) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, opts)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, opts)\n            : unzlibSync(data, opts);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return { s: r, r: slc(d, i - 1) };\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (final) {\n            if (r.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = r;\n        this.ondata(s, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td) {\n        return td.decode(dat);\n    }\n    else {\n        var _a = dutf8(dat), s = _a.s, r = _a.r;\n        if (r.length)\n            err(8);\n        return s;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this.ondata(err, dat, final);\n                    _this.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this.d & 1))\n                        return;\n                    _this.u.splice(-1, 1);\n                    _this.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this = this;\n        this.i = new Inflate(function (dat, final) {\n            _this.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this.k[0] == chks_3 && _this.c)\n                                        _this.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    // Synchronously decompress under 512KB, or barely-compressed data\n                    if (su < 524288 || sc > 0.8 * su) {\n                        try {\n                            cbl(null, inflateSync(infl, { out: new u8(su) }));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n",null,null,null],"names":["factory","exports","Float32Array","f32","f8b","Uint8Array","buffer","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","Math","round","exponent","floor","log","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","float","utf8","length","string","len","c","i","charCodeAt","read","start","end","t","parts","chunk","push","String","fromCharCode","apply","slice","join","write","offset","c1","c2","Reader","create","Error","constructor","this","begin","subarray","indexOutOfRange","reader","writeLength","RangeError","uint32","value","int32","bytes","skip","skipType","wireType","Layout","decode","undefined","message","tag","x","y","width","height","properties","Transform","a","b","d","tx","ty","ShapeArgs","RectArgs","cornerRadius","EllipseArgs","radiusX","radiusY","RGBAColor","r","g","ShapeStyle","fill","stroke","strokeWidth","lineCap","lineJoin","miterLimit","lineDashI","lineDashII","lineDashIII","ShapeEntity","type","shape","rect","ellipse","styles","transform","$oneOfFields","$fieldMap","args","keys","Object","key","name","FrameEntity","alpha","layout","clipPath","shapes","SpriteEntity","imageKey","frames","matteKey","MovieParams","viewBoxWidth","viewBoxHeight","fps","emptyObject","freeze","MovieEntity","version","params","images","end2","tag2","sprites","BitBuffer","lengthInBits","getAt","bufIndex","put","num","putBit","bit","QRMode","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","QRErrorCorrectLevel","L","M","Q","H","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","BitByte","data","parsedData","byteArray","code","flat","unshift","mode","buff","RS_BLOCK_TABLE","RSBlock","getRSBlockTable","typeNumber","errorCorrectLevel","getRSBlocks","rsBlock","list","count","totalCount","dataCount","j","Base64DecodeInputStream","buflen","charAt","match","EXP_TABLE","Array","LOG_TABLE","QRMath","glog","n","gexp","Polynomial","shift","multiply","e","mod","ratio","PATTERN_POSITION_TABLE","genBCHDigit","log2","BCH_G15","BCH_G18","Util","getBCHTypeInfo","getBCHTypeNumber","getPatternPosition","getMaskFunction","maskPattern","_i","getErrorCorrectPolynomial","errorCorrectLength","getLengthInBits","getLostPoint","qr","moduleCount","getModuleCount","lostPoint","row","col","dark","isDark","sameCount","nRow","nCol","darkCount","abs","QRCode","stringToBytes","s","createStringToBytes","unicodeData","numChars","unicodeMap","bin","b0","b1","v","unknownChar","modules","dataCache","dataList","makeImpl","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","nr","nc","bits","getBestMaskPattern","minLostPoint","pattern","rsBlocks","totalDataCount","createBytes","maskFunc","inc","bitIndex","byteIndex","bitBuffer","dcdata","ecdata","maxDcCount","maxEcCount","dcCount","ecCount","max","rsPoly","modPoly","modIndex","totalCodeCount","index","addData","make","BitOutputStream","out","bitlen","writeByte","flush","ByteArrayOutputStream","byte","writeBytes","off","writeShort","writeString","toByteArray","toString","LZWTable","map","mapSize","size","add","contains","indexOf","Base64EncodeOutputStream","base64","encode","writeEncoded","padlen","GifImage","getLZWRaster","lzwMinCodeSize","clearCode","endCode","bitLength","table","byteOut","bitOut","dataIndex","setPixel","pixel","blackColor","whiteColor","black","split","parseInt","white","raster","createGifTag","getPixel","gif","u8","u16","Uint16Array","i32","Int32Array","fleb","fdeb","clim","freb","eb","_a","fl","revfl","revfd","rev","hMap","cd","mb","l","co","rvb","sv","r_1","m","flt","fdt","flm","fdm","shft","p","wbits","o","wbits16","hTree","f","t2","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","dt","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","w","clen","cf","wfblk","dat","wblk","final","syms","lf","df","li","bs","bl","dlt","mlb","_b","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","lm","ll","dm","dl","flen","ftlen","dtlen","llm","lcts","it","clct","sym","dst","deo","dflt","lvl","plvl","pre","post","st","z","ceil","lst","opt","msk_1","prev","head","h","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","min","maxd","ml","nl","mmd","md","ti","lin","din","slc","deflateSync","opts","dictionary","dict","newDat","set","level","mem","dopt","td","TextDecoder","stream","CRC32","static","T0","signedCRCTable","TT","sliceBy16Tables","T1","T2","T3","T4","T5","T6","T7","T8","T9","Ta","Tb","Tc","Td","Te","Tf","T","B","C","PngImage","Uint32Array","toInt8","arr","ArrayBuffer","DataView","setUint8","toInt32","setUint32","createChunk","dataLength","chunkTypeBuffer","dataBuffer","chunkType","IHDR","IDAT","IEND","createPngTag","png","parseOptions","options","calcCellSizeAndMargin","cellSize","margin","createQRCodeToGIF","text","arguments","callee","createQRCodeToPNG","BLACK","replace","WHITE","createQRCodeToHTML","commonStyle","qrHtml"],"mappings":"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C,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI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","x_google_ignoreList":[0,1,30]}